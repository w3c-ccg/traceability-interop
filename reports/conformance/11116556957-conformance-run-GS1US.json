{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "69e52200-4a93-46be-8c79-bc69f06a1e65",
        "name": "Clear Cache",
        "item": [
          {
            "id": "082f49d8-19eb-4d24-811e-3831a08e7b45",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c73bd799-c3a2-4e88-be85-ea61ac620474",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7330e609-245f-4fe1-90f9-4e4c1df2756e"
                }
              }
            ]
          },
          {
            "id": "5db23096-5893-433b-ae04-0da16628b61d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0bbeb9f6-7225-4854-bc39-ebddf52e9c06",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "80f156a7-1c6c-44cf-89ed-031b153c9705"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3a9bbb39-3d59-455c-b85c-15a13325d82e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fd25f104-616e-4552-88b1-ed4071cb458f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00f5ec19-2a46-4d2b-9d6c-edc14661b78f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3446555-78a2-4633-83fc-14e14a04577f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e1ab3b6-e892-4da6-bd39-f48c0f0c36ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c21b4eb6-286d-4259-80d1-f6f02be488b4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d42a34ae-03be-4268-97c7-1aa2a4949186"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48008d89-e259-4248-92a0-33a73426c6e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29d51256-34ba-4893-9667-d8a39fe71c14"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fa955b0-d58f-44e9-b40e-6285a303efae",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6b748da8-5ce7-442a-87f4-39d4d865ef70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "676553e3-3fb3-4ef5-9b4f-5a20f06de9b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f054aea3-3659-4f24-be5a-d61795eb006a"
            }
          }
        ]
      },
      {
        "id": "39d53a19-6d3c-4e7a-8b77-94ec725edb96",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d6cba272-739e-48f0-8747-8f9fbe651381",
            "name": "Negative Testing",
            "item": [
              {
                "id": "def4f847-9106-4494-9220-3b5d1dbcac4b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d9c08b4-a1d2-43e6-ad4c-696741533e29",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1288dc3f-2b8b-4dc3-916b-a730e6c1206c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f594fcf2-3969-44a3-8a9b-5a3981e5716d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38d5a3a-10be-47b3-8ce2-f0dbb7c72e86",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6a2f34-2a5a-48d8-9ec3-c747430cb54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3609b4d2-92ed-4a68-8ef4-489c5df6e0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2999ca-befb-4d85-a895-d7c00941027e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4e18b9-2707-4f84-919f-0e989abac779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c74890d3-609e-40fe-9dfd-7f6a252c9cb3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "987c0493-d2fd-4e97-a0e8-e6d69c9fd2df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b73444d-e045-44ef-9cfa-fef2cce87168",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54b9cdf-1b5e-4234-aefc-eade14ed04ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61eb7de1-e17f-429c-9594-f18cf93f78d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca19a08-2f20-48bb-900c-379396a1b9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b37a971-5ef4-4645-bddc-05c868a04569"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "af6a36b0-ae66-4764-b8d0-2a91f4a3c2ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01872569-0709-433e-8be6-19e133248992",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "306faf1d-0d9e-4c61-aab8-f3725075ea57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ea2675b3-92e7-4558-af12-ce946b703607"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "918bdfc0-8223-45c5-8a2f-88be6d5cc910",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7cbcb7d1-2081-4bdc-8d54-2587b67b5723"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "276a4e09-746e-4e3f-8060-8452616285a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e4669c8-5f15-4231-89a7-f35f2f198608"
            }
          }
        ]
      },
      {
        "id": "1107bfba-dcfb-4145-8426-6b9d6938015d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8a3d0210-5ec7-4061-8058-42957d6d8f5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03cef624-86aa-444a-a12c-eb32e176c32e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ec2b5310-256f-4b87-9175-4f9fc1aeca27",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4cf03e-64c8-46b9-82e9-fb87ae292cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeeb581d-c1d2-4d21-afe3-b56acab86801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0a7889-de1d-4bf2-b6f9-894d74b79352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1af8b4ad-bd28-4751-a99b-ec1d46864009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e645c6-a162-44b0-986a-5cd66e91ab7a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2f0e2b-c363-4efe-936e-7d4e326ae8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a682c98-38d5-420a-9d53-ed6b3bc3173d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832a499c-4a57-4817-84bd-a1b607a26813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "850f1f2e-fb4a-4136-8cab-a6dd6c8bc4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3db2c0-0ca3-45ea-bd8d-c9b5fa55fc75",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d36cd87-5fcf-4a1d-8d7f-883498c4ba10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d7fa11-8d65-4260-a46e-c02dd85aef8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9746a94d-60ae-4075-9427-b061ef76721d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3fac62b-aa18-4342-b8a0-27ecbdf54e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9221028-89ad-4e9f-a244-05c43c8b1e13",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9f77a5-b235-4218-a7d9-11985a12e158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639229be-3a5a-4a0d-a36f-5154f365da99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaad189c-dc57-4aab-940d-4d5b6ef66b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fd492fb-dffa-480e-a8e1-9a9f0053e1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc832727-1fc2-4edd-80f6-78e87a51324c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc55700f-14b5-408c-a440-6685dca5401c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04c9245-46ce-49e0-801c-c6366bd10d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c982a00-c866-4e81-8a6e-09eeda439f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e47a885-3973-4d65-b7e7-fb902591d1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02577d9-8af6-41b1-a9cb-6f8e57f323a3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec263988-2817-416b-884f-2780957163f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ef7811-762c-4ca6-8a78-0a845cfce1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50615ad8-aef5-42c6-8711-49b4c568d821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5ad8b77-cc91-484d-ab3e-9111972974ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813f2e2f-ce09-4086-847b-fde520365cce",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb95de00-e557-4824-85ac-d28dbdf68712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abdc0a68-fa0f-4991-aceb-59d8fc446fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af973495-e6f7-408f-b9d9-b46ed1533ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67f2ecdd-0265-487e-945c-ca9eba6f0ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b25417f-bff7-4f92-a2b2-a69aa1c605d1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4b2bee-347a-41f9-89d9-34682f0f87bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834a436d-6ee7-4c03-979e-85231a450d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4aad0e-1c51-48b8-be14-03a6d7a56a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "443cd320-7dc9-42f0-bed2-d362ec9a4427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa916cd-a0a9-432a-a58f-699a0be3e960",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce12f5c-6c31-4f61-8878-3d8dc90e7e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2706cd79-c696-4cb1-9726-258657f0c9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c292438d-8d91-4dff-adda-a48db5cfc188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "069e6aec-743b-4050-829b-94b878b14023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ba482f-e73e-470d-b1e5-63859485626f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d9817f-f178-4dce-a8e0-a525a855b534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3432b9ab-6976-45d5-817b-cb9875807cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d154275e-4391-45f2-9b94-5e01f32d189d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc33d7de-c54f-43ec-8add-77123fa6fbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb8e026-b890-4475-a9f0-ee8573527552",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f80e8f-a66d-4283-968c-5b953a73b6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c57b86f-6ceb-4e01-ad6a-14e1485d555a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c47113-b6d1-4bc3-b34f-0d598ded296d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "187b401c-cc18-4788-ab78-4e3fee11db33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffca8ee-5af8-4428-b788-67eb27ebfd08",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f2a031-c7a6-4d4f-a4f7-8055c2a391ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc04c357-c170-45b6-ad84-e6c65c022729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b75c0a-18e7-49e6-82c9-fcae586597cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d5fa56c-85dc-4b42-8b91-4eec04585ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe9f1bc-3204-4f7c-b507-b79ff8336d58",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81969ff6-aec0-4af5-ae49-a090975582fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d450e9b5-bfe5-4450-85ee-8a6de6749323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ca7250-e986-43eb-aa73-9b9d8295b773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afaccad2-0d35-4024-b906-61fe48a57785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1703ee86-135f-43a8-9d8c-b4b9e855f669",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fbe2cc-7aa2-42e8-8ccd-6c8a3f8c1bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf9de0f-3ba2-4b89-9ec6-2b127884080e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fdb7ae-6499-44e9-9286-fab80f4a679e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "839ee1ed-7110-46ae-a659-2db75f2ef371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ac20bc-1cdd-440f-af52-5aea8e26667d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32de8b5-77f6-4821-b568-d75f79fe03c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a36356-cdcc-4b70-94ca-8b3f8b6ba1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a196fa38-80f3-4028-af46-a306e6bc5859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96544caf-0f4d-4d6f-a7cb-c2e7bf3e1f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7b8e45-3c1f-40be-b7b4-face65d14dfc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f2f146-6294-44e2-9f4e-67b5e0bf6b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018c2563-ccb8-4fce-b104-88022e445368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceae2c6d-3f18-4b70-9a00-67422b843b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df17269d-15ec-427b-ac66-be59c773302f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0701446-8b3e-4294-95ff-7f60e57a77d6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83211445-d977-4c84-ba21-9ec86db3d3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58ff9e5-cddf-4281-8b69-41c44982e8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3959a788-7f89-442c-a599-d89ebf5e08ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "313b4e50-9a29-4825-9212-f2088595ab86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e497dae-a5cf-44b6-bef6-7e680e45733f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e51c0a5-3c83-4cad-9fe2-3a9844e9bb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee2e5c8-aa24-4659-8cad-423b7774aa20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093e9670-678b-47d7-b32b-a3990086be91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4055ca0d-60f5-4548-a930-6fc8be6469a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80aa794-7d76-4e04-991a-0aebaf8ed969",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e71e19-bbfc-45e2-a4d8-d3a0f9b533f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae70404-6e30-45a8-81cf-2ac613e06bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5da2a38-dd48-4367-b3f3-363cedb14c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f04e9e3c-fc89-4139-ad48-78b711f6bf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b468e3-1665-4205-8ca3-6365f8b1bb29",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f63bd2-b4d2-42d1-a5bf-c185fe39d4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327eb366-1e6a-4be1-8d7e-303251d58e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80314af-b990-41ab-b3e3-f1e15e2b725c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d62bc22c-53e2-40d9-8ac7-8b6c104f5430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664d592d-6a16-44e3-a097-e49227ceb891",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf97731-d48b-4be0-81b1-9e2dd6688a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c6d462-d5dd-4b61-aaa5-b45c73446a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55289734-460b-426e-82e3-958937ce2130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59edebe2-e2d3-40a8-a3b9-589399cf280e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a323b34f-c209-4a58-ba53-887d77a2a69b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061f367f-274f-4f84-aec9-cf026f139775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d79c21-b72a-4d1a-9de3-dd6d00726cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89a6978-339b-4a72-abba-a183aaee1b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46776ae1-2ec1-46aa-be3c-5eb60ec99668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487a9a29-f368-4e21-9a98-04ba1833a33e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab9c10c-9849-425e-b405-2d4f44821ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6449ca3f-3a30-46de-beeb-fbbb5cb60471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48599059-db91-47f9-83da-f293c2c854f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08c064ea-905a-496a-8981-d184949adfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa368325-9738-4126-b47f-56ebd149cf79",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e451f730-fe2b-4b59-b02e-cbe047f8187d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e6821cb-491e-460d-b6a2-36b36b7aadf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092a6e15-c2a9-41ba-a458-cd75b80802ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce15d983-4c92-4fa2-9dbc-7622e9b70bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e05320-a4ed-4ae3-8e8d-d6699238e005",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f15b30-fa2b-48fc-82f5-6017b51b3eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d274999-5144-4bab-ac86-ce21ee776631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ee4875-6fe8-451a-878f-5bc422478527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83be786f-47cc-487a-a315-5941c3f9b078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc64119c-bba5-4e8f-8af5-73fdeac03c90",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7d6998-ba51-4a97-bf0d-0507ddbdef33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe63319-a246-4ba8-b99a-ba4443c1e642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d43c03-50e3-4cfd-9fc5-57f3fa895314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c95990cf-bf4c-49ac-bab7-e0cd42465783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcecc83-714a-4b67-845d-c3ae8e0ce562",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b135b944-0e65-4f80-892f-6c3679af3f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257b5b45-5fc6-44e9-93d4-43c8996aaf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2902a5-2d28-44c2-aed9-ffe2482d375c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b21152df-e5c0-4dfd-8ec7-97602b4adfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90292915-8c12-430b-8514-a1be1502ecc6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da790d5-9b8c-40a1-90c7-cb68889dc428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc57a035-5287-47b1-81e8-674453df4bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71aa67e6-d688-4596-9eef-d46350428b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f48a24c-d163-4ee9-8a66-db1d95d9db19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eda5043-15c6-4800-be82-cf589ad2e4da",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b406b3-3a01-4351-bf58-9342831cc001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0a8166-60dc-41a9-bb20-8e285ce37505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bd96bc-bdc3-40a7-a490-374e7ff2f4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e51e5c1-f1df-406e-aeb8-b03cff2a3bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5ace325-39cd-4bd6-9828-a67f78145ffb",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df1bc3e-b4b3-4b31-bf85-03c1136c9aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba754d55-d963-4efc-8819-ad7dd298cb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316c2750-472c-49e3-9b71-a4e9a8ffdfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f09cab1f-46fd-4a64-a6b2-ed442b6f8c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b30ca7-2410-423d-b4f5-d4c6d98b9ce4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1164f9b-f1e6-4e86-90b5-b872aa116f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aec9a47-32fc-4c24-b3a8-dd113c0e9991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a09c043-2a7f-448f-a5e8-d108a20401d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d756fa4d-a7bf-4947-af02-56f663bb8607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcee4cb-b3e8-4b75-867e-e9843c8b0056",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abc536e-d448-40e1-815d-b5eca5d4b43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89daf015-fb8b-4b42-953c-0d1301e725ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f472674-e984-4ae7-92bf-0a1f1cfe8e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "643cbb5a-c705-4dc2-b44a-e3d26f6211af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96964239-2793-45ad-9a1e-e6dea126587f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20289d09-deee-4526-a8ae-1ddf187da348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c508ebf1-1c87-4771-b2bb-cbab6f237b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0a9de4-8c6a-4fd3-9529-fcf61b332cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "289218dd-45ba-4ec1-b06d-4677fe290a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7223615-5d54-4419-9ca6-13dc75b9bb59",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35332af9-4b24-45d9-9b0d-a45c7077075e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984f505b-4993-4332-b1a4-530c73005597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e0760b-c0d2-4a5c-ad74-81bfd13121b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "046aa496-b731-423c-a5dc-a0a324a9fb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de97b7b-2c8a-4b3e-a050-480d2777d2c7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e447aadf-7114-4c51-ad5e-765f6c94791c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00400904-95b2-4a01-a57f-320e64e78f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef1323e-8fa4-4970-a7f6-15e09aca4219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "349b8efb-b3c0-4f80-8994-3e5f5db1eb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8091999e-fedf-4d26-9d37-defe2d903acc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5e2bd2-4f40-4bf2-bb2a-10c934bd92d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88d24881-7d86-4e52-8271-93fba5a83e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f058b6c-6eba-4cb9-b9f4-243858b65e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b12a4e7-150a-4525-b0df-68608907508e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb379f5-7fa3-4048-ab64-3ea344e0dc30",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f798ff-edef-41b3-a54d-b5e16d105f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed99126-02e1-4ca6-9f4c-003eab7233b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd55a3ba-7d8c-48e9-9e31-d788e7ea884c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0a9bd2-36ff-4f0b-b14a-be90f9448182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6aa35c4-b4e4-498f-b223-39eb162deac2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72938942-8e17-42c5-9fa6-9dba73cc52fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa63dd7f-aed0-47d2-a1bd-55d536ad497e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850f4b7a-08c5-495b-b645-fe0c2737a57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fec5049d-7fc5-453f-9657-5972723af085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5e1294-6275-483d-9073-1942196a22e1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d74e35-4c30-4af1-9b2a-67d08c5c90c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1238dcd6-fb59-49a3-803d-f74c415fba88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ad6193-c5c7-46ab-8f30-52506cc6f664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "823fc53a-f58c-44d7-9bd7-4f04072ff383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ceb5d4-a54a-4dff-8f00-5563cf24184f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cb79d5-a455-40ba-a91a-0182ed3e8b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06abb60-6709-42c1-a574-3337e9445029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ecc93d-675c-4183-b579-84db01d4f7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb1420d-d23c-435e-9665-51e03fd45c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f65a327-6fdf-49f5-b5ad-06ccd0d5914f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a461db0-83ac-4dbe-9fd4-a104cd12e331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d5cd59-c5b8-45a0-853a-8b34d84e4c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddbd6a8-fe7f-483b-8899-cea08b5761c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d22f1f61-dedf-4cdc-94c7-f6d68533909d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a7580e-7d16-4974-a454-8034cd5b0bbd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31c18b7-0125-438e-911a-e890b09e7701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477ae3ef-8778-4470-bff1-797e091d9773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595cb5c5-2f50-4fc7-b719-43221cf30c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f6133b01-965a-4718-9d93-f488618dde46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c51dca-cb72-4220-b7bf-2b51b542c8b8",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf96f3f-074f-459f-9c3c-7024b978e515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2222a871-fcbe-42ae-8cf9-f61292eed7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2a08df-c8ca-4caa-9cdf-e82dcfa107ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8f705a-b466-4198-a72e-88c6b556c251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98248c02-6148-47d8-a676-33e979fe8823",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea27b9f-b7dd-47f2-ae73-0c783a09c260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ff73a0-9a12-423c-adf6-aec2e11b366c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e76228-78e6-4048-b075-e3bb6dadc9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "018bbb6b-b7dc-4a7a-b994-f7be2f7f00bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dee728d-0d2a-41c5-b494-a5ecd8c6d61d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4c7779-71e2-4907-9fe0-3e079ed760ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f2a665-6e32-4e31-836c-cc6866efa341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8de7b5-2ca8-488d-bcf4-d12b090f8606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc47348-1cba-4b83-b59f-10ba2e469cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d0dff5-8a96-467e-997d-2d447c4280a0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03aa99bf-6886-4ffe-bb3e-fa2c2455b051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70240dc5-e96c-4540-b3c3-9f97eef12f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdd15b5-c37e-438e-979a-ef405974e6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b13825e1-c253-48bd-993b-d66c3b921072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c21c571-4855-4c29-8575-066132b91547",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7ecac1-f80b-45cc-b1ac-11e993640d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41cd2e44-1b78-4220-ab6b-77367bab378b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb7ba9e-9565-4f1a-9db5-2aab44ae46aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e36eb9c-4d46-4b28-be13-84da542046fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f66f19-b427-440b-b8e5-aff4572bbce8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8e2f1b-efa5-4652-8fc5-6b1a0815eadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ef9e0f-9df3-400b-b88a-d0b5e2c1422c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad63ebc2-6176-4d08-84b3-6cbcca189ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5eeadf-ef86-478d-8e30-688d45b9018e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6d4b7d-cb80-4090-a0d6-7a6b068c4b02",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fae767-9316-4125-94d4-28720a162107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb1a76d-d10d-4b00-80ea-609e013d29b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c333b5a-356b-4473-bffb-e9a42ffd42c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9684e7ed-065d-45a1-ad5c-fe0c6a3e5de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc4d981-0521-43ea-937e-66822a81e601",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c5d846-4833-4ba5-8c2a-a412abdee6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fb0318-4145-42fa-bd7a-2e5514cc82fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cac37ba-adfd-4b00-8c22-20ebed801359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b44f7380-3796-4cc7-87b1-7e8bbd561172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29097281-c657-432a-8b1e-b761daa30019",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac47b17-46f5-44d2-af7a-133051dfe830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8971a791-d35f-4508-a0b8-6e618106f7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61046b9c-9065-4681-b24a-973c8331383c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e28d16c-5a0b-4fa4-bf41-d8fa04b45bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c09b32-5f72-4a4a-bffa-1964503f577e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caafb5e-958e-4154-8763-830f83d22ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c7e26e-3537-4eff-a2a4-3b9f1735478b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00119f88-e510-479c-9f25-b7f02d3f379d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eeacc5f-0edf-43ba-8d78-6bee5a4b5ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a08aef3-7894-41a9-9e7b-9f00f596ab39",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094c4a5d-9ce3-4ae4-8926-999c695ad91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b567f2-6378-4a07-bb6a-5f96df5d4b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7d8f8b-02aa-46de-b5f3-9876d55d060e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a921762-6b45-44a3-93bb-f02ea7d24c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fe24df-f64e-4c7e-9ff5-0ded693ec17a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c9eb3d-691a-4e57-9f22-e142e8e93392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91bf1399-4367-43df-a6b1-1e42bb8b2849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bfde19-e679-4bdc-a4a7-b9e9387792ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b804555-f597-4434-a498-bd7aff882c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b6533d-33ac-4f7d-adad-7f29c9d03a13",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a4c18f-8bc4-4baf-b736-d11b89404c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56667603-5c4f-4828-ae85-4701b3d36bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359c93a5-893c-4d84-aa50-0ecef153c880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37ab464a-e845-4906-98f7-d2d61d5c05ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe35068-1278-46e0-9dcd-be250f8d7797",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee716717-e2f6-4b2d-9a75-077938b1bc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36687be4-5e16-4fb9-bb01-47415bb18c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f3ea21-78f8-44ba-a830-78cb28348764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f6820c68-3f4a-4b32-ac88-6f3d674733f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8f8b25-ef38-4877-8a20-2e32d2d4631f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4985118-9892-448b-8c08-9770f86a56b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7520e31b-5a6b-49a0-9773-f78c098903d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b0a723-687e-431a-84a8-15afa31cf063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca5a7cd-7948-48dd-8990-c8cf3040e2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b030f7a-7b96-44eb-ab8e-354f618d14f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53db6102-8d14-4d53-a526-2cc2c5946f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd7f4b0-da15-481c-85c9-8f020517aa86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616cef9a-30f1-4e7e-a583-e07287d76de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b55f65e-d7f3-46d9-91ff-c4e03ca39df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264fc022-e797-4622-8f09-57d52928c98b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055fbd89-f453-4f47-8766-20a4d77898b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1b6b4f-15e7-46fd-a10f-00547fb2250e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb16161-70ae-4fe3-91d2-5350d795b00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "da4a0e91-cfe4-4ba2-846e-bf0f3a0a86ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fc5212-7071-4670-8331-6f10601ec511",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89764170-98b4-4400-bb23-f9c475b440cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254c2dc1-1a1a-4169-afc3-cc160bcdb5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338977f9-af11-4b5e-874b-e9205e928b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35d3c118-8089-466e-a662-0cb859559326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d57c51-95f3-417c-969d-348a56e88bff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdef4bd6-297b-40c3-b36b-34caa304efac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2fd39cc-200a-40e1-a02e-40ba320a4b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa26b1c-16fd-4fa4-a4dd-09b2f2ebe1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa0da80-328e-4871-bbc0-1152c839ce61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313f756c-331f-4b8f-80e9-0bf7b780effa",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cff26c-e404-4736-a75e-2cbb2ae6d12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b396a6cd-0cf0-453e-8c55-4b00f0d68ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0880ddd8-1a5b-4b60-81d8-c423420fd5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4a587f-7097-4d72-9392-d73bbffa6612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7746c5fd-085c-4d07-8016-36b80ab394cd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339c14c6-f673-4bda-b411-d3e27cf005ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9682a3a-3227-41b5-917b-3f7e7cc314ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90b3cf78-3a6c-4765-b5f7-9e9000d822cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f364a15-184d-40db-a7d9-77469de51592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e70476-01e2-488a-aa1f-4494b0fc8ac4",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf283d18-80f2-498d-bee5-38e9f87bbe95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c567ac48-53cc-4c21-a370-4af974537f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe597c54-54ab-4cf0-8669-6687cb6dfbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32adad22-b62e-4f70-a3de-e906206b6049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970a7c63-ec0f-4f63-bf56-3b5d5e097b14",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88052290-c149-4c9b-bc44-25fc9b1fd55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121f13b3-7d8b-46f8-9d7d-2eded55b7684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df50bf9-f838-4aec-9d81-ae6eb600241b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00eb0f9f-ea80-42e7-874c-bdc8b64181f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7de4b55-8921-440f-81ad-4e543c5bb219",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99897cd5-b24f-45ae-9bc7-67b10f65d92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6f6eec-2584-4257-ac80-4fbeb42eaf89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2306f952-62ad-430d-b454-610ba79ac3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3cbef26-85f7-4a8b-9c6b-688c4cdd96cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e00ea02-7a58-4ac5-8dce-d833ec1de1e9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e24e6c-95a5-44d0-9839-455c2e7a4d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee70c25-fd69-4161-abe1-9435ca9c3be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cebf28-f9ae-458c-be6f-c0a8e74bbf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb84b7e-e954-4ed8-99ee-83654c5e5675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c1363c-985a-4d9e-82c7-32ccddbcc667",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37953240-bd36-4717-a5d2-99c031ed896b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28972e8-d882-4ef0-bea3-d5b6990aa4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9126c9a5-1708-4f08-a14e-a33ddedc21ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf68dd8c-69ce-43ae-8fb9-7e6ab056e2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99a5966-b66a-4aaf-95b1-654461e3ff17",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f35d059-09f5-45e0-aa9c-95f2f9690336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5414666-4a61-4e2e-a4cc-f40f8db06933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79152050-fe10-4217-8146-aef0bcd82c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "afdd5975-1a55-4217-8ff8-874d59c820fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7514e37-82fd-4188-95f4-70a8ad281d10",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ba9e68-5eba-4d3c-9723-45ec1a605141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80403a2-0a8c-4e8d-9442-7c8f0d75c08f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d942e7e6-11ca-4925-aa43-dbf32dde218b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf1ffba-900e-4cfc-947e-ddc58e626a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb9f51b-df7f-4c8f-9f00-98d7de6ce521",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e288e359-9c31-4e3a-9d1f-cc714b34d8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597b1d1f-e3e5-47ba-a11c-c79cc7d11f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3874a50c-15f8-4610-b9ac-41067b64f535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a55eaf8b-dd3b-4c82-8e3b-61ab7f0844d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7f255a-d262-4e2f-b51b-acc77821e3d5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ffe545-dce4-42e9-8a69-ae0fd2ff6195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a29495f-ab56-4973-9d9b-e00f334edb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dccdff9-184b-4d04-9d43-3e1b6d83da3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c830d9a0-9b7d-43f3-bf84-0c82feeabcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b93c8d-59de-45bd-ae56-d437ac1ac1e4",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523c0eb3-a548-48f2-abc1-28abf026737c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad04b8e-fcb6-4ebb-895b-ea41ea9a336a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82aeba4-4080-4268-ac7f-076059842a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee93e646-474c-456f-beae-4d312cecc7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2782fc6a-8e6d-4604-959a-eac38c4507fa",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53279f33-ffd4-473f-942f-9977da54b927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34787765-00d4-4a7b-b9db-168e73f7a1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbc1c0e-0abc-4fda-9cb6-a04b1d2f4b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32911c2d-f5e7-4394-ae1c-79c429be940e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee9e6cd-1c59-475e-bc06-ba35d647c2f0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a9b0ff-4d4d-48e6-afb0-0468dc0a1152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4c65dc-77af-4077-b09a-60a9a0645410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82928ca4-0b6e-43d7-93a4-41a7ab76a6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1a0a6a-d483-40d3-a5e2-aef285a9404f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4ccc69-d840-4fc9-b004-b511abafd543",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556e8208-3fad-4985-99c2-0dacdfc1a5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412770e1-e08a-4789-b551-9550dea3d6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b03e33e-9c48-4002-b9ae-55b206f69aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39860e75-e6a7-4a4a-a25e-802af62d5996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105fc8be-99af-4265-bdc0-7a0f2f9ee601",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0bc4e6-8a42-4d74-b3f4-33207af70c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b117f4-ef7b-49d3-b40f-c7df6fd4f43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f394b39b-6adf-4b20-94d0-e29ef936ad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fde9780-6275-4ba3-990a-46d4038bc926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2528bad5-b292-41c5-980e-72747fc435ab",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038cef8d-f306-43e5-9295-aec55a4c4caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6edde6-d4fd-4e09-b48f-4a957559a058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48afe3e-43f2-4179-84ff-64218e0272dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23a16e30-c1ca-4144-8435-6ea8976c3b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7580ed15-4f47-4419-b87c-54e91b8f90f0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d767acd1-5c28-48a4-bec7-f32c4e61ae14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdccf73f-4a36-4b52-b367-8c42ff83cae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff62db5f-a15e-431a-80a2-35b0ae86a19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8025978-01ef-484d-ab85-2c34fd23ff9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6fe9cb-2678-4a5a-8d1f-5d28cb1bf60e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf079b42-c736-4d24-9a09-331c4a7cd603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f545215-f45e-4366-87cd-536800374e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710867c5-fb5b-49bb-b4fa-a715c7f81231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b61a19-c25e-4614-a3b4-a00d746ad6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f0f567-7a08-4361-8bc5-49846d1a520e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cee47f5-a90c-435f-b54a-c86b6b465ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4d1a30-ac1e-49d6-a233-d0586d8b65bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a84dee-a027-43d9-89c6-30b434670c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a956f4-d012-49ab-bb20-ac9d4053a35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daca1b47-32d5-4272-9539-2af1bafa4c73",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a656a18e-934f-40ae-9e2b-d151dfb5ab3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee8018a-41b1-47be-8f8a-dfc7d5b435c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608dff3f-8ad2-42e6-944d-3e94b66a6183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36779aed-cb35-47f2-b963-24e7bfca0796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81872156-0aa7-489b-8678-fc8fe54da31c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa53967-1e33-4cc9-8b9b-22d26bff0c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee224951-1ebd-4223-a936-2519b41f00e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a658e71d-905b-4af9-bd6a-62d8857f8205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50a9a301-3672-4bb1-8105-a95e6dc56be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04206b9-2e91-40ba-90f0-efae4174e27d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd70c81-91b3-422e-a2b5-c1ea7c2e6980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266faeb3-028c-41f2-99c9-9a9ddf4de579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6aa9ca-66c7-4dd6-9788-9ca8a2376c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20c54c90-420c-4310-a5ad-535ba517b931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bf3beb-df6a-4cc5-b0d8-7a190db69504",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df50f0a-02f9-482c-8c57-97d4b226492b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6219c3b-e6fd-4182-b3b4-afef8636a763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59aeea93-e54c-4114-8c8a-4df84fb2624e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20391111-a0d6-42b6-85dd-fea71c97f976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47629f0b-b970-4591-aeed-380786e0337a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2aae2d-b0dc-40b3-9cda-d2d2f11b350f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0a8852-d2c2-4270-9c89-6e28212ed843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b99d28b-7d59-4044-aec9-42f649bd5f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d23358-342e-47fe-bf71-b761c34107b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e020594f-1ee9-4ca9-bacf-513f45062f7b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6331739d-c657-4097-865d-c7dd33f8d7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7751b09e-035b-4ce7-9776-a7c551e85be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d8639e-4313-47b1-896c-a76cc3f4ba38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e18571a-9eba-4cd8-ac36-770d15f91283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10feb6ea-22c5-401d-b45f-67a8745017be",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd79729-7572-46f1-9e45-c1ffbe67206d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a66c063-c9fd-4e3a-8384-82eb1f637ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c9ac9a-c591-4390-bc05-f739340457aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "82d2525b-a405-4fd0-98b4-321aa961a356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dcda1f-97da-48a9-ba30-a557a5073ee5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e78395f-ee77-4068-ab47-f8ba330e70fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0e89a7-9598-4009-8f0c-b8a66664f80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef65a93c-aba7-45bb-90c0-74a1982f73e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a711d19-59f2-42c8-a7e9-9fb4116fb106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c851e16e-b3e8-4502-a93c-21b19a995af9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6764a47-037c-4f2e-9581-8959974ec01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c51386-8e6a-4ed7-9e53-80c375a068d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a45791e-9618-4f6c-b5a2-7817294ac9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bedb21e-717f-4eae-b695-c840c4a1299a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71501080-76ed-4637-a553-267136bb0053",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddfe2ad-6fd6-4622-ad9d-03cc288b82cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02daef0-3f8b-4d69-ac2b-0bc2f7960dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27a9214-5943-4510-a440-5699cb9e14ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b28a5f6-b908-4b29-9ee7-a152dce290e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d9f04f-1033-4b4f-ab9e-79d22ceeae82",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff42cef-abc4-4b03-84af-d7a97e2c95bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9fc47e91-5103-4285-b62b-85c08cc5fb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da658b48-7252-4f1b-8aa0-b3ea8e7ed093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2d7d568-d479-454c-bc16-04369de8415c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b189c74-1062-49e2-852b-1f9acdbc5787",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e75af237-a463-46ce-9801-755485180e6b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf89b9a8-d089-43ae-bda6-38d14ec810ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a5bbf0c-9202-40cd-b006-c7700c70417a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8f5339-6836-4cb5-a25e-699dedbbb15d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38e079a9-036b-4c4d-b49c-49557100495c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a8a272f-52e3-47b4-8b26-4e64738c1cc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9136a62-e781-48f4-b4c2-3986564a4514"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5e5bf94-2686-4293-810b-c64a9c9354c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f9f1eb6-20e7-44ed-9610-dac9a9a26c58"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e2fcdca-2ba2-40d9-9eef-e964420d9473",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f02c04f8-e503-4689-981b-abb567ea71ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fb5cf062-9c4e-49dc-b736-f63602e90cf9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3860e82c-90a1-4ee0-adfc-2f85d88882a0"
                }
              }
            ]
          },
          {
            "id": "0ef51dad-ca68-4dba-94ae-fb76e49bc5a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b14e672-b952-400a-9291-91fa989d12bf",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "cb12b142-ec8b-4226-a22b-59e54ce0611b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc6c053-ef09-44bc-914e-c20839ab4fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ca6c5fcd-fdef-46c7-a656-812252f5bce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022c8b2a-92c3-4c78-8137-772772db1276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05026e3d-205b-445e-8fa1-fdb7a43011e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bbec9bb1-9b2b-40fc-a628-ee34321b453c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6f31ac9-bc58-4a8e-b73b-9a8077faad36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce8d2ec9-8ebf-45dd-bb8d-47a3f52639e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d372b68f-4ca7-4948-bb23-2cebde29a8a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "81309e3f-92d3-47d4-85b3-0e70e6e7fd32"
                    }
                  }
                ]
              },
              {
                "id": "51382b10-f844-4ea7-a01a-91ab3c98f50a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bef3efd-5106-445a-a6bb-b1c4c60eac88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e04b57b-d37b-4697-bd0d-352c80e46195"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ceca8ef-cfe2-4f4b-99c2-a9b3f4719e4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4523c979-3965-4bc2-af35-f6db1d3425e5"
                    }
                  }
                ]
              },
              {
                "id": "6b7277aa-492e-4496-b85c-d9d1b8948361",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed16354d-f381-4366-90e7-ae7d27a506dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d9d3c4b-2bf9-4954-b64c-4be96ec5c183"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9285c5ed-6b3d-4762-b245-baef65b62d54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5266dac5-d1be-455d-9238-4dec500e64fb"
                    }
                  }
                ]
              },
              {
                "id": "44f716e0-a523-4c0a-a83c-051173ccb132",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e16c4d5e-275e-443c-bd38-f4f26a08fe7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "837e0a6f-b891-461f-9a2d-5ddf0aab1706"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "527308f2-f5e8-4c8f-9b8c-e466e1df3d23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "19403391-5789-4fee-b81a-373f27032cb5"
                    }
                  }
                ]
              },
              {
                "id": "c05c3b63-26df-44d2-aff7-bba1edd9d60e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db021de2-9352-45ef-a1d8-14b21f0be0c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c51cfbd-ee28-49ec-83e7-69c11287f054"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fc4c0ac-fb66-4bf0-9807-770e6549242b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "12c0b8f7-4046-4669-b0dc-245d5a71e8b1"
                    }
                  }
                ]
              },
              {
                "id": "3f078faa-89e8-4f00-a185-6868eb223ba4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "601478ea-ef81-4a5d-b696-a36bedafb55d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f8e5284-6553-4607-a4cb-8a80ebc1827f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18c1e7ea-10ec-4110-b354-1960c4ebe7b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34ae7660-7186-4f5b-b215-744d505d747a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65f3ddcb-a1a1-403e-a733-9dbf4a3c16ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86b8fa71-2c40-4b55-a903-6d2bab161531"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "18b39a5d-601c-4b43-9b9d-917c37ef7a76",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e59ad970-026e-42f0-a30d-205c9ad6be9c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90b879f7-3e1f-40c3-a13d-4649a001e984",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "083f3c4c-4748-4345-a3e1-870d7451ab0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd7c3e4c-da4f-4d70-b217-ed369972371b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00d71c48-1edf-44ab-abf8-0974f2aeec45"
            }
          }
        ]
      },
      {
        "id": "ddedcfd0-3007-4257-9e62-ce44c0a0a572",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a7f48548-47b1-4535-810c-27384c8759fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "013a1bb9-fc73-42b1-a8cf-920f3d49e0da",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a88d5373-5eef-4505-8fc1-18cae1ed72d8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f71ee6e-fb8d-4c27-9fe1-76177e9f8a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6d4d30-7368-456f-b225-617a67085e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1905314b-c338-458b-a839-6ed6ebffdc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e61d025c-d34b-41d7-bcff-1ff465d8bd3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6540c8-b5e5-4925-a6dc-be7ad9287f56",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc33c581-1726-4dbc-85e0-664b6338c263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc737f3c-6605-4a95-90a0-3d9948bcd2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db3672f-ab38-4f0d-a661-612750f2427f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c69cf15b-d101-4d39-8493-41feacaffd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f36d70-d24a-466e-87b1-05216b39b7bc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73a85e4-a832-4063-a8e6-6f1843c7e495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82512ffc-ea0e-4d83-bbe5-d2172cd1833a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ad4173-d8e7-40cf-90ac-a42b7def53a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6ef463-19e3-434e-8f04-29753ce3c20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99d3dec-877f-4db9-892d-2abb84526aef",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30482d2-af51-4a8a-a898-7dfab5491990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a59855-30f5-452d-9eb0-755a7024e8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b978520-0a3d-420a-bfde-81c654ffacda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdadce48-ccc3-4d74-a3b5-0eec35f4ad86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907d45b1-5176-4fbc-8eb7-9818cf1cf777",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f44bf39-f402-447e-9c6b-4fc8c11c5fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf52f880-e69e-442c-9b95-10f4c59a24a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e27be30-640e-4e49-92e6-95758998197b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1db9982c-0e4f-40be-a660-a6f6b291fe2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df87d0a4-03bd-4586-aade-ac56cb102255",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c687169b-29cc-45a0-bcf7-f9fd291fdc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2e57c0f-0633-4b19-a92b-54d5fb2b3ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d348e459-a91a-49f4-a803-ce3b95f83dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf586a12-59a9-4dbd-9918-938fd12fae4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1ab5e7-5207-46cf-83ea-29ecc4ab84cd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c47a09-ba1e-46ae-93b5-6a6b5b7b369e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d73c8d8b-c8af-4fc8-90c9-96ca256cd79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ebbebe-2898-4183-a4d4-f4a2f069f32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8467991d-6794-490e-91e0-276ae003c51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbf6c97-4833-4e7f-a819-0634a4770695",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220f509c-e5ef-437f-9f64-2a4749b4af1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4be0734-df69-48d0-b93d-df60bae773c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27eb9202-79f8-497d-8272-32bdb0cad761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa87fb18-1a6f-460d-87be-724df31605bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346da30b-5e49-4b7f-abb1-58b7ffcd1961",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c4d337-6099-4618-9b24-a367334ce2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91858356-0e40-4ffc-a9ee-61de981d3d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0498f98b-6c1e-483a-a2aa-9bfdf6f740e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78db5436-b9f9-45cd-be99-04716464d2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dcf9a7-8153-409d-8bc8-28e765f69314",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be292bd0-93dd-4c24-814b-8bb01c0eb779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46868dd-9d58-4c10-8c1b-ba39ab6bdb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5537de7c-7387-4a8e-b570-35986f51cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e0e993-56dd-432b-aa91-decfe3d8712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c1fbeb-8267-4a39-8d4a-d1f0f9595ca4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad42e14-9eb3-4094-ab79-5c8e67c5d953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a50c89-0905-4192-8020-3baea9aee4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbb6f0f-7ae4-4e43-8f33-158a9f607bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "de2a96e3-2562-497f-83e8-806f3f38e1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3238c98b-7ecc-4b0b-a5d1-38071ba5dc48",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00957d58-9ca4-40f3-8a58-068ab9b38022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350675c6-eea2-44a6-af10-213c5c9fba9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd69199-87a4-416d-b273-3ded26683ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4b9a55-f9d3-48cd-8964-7432bd76540d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e054cd-4c13-4604-8a98-99997b7635cc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574a6195-4def-4a47-bac7-9d2f615e28aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dadeaa35-b8c0-4fea-a545-41131747e2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1132af-2ae5-4d72-9ed8-41bae5b05f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0168a7af-727a-402d-9ef3-67b30bde15e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87e828b-2d79-4b12-b80e-f732916559e4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14aa92a-08b4-4e48-84d1-989b6210408a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f442e9c0-16a8-49e4-acb3-f0f59b0a8b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315daf09-3eb4-47ad-b897-0336200d539d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef6e1b1-33f3-4795-9f87-947f3e8f641a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e0b9f7-00d5-4709-a2af-aedac2901e0a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd75c71d-53a1-4d18-8673-65a83466dcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42679dc-5481-4d79-a6b8-a8201e781d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216e1706-8761-4de5-a7d3-76045577f8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "53fdfe0b-95b8-48c3-8dcf-8d20d70a57c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5733778-3ec6-45a6-ad25-ac574dbb28ea",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8e4046-af1a-4cee-974f-5b4956ab1559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e2d446-907f-4006-9504-f30cb8567222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c910200-b75f-405b-a385-c1b65973c788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b1e823-e6ed-4724-8114-f946c2c4e694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da09aca2-791d-46b5-bbaf-b3f001ac52fa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae979c10-2ae4-436f-85e9-76a960a91805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb62be8-3a15-4873-a423-04b63a4e7064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c64a60-85ee-4fb5-b308-27fd3de418e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3505bb6d-c6fc-419d-a03d-58b77dd90e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3244852-b2cb-441a-a6a6-3d36e5134999",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768ccb6c-9469-4236-afbb-8da22714a842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8003b882-9309-4946-b696-6a3e3c95b4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097d1ca5-546c-4b47-8ca0-5ba12903f6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c0781f-6868-4928-83fa-8801c5c9d5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e8513b-d07e-4718-b013-ecc54d743c91",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbf730a-b9b2-4189-af00-c71f214810a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d1cc41-47b4-4ac5-86cf-47ea34903440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807be17c-a3fa-47a3-b765-0ff3ec1ff027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b49c30e3-de5d-47dc-a12e-dde00bc7d4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6356eef5-d749-471f-8085-a3e8aa512f1a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa2022a-45a2-4f07-afb3-cb8de905a2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90188c82-b04a-4b9a-b811-ff12a47aaeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0f702a-4e77-4fb5-9459-2eeb9dbf6ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c70b239-6e10-414b-b01f-6fbfb9d78fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779365ba-ccf1-417b-965a-3fa0dab5161d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91eae4bf-c0a1-4eaa-875d-07454e80151b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd94c4e-3ccb-4c73-8faf-89b257bb00c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2454d4f-2e43-4c37-8b0f-2daa9d2907c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6474dfeb-1be4-4ea9-8c9f-9b2cf63ff8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e69a3f-dd6d-43f0-943f-ddfb0ff5c495",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b73cdf7-cf45-46eb-885e-6edd92c6b6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f160e3be-79e0-4748-8bae-cf29bc67d40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dae983-684f-4959-88a1-265cb569a123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84df06f4-94d8-4d89-8257-02368cb0649c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7930a142-afbe-4743-aa73-6d7df340d3d9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5da236e-60d8-43fc-8d9c-5f21861074a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc0c7b7-1709-409f-9791-6bfab03c9515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097cd033-6a48-490c-9c44-bf10191cd8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb13a71e-03dc-47ea-bfc1-dc29a31dbd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee248348-a30c-4b96-b50e-a940e960868f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f662b4f-6c3f-4352-86e2-18b51a51177d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d39def5-a4d5-4e2c-a263-a519e6bc96da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17662644-2a7c-4546-8716-44f3261994cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73953148-a53c-4a33-97f1-52dace69e204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8c2429-97cc-4821-8578-d04ccdcf3bb2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afb1dd2-dd93-412c-aecb-1a9d63bd1769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e716e6cf-a186-49d6-a8ee-4864baefeb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da36613-2696-48ca-a9c0-b41c9908ac83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0df5b9a7-4438-4920-8777-fbf0b777f183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8121261b-c649-4cb6-bb22-0abb22c948ff",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2a8072-7950-4337-89c8-70e3c7925175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31136923-d8d8-45f0-99f2-283d55be6548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9894274-c698-4525-a5f1-711fdf4c481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9035d44-db5a-4da1-a68a-274a502d91e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7220da10-b8d0-479f-9e92-2f03877361bd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e63078-766f-477b-81e1-f672b8f4976f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852f855a-76a0-4a5e-b3d9-2feb4a842728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae91879c-f3ac-4b4b-80bf-8870a0f02471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92a5b5fb-ad5d-478f-bab3-fea55fd6ef6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc71b0ed-440f-4ffe-ac77-b51afafaecf6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ae4a93-8ac9-46c0-80fe-25607f403f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccfe7ad-5dfc-41c3-a7cd-e57d1ba9e29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d7f6a1-1368-459f-827d-4db13550b11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27305af9-a4c3-4d3f-b721-39d34af2eb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf4344a-4254-447d-9e1b-6c1b78aed8fd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f53f77f-703a-4a15-9e8a-8cd5cbc7b928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881a7058-0357-45b2-8f2b-33ac4ded08bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2237a4-977f-43c9-9d8b-09b4e7d583a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bad1076-b874-4262-b2ca-2082e301c8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55c9cda-353d-40bb-99c0-c5eb72415770",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6887898f-0807-4a75-bc1c-f3533e3733e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cf5eee-387c-471e-8f7e-c5394dae780b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0516516-7c40-45e2-8f28-5f20a77e443f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "465ab16a-260f-4b9c-b065-141d0e143795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7b2650-46c0-439a-9d3c-b733216d33f8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ace5fdd-9d5f-4c2c-9069-63180cc110d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd821c94-31de-4ba5-b3b7-10c41551bdb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dbb6206-97d8-4729-b0ed-99a229d943f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e617c9-3343-48b1-85f9-e0139b5ebe6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37eec39-ba20-41ab-b26e-5d9a11a767e2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c4ebab-1c51-499b-ba24-aef722b323e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ce9a55-a225-4496-99d3-b2bf2cc655e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13005f63-4b60-4280-8c27-747bf1ca32e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e59a0b09-e921-4451-b131-3f53646d516b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23cf166-9e2d-4b6b-8b19-ce77cf199ada",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a76c91-bc0c-4b80-9b89-98140e22a2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6dd4d42-7045-4e58-9472-7db525d30c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9412613b-01a0-42e1-8454-581284fc8ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e94eee07-2a3e-47f6-8ee2-06c8f994295b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f551ebff-9586-45d4-b177-c3f353e8c739",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e649d35-6db5-4642-8f2e-83aff95c8db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5133cca5-c532-4e50-a85c-996f0090dd19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499ba52f-a194-4feb-bac8-baa9e7bcf143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f491796-a3e4-4bcb-a687-9ee5440bea03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7659450-8f63-4216-8907-ce6fa97914b1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3167a995-56c5-41c6-8351-8be682fcc7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e0c781-99fb-4819-b556-1f678a09a3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114118fc-d946-4d40-9d14-6b69c40743d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad83b8cd-62c4-472f-a8b1-757c67aca375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7594dc06-eb71-4abd-9b0f-6b9b1d83f02e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338b7690-793b-4c47-8830-bfacfe0ad157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdd4e63-5929-4b5a-9697-0f57316c5b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea1f051-b719-489f-b0c3-bf80876a9d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "284d2201-6863-490f-9e74-6005e2ba20d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02df6cbd-fdbd-4083-92bd-d1f29152042c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe9b77c-1d8b-455a-8e76-9e95a2a2310b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995f3277-ba79-40ef-aaf6-7129815a477c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c140fd6-b740-473c-9628-fb97adcd2500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbfd0370-a01c-4c83-b132-daff88cedb7f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e944377-43f5-4c57-bf86-4fb832334e28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e38fda48-74d6-42d5-a5fd-d354e227fc51",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df6d653-bd12-4698-b043-96cb8b38960e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b87dac16-21b2-4291-bd2f-9cdc05188a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b4967c-ca2c-4b7a-925b-b6e3b1b0456f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7188da51-6196-4eb1-a7dc-ce02a7ce04f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "717bd541-4ed0-4aaa-b4de-bc2d63d9f95f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d29a5a86-6321-408c-a094-498e6a9b6163"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7b95e77-65e2-42b5-8691-5fde68f8bf61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1203cf2e-2e58-473c-a8d6-effe5dac3c87"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "643d3ed3-e56a-4ce8-aca5-014abaee77be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13edb606-cc41-4b06-821c-f3ad75282722"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2550576-f19a-4426-92ef-81568e3febc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1b8c2c5-9b1c-4090-b3ec-859313774b68"
            }
          }
        ]
      },
      {
        "id": "42f73546-d862-43bf-90fc-fe64be997bf5",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ee5c3794-dbcd-44eb-8e2f-51a7780b994b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4257b335-8487-43b0-a329-e448d5b776dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56988e5d-b53a-4bb7-bd34-937838d8455f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e2991f-c737-4553-9c6d-3f8fc89dc7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfe47f7-af5d-4b37-8e91-3d508a825deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e4267c-b87a-4bb2-8565-556be3953b7b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0948d5-9dff-431e-85a5-f39e15629030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d56149-0329-466c-ac01-21c63f3c41d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec717df-4cd1-48dd-b726-0a2698f279ad",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fec3ed-0c1f-4ee1-a8bc-361abc0788b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e848090f-882d-49ea-82cb-ce4650d4b66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e3fd96-f49c-4eac-a807-0f05ffda98ee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740b2525-30ab-4a36-9e17-66fe331957c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d456efaa-2439-49e7-9a58-29691c956634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0885cb06-d0c9-40ff-b3d0-88c860b9dd70",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f320dece-a018-4151-9723-8264becd90e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74119b42-190a-4853-b735-1f61522ca76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8276f9-78e6-49f7-9d89-bfb0bb469ba3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cb1c01-1717-445a-b14c-77bf5bb85e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe34480f-11a0-415c-8008-178b271b68ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e018d37-08d2-400d-be38-63efb2188c67",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305581d1-0827-41c1-a4de-cff7709bfc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938b917e-3d16-47db-b705-9fcf6e15b009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5353267c-4236-4b90-a1a0-2ca1248ad546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fc5277-6592-4cb5-84ad-ac4b0f0da042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2682b548-980c-4f7a-bd76-b374b21a6be2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ca8ce7-e599-4a95-9433-c2be2e0d188e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35bad691-d6b5-4da0-999e-b9f896621fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c79ffca-b054-49c9-9db6-fb240eea7ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061953fc-81e5-478a-8c67-9e1664b6e3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9045598e-8e7f-4127-b1c2-9d01e399822b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855feaf2-5d9f-4e9e-b96a-b6a95f5b26f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad95bef1-59e1-480e-afb1-00623d6104b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56b70b3-68b1-4ef8-a5fb-753c556e6e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b422542d-613a-4273-ab61-5838e9993589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af80feab-ce77-43e5-8f66-f9685e69c5a8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6aec55-a376-40fc-aa10-b89407db1830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b32a8ff2-2c7d-4c3e-911b-6b574817268c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091fe363-fb8c-4782-a644-80caf390a209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2ed1cc-9fd8-4775-bb10-16a5c4d063be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4016daa6-261d-48da-a061-24aa7f3d6e98",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67111e8f-da73-4bb4-83dc-5dc323a00ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab606c2d-83a3-45b5-b1bf-d91a5596f7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f0f88b-11b0-4d56-84ef-e65ec33a67be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65963b7-45ae-4b99-9b5c-964d91d259bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcd53ac-2104-43ff-a2c2-a66150ccadbe",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f383b147-efa3-40ba-846d-24338c7f7c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af90b1df-9121-43d9-a3b9-417db6b19d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1874fe6-2b9a-4f0f-bfcd-cc64f0e0502e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a4abc3-6f53-4b40-99d2-c42cc32a2ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fc80b3-7187-407e-b6f0-529f4e801c0c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95db2ea8-8789-4b68-b6c5-eb74d5300b76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60fd8f05-0c6a-4527-89f0-b0a3826c5b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374ea009-1a96-41f1-9adc-e936fa96cf32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660c43ee-ca04-47e4-a1a9-84750b6e16f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2215fb-c3a9-41f4-bd02-7020c6faed96",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3777231-27bd-455b-93f8-e3575f02753e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e2b2e6-d1cb-4530-a1af-811cf846bfec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df9ffff-fec1-40fd-be6c-1da47b5ea474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef26aaa-ca3a-4027-9478-554c9ccb5776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aae744c-8cad-4673-a0fd-1b626c7846db",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bf22e8-06f9-4f9a-95e3-9c0ef5b66f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0745903c-905b-4c14-80ba-57c06fe88c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e01d89-76db-4d35-a9eb-6d51632446bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25080a89-adbf-438c-aa58-4f847200a914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69a2c3f-cbe0-49f0-9a7a-7d729e366870",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8f315f-70ed-48bc-971b-a40080acbadb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04713ed1-ea1e-4466-b8fc-9ceb50874aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f25dbeb-bfd1-4af5-ad29-19412e4914ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8de7615-772a-4eec-b40d-8a67ff5742cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e57f7a-630d-430b-9df5-06f6b77ba1db",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0f4b3d-6efc-4ea9-89e1-28c9b23a0cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b3490e-27c8-438b-a8aa-759db302e336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1012b2f1-2dec-4657-b130-d917e1ec69d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29896be-3b63-4a49-a77e-2e0af444ed28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10bca5e2-a35d-408a-b1ee-c62f0a7b984f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1ebb4d-6712-4f84-aa14-0c09cd06a2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d36f7a4-1798-419f-b0f9-9ceadbf26a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe167267-4af3-4d99-a600-efbdb5efafa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdde040b-e5de-4d39-a2e5-8127b48fb4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098951c8-0e2d-4e26-a99d-bb6427b89a9e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b090349a-5817-42a5-b603-897a39987d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfc6ffe-d1e6-4920-8c3c-f4b32217822c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93604b9a-d074-44d0-9606-00864786b41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7199c302-1c3b-4693-827c-92e0fb2c2934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ef1c82-b723-413f-bf4f-6b046868ddd8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be36e6b0-7363-48dd-b157-18edc58cd350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe205550-c5b3-4f63-a27e-0bd689749a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e228359-481e-4725-afe5-e780bac6113f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154aaa01-2b62-493c-8be3-01a9a5809d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e512c9d-f8c2-4188-bf35-7fcf96e7a610",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff03a17-05d8-49d2-9534-9a4c710ac706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceec7bb5-a9c4-4dfa-b862-5fa82584ac3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e126e8-5d35-4229-90c8-7d62c9037962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7855b874-1bf9-404f-b550-e7fb42e91dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0772d75-5a27-4d6a-939e-1d846811858e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c44ae2-147e-41b8-9c5e-3eded65d9832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6133b7-0e93-4c62-a589-23727fc38525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e5e1f3-c5c0-48aa-a6db-18612685b9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d195469-69d2-4cf8-81d4-3fc96de20bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f7a134-d784-430b-bf51-1ae05cf7257a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049a0de4-d3bd-4c2f-b961-7bcfa5acefb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c458f602-e1a5-4652-80b1-205f9e8db18a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0560c6-6417-479f-9a2d-defad6467660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c1892a-40e6-46ff-8a85-596387c83fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b599d8-13c6-442d-8322-9f8da6ec35b6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bc6507-ceaa-4f75-b0ab-f57ae9e99e4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d9837c1-ae69-41ba-8d6c-8a0cae37e122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1892a95-191f-4a4b-8137-0fbc5371a0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8f3d7c-0619-4a6a-bc21-a9e1b686e9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a60cdf6-1858-4357-abed-e7b5fc50f930",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cc9c5b-4fea-4141-ad25-88c529fe63db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99879548-a0c8-4d05-915b-4dbf01a5f02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6595e4d1-70e2-44a6-9ef8-1e64f8851289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277c7eb9-f551-4fcf-af3b-0f1bc0f92377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9364a4-9683-4b04-9cd9-4b5df81c0c03",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c35914d0-2a14-46a5-bc10-ef4631a70e94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3578b40-96f4-49ab-997b-5d5ec4c8b2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40bf1c6-a951-458c-8b6e-f1e21ec19082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04dc769d-8311-4bdc-9b21-326d63a4a0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfad617-74c9-415c-916e-83927af9515a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6babb255-8b3b-4931-9fb1-f73b3b217f12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e30a212-73c4-4fed-8ff2-8085e72d99e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7743768-4353-4812-b83d-c69a99541a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf9685a-fb30-4702-8433-2fc554ac6e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4d5bfb-35af-4a69-9fca-71752199d064",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92ffb66-714e-4901-a07d-c5a8c8b7ef1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0ef54e-b233-4998-a4b7-17040b226c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99cdd1e-5780-4488-bd24-94ea14390805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6d4676-f1fd-402b-8d7f-9d2adbc5ec88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e63d98-f7b0-4516-adbd-e3b3cf8581bf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124ef27b-1f4b-449b-96f4-702a86bbeb0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06c69e43-9ad1-474c-950f-94a6ee664ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da68e3d-c25c-46af-ae02-7ec3eb89d18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac3a22d-b1dd-46b6-888f-591925265cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5235399a-6d1f-488c-8755-43ac84d60f90",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8527b0b5-0dc8-43db-b2a6-0f8386f59ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca728e4e-aa5c-487c-a382-8a0a2fac5222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d4d062-931f-4395-991b-a91398cb4551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478c0662-2ef9-43fe-b9a0-afc04304913d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4921af1d-56ae-4dd0-94d1-07aa412af144",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51da76e6-9f0c-4f5c-9837-c0fc6e6c820e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21c84086-df17-4af8-b611-a0bea93cb269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd5d456-c829-4ad7-ad32-57eb69f50025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fb9664-6d9c-45e3-9d4e-964df254142b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8174151d-ba70-421d-8f9e-b560b16ba7d2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1682df7-7cf2-436f-b192-d780aea5b33e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feb5cac4-8866-4263-b557-1c9eacdc61ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23de2962-414e-4d66-8f35-144fd6a2c205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091e4e5a-1dc1-4a1d-b18c-09720fffaa41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3178cbca-1946-4e38-9824-83571d6d18bc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940de0ae-b77e-4e6b-95c2-05eff459d2fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b15bb24-5faf-46a4-a59a-b24cf841331e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e27485-60dd-41bb-bc19-7fc6494ce890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3590950e-019f-4d2c-b9d9-070ab3e89602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f14d3c-da7d-4043-ba9c-2239429bf848",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3b2182-4bd0-477e-8d5b-7eb5c028f160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc8bdebb-fa2e-437e-b179-8f1122a92ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1f7780-a5ef-469f-826b-88419cd06da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2132ae0-c9ba-4e1a-8865-3406fe567598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b5b0bb-8957-4278-8f54-35dcdae7a63c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3741493e-eace-444e-9f69-62020013e319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb5f644-f65c-4d8b-9794-49f3d952b7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c234b34-dd46-4289-b867-2fbedef13808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f981e48b-4cc2-4f78-8d62-4754c4041164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008a80f8-efba-43f4-b9af-2e8334c92115",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f859fd7-9b09-41c1-93a2-4c80c88eb705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565ae73c-0cd3-452d-ae8a-5ae6dd690cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19977afd-7e0d-462e-8c49-41d407cbfd7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809faf42-8bd2-4072-b23c-51ac319f2358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d623d2c3-5ad6-49c9-9b58-5378b8558186",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3919a4d4-0422-49cf-985e-598831ef9f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e635d707-dbef-43e7-81d3-0d543c8e5548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b7f75e-b0b7-4b7e-a1c3-347a36d85fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49781327-afda-4593-9a2e-6c4db1271d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc61237-e4ce-4893-aca0-1bcf74039df1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0867f56-ae73-433c-9758-b422fc2d0de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710b7ac9-e9a2-47c6-8f27-f6932c11f1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba033ec-a38e-4cb2-8622-9d59a4a0d6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37904cf3-6980-48db-a042-da3243a90f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4437621-6ac9-49c2-9cb7-6aa436fdaf3f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728ee673-a377-4339-8963-be1f00545680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2c30b2-985a-4a40-a3b1-11389be41d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303b4cee-3390-423d-baa1-819279764ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf14531-f2b1-4c81-9958-934d7bf421e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d71ec5e-e512-4850-ae1b-f1cf09c8bbb5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359cda7a-c702-457e-b0a0-1dcac9406423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2980ee0-f0a8-4eb9-90f6-57959a7112d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e3f3fe-0583-46e9-a8bf-b3855c2430f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66e3b46-97aa-4ff1-beaa-5e168110f3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30efada6-09ea-4770-aec5-00ac6392416a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f53720b-381f-4b14-b2b9-1a3fa7f42bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bf9bcb-c3e7-42be-ab7c-c36962d8cf05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6a0c28-eb70-4755-8ef2-978ca1b8e39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e8b506-60a6-4b21-aa63-279952bd62ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0f9fec-347b-48b5-8014-2979f9481a4c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21547472-6d68-46a9-aac6-bc6c63df3efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eaf478a-bca0-4748-8ada-bb9986f3b7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40a06ab-4f01-44a4-a216-0278649cb8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c1059b-908c-4851-a74c-63cc2b0b55b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59681fd-b763-44d5-9cd4-d1f5271fc0d3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a03c3ff-f80a-4547-9ee9-c2f2d4f99463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a61529-6891-433c-9e38-2a4b271cfe12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00add91b-d9ae-4236-b7e2-4c4e8278af59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341277d3-7cef-4a2d-8aaf-862de4442c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1c4ad0-9140-4af9-ade1-bfc762fe274b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65833fd1-014e-4a8a-92cf-0ed225674b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e88c09-100e-442e-9f40-adc8fe5f353f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cdf749-141e-4453-8c99-e45f108b46c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa668692-5ef1-4e06-b21c-bc99cdade8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6164b5fa-9b49-47d0-807e-404488edde87",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b908cd3-4d55-4281-8b89-0488750b0b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5526625a-47b3-451f-862b-b62417643987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebed3c39-319f-4bed-b8b7-eb780efa7442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4c9d9d-32a6-4172-ac88-f03edb44c64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc77213b-5b04-4940-b5d2-5b61f19dcbf0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c982311-c24c-4108-9bc3-1bb58623eeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8967adc-ba29-433c-a1fd-874710b4e946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6cecc4-d3f8-4dac-a970-aa212a33b71a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d1a6c6-4c46-4a01-807a-f0db80671d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4cc390-8714-4138-99c5-c048747dd690",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7ae350-26d4-4978-87ca-4d16c8a67e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d1397d-8b26-4202-9de1-5cc0add678a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fd78e4-8c27-46b4-be6c-e6122057c292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd172b59-9557-442c-bc55-93391641fee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee80ee9d-ddf9-4b44-a181-085643547b9d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e4af02-0db1-4050-9921-71d3a5be2e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea8dbaa-ba22-4193-8763-9e0d0209b7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba6f053-15bd-4a42-a39d-2d5266967414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb642e8f-bfc8-4a9b-a3d6-0d1459798233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb77bdd-252e-45ee-8450-279110831fea",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f11fd5f-8ef5-4adf-aab1-6be033d38ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb2fdf1-65a1-4c8d-8b43-523733f831d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967a5da8-7fdd-4a42-9aec-e13d5df8d28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03015c59-8419-4bbc-ad51-5cc0be49722c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de265cab-961f-432c-a528-a2ddf9619e84",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11157b7d-a39e-4188-897c-42ed571713db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e39eaa-1a78-4657-9d08-508efd45f0b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104499ae-c666-4e89-8f08-5dfe5d40dbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a60a2b-f3cb-4b96-91a8-4ca9c1983646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec5728d-b200-480b-b2f4-8efe463e93cf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8711281-562c-426d-b451-d6f76ba00941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e4e8ef-0532-4882-af69-354f741ea7d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053e3182-68a1-476a-8e2b-49e86a1b3453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c630d24-1a67-4eb1-9714-06ddbd05258d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6d75c8-3eca-44ec-924a-e7d7b5a59154",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5c14f5-6d91-419b-9fac-139169a4be9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f865cd-d9f5-4b9d-aea7-a6e2b7363736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "070068ce-ba62-459a-9484-b71a687ab429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30012100-7c58-4165-bdfa-8e3c08c6bfd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfb015e-6924-4165-85ef-7043fb9ad7ae",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34dda55-126b-4ad9-8bed-aea8c8003d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8882799-02c4-4c92-a7a9-e1fbdbe27a4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed99f69-4ca5-4d97-bfa8-d4fc569ae27d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5b1fba-d1d6-491a-8a97-19db8d400e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12207d82-c97f-499f-9eec-6477b9a18597",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62e604b-cbfd-4e65-90fc-52683538c5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dacb9e-f1e1-4507-adaa-565ccb8b5fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04acbdb-347a-499a-b012-fa6101c7bc33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae48329-b58e-4d49-8743-2b13114c2341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f1f53b-4469-472c-b608-ff8281f8797e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd89793-9e18-47c7-9b6f-ef0971b7ca10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3b0b6e-5f4e-465b-b0f7-2623f12e9ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dafc3b-2171-4047-9bc7-e3e4328b5f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20e616f-c35d-4936-91fb-bbb3de77cd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd19b06c-148c-400e-aca5-ebce8321ba3e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1041f4d7-2449-43c7-b183-70645415dde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c50653-e299-4757-89d2-dc5abf23900f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee02cef3-fe80-4166-9668-d37ff97b9073",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0bba4c-bbc4-43fa-acf5-b4c6448cc20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e2a219-d74e-444d-b150-7ef8a3f1314a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cc6563-8fff-4c3c-b506-779c9add25c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51d4da3-2710-4045-b6b8-a18a7fe34c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5737c0b-acb2-446a-9933-00e9b25727a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10adf44-b43e-4e62-9378-d17fb7b3e5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6582a348-739c-4654-b810-e9b5178057dd",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf928dc-62e8-42be-87e4-5af88adbf7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1885a468-79c2-448d-a132-24522dca0fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5896c3e-0c07-4571-a2cb-2b4532a3e202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a065b8-3d76-4358-86af-53e8d8b5a887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa223d5-daa9-4077-8715-acbb8faec93c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3168b184-437c-4f86-a37e-01dcb17c8929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6462a2d6-d9ea-4ff1-889c-fce8caefc625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39071dd9-cd3d-480c-9378-4c24f9f24777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8965c6-11d4-4de6-9f81-909ba479b57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4803d02-a960-4c88-96da-874b34451579",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ca7cfb-419c-4e10-8886-87d87ad92555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b04d69-03c8-4178-a450-35e956b23b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c3efdb-b410-43e7-b23b-954869f480d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db861e12-ed56-47cf-86dc-45d5a8f0d2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d2111e-f380-4760-b65f-c2245b420930",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98c3c79-003e-4bcc-b2ea-de2a52684ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e082184-9734-47e5-8737-2fc04eb18b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deec0b9f-c96c-4a5b-9f1e-6f64e2f48aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb8af31-3c99-4e52-8c1a-b59ab927c41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e1ff8f-8e3e-49a1-b3c7-2ca639fdeb7d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8572d84-a9c2-40a5-88c3-242e236f329b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a81cbe0-2928-463f-bcd7-c6e2165b2098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49c79a0-d822-46ed-9af7-75da1267ddc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77256c78-5e64-44aa-b858-6bf3e895b0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea291970-a59b-4fb6-b6e8-59a98570c9a2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf53445a-bff2-45ce-88df-aab06a65f0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5568e63a-b468-4ad3-afed-43f501ec7b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c189d49b-27c6-488d-8d94-c044a0633a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c7ed65-15ff-4bdb-8076-feadc746ff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa23ac6-e2c3-4b28-876a-f3a2ecca4437",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d87a6e-ce10-49e5-9731-9c63142651f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb447dcd-2637-450f-9809-af896ed4951f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e084bf-dc26-4db7-acca-49ff58d96bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f85ce9d-884e-4ac7-a999-d9916f930bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8f4f42-07bd-414c-88b6-283ca0735628",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f378c2-bcdf-4f7c-9a72-d5bbf97acd06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b5fade-7756-4daa-9846-02636b1794e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08aa5c0-4ade-4f6d-bca1-6badadb79185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fed4d66-7243-4e91-b32a-ff89d7aed0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1128418f-7397-4eb3-90e5-b11bf604ec87",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a362a835-e763-4149-89bc-d27f7571b358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5e8a95f-9598-4051-a6a4-fd387848549e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7b5e23-172f-489c-8a74-292652b325f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26c81bc-9d4d-4ca1-8bb2-50c42beff1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0338d2bf-0e9d-4aca-bb29-6172587ac711",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4e3ff2-3055-49ae-a134-4914f1d58a48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da5c4ee1-0123-44cc-b715-af6a73064d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13218005-24c1-44e0-a8ac-2a0cf0a9a61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96cbc48-f5d8-4a99-bbf1-21b3b9b15ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e7a344-4287-439a-a68e-27f3e323c0cd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b12099-fa67-414e-9a49-0785a96e4b37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b281f867-ca89-4f59-b284-6744af0682b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84374ab6-a4b9-4cad-9b88-9209701e0bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b819925a-c808-462c-af95-87f9774d79bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4b08ef-f62d-4926-83ae-127eae056d79",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44387d19-96a3-4ece-9425-c1e439c60fb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de0e5297-5baf-48d8-9ef6-dd62a6175a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55eecb2-1d5e-4401-9655-233c02912f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f967f63-6297-4a2c-b412-e0b2350c980f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320a240a-dec4-4df1-8610-ecace8d5f785",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6134ef1f-4063-459b-ae7d-ed7a4db5b901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c21d9000-1fc6-4131-bd99-cd24f8b9bbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b64b1b-fde1-4a56-97e9-7b30d0e82d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a5b3b1-97d9-4e40-9ed1-0834e5feec2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f307319e-4f8b-4d2e-9ed5-460c24a247ea",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48a839f-7c4d-4f38-a3b7-14a5dff36e94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ce64e19-00cd-4ad8-9d83-788da99c28d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ae9a8e-2458-4703-85fb-3db7e51e0ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a0ffa6-b897-4bba-87cd-03e272c9b9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01144884-a4c3-4465-82bd-31cd2a18d9a4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a85365-dde8-40bc-8f0a-02a867f49bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "323279f4-8bd9-4ce5-9db9-e0264560a11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbb2a4e-59fd-4acc-a100-472d4e27220f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c85da3-6fa1-44ea-9506-f8cb23a954ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c71ccd-47dc-4f8d-88c8-b69d549d9362",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3b015e-bd35-4632-95a6-e6884bbf9910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47cfc876-bd1d-4c54-add7-ab654dc25861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5db8e5-c2e9-408a-a900-2b6874363a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bbd1bc-c7d2-4c6c-b73a-223b980e45b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c77497-17bd-416b-96f9-3b8068e14749",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6f7895-eb84-40b2-91ab-a7ca1b64d6df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582c5e16-f536-4025-9fa8-efa0f70c0e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d300b25-094d-476a-acce-890742eec252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075342b6-a826-41c9-9384-26477a0cf02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa85a6f-b62e-4c19-b9db-995f5a9e3418",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9682f3a8-9817-4eda-a306-fe6cd5a306e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c0162eb-f735-42d8-89b6-b2c9c8dd3bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12c70ff-585e-4c9c-bf69-3e2e6539d353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e99d36-c036-4173-b421-756c2e37433f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d8d032-a719-46d1-aa44-cc24cd454bbe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f54cf9a-bc79-4ed7-a744-07c0a9383d05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcea2bfd-a4fb-4d35-b310-eec4aa36d96b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56137dd1-2c7c-41f2-83b9-731e2301f994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b18340c-9ceb-4962-b1fa-b84db1c2cdec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd848a32-4df9-470d-9f75-613a76b5e0ba",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c144c3a5-9dc4-4933-be20-acb9e108ded8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "379cb4c5-4377-47aa-91eb-d2ae623ee1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b87256c-83ba-4a6f-8d56-1cbbb56810b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef159a8e-8b8e-458c-89e0-5b424e8e7b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbcc430-bd5a-4a0c-aef6-4d2ab7108007",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273638a9-932c-4183-ba08-9107d45b85fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b014598-4647-4742-a53e-cc848432a6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e56289-bb50-4fb2-bd32-feadb745d31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f308584c-0f4f-4ced-94fd-26f3c2f5db1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27b016e-a5b7-474c-a844-fb1f5662d973",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6588c74-56d6-4eab-a46c-3cde1991f3b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85c8f954-3e74-49c0-9da3-c0c57dbc55b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ea645e-fcdb-408b-99ce-5122d871be7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74b4661-270a-4566-a577-1ca5d4ba0379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d529b198-cfea-498c-8261-702a74ce3d86",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6e9446-f698-4995-bb66-0a4542807844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93235beb-b786-4c78-8a7f-a6aa358d8ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db365dc-5bf5-4413-9d35-c9ccad7166e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44623d2b-47d5-40f0-a001-d00fe81da04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ab1862-fc9e-466f-a15f-f1b6f2bd3b59",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ac7562-24ee-4b49-87c1-8ce2434da7f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1fd8703-a1b1-485c-833a-dacde0156400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe922ee-c37c-47e9-a3e1-61b0fca212d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266036c0-8062-4d68-85a1-37162fe65e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfe6daa-9bb4-4456-a6d1-a5f5b25408a5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fc57f1-c138-486c-8c8a-bef435341158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5225f7e5-3426-4dcf-9117-56924864fcf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecfea95-a7aa-4b82-961e-0afca6155586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26dfde00-b41f-4b08-9113-9b75b3346ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d303349e-cf0e-4786-80bf-fe568e496850",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a543866-f751-4599-bd2f-86de7a7a35e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09ac4aa4-f0ac-4b18-aed0-5e23b20068c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efd9ecd-1f9b-4ed4-8ed6-31427c7d8d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce976e9-54ec-41c3-9f0d-2ee2c56f4fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da75ecef-57a9-4eea-80b2-e5a5cf875cf9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e8c399-1304-4979-8d9c-7fbb08f96908",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0c1e21-da29-4ba3-a92e-c3f21e7efa12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ccbbe7-964b-4706-b413-3738ad31552b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "602f870b-9671-434f-93ea-358a7d765213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e8d98e-8e27-445d-9d3b-f2b8f9e6086c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5eb04f0-c047-45b6-a97b-35730f8b3643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061cb4ee-5d33-487e-a13a-665588350653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3490152-9350-400a-a535-2baa4d592b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4832a7-ee8d-4e3b-8898-00027db92f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4234898b-85d6-4e83-ba4a-11ea0899c9ed",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b695cfdc-8004-44b1-b7ba-ecc6adbc9187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e3cbd20-aaf6-48fe-b1b4-9fb8d98ed518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c460add6-cbc6-4e64-b3e4-d334e1bb5446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f56bac3-ca6e-43ba-adc4-b03a122cb127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49652bc-4b01-4dec-aa57-d39a4d85c900",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2055cf7e-e088-4681-a633-2b9bdbb60be8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2ab2284-42d3-4fa3-a397-d2772b04b9c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056d6778-b00b-45c9-8aec-53212f103148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e13dc2d-e208-4e15-9a63-d2b4c972c07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7b59e4-c945-48c4-8595-ef2f5299a110",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e3cb80-d855-4bf7-8437-0e7cc981d17c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "714d3461-4e77-455f-af7b-ba8901d67114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726ce4a7-350f-4b60-ada2-64dd275a4da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c2738e-ffa5-480e-9998-226f90b8dd89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21451c4-1725-4ca8-b287-0ae6f0820c67",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54015512-f8de-4fd2-bba8-6cc19744f17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc661598-51f8-404f-9930-70ea9ec96401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7068a58e-3139-428d-9f44-0413c02f7268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a4bd1c-88aa-468c-a5c8-000909de048b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bada98-01f2-4936-8f4e-f3f80db89382",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4233a1f-f0a9-4a41-9325-7518faa20508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dc9ccd2-4765-4078-b36c-07f93418906f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2229c5-756d-4ad2-ae61-dd47109cc17b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe65601-fc0e-4e29-9577-a936b942c46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ef1915-81b3-4658-8271-b4e202aa94f3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a8dd86-ef05-438b-a0ce-aa7ca74781b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e62d642-e38c-4337-a3b7-abcdbfe47776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37247c43-d01a-41ce-828c-231b06c00153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9327e47-9b04-4886-a770-6f2d637dbbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fb9d45-0784-4411-b3b2-3da032728066",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8a54ab-4e4d-4356-b32b-ee912fadceba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0678f544-7fc7-4486-bd53-e72805e3bc3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6150ff27-100e-4358-9fbe-87794dd96d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9cc060-ec14-4d3e-8fda-5c59fef7dca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22628cfb-5636-4bcc-85e7-865b5f70daae",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691de175-6fd8-43f0-af2f-801ef678fd38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eefc051-fa80-4958-a809-e5549b911818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89871d41-d172-4b91-91e1-9f0b3e35c973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c623bd-bde7-43df-97a6-4816638c9775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b745f9a-a09b-44a5-b1b3-79a356c5ace8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe56572-aad1-434a-a4ea-663d7e489ee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5ac345-9980-405f-9f8e-fb7b858ff2a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3458455e-db14-4b6e-92cd-86f43abbfd34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3629d288-a3e1-4f1c-82eb-7e5dbe56906f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd988e30-c0d7-4e0c-b1f0-edfdec075ea5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b944b93-c87e-4cbd-8098-e29aba8370c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51fd7e49-a712-4229-ab3a-e2f0f50a4e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a06163f-9f91-4b3c-9311-b39350f06019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9b03d4-c6b6-4177-8aa6-011fb92fae91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246c884f-8a4b-4462-b2d4-ed2b50723ce6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ecb9c6-91d9-4530-b457-c979f8fde9b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2880f983-4212-4129-a702-44e112712582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39edf983-d3e8-41fd-bb22-8a9e7ea20577",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7795cc0d-4b9d-47c2-8243-d118640008ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c46b04b-d0bc-4b86-b0fc-dbe82c8c063a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db687e01-1af9-45e3-b7a4-4fd45297bdef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74b8fbd-4b22-41c5-99a3-ea1f59396981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5053362-faa9-4fc2-a434-97a48cb72f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c877f87-a78b-4549-9354-c923e88a940e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eab50d50-f991-4fa6-98c4-bea25296344d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b54c33a-6ae6-49f7-9a14-dfef7740d412"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1555a503-295b-45bd-8cdf-f47c256e77b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5af6ab9-72be-4fa2-9408-ab376ca8e64f"
                    }
                  }
                ]
              },
              {
                "id": "e4a8c11d-e1aa-4c74-849a-f10c73bf385d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20dcb4df-ffff-4020-8316-7f92266f9cd3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2045f7-9857-4b93-bf42-f5cad870d3be",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "791e681c-5b81-45fc-9430-9873992b2a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f52f843-8cb5-4cb1-9c9b-19256293c6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cffc6f7b-3fce-4b41-a00c-30d1b1af8b81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae63998c-d5cc-4d06-91c6-cd211ef32a80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2fe67be-d7ba-4766-8900-67b30ead1e5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9cededb-041a-482a-a294-08183dc569d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c3f64a5-17e2-40cb-9b0d-85e523ed228a"
                    }
                  }
                ]
              },
              {
                "id": "eaef4617-43c7-4707-abcc-fedb97f761f8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "34aa1452-c290-4203-a52e-27782e9645b2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3047718-8b40-445f-b6e4-82ce64ead2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ca4c0993-e691-4600-933a-1a1df568cffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268698a7-835b-4d2e-8f01-71dce07cefab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779e7083-1770-4b65-b435-edd8695ed1e2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4fd27509-145b-4e4d-b1d3-2186be87c9f7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f592b42-e100-4b18-b110-b2d36394951a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed62e8e6-4fd8-4c67-9505-3fc3a111c6bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d93deb23-8cd9-4a4f-99e5-b71cabebc26a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bf63838-4881-4b04-9208-0116a797d9d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9dd633cf-1a2c-4fa1-8213-c86c3658e777"
                    }
                  }
                ]
              },
              {
                "id": "34c18e68-2c5b-4e16-82f0-d5af649bb916",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e4204b9-5c9a-4166-b47b-f8540b60526b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4ead0705-618f-4b72-8704-03924dd83587"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "545a9531-9138-4007-99da-60605e063f2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5840cb3-62ee-4a74-9217-5694f0f63d93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe66c6a7-7907-4b66-b7bb-c88f9825ba14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ae68a62e-d2b4-4ec5-ab5f-39cbacca0be6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a870ffd5-84f2-485d-b504-4979a3a1c434",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6fabd24-0f23-4590-a93a-16945ee4e0f1"
            }
          }
        ]
      },
      {
        "id": "bcd21f7b-4c1b-457b-b4cf-1cf9a0b65d98",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1855093c-9f88-4d63-8de8-2c85cb963aee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b664c366-899e-45d1-9ec0-5c28979f19d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "818216f1-d053-4682-abb3-60f40f856223",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6e1790-9106-4726-9941-07d0d5db829a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "af47ccf9-812f-4c61-b199-5731f0397281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc343a5-a426-4d15-bf63-b9a567405980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "941e1d0d-9f8c-47b0-b284-4bd2b2927337"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "469ff9fd-23d7-4739-ac53-70e92178cb7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca49fbe5-397c-4c7a-b5d0-832f070ca10d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "736c5c15-c5d3-420d-ad01-335a5abec075",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a45a23f2-309e-4895-b8a9-75b222bea746"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebb266a4-dfd9-4fdd-90e1-b0975ed5ea49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b8a292ae-4b6e-436c-b1c6-af11d5c970a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5032d83a-9ff7-4616-a6d6-f4953edac846",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d6517d3-a5e2-4cdb-a2e6-ac88df04921d"
            }
          }
        ]
      },
      {
        "id": "1252a619-2569-4b2a-bed9-33e421aab3e4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ba73afa9-12d9-4bdf-add0-160d46d99056",
            "name": "Negative Testing",
            "item": [
              {
                "id": "596667e3-c3d3-4558-aae9-b23533ffbefa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8a00b9b-c06e-49be-a70f-050b4fba0067",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc09600-13c6-408c-85b0-d983362613d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64495baf-6a62-4c07-b456-e26a8ac93dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1a6ca2-a2aa-4932-9940-09aa1051a170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a84a105-3e5e-4abb-b88a-e7546169f13d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1b2c93e-aec6-47d6-b383-c1656aca9089",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df840d70-6c2d-4435-989d-a5c7639947b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dea3ec94-36f6-4ce9-8b9a-cf125e7b94ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3422112d-c567-4716-8e0f-bddbaef58fef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d0386e6-d0fa-4f7f-8da7-596d045956cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4200e170-ce99-4570-8db7-0be1affa4355"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d799f7c-e0f7-4b3f-807e-22de89f8f8e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bbbe4291-0649-4d5f-9dc5-fbb3d89d03a8"
            }
          }
        ]
      },
      {
        "id": "1707636f-691d-4015-8428-085c4a025447",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "541ccd39-82dd-4a43-88cb-c5d9372d736e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "70bf0543-03b9-4832-afdb-b94322187b29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce0d4097-6ab1-4d84-8cf5-fc692df56792",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a99473-8c1b-400e-a7bf-a6d56f680826",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f339af7b-0df4-4d18-b8fb-5d8e0cc7c9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d5dbf8-f012-4710-8f15-016993d75d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44f8d3ea-5d6c-47d7-8d6f-1b378ddef9f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47ca76ab-961b-46b7-a039-0e129b110ebf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81f46767-dad8-4bad-b52a-311e218c66cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1eb37c2e-1e68-4fcc-96e1-29b8a5eb46ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2fb713a-7894-4903-a7f5-e3d814dbe7f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d614df28-fa35-4fe8-a72a-9587f1afadd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c2652362-d0c1-4b65-bd00-2d78296f5687"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95ba0dc1-3cdb-41aa-9cdd-59a411e800bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c04eaee0-2c7c-422e-8360-27f8073e2eeb"
            }
          }
        ]
      },
      {
        "id": "f9c1f4e5-1b00-4450-ae00-eaa7e058bad3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c74caa9-0980-4d29-be3a-3d68164c10a4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2d1de35-35a2-430f-9607-58350b4b8dd7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "54af7dd2-621f-46d9-85ea-694dc59d5d36",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3e33ee8-be12-4392-a425-4c5203dcc1d3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "878e2728-754e-40ca-b3da-84eb8156fd8a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 137.9047619047619,
      "responseMin": 11,
      "responseMax": 11077,
      "responseSd": 843.2161731959536,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727743885337,
      "completed": 1727743928503
    },
    "executions": [
      {
        "id": "082f49d8-19eb-4d24-811e-3831a08e7b45",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "55cc75e2-e935-4afa-a75a-bc7adec76efb",
          "httpRequestId": "3bacec3c-5805-46c5-9fe2-17c7685dd5bd"
        },
        "item": {
          "id": "082f49d8-19eb-4d24-811e-3831a08e7b45",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5f5c3f66-7ea9-4e0b-8ed0-c1e5928f8847",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "5db23096-5893-433b-ae04-0da16628b61d",
        "cursor": {
          "ref": "c5e8c632-393c-4e5c-8b94-420e7bbd2bfc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8db17c43-d632-4f43-81bf-b7239887ae12"
        },
        "item": {
          "id": "5db23096-5893-433b-ae04-0da16628b61d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7c2ea73c-6c5b-48aa-ac67-1931b082acc3",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "00f5ec19-2a46-4d2b-9d6c-edc14661b78f",
        "cursor": {
          "ref": "419ce8ab-9d8d-4e1a-a282-9f605cf4c85c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "16293036-4a8b-4de5-9d17-43bc18afd83f"
        },
        "item": {
          "id": "00f5ec19-2a46-4d2b-9d6c-edc14661b78f",
          "name": "did_json"
        },
        "response": {
          "id": "0a030dbe-9bc9-451d-bf63-03111a5c500c",
          "status": "OK",
          "code": 200,
          "responseTime": 361,
          "responseSize": 3607
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9c08b4-a1d2-43e6-ad4c-696741533e29",
        "cursor": {
          "ref": "15a239e9-1eff-487d-8e5e-05ee416913bb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2b23e5e2-b601-4b72-841a-7065da9aae15"
        },
        "item": {
          "id": "2d9c08b4-a1d2-43e6-ad4c-696741533e29",
          "name": "did:invalid"
        },
        "response": {
          "id": "4ba23780-e248-4565-b39b-ff20dadd2809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9c08b4-a1d2-43e6-ad4c-696741533e29",
        "cursor": {
          "ref": "15a239e9-1eff-487d-8e5e-05ee416913bb",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2b23e5e2-b601-4b72-841a-7065da9aae15"
        },
        "item": {
          "id": "2d9c08b4-a1d2-43e6-ad4c-696741533e29",
          "name": "did:invalid"
        },
        "response": {
          "id": "4ba23780-e248-4565-b39b-ff20dadd2809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38d5a3a-10be-47b3-8ce2-f0dbb7c72e86",
        "cursor": {
          "ref": "37abb2ab-b564-424c-80b6-44639d9ac235",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5de063a2-5416-4337-82f3-830e4ccd875a"
        },
        "item": {
          "id": "b38d5a3a-10be-47b3-8ce2-f0dbb7c72e86",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "44741b4d-7add-40d9-8c76-5d17d48a68b8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2999ca-befb-4d85-a895-d7c00941027e",
        "cursor": {
          "ref": "43e029fa-b73b-41a3-a7f5-723f1c1ac30a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cebfd423-9d9d-49a4-93e3-bc3ef8529637"
        },
        "item": {
          "id": "eb2999ca-befb-4d85-a895-d7c00941027e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6fdc55f2-24f7-4cb1-8b75-ec39b51cc5e9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b73444d-e045-44ef-9cfa-fef2cce87168",
        "cursor": {
          "ref": "34e317dd-a60c-4985-9a6f-70a1fbfa1856",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3e6c4e00-a6d9-41fe-8b3b-9ea7632b269a"
        },
        "item": {
          "id": "5b73444d-e045-44ef-9cfa-fef2cce87168",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "51ded1e4-ec90-479d-aac2-5c9c36701379",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01872569-0709-433e-8be6-19e133248992",
        "cursor": {
          "ref": "dc4504dd-5a39-4dd2-b3cc-99a6e4d2b6f5",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eeec677e-6a25-4d22-8a5e-98fb3d2a72b8"
        },
        "item": {
          "id": "01872569-0709-433e-8be6-19e133248992",
          "name": "identifiers"
        },
        "response": {
          "id": "9ded6a73-bef5-43cd-be09-a23324718a26",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2b5310-256f-4b87-9175-4f9fc1aeca27",
        "cursor": {
          "ref": "497de544-36be-427c-acb4-99a6e520d878",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "82139dcf-c144-4a1f-93cd-d5fcc4a523ca"
        },
        "item": {
          "id": "ec2b5310-256f-4b87-9175-4f9fc1aeca27",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fb2cfea1-1926-4f7f-9640-45e48f053c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e645c6-a162-44b0-986a-5cd66e91ab7a",
        "cursor": {
          "ref": "421741e2-3b9a-44a5-90a6-f19ea7a68b0c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e0b29a09-d230-4840-94e8-5dabde93e531"
        },
        "item": {
          "id": "a2e645c6-a162-44b0-986a-5cd66e91ab7a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "095a711e-693c-43ad-87ac-360b85363a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3db2c0-0ca3-45ea-bd8d-c9b5fa55fc75",
        "cursor": {
          "ref": "ef1b4da0-0fbe-4dc7-9ef4-4e0f472f743c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2766733d-d87e-4d0f-874a-4d47b5020c73"
        },
        "item": {
          "id": "dc3db2c0-0ca3-45ea-bd8d-c9b5fa55fc75",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7c2e8990-4736-4e03-aba1-5d7d66000789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9221028-89ad-4e9f-a244-05c43c8b1e13",
        "cursor": {
          "ref": "bb0de61c-75a2-45d8-93c4-28360b62e1dd",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "06650318-bc8c-4f5b-b3e9-fa71b49ea403"
        },
        "item": {
          "id": "d9221028-89ad-4e9f-a244-05c43c8b1e13",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2d4b16ec-784a-478d-ad3e-3aeb25ccf020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc832727-1fc2-4edd-80f6-78e87a51324c",
        "cursor": {
          "ref": "4ef6265f-5c22-4311-91fc-004605ed811f",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d0768401-d10d-4ca7-945b-695f539d05aa"
        },
        "item": {
          "id": "dc832727-1fc2-4edd-80f6-78e87a51324c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6527938e-086a-4562-82a6-0639d116ea12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02577d9-8af6-41b1-a9cb-6f8e57f323a3",
        "cursor": {
          "ref": "d580398f-a255-4f84-9ee7-1ca596d9d18e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7f7a6608-c133-49aa-9cee-1bb8355c03c9"
        },
        "item": {
          "id": "e02577d9-8af6-41b1-a9cb-6f8e57f323a3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "be2691c2-41f0-441a-bd0a-1a256cdd5aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813f2e2f-ce09-4086-847b-fde520365cce",
        "cursor": {
          "ref": "61ca170e-2bef-483f-ab6f-661506bc4cee",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "22b1a71e-219e-455e-926c-84f92a79e7c9"
        },
        "item": {
          "id": "813f2e2f-ce09-4086-847b-fde520365cce",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c477e0df-a4cd-4e8b-9b83-6359e1eeec3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b25417f-bff7-4f92-a2b2-a69aa1c605d1",
        "cursor": {
          "ref": "c888b7da-4224-4eb5-a550-33943d10dc91",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "061fc5ed-505f-4a53-bd9c-be4f1aeedbe6"
        },
        "item": {
          "id": "9b25417f-bff7-4f92-a2b2-a69aa1c605d1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dc30f096-ff8e-4323-a31b-8369d1c27cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa916cd-a0a9-432a-a58f-699a0be3e960",
        "cursor": {
          "ref": "07cd88f3-3a95-4c01-a234-ba97cdb23c49",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bf4ca681-7ecb-43ca-a58a-9bd2d72229fb"
        },
        "item": {
          "id": "1fa916cd-a0a9-432a-a58f-699a0be3e960",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6030339b-4437-4fe1-b9a5-aa8fda7bc067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ba482f-e73e-470d-b1e5-63859485626f",
        "cursor": {
          "ref": "5e9040fc-33ec-4258-88ef-d631da5624f3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5bcd1019-9084-4cd9-b3e8-2eb6ac416200"
        },
        "item": {
          "id": "b1ba482f-e73e-470d-b1e5-63859485626f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ad1e8532-ac0b-4fc6-b894-3ea7321e9374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb8e026-b890-4475-a9f0-ee8573527552",
        "cursor": {
          "ref": "1be9ead0-a419-486b-988d-94cc836331c7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9cfc5431-d08d-4c9b-befd-1026f6bac258"
        },
        "item": {
          "id": "4bb8e026-b890-4475-a9f0-ee8573527552",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5ce6ac14-cecd-4b15-9714-4c7a2a3be503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffca8ee-5af8-4428-b788-67eb27ebfd08",
        "cursor": {
          "ref": "3ef308d1-835c-489e-a802-d9b9f7a38ad4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b3625229-872b-4c2f-ad50-a8d9edfdce8f"
        },
        "item": {
          "id": "fffca8ee-5af8-4428-b788-67eb27ebfd08",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "66fa6e05-6da4-4f5c-bd3d-cf4213d2d599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe9f1bc-3204-4f7c-b507-b79ff8336d58",
        "cursor": {
          "ref": "ee03a9cd-1092-4b86-a509-ae5c61319759",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e5ca9f0b-4e90-454e-957d-4c2099f66a52"
        },
        "item": {
          "id": "3fe9f1bc-3204-4f7c-b507-b79ff8336d58",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a1606e9a-f69e-40f9-9606-c5a144d9018e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1703ee86-135f-43a8-9d8c-b4b9e855f669",
        "cursor": {
          "ref": "b20dfdd4-1675-4357-8a75-db4a8a9b1ab5",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "abc6e094-0f99-4ffb-8339-f52654aeca02"
        },
        "item": {
          "id": "1703ee86-135f-43a8-9d8c-b4b9e855f669",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a1d76843-3a8c-48c8-9fc1-e9d66bcfbe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ac20bc-1cdd-440f-af52-5aea8e26667d",
        "cursor": {
          "ref": "2498809a-ce2c-4086-9b15-264f52a1d1f4",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4ff4fd12-34d0-4b8f-83e3-cc9d83e341b2"
        },
        "item": {
          "id": "02ac20bc-1cdd-440f-af52-5aea8e26667d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "43d251a6-6239-4e97-8c8d-397db16cd421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7b8e45-3c1f-40be-b7b4-face65d14dfc",
        "cursor": {
          "ref": "106266df-58af-4497-acc1-6c3d3666efee",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "69c04a37-9662-4ed1-97c6-1d88d290446d"
        },
        "item": {
          "id": "cb7b8e45-3c1f-40be-b7b4-face65d14dfc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "09e8c8bd-ca5f-404e-ace5-077c6d354c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0701446-8b3e-4294-95ff-7f60e57a77d6",
        "cursor": {
          "ref": "6736ea13-29ba-4bd7-93ac-9cad2859cf53",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "27106c52-5ff3-4e95-beee-523d56d64ca1"
        },
        "item": {
          "id": "e0701446-8b3e-4294-95ff-7f60e57a77d6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b7b96f70-3154-4ee5-bd85-4d24e071edf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e497dae-a5cf-44b6-bef6-7e680e45733f",
        "cursor": {
          "ref": "b298f5f1-b7b5-4499-b79f-0a7350f3e18a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9bab7898-b57b-4c82-a490-5fddabf357e6"
        },
        "item": {
          "id": "7e497dae-a5cf-44b6-bef6-7e680e45733f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b7a5a404-3d82-472c-980b-02e409cc0599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80aa794-7d76-4e04-991a-0aebaf8ed969",
        "cursor": {
          "ref": "74ff9895-3325-4422-a4e8-4706a2aab961",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "914421df-3adb-45eb-b395-ac69ba28b218"
        },
        "item": {
          "id": "e80aa794-7d76-4e04-991a-0aebaf8ed969",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "be179bbe-9681-4fff-b1c6-d59d72b9667d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b468e3-1665-4205-8ca3-6365f8b1bb29",
        "cursor": {
          "ref": "6087afad-1b79-479f-a957-3dad04e79b35",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c4fcfc85-106d-4785-94d1-75f4374df0bb"
        },
        "item": {
          "id": "58b468e3-1665-4205-8ca3-6365f8b1bb29",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "477935d9-5a09-4f8b-a21d-d16a8b169373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664d592d-6a16-44e3-a097-e49227ceb891",
        "cursor": {
          "ref": "eaa09c8c-71ca-42c7-a829-a277ac4b1163",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "47e1c142-8689-4c99-9051-7d6c3fc24607"
        },
        "item": {
          "id": "664d592d-6a16-44e3-a097-e49227ceb891",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8b0f0bdf-dd42-45be-9dac-0228c73d47ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a323b34f-c209-4a58-ba53-887d77a2a69b",
        "cursor": {
          "ref": "a4dd144b-9d81-47c7-b820-78b568a06778",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cb289fbe-2b93-4c90-80ba-094fb551e4d4"
        },
        "item": {
          "id": "a323b34f-c209-4a58-ba53-887d77a2a69b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "17f55d46-c81f-4745-b841-7e667ff9aa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487a9a29-f368-4e21-9a98-04ba1833a33e",
        "cursor": {
          "ref": "a9fd4f15-9d20-4a30-b4ae-cff460678066",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5e7bccd0-de69-403c-b3fa-4b69aabc3477"
        },
        "item": {
          "id": "487a9a29-f368-4e21-9a98-04ba1833a33e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a1ba63ce-4e52-4091-8de6-3e0f8f07ad66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa368325-9738-4126-b47f-56ebd149cf79",
        "cursor": {
          "ref": "dcbdd483-686a-4164-9bf7-4c083e741d78",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9ca4a1e1-b7b5-44ab-b0d4-4d0735c07532"
        },
        "item": {
          "id": "fa368325-9738-4126-b47f-56ebd149cf79",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "837d62f2-d536-47be-9bf1-04b2f0d58d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e05320-a4ed-4ae3-8e8d-d6699238e005",
        "cursor": {
          "ref": "4873ae91-5124-4527-ac83-d70ece4f87c9",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fc47197a-0c46-40de-9e7f-652f1f3fb1fc"
        },
        "item": {
          "id": "e4e05320-a4ed-4ae3-8e8d-d6699238e005",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5b2c014f-b078-4348-bbd6-6258185a3df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc64119c-bba5-4e8f-8af5-73fdeac03c90",
        "cursor": {
          "ref": "5f22d229-e078-4028-94c1-3daeaaa35dc6",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "db4d7824-c4e5-4b48-854c-1c50d0bbcf00"
        },
        "item": {
          "id": "fc64119c-bba5-4e8f-8af5-73fdeac03c90",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "052d4a72-7a22-4be6-9b7b-1af05ee1488e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcecc83-714a-4b67-845d-c3ae8e0ce562",
        "cursor": {
          "ref": "45391692-99e1-4b9f-ba63-190797dbfa87",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dde63cd1-6622-4567-8952-4d9cb257a4c5"
        },
        "item": {
          "id": "cbcecc83-714a-4b67-845d-c3ae8e0ce562",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3ce9c286-b44e-4d90-900a-09e6aa6e0b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90292915-8c12-430b-8514-a1be1502ecc6",
        "cursor": {
          "ref": "a38263cf-ffc7-4ed1-a2eb-5d7b826d3efa",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "251d2957-abb4-476c-ba4a-e13169fe2905"
        },
        "item": {
          "id": "90292915-8c12-430b-8514-a1be1502ecc6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0deb4ed9-0fe3-439d-9151-1909640f1b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eda5043-15c6-4800-be82-cf589ad2e4da",
        "cursor": {
          "ref": "ad3daa3d-ac94-43bb-b5b5-dd2c9fac8c2e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3fbd7a85-b7c8-4439-88db-6452e433fff3"
        },
        "item": {
          "id": "0eda5043-15c6-4800-be82-cf589ad2e4da",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a264d11b-e5ff-4569-8beb-0ca5a7b0e581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5ace325-39cd-4bd6-9828-a67f78145ffb",
        "cursor": {
          "ref": "2b5a0c3a-efc5-435a-9fb6-2f7b9def2244",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8fa3061d-f9e9-4b3e-8e02-7d70f1ce2294"
        },
        "item": {
          "id": "c5ace325-39cd-4bd6-9828-a67f78145ffb",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cecfdfc5-e3e2-460a-8220-5e41056f3b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b30ca7-2410-423d-b4f5-d4c6d98b9ce4",
        "cursor": {
          "ref": "7478dd08-cce6-411f-9447-bab668436111",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "07b5f6ea-1638-4580-af63-b02f9c08e167"
        },
        "item": {
          "id": "14b30ca7-2410-423d-b4f5-d4c6d98b9ce4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1b9ed6e4-8690-4529-900f-b90612408f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcee4cb-b3e8-4b75-867e-e9843c8b0056",
        "cursor": {
          "ref": "2acc2b8f-5eb9-40e9-9fce-6bdaecff2697",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7ef4fb98-5a89-4c1f-b74b-8d4b46e632f2"
        },
        "item": {
          "id": "adcee4cb-b3e8-4b75-867e-e9843c8b0056",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7b55cd50-eab4-4333-acc6-91d62c5ad632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96964239-2793-45ad-9a1e-e6dea126587f",
        "cursor": {
          "ref": "99dcb4db-b108-4c5e-892b-5fea277c01a1",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f736a048-c198-4262-a3f5-04fc90275d08"
        },
        "item": {
          "id": "96964239-2793-45ad-9a1e-e6dea126587f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8e3959b2-109a-4ca2-9303-c437112a3192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7223615-5d54-4419-9ca6-13dc75b9bb59",
        "cursor": {
          "ref": "9ec2a95b-95ab-43d7-b323-3205a033e825",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3bfd6872-60dc-45ea-ac51-9a8a5d687092"
        },
        "item": {
          "id": "c7223615-5d54-4419-9ca6-13dc75b9bb59",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0b2af398-d4d2-4cad-a1fb-4adce7a7f30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de97b7b-2c8a-4b3e-a050-480d2777d2c7",
        "cursor": {
          "ref": "b73609f4-efd1-4138-aab3-0d0e28cc056c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9e241409-dfaf-46bb-8fd5-1e70bb867651"
        },
        "item": {
          "id": "3de97b7b-2c8a-4b3e-a050-480d2777d2c7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "47833496-7e45-4308-8ae4-b863232a68d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8091999e-fedf-4d26-9d37-defe2d903acc",
        "cursor": {
          "ref": "754cb87a-1239-4dc0-bd38-4f744447f1dc",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "65daf6d4-149b-4459-b48e-4a19e9782a99"
        },
        "item": {
          "id": "8091999e-fedf-4d26-9d37-defe2d903acc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6396d6d7-da4f-4362-8586-fef8961c6cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb379f5-7fa3-4048-ab64-3ea344e0dc30",
        "cursor": {
          "ref": "78f5f14f-243d-415e-981b-89f21c75103f",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2a597a86-6f54-47e5-bd7c-b73c7b757086"
        },
        "item": {
          "id": "0bb379f5-7fa3-4048-ab64-3ea344e0dc30",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d4993111-77c2-4733-8f3f-863e778c06c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6aa35c4-b4e4-498f-b223-39eb162deac2",
        "cursor": {
          "ref": "25e9692e-7bc1-417f-bc53-7f871673b5c0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1dce7901-221f-42eb-aae1-40ec4051c4cd"
        },
        "item": {
          "id": "d6aa35c4-b4e4-498f-b223-39eb162deac2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fee0faa6-c5dc-434d-9ea2-5c1a20fd419a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5e1294-6275-483d-9073-1942196a22e1",
        "cursor": {
          "ref": "53197b28-fe4b-4f13-8e82-9a7a5c85e73f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5fa44bcc-8c67-4364-adcf-e7e544913120"
        },
        "item": {
          "id": "de5e1294-6275-483d-9073-1942196a22e1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d329de85-6c09-413e-9f3c-3866ff48c184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ceb5d4-a54a-4dff-8f00-5563cf24184f",
        "cursor": {
          "ref": "f484a551-abd7-4660-b60e-75022df3b5d0",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "91b0c23f-32a9-4f88-8fe7-81aaf1e1f90a"
        },
        "item": {
          "id": "11ceb5d4-a54a-4dff-8f00-5563cf24184f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2e452267-365f-4429-9ee9-6bb970f89e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f65a327-6fdf-49f5-b5ad-06ccd0d5914f",
        "cursor": {
          "ref": "a844475a-51b5-4230-87eb-3e2ec76bdb2f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "db984778-9dde-4b14-91ae-e5d1d513183b"
        },
        "item": {
          "id": "1f65a327-6fdf-49f5-b5ad-06ccd0d5914f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7559f56b-cd82-4c7c-885f-c4ffc20e6555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a7580e-7d16-4974-a454-8034cd5b0bbd",
        "cursor": {
          "ref": "8d5ae6d9-6c01-4177-ab06-c6f199624756",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d5a3d55d-00c9-4127-af6d-faf0b11e3b31"
        },
        "item": {
          "id": "94a7580e-7d16-4974-a454-8034cd5b0bbd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c66ec539-9d5e-41e8-979b-bf8ece9ccac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c51dca-cb72-4220-b7bf-2b51b542c8b8",
        "cursor": {
          "ref": "bcdc0e17-7a8b-46ff-b36c-c2e8a8554e7f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0aee181c-d8e7-44dc-b547-eac533c5ae99"
        },
        "item": {
          "id": "94c51dca-cb72-4220-b7bf-2b51b542c8b8",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bafaa631-4550-4f0e-9502-7da655424fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98248c02-6148-47d8-a676-33e979fe8823",
        "cursor": {
          "ref": "f56b618b-d4ff-4bc2-8835-871816eeb436",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "02208d6e-12f3-49b3-a4a0-9600ba8da5c0"
        },
        "item": {
          "id": "98248c02-6148-47d8-a676-33e979fe8823",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1135964e-f294-494e-865e-428e2433e387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dee728d-0d2a-41c5-b494-a5ecd8c6d61d",
        "cursor": {
          "ref": "4b154a4f-08e2-4018-8966-b94ca6916e7f",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1bd72724-a72c-44a4-abf5-18abd1a951ea"
        },
        "item": {
          "id": "3dee728d-0d2a-41c5-b494-a5ecd8c6d61d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6a6e11b9-6276-45d8-a69a-b55de39ac549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d0dff5-8a96-467e-997d-2d447c4280a0",
        "cursor": {
          "ref": "7ecc25ef-2eb7-4a5e-abc0-64397f0c2860",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "03255393-bc9e-4704-9ff7-4b9444131870"
        },
        "item": {
          "id": "35d0dff5-8a96-467e-997d-2d447c4280a0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "82e7895a-2f6b-4769-a15f-31c0b642f3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c21c571-4855-4c29-8575-066132b91547",
        "cursor": {
          "ref": "6e704d64-6787-468f-a73f-4e12f334a48d",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c127edf4-7a6e-4bfe-a1c9-3b5a459442ce"
        },
        "item": {
          "id": "2c21c571-4855-4c29-8575-066132b91547",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5c9285e9-b52f-4b3e-905a-00f06be93ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f66f19-b427-440b-b8e5-aff4572bbce8",
        "cursor": {
          "ref": "4efc99e0-125f-4804-b10f-a1fe6ce14300",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3e1d9537-68ae-4f36-8258-c5eca6a30ddd"
        },
        "item": {
          "id": "78f66f19-b427-440b-b8e5-aff4572bbce8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "51b17f7d-973f-44e0-9a19-2a11ba37c52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6d4b7d-cb80-4090-a0d6-7a6b068c4b02",
        "cursor": {
          "ref": "80adadc3-e383-4694-825f-f3fe3681811d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "05e64001-f7e7-450d-8614-e41a61554040"
        },
        "item": {
          "id": "cf6d4b7d-cb80-4090-a0d6-7a6b068c4b02",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2510fece-0e34-4784-bcab-74da3daf3464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc4d981-0521-43ea-937e-66822a81e601",
        "cursor": {
          "ref": "84b5da21-c95b-4a33-976a-b10f581c16ed",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "de4d7235-7ac8-46aa-a8b1-745c33390a1f"
        },
        "item": {
          "id": "7bc4d981-0521-43ea-937e-66822a81e601",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f465c50b-490a-4cc0-921e-7b194dd1e4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29097281-c657-432a-8b1e-b761daa30019",
        "cursor": {
          "ref": "4fd6cda4-fe92-455c-a640-a0c915e1373f",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "03069cdc-a1a2-44ab-a5d6-5e6abf94241a"
        },
        "item": {
          "id": "29097281-c657-432a-8b1e-b761daa30019",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "81545525-2496-46ac-95c2-e727f1c23c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c09b32-5f72-4a4a-bffa-1964503f577e",
        "cursor": {
          "ref": "5140f9fa-dfe3-4772-8fb7-8dc4dc5d5390",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "722896eb-4fea-4630-8833-e1ea2e15c1ce"
        },
        "item": {
          "id": "02c09b32-5f72-4a4a-bffa-1964503f577e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c13abaee-84bc-43ee-b5c9-559a5acb8b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a08aef3-7894-41a9-9e7b-9f00f596ab39",
        "cursor": {
          "ref": "e5eece12-4be4-40d8-932f-a379ae7a8d45",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "76bffad4-b094-431a-af0d-577e27d25904"
        },
        "item": {
          "id": "8a08aef3-7894-41a9-9e7b-9f00f596ab39",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "762a660f-184d-49c3-97cf-88d02abdabcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fe24df-f64e-4c7e-9ff5-0ded693ec17a",
        "cursor": {
          "ref": "766dc39d-ddbc-4084-bdca-47eeb2b396f6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "94e5677f-9ec6-4622-b2c6-c2bb021bbb21"
        },
        "item": {
          "id": "90fe24df-f64e-4c7e-9ff5-0ded693ec17a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "73271624-82a2-4527-82c3-6c6720a48e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b6533d-33ac-4f7d-adad-7f29c9d03a13",
        "cursor": {
          "ref": "96b26d02-4f26-4bd6-964a-c577e84b73c0",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "20dd1d52-56ee-422e-aabc-823ff8015edd"
        },
        "item": {
          "id": "a5b6533d-33ac-4f7d-adad-7f29c9d03a13",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a61cd261-d042-4bcb-b45c-d80b8b430f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe35068-1278-46e0-9dcd-be250f8d7797",
        "cursor": {
          "ref": "248978e4-5e59-4d45-ad0e-05b2f081b496",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1f01fe55-55ba-49b2-8a0d-ff76abbebbfa"
        },
        "item": {
          "id": "2fe35068-1278-46e0-9dcd-be250f8d7797",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "16691150-76ab-45d5-912f-5f357c31d519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8f8b25-ef38-4877-8a20-2e32d2d4631f",
        "cursor": {
          "ref": "fa7c6ff3-1ca9-4625-ba54-b47e80aed38e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1b6c1b57-dd39-4027-91c2-cdacf0fb7484"
        },
        "item": {
          "id": "3c8f8b25-ef38-4877-8a20-2e32d2d4631f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "81cc3aa3-9120-4d79-bbd3-53f087f36bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b030f7a-7b96-44eb-ab8e-354f618d14f4",
        "cursor": {
          "ref": "b91ff1cf-a5bf-4f13-8da5-9bbc9049db3e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bef91cbc-ee40-4563-bdc2-975a9e59e08d"
        },
        "item": {
          "id": "5b030f7a-7b96-44eb-ab8e-354f618d14f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "698853e8-4e38-4864-ab88-b85fcb57554e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264fc022-e797-4622-8f09-57d52928c98b",
        "cursor": {
          "ref": "818f0795-fc98-47a4-bd4b-faa13865ae2a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5fe33aa4-acfe-47d6-b652-d5f11baf346c"
        },
        "item": {
          "id": "264fc022-e797-4622-8f09-57d52928c98b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "54742dc7-5f5e-4f19-99af-493893a6fe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fc5212-7071-4670-8331-6f10601ec511",
        "cursor": {
          "ref": "c2a522c4-a037-49f2-9363-b9fea84551f8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5846b462-20f3-4923-9455-c646d5462c86"
        },
        "item": {
          "id": "e4fc5212-7071-4670-8331-6f10601ec511",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fd167d52-4d67-4bca-8341-70885a42ca75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d57c51-95f3-417c-969d-348a56e88bff",
        "cursor": {
          "ref": "a51fa571-5405-4f3e-b186-2102764639d7",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8fa9ce7c-5554-43d6-9449-0b9db1954908"
        },
        "item": {
          "id": "11d57c51-95f3-417c-969d-348a56e88bff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1a88cc65-8643-4ad6-8cb9-150ee1d2331c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313f756c-331f-4b8f-80e9-0bf7b780effa",
        "cursor": {
          "ref": "ff85cc47-19f2-47ed-94bb-5a70f4ee6465",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8c405daf-aa34-41d8-8b91-e967f3e168a5"
        },
        "item": {
          "id": "313f756c-331f-4b8f-80e9-0bf7b780effa",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "892569b9-f284-465b-bc31-8b712d5cc5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7746c5fd-085c-4d07-8016-36b80ab394cd",
        "cursor": {
          "ref": "a845af45-83c1-4658-a265-53fdeedc3508",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5e6fb787-64ca-4b7d-9175-0c1e4068359a"
        },
        "item": {
          "id": "7746c5fd-085c-4d07-8016-36b80ab394cd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "89e4b78e-80d6-4375-8438-227ec0478270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e70476-01e2-488a-aa1f-4494b0fc8ac4",
        "cursor": {
          "ref": "2e8d6e4f-b2ca-43c2-bb94-dd7c92ff37c9",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d2aea119-9f9b-4d58-809c-7b0830ebe1f3"
        },
        "item": {
          "id": "61e70476-01e2-488a-aa1f-4494b0fc8ac4",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "36a515e7-e2d9-4eb6-a789-4a94034d98bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970a7c63-ec0f-4f63-bf56-3b5d5e097b14",
        "cursor": {
          "ref": "847d4496-1c50-41b1-b390-009a7f16e7f1",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0d16282e-cc35-4cbd-8c5b-73998a03de6e"
        },
        "item": {
          "id": "970a7c63-ec0f-4f63-bf56-3b5d5e097b14",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a909d144-092c-46e3-9979-f2e8a62239be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7de4b55-8921-440f-81ad-4e543c5bb219",
        "cursor": {
          "ref": "f9a53a18-288e-4a41-ae19-82b084a75b55",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b715f384-2915-45ad-babf-ad59c3636c7d"
        },
        "item": {
          "id": "a7de4b55-8921-440f-81ad-4e543c5bb219",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3be93b92-2fe7-4fd8-afda-75da3695e0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e00ea02-7a58-4ac5-8dce-d833ec1de1e9",
        "cursor": {
          "ref": "72d0ee6b-a769-43d6-8440-db5e11e91121",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0687c177-ed4c-4ef2-b8fc-25de320a188b"
        },
        "item": {
          "id": "3e00ea02-7a58-4ac5-8dce-d833ec1de1e9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c8a87757-d0c9-4ff3-bc4a-3c27141842cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c1363c-985a-4d9e-82c7-32ccddbcc667",
        "cursor": {
          "ref": "2cb2ce7c-ae9a-4328-adb5-bb22d1a53493",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4f2471e7-a77f-410f-869e-73dc986f8e93"
        },
        "item": {
          "id": "86c1363c-985a-4d9e-82c7-32ccddbcc667",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "895142c0-7636-4ee1-be06-34bc04626cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99a5966-b66a-4aaf-95b1-654461e3ff17",
        "cursor": {
          "ref": "a330101b-c8e3-4633-97e5-a0ca9b34e4fe",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ed4a0e25-f1f3-4589-a43b-f3d6c22fe098"
        },
        "item": {
          "id": "e99a5966-b66a-4aaf-95b1-654461e3ff17",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "41734b60-cdad-4f1a-91f4-c5d312c03bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7514e37-82fd-4188-95f4-70a8ad281d10",
        "cursor": {
          "ref": "9eaaff1c-af86-4ae0-8753-4c8482358266",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a68c5738-4310-49f5-ad51-4107cc9df75b"
        },
        "item": {
          "id": "f7514e37-82fd-4188-95f4-70a8ad281d10",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b7cbb707-61e8-454a-b1d9-b4066902caa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb9f51b-df7f-4c8f-9f00-98d7de6ce521",
        "cursor": {
          "ref": "c015e4f8-00c6-4fef-ac26-c386c1aa2643",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f0a481c5-da28-44bc-9699-ffa3f81f7319"
        },
        "item": {
          "id": "bdb9f51b-df7f-4c8f-9f00-98d7de6ce521",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "25bdc3de-6452-4ecb-88cc-29466d91d560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7f255a-d262-4e2f-b51b-acc77821e3d5",
        "cursor": {
          "ref": "0e7dda13-e6b3-40ef-8ef5-a4200d061e7e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "562d7648-c65c-4804-9f09-65cb27ad88bd"
        },
        "item": {
          "id": "eb7f255a-d262-4e2f-b51b-acc77821e3d5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "382105bf-8b25-4b39-ac0b-45cfdc43b182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b93c8d-59de-45bd-ae56-d437ac1ac1e4",
        "cursor": {
          "ref": "a14578a7-d8b0-4ba2-8718-889e8ab4875b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9202275d-11da-435a-a668-ea36b9f19a79"
        },
        "item": {
          "id": "50b93c8d-59de-45bd-ae56-d437ac1ac1e4",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "01dd3541-075a-45cc-a5aa-bb5cd3b78372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2782fc6a-8e6d-4604-959a-eac38c4507fa",
        "cursor": {
          "ref": "643afbe4-a52b-41f0-a890-8df535922565",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ae4453de-5a83-44ff-bd7d-19294f7f6eac"
        },
        "item": {
          "id": "2782fc6a-8e6d-4604-959a-eac38c4507fa",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "41a85d4c-c766-46f4-b85b-c483109bedc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee9e6cd-1c59-475e-bc06-ba35d647c2f0",
        "cursor": {
          "ref": "c1f57be1-8353-43f6-99ff-b18e06b93396",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6db75236-afe6-4841-a41e-d8881726a5aa"
        },
        "item": {
          "id": "0ee9e6cd-1c59-475e-bc06-ba35d647c2f0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "81b28c19-de08-4034-a5d0-587425dfc8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4ccc69-d840-4fc9-b004-b511abafd543",
        "cursor": {
          "ref": "311b8bb7-e3e7-4960-a012-9c8bf88f1c28",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e9a8bac4-45d5-4a9e-a945-4f074f86f54e"
        },
        "item": {
          "id": "bf4ccc69-d840-4fc9-b004-b511abafd543",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7fd32585-9cdf-454f-8e8b-bb4ae110b32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105fc8be-99af-4265-bdc0-7a0f2f9ee601",
        "cursor": {
          "ref": "a0622a39-e571-4f90-bf75-d4e7371acd71",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "aea0652d-071b-4c99-b43a-63a5dc41ab72"
        },
        "item": {
          "id": "105fc8be-99af-4265-bdc0-7a0f2f9ee601",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d1f75a32-a485-4383-9495-96bad4e90d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2528bad5-b292-41c5-980e-72747fc435ab",
        "cursor": {
          "ref": "bed1f138-b622-443b-976d-f45cb5f36370",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "11b8527f-8aa4-4747-b5de-d2131b673da9"
        },
        "item": {
          "id": "2528bad5-b292-41c5-980e-72747fc435ab",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4168a25a-0dbf-46cc-af50-8ea64bd0387c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7580ed15-4f47-4419-b87c-54e91b8f90f0",
        "cursor": {
          "ref": "7867b145-6db0-41d8-ad98-8e2a48b2886f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "20e08394-a0f0-4fa5-ac3f-26cb88a2ca57"
        },
        "item": {
          "id": "7580ed15-4f47-4419-b87c-54e91b8f90f0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1f5219af-4327-4849-8594-c0746eb37e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6fe9cb-2678-4a5a-8d1f-5d28cb1bf60e",
        "cursor": {
          "ref": "6d489209-7f4e-48d8-b74c-298d169c9956",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2bcdd793-ba3f-4e2e-a863-df43c349640c"
        },
        "item": {
          "id": "7b6fe9cb-2678-4a5a-8d1f-5d28cb1bf60e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2de2a234-9611-442d-9101-2c3889345a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f0f567-7a08-4361-8bc5-49846d1a520e",
        "cursor": {
          "ref": "094d266c-1f11-4594-8d2b-4f809d5cda3e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5ac6e7f0-000d-4b07-b562-b9c66a17c541"
        },
        "item": {
          "id": "b3f0f567-7a08-4361-8bc5-49846d1a520e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "59057fbd-dae2-4346-b133-94d7c44649ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daca1b47-32d5-4272-9539-2af1bafa4c73",
        "cursor": {
          "ref": "9beb628e-4079-421a-9a8c-90651989314a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "82b235dd-820b-4aaa-ab90-c41856df3fa8"
        },
        "item": {
          "id": "daca1b47-32d5-4272-9539-2af1bafa4c73",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "99fb28a9-4480-4ab4-82fc-57f77c47fdcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81872156-0aa7-489b-8678-fc8fe54da31c",
        "cursor": {
          "ref": "fa51ce54-372f-4f35-b303-bba5b883214e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9f910c44-8892-4ac5-99b6-81c903c17b05"
        },
        "item": {
          "id": "81872156-0aa7-489b-8678-fc8fe54da31c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a01ab92b-b2ca-4bcb-951e-4240815b66f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04206b9-2e91-40ba-90f0-efae4174e27d",
        "cursor": {
          "ref": "0df633bd-01a1-46ae-b1c6-61c254868429",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1a2e2f00-1989-45a1-8f03-937773596df1"
        },
        "item": {
          "id": "d04206b9-2e91-40ba-90f0-efae4174e27d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0087aef4-c994-442f-9630-a487156e6314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bf3beb-df6a-4cc5-b0d8-7a190db69504",
        "cursor": {
          "ref": "4cb8b0b5-0ad1-4363-95ba-a2d06718d85f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0d3600a6-24fd-40ba-91f4-b468ad0e29b3"
        },
        "item": {
          "id": "f4bf3beb-df6a-4cc5-b0d8-7a190db69504",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1f646afb-b7c8-4d0c-866d-b2949cb683ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47629f0b-b970-4591-aeed-380786e0337a",
        "cursor": {
          "ref": "99b718dc-dd78-48b9-b3c6-99899b094787",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "def117d9-f86e-411e-b33a-f79519bf6f80"
        },
        "item": {
          "id": "47629f0b-b970-4591-aeed-380786e0337a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3b18854f-0611-4065-be8e-55ebeffc6987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e020594f-1ee9-4ca9-bacf-513f45062f7b",
        "cursor": {
          "ref": "5c1d2270-aa4c-4c72-b209-df07dc698b3c",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7269b847-060c-4d3e-a665-74a48802a71b"
        },
        "item": {
          "id": "e020594f-1ee9-4ca9-bacf-513f45062f7b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "194f1da1-c66f-4de9-a5e0-e55372ffe818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10feb6ea-22c5-401d-b45f-67a8745017be",
        "cursor": {
          "ref": "47751256-62d4-4255-a640-c89260305d08",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0d769d18-b1ff-4116-bdf3-ac524359e105"
        },
        "item": {
          "id": "10feb6ea-22c5-401d-b45f-67a8745017be",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c6592b3d-5376-4005-9813-849b1b725409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dcda1f-97da-48a9-ba30-a557a5073ee5",
        "cursor": {
          "ref": "34677bbf-150e-4231-a0be-6acb8c1f311a",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "07022765-12f1-4439-991b-0f21f4f483f9"
        },
        "item": {
          "id": "41dcda1f-97da-48a9-ba30-a557a5073ee5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c3fd1689-3cb1-4144-8040-af790881d9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c851e16e-b3e8-4502-a93c-21b19a995af9",
        "cursor": {
          "ref": "b648d9ae-94bc-4c97-a15b-676e53a9d1b2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "af0bd4ac-f1de-436f-8055-6892826056f4"
        },
        "item": {
          "id": "c851e16e-b3e8-4502-a93c-21b19a995af9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9fe3f4f4-10e0-4f85-8669-3bd091d7633a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71501080-76ed-4637-a553-267136bb0053",
        "cursor": {
          "ref": "8bcb5494-42a0-49f2-8bcc-eb689a90eb8d",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "80b2436e-8d15-4e54-b40a-d1233490933d"
        },
        "item": {
          "id": "71501080-76ed-4637-a553-267136bb0053",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "09c0f386-6d83-4988-8827-a626a1aa03b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d9f04f-1033-4b4f-ab9e-79d22ceeae82",
        "cursor": {
          "ref": "4e904536-ecb9-45d5-ad85-28a377fb9cc5",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d5143679-402a-4c2b-b560-5e5cb0ace8d3"
        },
        "item": {
          "id": "b7d9f04f-1033-4b4f-ab9e-79d22ceeae82",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "52ada69e-f07c-4857-a9d5-a43e3123a146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75af237-a463-46ce-9801-755485180e6b",
        "cursor": {
          "ref": "58db7f32-8779-455d-a5a9-6b1f3f15e65d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "10a6686a-4700-4ce9-9fa0-1b1ca1d60e5a"
        },
        "item": {
          "id": "e75af237-a463-46ce-9801-755485180e6b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dbfd1bb5-27d6-49ef-8871-993b19f1cc3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb12b142-ec8b-4226-a22b-59e54ce0611b",
        "cursor": {
          "ref": "6a5f42e2-ab00-4d07-b556-9c96c7dc5693",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "936c2ada-68a0-4add-a26d-4cb3da150b6a"
        },
        "item": {
          "id": "cb12b142-ec8b-4226-a22b-59e54ce0611b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "352d8853-b1fc-471a-be04-195879c8c7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bbec9bb1-9b2b-40fc-a628-ee34321b453c",
        "cursor": {
          "ref": "95f7cf4b-5e13-4e1f-b2ad-83e279240ba6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9a81ba99-8b84-4f23-a53a-c27fe76310ad"
        },
        "item": {
          "id": "bbec9bb1-9b2b-40fc-a628-ee34321b453c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bfa7c40b-d07e-49ec-83a2-0c46984c4891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "51382b10-f844-4ea7-a01a-91ab3c98f50a",
        "cursor": {
          "ref": "9ea34ac3-a9fa-4381-91d7-3233a8bc995c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "23b64972-81ce-4dac-9e22-bdcb348558d3"
        },
        "item": {
          "id": "51382b10-f844-4ea7-a01a-91ab3c98f50a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0ffe79dc-9099-4c67-924d-c64f49232e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6b7277aa-492e-4496-b85c-d9d1b8948361",
        "cursor": {
          "ref": "2e6b9e73-72fb-4742-adaa-f6006dd9992b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bfc1a99f-700a-4fee-8a4b-eb82b3587a96"
        },
        "item": {
          "id": "6b7277aa-492e-4496-b85c-d9d1b8948361",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "858c96cd-2902-43b1-b24a-1bac4fefe811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "44f716e0-a523-4c0a-a83c-051173ccb132",
        "cursor": {
          "ref": "c102e089-e420-42a2-a336-36d32f8f63ab",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "432441b8-b42c-4f3a-a63f-1735522c47e4"
        },
        "item": {
          "id": "44f716e0-a523-4c0a-a83c-051173ccb132",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cd23e057-c6ad-4e5e-a064-cad15ce42bb0",
          "status": "Created",
          "code": 201,
          "responseTime": 11077,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05c3b63-26df-44d2-aff7-bba1edd9d60e",
        "cursor": {
          "ref": "12070fd2-5f08-476a-a264-043ec176c08e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d4ead122-bb48-4f13-97f6-14e38d231bcb"
        },
        "item": {
          "id": "c05c3b63-26df-44d2-aff7-bba1edd9d60e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4fcb454c-26b1-4f4d-b1ed-c6fb2ee5709d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3f078faa-89e8-4f00-a185-6868eb223ba4",
        "cursor": {
          "ref": "bd1bdfbb-adcc-4eef-81d4-bebc94feae07",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "793a3230-0521-4ae1-b2c8-a05425cbe422"
        },
        "item": {
          "id": "3f078faa-89e8-4f00-a185-6868eb223ba4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "42c83043-dac8-4a00-9f76-ff9b6812a9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a88d5373-5eef-4505-8fc1-18cae1ed72d8",
        "cursor": {
          "ref": "2ef213a5-df67-4721-92e8-bc111167c2e9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8b0b5428-c427-4962-8787-3e46e497be4c"
        },
        "item": {
          "id": "a88d5373-5eef-4505-8fc1-18cae1ed72d8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ed97d9c7-8472-4e6e-8269-f39c6c7e291e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6540c8-b5e5-4925-a6dc-be7ad9287f56",
        "cursor": {
          "ref": "5d68cb25-1e98-4441-aa07-39554bd4c793",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7baa458d-be33-450c-860a-a187ffb1f9b8"
        },
        "item": {
          "id": "df6540c8-b5e5-4925-a6dc-be7ad9287f56",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "28a8a303-bf68-4ad6-8406-1c42e9f909fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f36d70-d24a-466e-87b1-05216b39b7bc",
        "cursor": {
          "ref": "babf74eb-9b59-4372-a2c4-c84162246674",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "658ae164-9785-47f9-b0b2-6944a1d405a5"
        },
        "item": {
          "id": "06f36d70-d24a-466e-87b1-05216b39b7bc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3d4907d0-fffb-491d-8cb3-2da40453cc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99d3dec-877f-4db9-892d-2abb84526aef",
        "cursor": {
          "ref": "bf46b43c-16f3-453e-9f2d-c244f18bfdc3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fa472031-5728-4ae2-9541-ce8e8290f088"
        },
        "item": {
          "id": "b99d3dec-877f-4db9-892d-2abb84526aef",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "52763a1f-9294-405f-bb88-19e98d3fcd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907d45b1-5176-4fbc-8eb7-9818cf1cf777",
        "cursor": {
          "ref": "2e9c99ef-5162-4c3c-b6cb-0c8773152505",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2ca034bc-cd5f-4e23-8572-eec16751dce0"
        },
        "item": {
          "id": "907d45b1-5176-4fbc-8eb7-9818cf1cf777",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6bfab154-9cb2-4510-910c-1d7d26a0f915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df87d0a4-03bd-4586-aade-ac56cb102255",
        "cursor": {
          "ref": "595da5ce-44e1-45de-85c6-ee978961ad00",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "47a25ada-4e91-4d87-92ae-db769038d3a9"
        },
        "item": {
          "id": "df87d0a4-03bd-4586-aade-ac56cb102255",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f66c755a-e443-4a37-864c-52a45f64a35e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1ab5e7-5207-46cf-83ea-29ecc4ab84cd",
        "cursor": {
          "ref": "ef943e87-8074-4e30-9cc2-549e330365e1",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c66e1f39-00bd-4d69-bf35-5e6b0471d0d0"
        },
        "item": {
          "id": "8c1ab5e7-5207-46cf-83ea-29ecc4ab84cd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a210df16-2390-4866-88b9-fdc0427e28e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbf6c97-4833-4e7f-a819-0634a4770695",
        "cursor": {
          "ref": "f5c787d4-9a9d-4907-bdbf-d4573b2328b2",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6e5c44ec-9bff-4698-aed0-b92f5a68ee5b"
        },
        "item": {
          "id": "1cbf6c97-4833-4e7f-a819-0634a4770695",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e03dc054-abc1-4685-aca9-a87f93c4f249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346da30b-5e49-4b7f-abb1-58b7ffcd1961",
        "cursor": {
          "ref": "90af66cf-5d84-4e5a-b8db-563798a11732",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cdea6f59-8631-4bb8-a4d1-af57efefeefe"
        },
        "item": {
          "id": "346da30b-5e49-4b7f-abb1-58b7ffcd1961",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "68479245-9bd8-4222-a2ca-429c9d9ac37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dcf9a7-8153-409d-8bc8-28e765f69314",
        "cursor": {
          "ref": "1bb66be6-4d31-42ee-a759-793c3db1a25a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "55e4b8ae-9861-4b13-8d67-c0cbc89f3941"
        },
        "item": {
          "id": "f5dcf9a7-8153-409d-8bc8-28e765f69314",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eef4d40a-c1bc-45de-9f7e-00cb6392271a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c1fbeb-8267-4a39-8d4a-d1f0f9595ca4",
        "cursor": {
          "ref": "848bdc58-0869-4245-ba84-0d703cb80136",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5a7ddfa0-568b-436c-b79c-e7cbdd028ea9"
        },
        "item": {
          "id": "b7c1fbeb-8267-4a39-8d4a-d1f0f9595ca4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9958c0f3-0a14-4e7f-acc3-32f93609ed3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3238c98b-7ecc-4b0b-a5d1-38071ba5dc48",
        "cursor": {
          "ref": "8bf42b68-4c7d-4878-a57d-8f41cac486bb",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "652ab7df-fa63-466e-b204-b62e4e5ce90a"
        },
        "item": {
          "id": "3238c98b-7ecc-4b0b-a5d1-38071ba5dc48",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2acc7ff4-8750-4b60-810a-42b539c908d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e054cd-4c13-4604-8a98-99997b7635cc",
        "cursor": {
          "ref": "c5fcfec9-a717-4b19-a9f6-17ad6ac9c1c6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1561f6e0-c3ab-4ad7-8bd3-c40fd889ea5a"
        },
        "item": {
          "id": "63e054cd-4c13-4604-8a98-99997b7635cc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fde7c495-9961-4548-94c6-4dc3f3ca6fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87e828b-2d79-4b12-b80e-f732916559e4",
        "cursor": {
          "ref": "6686ec20-be5b-44c8-bdfe-0997786e4e2c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d87b67f6-651d-427a-a948-6ac9f78ad7a8"
        },
        "item": {
          "id": "e87e828b-2d79-4b12-b80e-f732916559e4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4f9f6e51-ee90-43c9-b189-755b85a536f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e0b9f7-00d5-4709-a2af-aedac2901e0a",
        "cursor": {
          "ref": "b1cbbd22-f290-44a7-a11c-4ae39c433492",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "69bae3a8-e6ef-4cfc-8327-b988087c5d7b"
        },
        "item": {
          "id": "b5e0b9f7-00d5-4709-a2af-aedac2901e0a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "06f3dfda-70b4-489d-bf4c-9afbd7807b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5733778-3ec6-45a6-ad25-ac574dbb28ea",
        "cursor": {
          "ref": "d559bb66-9c02-43b4-aa54-ed2cc544ecfc",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d68f528d-70a4-4d67-8b08-1db4a7adebfc"
        },
        "item": {
          "id": "f5733778-3ec6-45a6-ad25-ac574dbb28ea",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "11a0eacb-537b-462a-9b85-a692829382f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da09aca2-791d-46b5-bbaf-b3f001ac52fa",
        "cursor": {
          "ref": "8ffc3f9c-80b5-4c49-8906-33264bb03751",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3694c6b9-bdbf-44b3-9b26-6076e52d36c2"
        },
        "item": {
          "id": "da09aca2-791d-46b5-bbaf-b3f001ac52fa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0f3ccf75-0cd8-42f8-8ad4-5b25af603dc2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "c3244852-b2cb-441a-a6a6-3d36e5134999",
        "cursor": {
          "ref": "3c6d857d-e193-42f8-918c-5311a92799f7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "41a94991-2df8-45b9-851e-d9e93a086b96"
        },
        "item": {
          "id": "c3244852-b2cb-441a-a6a6-3d36e5134999",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f64d50ce-9ab7-4209-a530-320f753dc5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e8513b-d07e-4718-b013-ecc54d743c91",
        "cursor": {
          "ref": "b36a8cda-518e-4a25-8589-1ab08173d06c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3bf44f26-c700-4fdd-ab69-b05860d17a23"
        },
        "item": {
          "id": "75e8513b-d07e-4718-b013-ecc54d743c91",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fbe4c857-4a00-43e4-884d-b22530bf38d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6356eef5-d749-471f-8085-a3e8aa512f1a",
        "cursor": {
          "ref": "82ff7111-ef7d-4c36-b772-b663681e9f28",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0326ee74-d315-4c05-aad7-15f2612df591"
        },
        "item": {
          "id": "6356eef5-d749-471f-8085-a3e8aa512f1a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e39bca0e-8c55-47db-b85b-ff449c679e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779365ba-ccf1-417b-965a-3fa0dab5161d",
        "cursor": {
          "ref": "ba0ce7fd-fa48-4ef0-9080-796c57103ca0",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "734974d8-ed88-49d0-aaad-84a15a849945"
        },
        "item": {
          "id": "779365ba-ccf1-417b-965a-3fa0dab5161d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cad2c13b-5ff7-442a-8f25-b9e7e45402d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e69a3f-dd6d-43f0-943f-ddfb0ff5c495",
        "cursor": {
          "ref": "c85c39cd-4684-4eed-b46a-ff0e56b018f9",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fcf8f071-0113-4818-bc39-b92c76467ec1"
        },
        "item": {
          "id": "54e69a3f-dd6d-43f0-943f-ddfb0ff5c495",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a6b55883-70f1-4512-805b-f2d23b4e37a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7930a142-afbe-4743-aa73-6d7df340d3d9",
        "cursor": {
          "ref": "236379cf-3251-43b6-9e9b-ffe1f8c8e455",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5dc27c65-aefe-4f2f-bce9-3a665d013949"
        },
        "item": {
          "id": "7930a142-afbe-4743-aa73-6d7df340d3d9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2dafee5e-d1ac-4851-8de2-0018d837ceb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee248348-a30c-4b96-b50e-a940e960868f",
        "cursor": {
          "ref": "d8fb2c67-ee36-4fba-9bf8-aa11d6238343",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6f6cc292-e7a0-4c25-b7d2-9a1907037a83"
        },
        "item": {
          "id": "ee248348-a30c-4b96-b50e-a940e960868f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e140ac1e-ef56-4afc-b2e4-f075893eeb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8c2429-97cc-4821-8578-d04ccdcf3bb2",
        "cursor": {
          "ref": "36fdc841-b98a-4259-a540-5e124dcd2439",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d38830ad-1b11-4c32-a306-477bee496fba"
        },
        "item": {
          "id": "ea8c2429-97cc-4821-8578-d04ccdcf3bb2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ca0a1f6b-ecc2-4448-a8fe-96a97d40b574",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "8121261b-c649-4cb6-bb22-0abb22c948ff",
        "cursor": {
          "ref": "90265a3b-cbb0-40ba-af80-1a56a845b36e",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f424c469-a0f6-4f95-b220-22ff1e623e44"
        },
        "item": {
          "id": "8121261b-c649-4cb6-bb22-0abb22c948ff",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a8e70f15-41e9-4a46-8ac1-7dee029099f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7220da10-b8d0-479f-9e92-2f03877361bd",
        "cursor": {
          "ref": "66f8ab1c-e3a4-41b4-aba4-852ea8649bf8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "655cb9c4-e1fe-433d-bb15-d82714da2eb5"
        },
        "item": {
          "id": "7220da10-b8d0-479f-9e92-2f03877361bd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3f5139d4-8d4b-4980-899a-0e1057ae2b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc71b0ed-440f-4ffe-ac77-b51afafaecf6",
        "cursor": {
          "ref": "46067db0-ca9a-4592-b95d-86343f7a719f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "467127ff-ca73-4f8b-a9e8-744206ab7012"
        },
        "item": {
          "id": "bc71b0ed-440f-4ffe-ac77-b51afafaecf6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e6e931df-1e69-4535-903b-11f34e299a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf4344a-4254-447d-9e1b-6c1b78aed8fd",
        "cursor": {
          "ref": "a6a8e0fd-460c-48ca-80e3-89dcfa7c28f4",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "75e968c0-0701-49d1-9926-77dc249928a5"
        },
        "item": {
          "id": "abf4344a-4254-447d-9e1b-6c1b78aed8fd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0a6b4988-7564-4338-bb73-3ae76abf5804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55c9cda-353d-40bb-99c0-c5eb72415770",
        "cursor": {
          "ref": "86afa66e-9afa-45de-98ff-49563cb0dc97",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6e7c391a-c11f-4fdd-8911-19ad019b7d81"
        },
        "item": {
          "id": "f55c9cda-353d-40bb-99c0-c5eb72415770",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6e0b3da1-337c-464b-859b-0651b93bfc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7b2650-46c0-439a-9d3c-b733216d33f8",
        "cursor": {
          "ref": "8939bb53-8720-4b4e-bc82-e3c2fbd74a3b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "41955945-9e39-49f8-b5be-e203aafd9fd0"
        },
        "item": {
          "id": "6b7b2650-46c0-439a-9d3c-b733216d33f8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3605f24f-fc86-4169-9f39-bb8c3c33c635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37eec39-ba20-41ab-b26e-5d9a11a767e2",
        "cursor": {
          "ref": "ee208aa8-476a-4fce-869b-5aefda517172",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c5ba8b9f-4b39-4bfd-812b-769b08fd00fa"
        },
        "item": {
          "id": "b37eec39-ba20-41ab-b26e-5d9a11a767e2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7e913554-40bb-4d21-9802-5cd622f8593e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "a23cf166-9e2d-4b6b-8b19-ce77cf199ada",
        "cursor": {
          "ref": "d7c7b089-6219-4f83-b4b8-bac361acdc02",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "212d704a-bc5b-4d94-9edb-18f749e4c9ff"
        },
        "item": {
          "id": "a23cf166-9e2d-4b6b-8b19-ce77cf199ada",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2c106bc3-5854-4463-86ee-bf70a7a6ac25",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "f551ebff-9586-45d4-b177-c3f353e8c739",
        "cursor": {
          "ref": "1db284c3-f8fa-47c9-b813-a6c544fd1fe6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f351c36f-f2b8-460b-b349-fadee6bf7253"
        },
        "item": {
          "id": "f551ebff-9586-45d4-b177-c3f353e8c739",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "efd9930e-d776-40be-9ac3-0e6fc4c00965",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f7659450-8f63-4216-8907-ce6fa97914b1",
        "cursor": {
          "ref": "33261636-91d3-40b8-a982-13e070c5ec93",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0abde4d9-faf8-4479-9c20-c4699df207cd"
        },
        "item": {
          "id": "f7659450-8f63-4216-8907-ce6fa97914b1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cb05e194-dbd8-432c-9cf4-53d851fd3a44",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "7594dc06-eb71-4abd-9b0f-6b9b1d83f02e",
        "cursor": {
          "ref": "1294b0a0-d245-4643-8a64-f32260146d23",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "03791739-04eb-4974-bc29-a9d24768b1db"
        },
        "item": {
          "id": "7594dc06-eb71-4abd-9b0f-6b9b1d83f02e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "edac05ce-a3c1-42da-876a-6fee652b0510",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "02df6cbd-fdbd-4083-92bd-d1f29152042c",
        "cursor": {
          "ref": "6683adde-7a0f-47a4-809c-56affcceb4c6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9383942b-4650-460b-8526-a6a04d76161d"
        },
        "item": {
          "id": "02df6cbd-fdbd-4083-92bd-d1f29152042c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7fc83136-ae0a-4d72-8403-889cfd4f9c9e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e38fda48-74d6-42d5-a5fd-d354e227fc51",
        "cursor": {
          "ref": "39cab5a0-7636-4388-9b02-8e373fe3059f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "54f912c3-9c7c-4131-ab1a-76fa1f965219"
        },
        "item": {
          "id": "e38fda48-74d6-42d5-a5fd-d354e227fc51",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e25daf01-5c3d-4743-990b-648b21132fd9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56988e5d-b53a-4bb7-bd34-937838d8455f",
        "cursor": {
          "ref": "0a8e6a9b-d726-4ae5-a6b1-9c78a5ab2a41",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f22aa57e-afcd-4659-9e76-40711edeb3aa"
        },
        "item": {
          "id": "56988e5d-b53a-4bb7-bd34-937838d8455f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "71131a53-788b-44dc-b6b4-c98a8294e91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e4267c-b87a-4bb2-8565-556be3953b7b",
        "cursor": {
          "ref": "076133d2-e5c9-4552-89a9-c6ab4c2e7bc7",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "635c3e75-4ce8-439f-b355-3b92963da0e7"
        },
        "item": {
          "id": "53e4267c-b87a-4bb2-8565-556be3953b7b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6a52968a-11e6-432e-b729-2dee5c692a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec717df-4cd1-48dd-b726-0a2698f279ad",
        "cursor": {
          "ref": "1b11cc8b-fc02-45fc-9b6e-1b22f8d72489",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1fe6b19c-30b7-49a3-ba6e-6a73b55aa8d8"
        },
        "item": {
          "id": "7ec717df-4cd1-48dd-b726-0a2698f279ad",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "626a0853-a3bc-45c6-bfb2-46e8a9d90441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e3fd96-f49c-4eac-a807-0f05ffda98ee",
        "cursor": {
          "ref": "d682083c-69dc-42a1-958f-9940379f414e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3f629830-f1a2-48e7-928f-0e10e2a40f20"
        },
        "item": {
          "id": "82e3fd96-f49c-4eac-a807-0f05ffda98ee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3f364aaa-ce61-4773-a5da-4b5bd15a9846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0885cb06-d0c9-40ff-b3d0-88c860b9dd70",
        "cursor": {
          "ref": "61175a20-f685-43d6-b5a2-98e6a15b9cae",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3e10f2f3-9046-4348-95bb-50857c8eb66e"
        },
        "item": {
          "id": "0885cb06-d0c9-40ff-b3d0-88c860b9dd70",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2f2c731a-a3d7-47e5-b584-36f860ca9465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8276f9-78e6-49f7-9d89-bfb0bb469ba3",
        "cursor": {
          "ref": "db38cf55-63e9-4ade-8428-976b3e33fc3b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "95a0d0c5-9ecf-4202-8334-947c74e2250a"
        },
        "item": {
          "id": "eb8276f9-78e6-49f7-9d89-bfb0bb469ba3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "73235983-8a14-4824-b207-cde4a5abdf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e018d37-08d2-400d-be38-63efb2188c67",
        "cursor": {
          "ref": "0cc8e41a-31b7-4626-8bb7-5f930c49abb9",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "917b09e4-c607-486e-b4b4-ae7d24dc9a9b"
        },
        "item": {
          "id": "8e018d37-08d2-400d-be38-63efb2188c67",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c76e6236-d7c9-4876-b79a-92b7a1713983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2682b548-980c-4f7a-bd76-b374b21a6be2",
        "cursor": {
          "ref": "43cedc26-7407-4580-8331-17344806712d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2b6c0392-45ef-4c41-ac1a-84a054696a15"
        },
        "item": {
          "id": "2682b548-980c-4f7a-bd76-b374b21a6be2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0eba04ae-58fc-4889-a662-3ab0202b1333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9045598e-8e7f-4127-b1c2-9d01e399822b",
        "cursor": {
          "ref": "030ff053-6794-4d32-89b1-ba27b2ce8c7b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c5e93dca-68af-4cba-88fe-ff264bd31928"
        },
        "item": {
          "id": "9045598e-8e7f-4127-b1c2-9d01e399822b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d4285506-006e-4d5b-928d-51e22574fbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af80feab-ce77-43e5-8f66-f9685e69c5a8",
        "cursor": {
          "ref": "e570cbb1-9642-4071-983e-bb210bfd38f8",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "971c0fde-48bc-41e5-8f2e-107b0bd44f47"
        },
        "item": {
          "id": "af80feab-ce77-43e5-8f66-f9685e69c5a8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7a62b305-a798-4f33-864e-fddd23aa6aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4016daa6-261d-48da-a061-24aa7f3d6e98",
        "cursor": {
          "ref": "1b26e95d-8599-4cf9-9e80-a89b7b979400",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "69017f21-62d5-4890-a573-920eff8d45fc"
        },
        "item": {
          "id": "4016daa6-261d-48da-a061-24aa7f3d6e98",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "73e6f72c-5cf9-41ea-9b5c-6568265637a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcd53ac-2104-43ff-a2c2-a66150ccadbe",
        "cursor": {
          "ref": "72462ec1-1d05-4340-bde9-9a17fed1bf10",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f2889ea7-34fb-43c1-b7c6-9238ac1cf065"
        },
        "item": {
          "id": "8bcd53ac-2104-43ff-a2c2-a66150ccadbe",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0a26caaa-0ff1-4a19-b458-d012b248dc2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fc80b3-7187-407e-b6f0-529f4e801c0c",
        "cursor": {
          "ref": "41d70493-316a-4c97-8a93-703b6fbf27e2",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f89badcd-3692-442b-8022-7ecd718ac080"
        },
        "item": {
          "id": "06fc80b3-7187-407e-b6f0-529f4e801c0c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fd095b19-2d26-4910-916e-68e7f97985a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2215fb-c3a9-41f4-bd02-7020c6faed96",
        "cursor": {
          "ref": "bbcf7b4b-3995-4ad4-ab85-937f2a60b7c1",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2dcae6a8-7a10-485f-86e6-fc9f7a4bfbef"
        },
        "item": {
          "id": "9c2215fb-c3a9-41f4-bd02-7020c6faed96",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b35809dc-eef9-4829-a345-db9ad067b97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aae744c-8cad-4673-a0fd-1b626c7846db",
        "cursor": {
          "ref": "096c92d1-63b5-4054-834a-cd2422c8852c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cb9bb7b6-a589-49c1-bd75-238bb98c0a16"
        },
        "item": {
          "id": "0aae744c-8cad-4673-a0fd-1b626c7846db",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "72b406c7-da50-42a2-b5ec-4ac49701dfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69a2c3f-cbe0-49f0-9a7a-7d729e366870",
        "cursor": {
          "ref": "be97865b-b09c-4c49-9ad6-cbeef5fd8f62",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "75e18e1c-8f91-46fd-a90a-903c21fca3d6"
        },
        "item": {
          "id": "f69a2c3f-cbe0-49f0-9a7a-7d729e366870",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d18d99fb-204a-4ecc-aec9-c77d4065a1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e57f7a-630d-430b-9df5-06f6b77ba1db",
        "cursor": {
          "ref": "7299a3eb-7791-45ee-8e71-d47288667623",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "df099a6a-609d-4f5b-ae74-f897f51c4d26"
        },
        "item": {
          "id": "05e57f7a-630d-430b-9df5-06f6b77ba1db",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1ed18792-c5e9-46f7-94c4-faff6f4b9ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10bca5e2-a35d-408a-b1ee-c62f0a7b984f",
        "cursor": {
          "ref": "85e86721-d3b5-4032-9d1f-3d66fd2d0eae",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3ff4b722-5ae5-4b9a-b960-9cf56420bee2"
        },
        "item": {
          "id": "10bca5e2-a35d-408a-b1ee-c62f0a7b984f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8f2532c0-81ef-4ce9-aa02-622604dc3a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098951c8-0e2d-4e26-a99d-bb6427b89a9e",
        "cursor": {
          "ref": "77a9d530-3dc7-4092-b9b2-aa38cdf67b21",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c3299032-6b8b-41c3-a591-eda914c3bf53"
        },
        "item": {
          "id": "098951c8-0e2d-4e26-a99d-bb6427b89a9e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f27d8937-2869-4767-a9f8-4ca37a0c3b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ef1c82-b723-413f-bf4f-6b046868ddd8",
        "cursor": {
          "ref": "37df540f-6619-45fd-8c9d-cb975c08bb6b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "21f3f5d9-8e6a-49d5-9f03-4d750d72791f"
        },
        "item": {
          "id": "f0ef1c82-b723-413f-bf4f-6b046868ddd8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "59183001-a0a9-41f4-b148-7d2b6ac20cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e512c9d-f8c2-4188-bf35-7fcf96e7a610",
        "cursor": {
          "ref": "7000d491-880e-4cb5-a1ce-f3fc8256142b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c22c2d49-a238-4073-add3-9dbd85a24815"
        },
        "item": {
          "id": "9e512c9d-f8c2-4188-bf35-7fcf96e7a610",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5e8d27cb-e9bc-4250-8fa0-18bf112fcac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0772d75-5a27-4d6a-939e-1d846811858e",
        "cursor": {
          "ref": "6c7fca38-d388-430d-983b-cb443ce8b79f",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "35b0e364-432f-457a-9e5a-26f8729776c5"
        },
        "item": {
          "id": "f0772d75-5a27-4d6a-939e-1d846811858e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "255be39d-c508-43c2-a00c-72370a16ed0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f7a134-d784-430b-bf51-1ae05cf7257a",
        "cursor": {
          "ref": "fd9e8baa-ad5f-43b5-9ead-91e2c9d0ad74",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "090ff966-bd34-414a-9053-9f9395775bb4"
        },
        "item": {
          "id": "c6f7a134-d784-430b-bf51-1ae05cf7257a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "551245e0-1b0b-4aed-a340-2471032b4c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b599d8-13c6-442d-8322-9f8da6ec35b6",
        "cursor": {
          "ref": "1d5aa010-81a4-435b-a25f-cac5d2df7fb9",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ad785c06-a972-478c-96c6-f52a80ad8501"
        },
        "item": {
          "id": "47b599d8-13c6-442d-8322-9f8da6ec35b6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c6d7cce4-d364-407b-800c-7be614f85bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a60cdf6-1858-4357-abed-e7b5fc50f930",
        "cursor": {
          "ref": "691a6c2c-9c55-46ce-99ef-57c3d5f166e1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "bcc3b237-b4cc-4a1f-acf9-87bb39e6fada"
        },
        "item": {
          "id": "3a60cdf6-1858-4357-abed-e7b5fc50f930",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b1276980-fd7a-4b05-af3c-cd5db07ac2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9364a4-9683-4b04-9cd9-4b5df81c0c03",
        "cursor": {
          "ref": "a9665f3a-871f-4549-85b0-666a227f4e89",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "93f0f896-10c4-4096-9589-bb493ac0af13"
        },
        "item": {
          "id": "5c9364a4-9683-4b04-9cd9-4b5df81c0c03",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "11528f17-a4fd-4e0d-b790-b85c4e8be282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfad617-74c9-415c-916e-83927af9515a",
        "cursor": {
          "ref": "30260d8a-b90f-4a8e-bcad-3d839bddd920",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b2d769cc-031a-44f6-ac50-fb343cb7467c"
        },
        "item": {
          "id": "2dfad617-74c9-415c-916e-83927af9515a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "51cd9758-2260-4939-b1ef-2cf3858ef241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4d5bfb-35af-4a69-9fca-71752199d064",
        "cursor": {
          "ref": "23dc2fbc-81a1-4c97-8a87-187125c70632",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b37b2e09-5f4b-46e5-a3cc-334bf6fab090"
        },
        "item": {
          "id": "eb4d5bfb-35af-4a69-9fca-71752199d064",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a2e9313f-4aac-4a5d-b14f-4394df1826d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e63d98-f7b0-4516-adbd-e3b3cf8581bf",
        "cursor": {
          "ref": "ea9a269a-6e73-496b-a492-13bb333ea441",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ad584ecf-f931-48ac-9574-f5c1d2488a49"
        },
        "item": {
          "id": "55e63d98-f7b0-4516-adbd-e3b3cf8581bf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ab6a209c-4dd6-4cf2-9735-f366155ce339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5235399a-6d1f-488c-8755-43ac84d60f90",
        "cursor": {
          "ref": "267317e9-8244-4fbc-b2b2-4f9d58254263",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e50280c1-565a-4aec-8ffa-657df0dc3c95"
        },
        "item": {
          "id": "5235399a-6d1f-488c-8755-43ac84d60f90",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "063274f4-90f9-41e9-a0a3-dae6e8adbbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4921af1d-56ae-4dd0-94d1-07aa412af144",
        "cursor": {
          "ref": "7f478349-000e-4270-bf43-eadbe78ca8f6",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a2083991-2b21-46c1-8b0a-95518fc98dfc"
        },
        "item": {
          "id": "4921af1d-56ae-4dd0-94d1-07aa412af144",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "87aa884e-0831-4da5-9a6d-b857d466f705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8174151d-ba70-421d-8f9e-b560b16ba7d2",
        "cursor": {
          "ref": "096b9083-150e-4065-bfae-c694be5bde30",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "807690d8-a795-4226-a046-550c79532a0a"
        },
        "item": {
          "id": "8174151d-ba70-421d-8f9e-b560b16ba7d2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8374c0d8-6252-478d-a1b0-442aafe44849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3178cbca-1946-4e38-9824-83571d6d18bc",
        "cursor": {
          "ref": "08f318df-da11-4574-896d-bc4bfeed9295",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5bf327fb-f6a7-4557-8cac-d441bcea3195"
        },
        "item": {
          "id": "3178cbca-1946-4e38-9824-83571d6d18bc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8be1b164-f455-42ab-9b47-1136764faf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f14d3c-da7d-4043-ba9c-2239429bf848",
        "cursor": {
          "ref": "f7e40215-a905-4cbd-b0a6-c995296f71ac",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dbef1689-091b-4f8d-9667-083c7baa9ae7"
        },
        "item": {
          "id": "b6f14d3c-da7d-4043-ba9c-2239429bf848",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5474404b-e1b2-47e7-9f19-bac001ee5233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b5b0bb-8957-4278-8f54-35dcdae7a63c",
        "cursor": {
          "ref": "acb2e4a7-a934-4dbd-95df-8e5cabb1e8f6",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e6ac3ded-40d4-47b5-9a7a-1ee69aff3ebf"
        },
        "item": {
          "id": "34b5b0bb-8957-4278-8f54-35dcdae7a63c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b5eb3cb1-8a80-4cd5-aa0a-38a867a58ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008a80f8-efba-43f4-b9af-2e8334c92115",
        "cursor": {
          "ref": "2a2778c9-2c80-4603-ad85-0498b09d3d83",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "895c8820-6248-4f32-b682-719c0ccb0d0e"
        },
        "item": {
          "id": "008a80f8-efba-43f4-b9af-2e8334c92115",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4dcdc424-f1e5-49f7-bcbc-dc82042b255b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d623d2c3-5ad6-49c9-9b58-5378b8558186",
        "cursor": {
          "ref": "3026dffe-cec0-4f6e-b229-409fde8781cd",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2613b5ea-26a8-413a-a5df-0b4659773704"
        },
        "item": {
          "id": "d623d2c3-5ad6-49c9-9b58-5378b8558186",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d401f97b-7c1f-4afe-b246-ada95be2931e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc61237-e4ce-4893-aca0-1bcf74039df1",
        "cursor": {
          "ref": "12c06792-2606-4e1b-86a7-a510ec74a52d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3fd8096a-e2f4-4932-9c3f-9567925e0ef6"
        },
        "item": {
          "id": "8bc61237-e4ce-4893-aca0-1bcf74039df1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0b3e41ac-8778-4b50-bf87-8f8c4bbeff2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4437621-6ac9-49c2-9cb7-6aa436fdaf3f",
        "cursor": {
          "ref": "2075b28c-2183-498d-84f8-f086dfe6eba4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "14a6e18a-a414-48bd-9671-d0aa4b6cfa93"
        },
        "item": {
          "id": "e4437621-6ac9-49c2-9cb7-6aa436fdaf3f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "91624030-b6ba-48c8-bdc5-0bd6a4ed6108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d71ec5e-e512-4850-ae1b-f1cf09c8bbb5",
        "cursor": {
          "ref": "b1ec6ede-2dcb-41db-a781-665af65d7334",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9ea92b4f-b525-4ea4-a032-21693ff82980"
        },
        "item": {
          "id": "0d71ec5e-e512-4850-ae1b-f1cf09c8bbb5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "72a08855-b457-4694-a98c-ed342c0ba978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30efada6-09ea-4770-aec5-00ac6392416a",
        "cursor": {
          "ref": "d1cf82c6-6bb0-4d0b-9f86-3db3f4ccba6e",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1ed7f0ea-ab5b-4f02-8f78-26a194d65252"
        },
        "item": {
          "id": "30efada6-09ea-4770-aec5-00ac6392416a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e4b293dd-fe8d-4f93-82e8-9e0ae10be31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0f9fec-347b-48b5-8014-2979f9481a4c",
        "cursor": {
          "ref": "28ce065e-abce-441a-bd1c-e95aeeab3587",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b6206798-7999-4f70-9ff0-bf09403102fd"
        },
        "item": {
          "id": "6f0f9fec-347b-48b5-8014-2979f9481a4c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fdec2038-d3b8-4d57-aa5b-93b53f750c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59681fd-b763-44d5-9cd4-d1f5271fc0d3",
        "cursor": {
          "ref": "ff6821d2-2e6b-4a52-aa8a-c96fb94539b7",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3a993071-0fb3-4cfa-969b-6aaa6115fc6a"
        },
        "item": {
          "id": "d59681fd-b763-44d5-9cd4-d1f5271fc0d3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "80d56ad0-b785-41b6-bd20-7b7c9a40548c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1c4ad0-9140-4af9-ade1-bfc762fe274b",
        "cursor": {
          "ref": "5a18c6fa-9f82-4c3c-aa6c-0d4436d14aa5",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "add48948-3ab5-4a65-8530-a0afdc24dc3b"
        },
        "item": {
          "id": "8a1c4ad0-9140-4af9-ade1-bfc762fe274b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "86044c63-5fd1-40d9-b77e-637659188931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6164b5fa-9b49-47d0-807e-404488edde87",
        "cursor": {
          "ref": "1c68f0b3-5017-4883-973b-777e66eb1407",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e96aad85-682b-4c55-9dd4-d61a228c3945"
        },
        "item": {
          "id": "6164b5fa-9b49-47d0-807e-404488edde87",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5319a08f-fdcc-4252-a470-d27d0d057ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc77213b-5b04-4940-b5d2-5b61f19dcbf0",
        "cursor": {
          "ref": "17bb3d73-32f9-46b6-a4e0-fe9edf13fafe",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e144857a-e3ba-4656-9226-09209f4f3aa8"
        },
        "item": {
          "id": "cc77213b-5b04-4940-b5d2-5b61f19dcbf0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "56643f23-3f96-4c28-a45c-2ff9705b5cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4cc390-8714-4138-99c5-c048747dd690",
        "cursor": {
          "ref": "3949e982-0b83-406f-b232-b6328f734571",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fa6d06b9-5b2e-4c1b-a496-99c6a0100aba"
        },
        "item": {
          "id": "9c4cc390-8714-4138-99c5-c048747dd690",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e8fc51dc-f7d1-4b13-9d33-f0e2e6158b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee80ee9d-ddf9-4b44-a181-085643547b9d",
        "cursor": {
          "ref": "790e5bb7-f4db-41cf-9601-93ab5a0d7808",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "789c5018-0b50-461a-8219-439e87b5bee3"
        },
        "item": {
          "id": "ee80ee9d-ddf9-4b44-a181-085643547b9d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "45790863-947d-4d1c-9658-b5cdab7c3a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb77bdd-252e-45ee-8450-279110831fea",
        "cursor": {
          "ref": "a61212de-c9c5-4d3f-8b2a-ed610b114ef9",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8624083d-e814-4a81-af23-7f00aa066b84"
        },
        "item": {
          "id": "7bb77bdd-252e-45ee-8450-279110831fea",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5b743f97-189e-4f58-be35-af7993b7f24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de265cab-961f-432c-a528-a2ddf9619e84",
        "cursor": {
          "ref": "1e3c4f68-1201-404f-bb12-d721976b4b74",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d6e95da5-f648-4f3c-9efc-ae81d675edd4"
        },
        "item": {
          "id": "de265cab-961f-432c-a528-a2ddf9619e84",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b67a50f7-b2d9-452a-b38b-9f7827bf8f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec5728d-b200-480b-b2f4-8efe463e93cf",
        "cursor": {
          "ref": "7c76f961-9b42-4a45-868d-1010559e20d8",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2b06168b-5688-4b95-a58d-9ea09d2f8c14"
        },
        "item": {
          "id": "8ec5728d-b200-480b-b2f4-8efe463e93cf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6bccf5c3-1818-4d38-a654-c1663fcd4feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6d75c8-3eca-44ec-924a-e7d7b5a59154",
        "cursor": {
          "ref": "caf23154-b8f1-4810-bd22-832fe9822fd2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "eb8de5e4-a527-4acb-b4cb-bdadccd048e4"
        },
        "item": {
          "id": "9b6d75c8-3eca-44ec-924a-e7d7b5a59154",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a7c32bfc-62d8-47c9-9874-32e0b8fd0790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfb015e-6924-4165-85ef-7043fb9ad7ae",
        "cursor": {
          "ref": "8a328d45-6aad-4535-9a6f-88af04d3a325",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f2f99aec-142e-4e6c-bbcb-fac43e29b817"
        },
        "item": {
          "id": "2cfb015e-6924-4165-85ef-7043fb9ad7ae",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4cd0920d-857a-4abd-a4a1-6ccac5bb340d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12207d82-c97f-499f-9eec-6477b9a18597",
        "cursor": {
          "ref": "e478a376-6128-4e41-b352-6baf97392262",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3f5bbea7-6a3b-4af4-bc3e-b8b28e2b1e93"
        },
        "item": {
          "id": "12207d82-c97f-499f-9eec-6477b9a18597",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f620cc59-9848-40ff-b059-c64c36b5d565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f1f53b-4469-472c-b608-ff8281f8797e",
        "cursor": {
          "ref": "90e1ea81-847a-426f-abde-3244f4826d92",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "942d4bea-5cf2-48cd-a785-8e13ceb40cd5"
        },
        "item": {
          "id": "08f1f53b-4469-472c-b608-ff8281f8797e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "30363bb3-f7a0-4be4-b9ed-2ea8796d381f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd19b06c-148c-400e-aca5-ebce8321ba3e",
        "cursor": {
          "ref": "88810ea1-ae74-47d3-8767-ee3ef98ac625",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d0980e40-334a-4db8-a552-452e02a772e2"
        },
        "item": {
          "id": "dd19b06c-148c-400e-aca5-ebce8321ba3e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ab7edbaf-c2f3-4918-94c2-6fa91ec85e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e2a219-d74e-444d-b150-7ef8a3f1314a",
        "cursor": {
          "ref": "ed925e02-3840-4be3-986b-125534ca5afa",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "875b2c76-6d35-4e5e-83c2-cba1ccb1f634"
        },
        "item": {
          "id": "88e2a219-d74e-444d-b150-7ef8a3f1314a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8c404115-a1ef-46b4-993a-5d33045f980f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6582a348-739c-4654-b810-e9b5178057dd",
        "cursor": {
          "ref": "8f852356-e1e1-4c42-80b1-1c64666cd838",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "64c6be1a-6bd6-4811-8365-e464bc0bc330"
        },
        "item": {
          "id": "6582a348-739c-4654-b810-e9b5178057dd",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b3688b47-4ba8-4871-986b-aca7b3246f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa223d5-daa9-4077-8715-acbb8faec93c",
        "cursor": {
          "ref": "68449d5a-34be-4fb9-9783-513109a85a0b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e20b4ca8-749f-41fa-bbd2-aaca02b68860"
        },
        "item": {
          "id": "3fa223d5-daa9-4077-8715-acbb8faec93c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "23349875-7cc0-4059-8fb9-cf205cdb9c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4803d02-a960-4c88-96da-874b34451579",
        "cursor": {
          "ref": "0596e5cf-cfc0-41c1-a63a-eed8f641e6f5",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5f71098b-0e37-4f88-8875-30017a7dfc5b"
        },
        "item": {
          "id": "e4803d02-a960-4c88-96da-874b34451579",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c0e9149f-1c49-418b-850f-3462585e40eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d2111e-f380-4760-b65f-c2245b420930",
        "cursor": {
          "ref": "b52dc11a-0c6c-438d-8e45-49abf4a6f82a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ea743fea-7b51-479e-8d8c-16875e8f4732"
        },
        "item": {
          "id": "76d2111e-f380-4760-b65f-c2245b420930",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f63ee36c-9b3f-4ba7-ab79-9222a2925908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e1ff8f-8e3e-49a1-b3c7-2ca639fdeb7d",
        "cursor": {
          "ref": "6f548567-5794-420b-9b2e-84e536f7baa4",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8574da42-6136-4a28-8028-4512d72e46ca"
        },
        "item": {
          "id": "c3e1ff8f-8e3e-49a1-b3c7-2ca639fdeb7d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "45de72ed-f192-4adc-91f9-4e0b4b49adac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea291970-a59b-4fb6-b6e8-59a98570c9a2",
        "cursor": {
          "ref": "554bde39-10bb-45f5-be28-74ff376721a0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "75c1d49b-ae7a-4426-a89d-81736519b85e"
        },
        "item": {
          "id": "ea291970-a59b-4fb6-b6e8-59a98570c9a2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "207fd157-56ae-4f08-bd60-24b84bbe2a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa23ac6-e2c3-4b28-876a-f3a2ecca4437",
        "cursor": {
          "ref": "f546621e-bd7b-4530-897d-41be5baa2386",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4cd9f311-a5e6-4ded-9d53-19c92418e553"
        },
        "item": {
          "id": "4fa23ac6-e2c3-4b28-876a-f3a2ecca4437",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ee0c25fb-912e-4ad6-a077-775370dfb01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8f4f42-07bd-414c-88b6-283ca0735628",
        "cursor": {
          "ref": "80e7d988-0dff-404c-9939-e01112bf4192",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e2818395-f60a-4b94-bf67-0ca1b95f6020"
        },
        "item": {
          "id": "fa8f4f42-07bd-414c-88b6-283ca0735628",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c2641820-ac9d-4587-ba19-9473f1c36ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1128418f-7397-4eb3-90e5-b11bf604ec87",
        "cursor": {
          "ref": "73b420ed-634b-40ba-bd69-f668ea30050c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "81003f2c-2ee6-42a1-bd7e-2efb7344c03b"
        },
        "item": {
          "id": "1128418f-7397-4eb3-90e5-b11bf604ec87",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c98e7ea6-055e-4adb-b927-efd4d5a32c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0338d2bf-0e9d-4aca-bb29-6172587ac711",
        "cursor": {
          "ref": "b31d014e-d4c3-4ca8-a4bd-50a05ff30e73",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "57763c00-619b-423a-837c-45876fbc579e"
        },
        "item": {
          "id": "0338d2bf-0e9d-4aca-bb29-6172587ac711",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6243b4d7-8b9a-425b-aa8c-a35c564afbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e7a344-4287-439a-a68e-27f3e323c0cd",
        "cursor": {
          "ref": "77cb9457-d3fd-4656-884b-4a0e048e4d2d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d5a2eeee-3f6e-4a47-8129-de08db4be030"
        },
        "item": {
          "id": "b6e7a344-4287-439a-a68e-27f3e323c0cd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "05d1486e-43ab-4db2-b1bd-c20e3e8f14b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4b08ef-f62d-4926-83ae-127eae056d79",
        "cursor": {
          "ref": "d12d030c-17af-4815-bc46-89c0b92410fa",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ff72adf0-153f-4061-aaf6-d9bad9fa9a3b"
        },
        "item": {
          "id": "3c4b08ef-f62d-4926-83ae-127eae056d79",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "14d7a182-0799-434d-8439-2cd324263011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320a240a-dec4-4df1-8610-ecace8d5f785",
        "cursor": {
          "ref": "d62f2893-b020-4bd4-9a04-ac50ad23b3e6",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "04e9a48f-942e-4edf-9d5d-ec8679176d57"
        },
        "item": {
          "id": "320a240a-dec4-4df1-8610-ecace8d5f785",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4c3029d5-b370-4436-94f8-eb6abb352f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f307319e-4f8b-4d2e-9ed5-460c24a247ea",
        "cursor": {
          "ref": "31e73121-1c25-47b9-8762-dfd9c5b3173a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b1c20f8a-502b-4a5a-8649-6f85511c42bd"
        },
        "item": {
          "id": "f307319e-4f8b-4d2e-9ed5-460c24a247ea",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "701fc721-95df-4622-813d-03ad04c8da07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01144884-a4c3-4465-82bd-31cd2a18d9a4",
        "cursor": {
          "ref": "2c5c7356-a649-47c6-8a26-0625ee6177a3",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ac94ee47-dca6-4b51-af95-7a87de49bc1e"
        },
        "item": {
          "id": "01144884-a4c3-4465-82bd-31cd2a18d9a4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "26a3e04a-66d8-420b-bfb4-696d79853cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c71ccd-47dc-4f8d-88c8-b69d549d9362",
        "cursor": {
          "ref": "a6b9f2a8-03e7-469b-a219-2b3175be802a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c0bc457f-9ff0-4701-9757-9c8761ad88ac"
        },
        "item": {
          "id": "d9c71ccd-47dc-4f8d-88c8-b69d549d9362",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "939211e2-59ed-4069-b9a1-fa94cae069c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c77497-17bd-416b-96f9-3b8068e14749",
        "cursor": {
          "ref": "2dba9815-75d6-4e3d-b80c-b93959b5b87b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "257d652c-ae7e-49a3-94e3-84079d789a86"
        },
        "item": {
          "id": "93c77497-17bd-416b-96f9-3b8068e14749",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b7bdc476-041c-401e-808f-a03b28400c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa85a6f-b62e-4c19-b9db-995f5a9e3418",
        "cursor": {
          "ref": "f57dd1fa-adb2-47ad-9ded-c86ac9913d8f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dfaeb1cc-3e81-43c6-ab5a-a7b9885fce27"
        },
        "item": {
          "id": "aaa85a6f-b62e-4c19-b9db-995f5a9e3418",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8af7c5d1-5e52-405c-a1f2-b9421bf83ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d8d032-a719-46d1-aa44-cc24cd454bbe",
        "cursor": {
          "ref": "9aa2ab81-bace-43a3-b2cc-6e6145dc0999",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0199d7c7-016e-4bd0-9791-18fe4fbffabf"
        },
        "item": {
          "id": "d7d8d032-a719-46d1-aa44-cc24cd454bbe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4a607e59-21b9-4674-952c-1623e9f6b68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd848a32-4df9-470d-9f75-613a76b5e0ba",
        "cursor": {
          "ref": "c9c05609-361c-46a8-bd43-2efa6b7f74d7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2b78c6e4-0650-41f2-bf00-542cb40de614"
        },
        "item": {
          "id": "dd848a32-4df9-470d-9f75-613a76b5e0ba",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ea07b8bb-d2a3-4732-8da6-c0295406a2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbcc430-bd5a-4a0c-aef6-4d2ab7108007",
        "cursor": {
          "ref": "d8a9d2d5-56ec-43ee-b4b0-4082f844b424",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "29059ca1-65df-4dc0-9a7b-55ab58d04372"
        },
        "item": {
          "id": "4dbcc430-bd5a-4a0c-aef6-4d2ab7108007",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "03447cc0-c735-420e-b251-0e61fc3da464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27b016e-a5b7-474c-a844-fb1f5662d973",
        "cursor": {
          "ref": "f2907c9d-7db6-4627-a366-8fd3b17858d9",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "667b51f6-748d-496d-a27f-0676281a60f4"
        },
        "item": {
          "id": "d27b016e-a5b7-474c-a844-fb1f5662d973",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7aa639ab-3cea-45a3-a5cd-ca3282426fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d529b198-cfea-498c-8261-702a74ce3d86",
        "cursor": {
          "ref": "3e20685c-d9b0-4a79-b391-e14bbea49d28",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3e20eb2f-2e58-446f-a387-afaa4b73a928"
        },
        "item": {
          "id": "d529b198-cfea-498c-8261-702a74ce3d86",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0aef566c-d5b2-4fb0-90a5-85d8b5354935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ab1862-fc9e-466f-a15f-f1b6f2bd3b59",
        "cursor": {
          "ref": "5076032d-c8a3-4652-859c-589863223bd6",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8fc2863e-403d-4f0f-8af2-bef18cc5fa44"
        },
        "item": {
          "id": "14ab1862-fc9e-466f-a15f-f1b6f2bd3b59",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "922a9294-e1d1-443f-9aab-0e74da80e901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe6daa-9bb4-4456-a6d1-a5f5b25408a5",
        "cursor": {
          "ref": "aee8555b-ad31-47b7-b597-c100a8c88e1b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "74580914-d43d-48fc-b473-8f77510d626e"
        },
        "item": {
          "id": "8cfe6daa-9bb4-4456-a6d1-a5f5b25408a5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ef659763-3e01-498f-821e-093d871d7257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d303349e-cf0e-4786-80bf-fe568e496850",
        "cursor": {
          "ref": "708da200-cedd-4004-bc20-efad7b85efa6",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7a0f3306-6080-4638-bd1f-a67b73c28b53"
        },
        "item": {
          "id": "d303349e-cf0e-4786-80bf-fe568e496850",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b87da3fd-ec3f-48d2-8542-50b155552951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da75ecef-57a9-4eea-80b2-e5a5cf875cf9",
        "cursor": {
          "ref": "f971b8bf-1113-442e-8434-658d57b85301",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cbd102ed-b6cd-428f-b2c3-a7130ac11f23"
        },
        "item": {
          "id": "da75ecef-57a9-4eea-80b2-e5a5cf875cf9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2482d19c-e78c-4092-9377-3007b54a6298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e8d98e-8e27-445d-9d3b-f2b8f9e6086c",
        "cursor": {
          "ref": "be8f0887-28e9-4084-8a5d-f8695b129963",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f4a2931a-9fc0-4620-84dc-50cce6bfe436"
        },
        "item": {
          "id": "72e8d98e-8e27-445d-9d3b-f2b8f9e6086c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ca736462-f6c7-4ea8-a4c6-4fc81d30411b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4234898b-85d6-4e83-ba4a-11ea0899c9ed",
        "cursor": {
          "ref": "daac5693-c914-48ed-bf05-49f748c14db3",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e4cea482-9d13-490e-8b8e-d07204d94dc7"
        },
        "item": {
          "id": "4234898b-85d6-4e83-ba4a-11ea0899c9ed",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bd2f3616-6245-41fa-ac9c-64b35b0a06a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49652bc-4b01-4dec-aa57-d39a4d85c900",
        "cursor": {
          "ref": "8d943aa5-2f5d-4376-a46f-12ced11696a3",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "71ff6c5c-8c71-4c2c-8bdd-b1bce623e055"
        },
        "item": {
          "id": "e49652bc-4b01-4dec-aa57-d39a4d85c900",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3eabf726-879f-48a3-b562-1081bd401b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7b59e4-c945-48c4-8595-ef2f5299a110",
        "cursor": {
          "ref": "497f2d97-7e68-4495-a655-d477dc3b5cfa",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "89d33ef5-4eb9-4979-b359-5e10740179c5"
        },
        "item": {
          "id": "1c7b59e4-c945-48c4-8595-ef2f5299a110",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "18985ef1-788c-4ea7-a97a-c603bb95036d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21451c4-1725-4ca8-b287-0ae6f0820c67",
        "cursor": {
          "ref": "e6429c5a-2d54-485d-a05f-3643484568fd",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "93a7dde6-4ee9-4408-b4fe-dc6b673349ea"
        },
        "item": {
          "id": "f21451c4-1725-4ca8-b287-0ae6f0820c67",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "901c89ec-2c81-4fa6-b586-d628deaa14e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bada98-01f2-4936-8f4e-f3f80db89382",
        "cursor": {
          "ref": "1ab97143-2585-4e65-ba3b-b6093503a7ea",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a16302cd-59a8-49f1-84f1-d6d9e254b835"
        },
        "item": {
          "id": "79bada98-01f2-4936-8f4e-f3f80db89382",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5c2d09b7-2e5d-4055-81fc-af09bc492d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ef1915-81b3-4658-8271-b4e202aa94f3",
        "cursor": {
          "ref": "ec66114e-69ce-4c10-b85d-112800245ce7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "90502386-dc02-4a28-b422-f30be78bc845"
        },
        "item": {
          "id": "69ef1915-81b3-4658-8271-b4e202aa94f3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e560696f-9fd5-4ea0-80ac-67bb99f89138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fb9d45-0784-4411-b3b2-3da032728066",
        "cursor": {
          "ref": "8591c917-7e24-4cac-8f89-92f043dbb024",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3b261d69-5dd6-4fc4-a221-94c2b84a4e6f"
        },
        "item": {
          "id": "93fb9d45-0784-4411-b3b2-3da032728066",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fae201ef-9509-4e4c-9e87-6a2bf713950f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22628cfb-5636-4bcc-85e7-865b5f70daae",
        "cursor": {
          "ref": "88cca1fc-1778-4d22-b835-80bb8ed3dd9f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d6456b6e-406e-41e1-821a-f13140c1a743"
        },
        "item": {
          "id": "22628cfb-5636-4bcc-85e7-865b5f70daae",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2e1f15e9-2e2a-4bfb-b7f7-a29fa840725d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b745f9a-a09b-44a5-b1b3-79a356c5ace8",
        "cursor": {
          "ref": "6992a5ce-ee32-4a59-93c4-c02ae2fc62a0",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a2a30e53-d60f-4b84-affa-bba655dbe9b0"
        },
        "item": {
          "id": "2b745f9a-a09b-44a5-b1b3-79a356c5ace8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e5bb5eda-85ab-4727-9a2c-121320e20103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd988e30-c0d7-4e0c-b1f0-edfdec075ea5",
        "cursor": {
          "ref": "1b213676-6c4e-4926-8962-c100e1ad12c5",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d262dcd2-06ef-416e-9810-2391e5e831e1"
        },
        "item": {
          "id": "cd988e30-c0d7-4e0c-b1f0-edfdec075ea5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b2a82ec8-ab75-49fd-b425-1857a02246ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246c884f-8a4b-4462-b2d4-ed2b50723ce6",
        "cursor": {
          "ref": "6930f7a7-182b-41e7-8899-e233a82ca461",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2c511d67-e98c-4fd8-a620-35b63e04dc56"
        },
        "item": {
          "id": "246c884f-8a4b-4462-b2d4-ed2b50723ce6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5954d1b1-093e-42c2-b956-9028b7d9764a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c46b04b-d0bc-4b86-b0fc-dbe82c8c063a",
        "cursor": {
          "ref": "dbd97136-4be0-46f2-965a-11e5f132d139",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "03ce0bc2-8e7d-4a37-97e2-acfff06468bd"
        },
        "item": {
          "id": "5c46b04b-d0bc-4b86-b0fc-dbe82c8c063a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0d92bd51-2b86-4439-b745-894b41e1a5eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dcb4df-ffff-4020-8316-7f92266f9cd3",
        "cursor": {
          "ref": "ce9a4c74-e3e7-4fff-89f3-73b1f7594bc9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c066e304-330a-4662-9dbf-7e637b37b9f1"
        },
        "item": {
          "id": "20dcb4df-ffff-4020-8316-7f92266f9cd3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a383d854-a395-4f28-88b2-1fb68c4f1e3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34aa1452-c290-4203-a52e-27782e9645b2",
        "cursor": {
          "ref": "077ccfac-6a5d-4c6d-aea4-862ea281c03c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "860b2e8a-825e-4eae-a9d8-85ba1a3a6d34"
        },
        "item": {
          "id": "34aa1452-c290-4203-a52e-27782e9645b2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5f74b7ac-c266-4eaf-9779-1fed866d9033",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f592b42-e100-4b18-b110-b2d36394951a",
        "cursor": {
          "ref": "8e26a0d7-27e2-447b-9095-e7af90c22115",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9a17dabc-38f3-40ea-803b-e0054639a16f"
        },
        "item": {
          "id": "2f592b42-e100-4b18-b110-b2d36394951a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7e300674-e34e-4ca4-ae4c-448a08935d0d",
          "status": "OK",
          "code": 200,
          "responseTime": 4287,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c18e68-2c5b-4e16-82f0-d5af649bb916",
        "cursor": {
          "ref": "f08fe9a8-b4ff-4ce0-9b17-ec708a89107d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b2357500-1642-4912-9b7f-f81560ccddb9"
        },
        "item": {
          "id": "34c18e68-2c5b-4e16-82f0-d5af649bb916",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dd147127-51a6-4d7a-aca4-fffaa649207f",
          "status": "OK",
          "code": 200,
          "responseTime": 6387,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "818216f1-d053-4682-abb3-60f40f856223",
        "cursor": {
          "ref": "1335bfa7-68a9-4c1c-96b6-5b99f0d2445c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "915d676f-3b48-413d-8ab4-8c561595f785"
        },
        "item": {
          "id": "818216f1-d053-4682-abb3-60f40f856223",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7849ea1b-1dbf-4aba-9cb5-bf4b4957e601",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818216f1-d053-4682-abb3-60f40f856223",
        "cursor": {
          "ref": "1335bfa7-68a9-4c1c-96b6-5b99f0d2445c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "915d676f-3b48-413d-8ab4-8c561595f785"
        },
        "item": {
          "id": "818216f1-d053-4682-abb3-60f40f856223",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7849ea1b-1dbf-4aba-9cb5-bf4b4957e601",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a00b9b-c06e-49be-a70f-050b4fba0067",
        "cursor": {
          "ref": "3cc38d20-c628-4389-805c-d6cc269bc537",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a7d7be93-4a80-43fd-ba7b-c199642cc735"
        },
        "item": {
          "id": "f8a00b9b-c06e-49be-a70f-050b4fba0067",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c66ec6ce-f24a-4ff5-8d9e-e443a92bef9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0d4097-6ab1-4d84-8cf5-fc692df56792",
        "cursor": {
          "ref": "d55e03d7-3124-4b61-8d6b-7aa786e086df",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f4695fcb-6855-4e3a-8d02-5abfaf1113b6"
        },
        "item": {
          "id": "ce0d4097-6ab1-4d84-8cf5-fc692df56792",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ed91eaf9-8293-401a-a4f9-0b5e9213d964",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}