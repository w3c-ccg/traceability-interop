{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "080f8c81-e122-419f-9c52-cc64645537b4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6d706987-3294-4fb0-b8fb-1665bdeea7ac",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4cdf2c5e-a818-4dc7-bd75-ad924031a030",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d1c3cb8e-989b-4df7-bbb7-98467fc61f15"
                }
              }
            ]
          },
          {
            "id": "47dff5dc-8acd-45f7-82d5-67f9adf605e3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80630884-176d-4119-85b4-ccdd4b2078fd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ad45ebbf-25c4-4463-9e62-49f319659557"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bb5a8e09-28f5-4602-8f73-a4edab2975f8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e0726b76-1e58-4cf1-ac89-d7bb3c2442f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33a90c1f-c610-406c-bee5-7a99d589ba5f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b4f5638-3512-47ff-8dc3-cc96a1e7d2b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f887403-755b-415d-94c1-99e4876a1e1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c28717fa-884d-4740-a091-6aa70020f2af",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a92bca4-9332-454c-a8da-3414d1f6f034"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f026f6f-7f60-4cb1-8fef-cf8f72ea3b9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8a007d47-47b5-4c95-8a05-792eec8c71fe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c0eefdc-0504-4fd3-aede-d3a3bee0f078",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "38c8125d-70b5-42a8-ac81-9ba8c642723b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "895cfc7d-e349-4bbe-8863-67c417964983",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77883668-860e-4a27-8a5f-e4594d13f678"
            }
          }
        ]
      },
      {
        "id": "6af257eb-3a58-4cfa-a904-cc69b78902c5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e8a2dc7e-8828-4727-b2a5-2f112dcc1c9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18feb9ef-9040-4c45-bbc5-a2e05ab3225a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98581b1d-fe7e-4151-adf6-82dd10f6acd2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e561d-be7b-4523-9c2e-97efdbddc54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c18a40f2-dad2-4d77-a164-1667449a1b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f14e51-0e98-4a06-a8b0-dffaa4efaf75",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1b15de-9c32-4a0b-97d6-5056b8c6db5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69ab1113-fead-41cb-8aa0-de4e7c66e6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fa6c49-bcf7-4c2f-a078-6eb7568372a9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a794c123-c939-49db-9282-4824d5368a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9668aaf7-5d11-431f-ac2b-9e7b0e350dd0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7d7174e9-8aa1-4e86-b298-faa631ef49ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9127cdc1-c7f2-4a69-9389-4337d6876222",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6c231c-af35-411b-ade6-b50880b8f284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4870d754-f2d4-4c57-8f29-058122d2bd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2698f92-f8ca-4a1c-b16d-a7615403a0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfc1626-6549-4025-8e81-4c261af9ecda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a04a021-7a71-4d55-a6e4-396b8bd71e36",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3639773f-c482-4ce2-a8ea-9e84ba6fa128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a33405a-3068-4c37-badc-c3e434bd9b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b4991b-345d-4878-9aa1-5989fbc8f4a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "147105e2-56c4-4e5e-8df0-79c5c1a66f39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "66ea1cde-fb5c-418d-a18e-5f7df5743320",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba41d6c7-90de-4274-915a-a63b93ac2854",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f710e40-40a7-4fd4-bc01-eccb8361fe0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "37b99902-5d11-43e1-8e0c-2f7ea9510514"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c686789-989a-4567-bfc7-538d50033d60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "dc1b4deb-a505-47e4-8ff9-fb8ad8094dc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8a7f3b1-135e-4f61-9f63-b343d5830cd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b22c2c6f-610a-4fa8-ae09-b439391a9e1a"
            }
          }
        ]
      },
      {
        "id": "f90df234-e4e9-453c-94fe-834d69900337",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0b2927dc-e9a8-41e3-b3eb-ee351c1c8c01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7db030d2-1120-4b75-ac8b-8d35a1abca5c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fc2d814d-0b24-42b0-ae16-c434fc7962d3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5080f302-85bb-4b9f-a634-8d43556f2c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc1d1b5-d0a5-493c-9d05-3fe4ed631b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b949002b-f0d3-4fe1-9a0c-6dc6daaab499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e79b46d5-95e8-40c6-8b12-5fe222ddc74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c07490-8d6a-4020-a395-238f389c3709",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7181acdd-f253-48dc-9934-e756eed76a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54465bf0-0b2e-41b3-a2ff-40bc056fb5bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc11fb1-f8b4-48a6-8239-58523af8e726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74e2f28c-ab3c-4279-9fc7-d97279acb992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e784790-a818-49df-8cd2-ba400215f6f1",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb29c18-e682-4ddf-85d4-f6a241e3d068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002236bb-3d66-4a70-b651-bbd733995f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e7d1c6-e552-4039-84d0-e50d734e5664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3c27b78-e0be-4949-911b-9ed66a064c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d84964d-7146-496e-a96e-041a00af260f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3900a5f9-556c-4782-a9c4-3c4d1c2fa3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ae80d7-3f27-4e33-a129-6ad08b4b3704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca0ecc4-0775-4a33-8316-40aa371fa321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e61f2ae6-5858-4bc2-9273-c2ef9b284fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b582da35-423b-43d2-ac3a-81c3d8e040b3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1bcbd6-1028-4102-af2f-c1defc84e9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48414ef9-32e0-462d-8df6-1f8e11b3b579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd69800-e859-4d3c-b8d7-209178d89d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3935c7d1-14ed-4f2e-affc-2c2157ca6e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0001f2-18fb-46be-a896-ce3373470e47",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d0c23c-4d31-40b0-afc7-09eb92850d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977132eb-bbcc-43c3-8d16-4f46e8d74ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebd128b-24c8-4726-9cfe-ae38031def68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebde0ecc-2e3f-4ecd-b9ed-2be308a15803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f1ad7c-e63c-4fa2-ab16-bd73ae0335d3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94414baf-48da-4d32-82af-c57a15665cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d301ed4-a8f4-453e-915f-68b6d53d9525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf316e8-b9a1-491f-a878-58f473a31563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdc4d70c-5871-4fff-829f-d2c7fa32af39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d071fab8-b5f5-456f-a080-98ed5d99478a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382a48dd-29c8-4f89-bbc2-8ecead1ed142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ac384e-d0b9-482a-92bc-cc21ae6d8a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ea21c2-6118-4584-95f4-42ab748bf50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f87aec8e-2d99-4283-8fa4-80ea7a5736ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c786eb-895f-46a7-8437-b011240f8977",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3962dcfd-a514-43f5-8237-7684707ccd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee179580-241d-4cdd-a513-5df355087c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72fe95c-51a6-4536-a44c-b946515ca895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcade284-6e9f-4e98-8eb9-e9216dfed56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9258ead7-e4c0-463a-ad26-b1eb681765e2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77614aea-9507-4f56-97c5-623b65f2a685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7ffca7-efc4-4370-8f8c-2f65b31e608c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d9c181-6d69-452c-8c95-de9ce8cf42fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25ed2cf9-6935-4816-90b0-121611505499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e03bde-0177-4f4f-9a3c-8a37cf51c4fb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebffaa5-3170-4fd4-8286-a8f234844581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b860d2bb-6dc4-4a0b-8812-e580333df6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1345ae9-e111-4b9a-a3b7-af9570eb42f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9259649f-1395-4bce-92a2-24cc4a51051d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a35cef-ed64-4582-935c-d31ad39c7533",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1fdba7-9d57-406a-953d-579f66aec573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3629a42a-6989-41f2-9fee-7c061832fe3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4a6df8-8d23-4a30-80e8-bd363d41b831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35bd416f-e6aa-43f0-ade0-f2616f6cab64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95740ff2-d5f2-464c-a4b8-d508af293318",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd66226e-6f1b-438b-a6bf-08cf41408e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86793ec7-6c16-4207-ab70-6b670076e2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f673ab52-a4a6-47b8-af6a-1406d3c65cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dbbe13a-7f53-45fe-aa27-17c158627533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc70429b-aaa4-471c-8d3c-79efefaba385",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6278043b-4643-49c8-b0a2-dc2eed4240d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6063c93d-7322-4e64-b45d-b5317c3da0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ddc768-af34-48c1-ac91-02725d9897cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b8180a-b677-4939-8b24-b81d83c2e06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d4a2b5-fbd4-43ed-935c-4929e9b5142e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211fba89-008a-4e7c-b45e-cd2cc3a160a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9fcfac8-4987-4007-a911-187778e41b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53482b3b-3daa-4a2a-ab7a-94eca033c703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47ea04a9-2e36-422e-81ae-995d82fc55ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8b3153-8876-46cb-9668-5c437fc2656a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1caa0e8-cf7f-4f72-8ff1-40fcc895acda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff480777-440e-4fab-b673-84bc1a97d942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ed188f-4583-4acd-b133-fe0194a00798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eaebcc1-0509-4376-bdbb-818a878ca1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b19d968-ae10-4699-93a4-9d4135b6ee8e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe15233-21e5-45c0-8e95-99758b0afed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fad4e4f9-db56-426b-8197-8015a0a1eb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ab7848-0829-4a1e-b9ee-c1a59c784eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c3683f1-3667-4ba7-90bf-bdd33b687bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b03bf65-c58c-4b93-80a1-5698eaf4197c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a695882-0293-4704-bc1a-eacd24216a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce183e1-5e6e-4725-b4dc-42a9285f449c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb972408-684c-4736-949a-b6a7ece6de78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c332d04b-5e28-4b45-8ab7-5bd84d9cd07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d067fb4-b7b7-484a-90af-0a327214c9b9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e73af5-3c71-4a6b-805d-00b4f77c81cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38994552-0e4c-4046-bfb8-381ed9509873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e21a777-997a-457d-aad4-4be12aa63420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a367e424-b510-4375-a598-083abc8863c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ed560c-7163-4af6-a5fc-1aa3cf132028",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fae9e38-4193-4fbb-be9e-5c4a851fdde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2773dd-6282-4794-8ab0-87d11b9f8e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15ab1be-c9fa-48df-a2ef-e9471240c101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1bb732-ea2a-4e53-ab5a-5199423dcbc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fe7008-7f1c-4f1c-9ca5-daa83c17970e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6ed371-f92b-4b60-be07-5fd9dd2facbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7090265-949c-42ba-b4b0-3700bb44bb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dd19d5-5547-4d30-90e3-007acdabd751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65067e53-9c2a-4db8-8661-9fbd2481e241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584eaba7-a7bc-4909-9073-071bef139639",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667f3587-8ee3-49ca-95dc-1b748651fa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85cca62c-cc07-41b0-bb7d-d11647fab6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67595b5-ba7f-4511-86b0-1d84ada78555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecb98b5-2b4f-4749-b37a-9106547f0319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f06636-d8a0-4c9a-aeb2-5a5b70b2827c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0930997f-8dfc-4e1a-bbd7-8ae535052a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c5219c-fdd6-42c8-9b41-6ee773532c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17905ce7-a1f0-42af-9da0-9c5f7c266280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7647f386-546c-4061-b3e1-f63bc1997aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926c5430-56d6-4b9f-bc33-5071e1793616",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e0178b-784e-4efc-9654-8e5277180f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d73d3d-b9e7-4129-8e6c-6016b3aa621e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05770236-8c7c-4f27-82e7-eaf8fa90c190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f09f06f-0576-41bf-a783-bb195b706128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9009597e-1310-4e33-8299-1d7d3a88ab1f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a421a2a-3a76-4734-9f3d-8f0c84ce6596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc8039c6-b3e2-4c66-bb93-357b172fc5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46e4d54-b945-4553-98dc-c959aec7413a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfe11d4-a718-4a2c-8451-739ed99ef8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddef6747-4242-4278-9c11-c5badd4b227a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baa1e9d-b80c-4cfc-9ac7-9f6602a3f703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca8dd44-9be3-4bfa-b3ea-b4338a675c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab09574-4789-4f94-b9b6-e3d519d09843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "893c4b1b-bf67-489c-99f4-98660e766af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eabd769-7443-4f26-862e-dc697a3a973c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40ab3f4-31ef-46e7-b706-36687fbec2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10e6d00-653d-4b9c-b305-229ad21f0841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065d603e-4f30-4d40-a6ed-678d15e43248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df4b96f1-480f-4c87-8ef8-b098e85f8425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b197d66a-1a3a-44b0-802f-d2a8f8b217b6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c56061-2038-42a0-9247-b5b7dd8dcb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f515200-9939-4f3e-a271-cd286cbf758f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b36e0d-133d-4202-99af-c5c9a1effcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c814e229-6a9b-421d-93bb-11dea2eeb167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfc74e3-7158-4146-83ab-8c4f52699849",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d0c8fd-4277-4cb5-b13a-e8a48b63451f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310aaadb-a68d-4498-9cb5-45245ded959d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07596f6b-cc65-4421-b7b5-1a34f5740b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35e286ef-f9bc-4ed3-95dd-f8d6a656b196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e2ee4f-ac47-4e65-9477-ad285ce4fa70",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31c3cfb-464d-498a-9080-4d3c518c5123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edfa529b-562f-4d31-a0be-cec76c474f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372d5583-a073-40e4-a25f-2be2a91e20c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "207a123f-3449-438f-8ed0-73f5cee1cd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeed367d-81e8-4725-80e6-2ff6aee2e1fc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38a5ae2-4c93-4939-8919-35e5843dbb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf348e7-762f-46a4-be1c-0c50dbec0369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e883defd-1696-42d7-8857-6f0aafe10963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db4120e-12c6-4d7b-afbc-9dd2fbc2fa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a5b35f-351e-4c61-b259-497594fbc7e1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c07e46-864e-420a-8ede-5544cd7c1c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebea8104-4caf-435e-b252-8c3d327b89d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c2046d-fc2b-4d5b-80aa-0ec0cfd6f1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdb76df-7431-4949-ba77-8c1f3f1e0410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f3b156-b88a-41f9-baae-3a4130393d31",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3fdc2b-1a6a-4949-8b95-6a3c3eb2456f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba0289d-e07d-4b76-989b-a673bb8a26f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a890feb-fd96-4ad0-80f8-4d017a29d5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1b54d3-2660-4132-9c2a-94dc6361d0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68846a6-a114-46b2-af19-17ba23b1c5d3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9811b9c8-b72b-4d01-a101-583d28f62a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb9e796-20ab-47b6-af9a-69e29fff953e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8dd217-058e-4454-90f0-b8a4b39066a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bce03cb-4422-4c14-b00f-dd359feb147a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411d5023-a284-4dd1-ac0b-aaa6e4d68d84",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e865279-caae-4977-9819-deb4b16cef0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11651a2-5f88-4543-ac3b-a101724ba6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ca4605-7ab2-4088-994a-130c12244f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6394bb-644c-4805-8986-ea4acc7fdf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5849ab-a72b-4258-ba34-cdd589b289bf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89801db0-caed-4486-aede-b240e29eb9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c81da7f-a852-41d7-8adb-155e6c8c69e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4225a09f-039b-489c-8e9f-def6249c04ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "856d6bde-fa0b-4415-b43f-4a8fdd99859b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6429773-6ef0-4de9-9fe4-5a3f83ecfc7d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99db2803-1096-4df5-b7b4-843aca1e3212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81b606a-a2f4-448f-8dc9-9761292c9486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3287c749-2e04-47be-9b7b-24141a7d0fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe43dec-550f-4bd1-a67a-63e8164f9a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b1c6ab-7e82-4c15-a580-191b6ef3d8c0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18566720-8f3f-4a86-8d68-1294beb6e2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29c725c7-5a5e-4616-a6fc-6ffeed074a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30136171-fc92-4c56-92ad-1f0afb2e3ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90fda1e7-a0ff-4918-a7fd-020628757018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2f7c81-32a8-4fb1-b408-70b4ec7bbedb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db51cb9e-f52b-4b27-bba3-616d5a93f6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231230f8-040a-4f49-b709-fc61116565cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cba15f-2f5e-40e8-84fb-668ca3198e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5908d14-5421-4975-a5b8-a9ba0f76d762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3892716-322a-47bf-a91a-3dfdbc2feb53",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cbc3fa-5b4d-46ac-bb6a-53f8b16be572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13fe6146-eb60-4ad5-a036-0f6b6817def8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670a41b7-b42e-4c76-9b6f-43469b5cf7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "42785673-ff12-4fa1-adbd-513da0450d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e23890a-dc26-475d-941b-d78702c50d8f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caf6b51-f4cb-4812-9718-60133aeb87ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa24174-76c2-478f-8b8a-cdddf277fe26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bf3613-2fd9-4adb-aaf0-121c92023535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4228bd3a-0ece-4299-9d58-65516eb74e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501e68b0-98d8-460f-a494-9b0b1ce3ea15",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f76548-c2d8-4484-839c-d9b4b8761ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5bcd7c-14ec-45cf-8261-22808ebb8b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84d21ab-b8ec-4784-a1ac-9a177d2a9ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22dd2884-0d50-4af5-bc66-0e840647f58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45406884-b5ad-4563-b37f-d0721a82a197",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb96bcc-cb3f-4589-a835-8a548750fc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a149e7-8049-42fe-937d-357cf0005ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8efec0-0460-4e66-8dcc-485d7005b27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5a581b-1c54-4b1c-9cd4-0a2cdec41cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e41c05-d25b-4062-9191-32249f271b45",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3769da6-109e-4d8c-b253-08d8b715f71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4dc3ea-03ee-4fc4-8cb0-f04e9d34b3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c34255a-065e-4b29-a37b-791ec3be0e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c29ab31a-8e5e-4270-8d5b-1fd8afcfd9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90585a4c-0c47-451a-9d7f-6a6e49456dc4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aefe32-66d5-4979-a309-d4554afdfb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3222499a-b12b-4139-93ed-031b2eb06750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4167480-6506-44ba-bf25-e104222fc47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1a4ecb-0a39-43b3-9331-c42bbe3af707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e419f2-042a-4310-ad88-3e9e1f109fe3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90456a2c-6160-4b44-92aa-8d7a151b2ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8041f4fa-ffa7-4cf9-8279-9793679fb744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebd2965-5d54-456b-a82d-3ab6914d6a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "845319ce-54be-48a0-bb37-6c95427ab74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2fd94a-0241-486f-be0d-623558c51149",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62462bf0-f0d8-4fb0-982d-b5bea4ffca89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b06478-387b-4daa-b48d-b3b94b3c81aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9cffc5-c069-4b14-a55d-2a6850bb769b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4137fd7d-b915-4ec4-a9a9-9145bfeaa5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772eb28f-6c33-48cb-9122-36a74667e704",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aec819-04dd-42cb-8637-8f98f2e91e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57463b7a-9a2e-423b-b688-d6c200217b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f79e3d-efd1-4d45-9f49-1762d5682780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b6081c-0afd-43b6-a053-77fed4f69c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc4cf92-167c-4f9b-bac7-fa5e9194937d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02107c29-00d9-48e5-b560-afe4e2df4ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fcaa2b0-1801-404c-8bd1-8c96480848ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3e7210-582b-4050-9bf5-db62f7d3bd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82fdcfce-49e1-480b-b0c2-0a68770460aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cdb985-4dfa-4e80-8f3f-a739dd9e2228",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c977dff2-e81d-4092-9994-6ddb4f69bac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581ff196-9353-4a34-a270-ce3ebf427c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa7f977-c7fe-4a95-955f-28d6a28dd382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0ca89d-8209-4206-9a56-c7b1daecac89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f94605b-b5cd-4d51-abd5-79a08b9ec668",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61865c19-82e8-4076-a72e-3e04e005dda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85bddec-ab96-4302-83f6-2fe1a57a1f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6e430c-6a2d-422e-9e76-b19d9c04621f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e40b3e6-16a0-4297-a806-9a8a0fdd508a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81c74f2-25b8-4242-9af5-4a89612de91e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220a5e13-f737-4387-8152-9bd0c3f14f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fe6a31-da80-4eb8-80f6-2d5730e375b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc0711e-38fe-4c69-9bc1-7d484d421236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47a51118-c12d-41e4-8b56-ae7fddf864c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78a636f-df3a-4bf2-a1a5-110e7c13d625",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87f80ee-3092-4f10-90a8-d0ef5e6d78df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7626b855-fabc-4209-95b0-828ba9b4bb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321e940d-127a-4f51-b3ec-b7a4a0b2d8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "87459cd6-0b30-4ab9-9c38-0185fd1a7e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f158876-5acf-4cd8-8ff6-b884072bb537",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698eb083-7493-4ab8-8c46-43e1dd3ce079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3911d7a-6c3c-429f-b5c5-288c85e9bc82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e84d11c-4b7d-477a-9175-feedb8e88d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2023b1-d1a1-45c1-b0e6-8b95d97339e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61c9b53-e539-4dcb-a01d-6b8d8a1dee07",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1b8835-de62-466b-908c-b2fe5a61b6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc60d6be-2741-4f2b-a027-3c078eb7e36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e26714-94db-4c0a-9d6d-83b678575de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebea78ca-320b-4cbc-8853-a063d8acae76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9dfd71-55c1-461c-99ef-68d23a52deaf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ada9a1e-57e9-4460-bf57-a430c7298186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa341a93-f8e7-4657-9e17-8fcc4d26fab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf3e9a5-e6b3-48d1-bede-3f6a24aea915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "740431b9-3574-407d-92c8-729373f4469d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc7a69e-2a38-4906-a8af-d1bd0099dccd",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be45c81c-4d30-40ba-80e1-e30b76147dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99503b38-957a-4f71-9486-973c9b7ce81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945d3b8b-f1c1-4466-842f-4d897ede826a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6794ea9f-41ab-4c9e-b674-768300f3fdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f9e363-a041-44c1-a8e5-218bfcfb1f64",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e262593-d62e-4103-b3b0-1e8134f30fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79ddf16-f3c1-44b8-afe3-f4740641db59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e28725-1296-4f64-b678-a08689ac1ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "04d53385-e28d-484a-b650-40ac6849424a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837e7d98-6c18-4d7b-a804-15a6d269125f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48575ef-e452-45e0-8659-2fb6632a52da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03859a9c-fb30-4b08-9312-8d5d5c42eef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20615172-7d6d-487b-8c18-d9b9798e335a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b85405-8d6c-4934-b715-97ca6f142fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951c2c13-cfcc-470e-b598-e50ada97d84a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248d6968-af86-4f7a-816b-e8cf5bc21502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e76f33-072b-435f-ae6d-f417b31444a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a5c503-f7eb-4320-a8c3-9d140e7b1dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "92a0742f-492f-4786-824a-2ee0203bba41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04716eb1-02cc-4394-b9f4-1278cdcaa294",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b719e020-7958-4b81-af2f-51d303916bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc845f82-7906-4ddb-803d-9fd77c1e9a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d1191e-482d-4c63-ad35-a47190667e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9f066c-787b-4242-9fd6-dc80035d774c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e591ea-24c3-4216-bf52-c0152e3c1613",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2ff92e-3d4d-40af-b488-520dfbc80f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f200138-31a9-4fa7-9b93-c094dd4746ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330e248f-8277-4537-b459-3d01f2606105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "086d3ae9-b0fe-4aef-bdf6-f463803db7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05871e1d-dcfb-4a21-9e15-ea0cca88bedf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f139c4d0-e174-4f76-9b1e-c4341ae45379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eea943b-7204-4b84-9550-b095cef0fdd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c4be23-a94c-4bf6-b282-c4294257bf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0de5c825-e0af-424e-8d26-c7a68926eb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0268df6-559f-4b58-ba4f-d576bddce41b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30025e2-0f5c-42db-bd11-8b1cf8fed6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2a0423-9d33-49e1-b40c-dd53c7269bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e1ddc2-a7f5-4c1e-ba78-c782bbdf7101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef527e5-051d-47c9-850c-0145d3843304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e14eeb-4306-4601-bb67-6585647cedac",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed934077-37ac-4640-9bec-836df029bf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeea48f6-9f15-4700-ba81-19a7d6a90f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58a55c6-7f89-42ce-ad5a-dba5395b8840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff18e75-f69b-4ffe-8fe9-ab57b79efa49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b06f44-fa47-43e4-877d-4f7f0e1128cd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c9776a-7246-47ed-ae84-d7141ef8cc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b33eb6-4f07-4891-935f-3371cb86361d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ceed88-c652-4e0b-bf60-1f03a1c23290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8325485-3d95-4cc6-8f72-800dc2167f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6a7031-5fc8-4c43-b05d-4854ad2ad51a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c60749e-0227-4f0b-a8e0-f37f78f3c73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90386219-11b5-43f0-aebc-23da3806a3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88773478-c208-4ecf-a321-fd9debd80322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5479fd30-7c0c-417e-be2c-f754dd02ec33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59458659-6394-4897-affc-2d011c190a0a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbd0835-b68b-4890-b612-bf93dc80d60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3683224b-ce20-4670-abe8-ab6d2b722dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e468dd36-a277-4d98-bf06-d91e9917875a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb2deb6f-b3cf-4fb2-990f-8a9c1defeacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14836c61-266e-4725-a70f-a141818e587e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4db57c7-a549-4a86-81c6-ff9a60a5c6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72458e11-adc2-4413-8336-c669415a04be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b60c85-51d5-4607-a49e-7845d257aea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a372db6-b5ac-4402-96b7-340586f607bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d3037f-3e66-4ee9-b56a-98f209f70452",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ba1326-18bf-4676-918a-c0ca378512b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71e1b44-fad0-4112-a89a-078182b85f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883a260c-39df-4e6b-98e6-f9fc5e7c4c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d8e661-aac3-427a-9f11-5f729fedb742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75746ef7-02d5-4323-b71e-ce144977a98a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3493225a-0b87-42c6-bc55-51c8b1fd5035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144f65ac-d65d-471a-978d-aaa6cecb28a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc9601c-74d6-4472-ab69-e4061a62865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1507e375-9a7f-4388-b217-801735f9f135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac8662a-db05-4083-893e-dd4623cf4bd3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e84abb6-010c-4a81-b744-791d426a159a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ae49dd-3414-474d-a61d-6586c6a7087f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e0b1d5-e177-4ffc-8069-68e0b3da18df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46d98638-b8ff-4884-b011-751c829e1eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34150cad-0180-4a52-ba24-828a2e4613af",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae418c96-f003-488a-947f-b975976cb4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b28d528-6d91-4c60-b54d-f11481ce545f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d795dae6-3b7b-42bc-a1f4-f2ac6edd07bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1caccacb-fc86-4c30-8488-2dc2f03db5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6639dd70-60ac-4875-9e55-d66e0c01d051",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed9473c-a873-4e5d-b889-c375944d3225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8301563-4f19-4870-9887-4d20f3ae64e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7919c269-0ef0-49aa-bbc9-f592b7ba82f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a18037f1-2e14-43d5-b5ce-e6d6179a7258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45188b8-0045-470c-8ae6-6cde52bfcdd2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba46377-4f21-48d0-abf9-d31ece871767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e9903b-160b-4cf4-97a5-97fea9a26bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a3538c-89b6-4f12-964a-ec303b4b0149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be2658f2-a9e3-4da9-84bd-62a6cf6fe147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7f29cc-4c6c-4571-aa4f-94c449b1d762",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68df6169-f6a6-4366-9c17-b9161cbdc233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e59ee3-bef1-4082-be8d-c97b2463db7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98b2556-1ebd-4b18-9e1c-223ddeeb8cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "537729b4-11c4-4ca6-8e50-8ab7210da9c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a77305-8ef2-434b-827a-59fcb46b31bd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660df215-11af-4e1e-a224-d15b8422ed05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b880530-4f8a-48d3-ad20-76752b964a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529c194b-0e3a-4ce5-abdd-ef1c7c36a111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f86c097-18eb-4763-ae17-a3ab98b1a2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff34b34-867a-44b3-81dc-f5275767878f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141aa1d6-2b25-4c8f-9466-f80331845552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6662a55-c848-4e98-889c-514a8551aed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5074f1b3-2784-432d-8d0d-2af0118ed7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "152595b6-f1f1-4626-b93f-df28a0bff849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946e0d9b-1331-480a-bd68-cb5ad45bf9f0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0577d6-d273-49fb-87c9-21f03dd5749b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "494e12f0-cfe1-4c92-a995-479aec4606fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251f4ff5-c8ba-43b8-841c-8917eb26f437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "537ec7bb-ae3e-4cba-87e4-d7c3a2858bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb9555c8-b652-42e9-b60f-79c9eb2ff133",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3064648-edcf-43af-94be-136d0bd2ed97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0707281f-19dc-4385-ba12-4b3265360bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80512e15-1ebf-4655-b58f-0fd684c3e704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d556d7f-9de3-4a5b-bfc2-31d9f688e1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6b7ca2-d5aa-42e3-9a87-467c6b55a707",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75141088-b170-49a3-a840-db092e5891ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbbdccb-41e6-45c3-b683-a60f897a685f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d8970f-d2e0-458a-b5cb-2b36c92a06cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "031490c5-2559-4187-9d28-01f299bc933f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0848d44-6f32-482c-bb77-391fab377ca6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3fa88b-92eb-41bc-bee2-0a2fc234f6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9545635-cf27-41ca-af8e-baca066c50c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7fe448-ac7c-43c5-b178-ce9687dcf32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4a835e-5012-4e9f-843a-07e70a9112a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7ec94a-665b-4f57-be84-e96db929209e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa174b8-4208-4449-9d4a-034e281ec536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd30b86e-11dd-47b4-8ae1-54b3c55d6ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c6d4e8-9e76-41ff-b2ee-f1211b404f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b15dd2-85d7-4832-ac86-98cc46881354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9e4320-fd5c-41ad-8b37-976c934ae517",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553e739b-b129-4ce7-8444-b8cbb7211809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f9fe00-aba5-4eb2-8ec1-248c889dde7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ba3a85-e3ef-415d-b50c-c0c80bc3c863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4113880f-f2a3-4b58-9fd3-2e12136e186f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c90654e-3373-47b2-b808-7a6b0727437e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acf6f8a-a2c4-4b67-a61c-dc9b1e35c59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc289538-9629-4091-b72e-cc480f634cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484897d1-919e-4722-9ff6-7105dde1310e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a19630-9d9e-426d-9ac3-6b77f011eb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c96cde-f080-4fdd-8b4d-837a0049beca",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4384c6a0-d6cb-42ac-ac15-c338188bc038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c029640a-fcea-43d4-b16f-5e235defbc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6892597-7283-4ae2-a4a6-69234c2a2ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdee0d2c-9db6-4e13-a3ce-886a8718fa2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c162623e-a3c8-4087-a8b4-4e4e187edaca",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c76122a-cd43-45ee-a309-f4587c9c1fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fdf2ea-eacf-4e61-9937-aefd48d39520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a547ee18-06d8-4851-a1e6-147303f99448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb69ea5-0e48-4457-92b5-48c3adf6574c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb91806-f75c-4c08-9023-83eb032cab14",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3833046-7b5f-409e-bc77-6ea4606121f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814cd22f-53c8-4a95-affc-e121ec4e0802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2135f03c-1ecf-4e84-b4fd-a75753665fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2117c08-2cb0-493f-babc-1b0b3d039462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d012d6-fe70-4871-afd3-f60ee22c1096",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d575df-f951-491d-a57f-da14a5a4ee77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad3fcc6-96c5-4fb2-842f-ddf41eaf1c00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27138ff2-d5d0-4175-89ff-4c1d76dc8141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "edb0f758-e039-4336-a6ab-9c874e652b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abdac21-28d8-4326-98db-6cac2a111d24",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa088653-0f9b-4d61-a94a-74d1edf047bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62766ede-301f-4815-a233-bb4cb5e18806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74eec71f-0266-4731-839e-7dd182744595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e40026b-0bf2-4d82-9cc7-70cd8dc19a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04bf81b-ac60-49a3-ba7f-45e017bb44ea",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27098e51-d712-4fcb-a114-526e0d86155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa0d60f-91f8-42a3-af7d-202a30929969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea961bc-5dd5-41fa-bda9-b355c36358d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4a9481-4547-42cb-b49d-3a11ece1357d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c39a34-44bc-4d7c-9d43-4ad1f7215f43",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07eb3cb-96de-4079-95e1-5492e111c62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ba1346-9643-43c5-adff-a8af22a4deb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab0e988-3291-4822-98b1-eff66a8878ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "909650dd-6634-4635-bcd7-fb6e4c14e4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21190c4e-5550-42a6-bb84-c42ecbb7c746",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626424df-791f-4eca-8464-c957fcbba810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbea077c-1ab8-499f-89c5-2cff7d4060dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdf8fd5-3fc8-48e0-940b-c7b650084531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "231199ba-f227-4558-b402-72570b7957a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1075ef5-0385-45bc-8486-d34fdfb82964",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43ace42-fdd8-4892-a084-03ad21d6da58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d32cf369-15d8-4c7e-8980-599cd3feedd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f35e6d7-5487-4d79-9d83-a7fcb946644c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9059034c-219b-44a6-b805-04afa8bedd9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fe673d6c-edd8-40e5-9578-5fc52be3c366",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7935db9f-482d-43f0-8a7a-e7f33c990792",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0972c722-048c-4d82-84b5-9f19692f6fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86946a1d-2c23-4ff2-a2dc-14fe8f43dc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff58761-86be-4cce-ac12-9be1dcf8fe88",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "2d4a1c92-9522-4b25-acf3-09dec99f4ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921274df-51d0-40b5-873e-13ef438ae5f2",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fdd124-4c2b-45e8-b0db-0eb05b0afde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30b61176-e158-48a8-ac2f-72f0f42e825b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1b8fec-cfb3-49cd-9fd9-f5efd7c93dda",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fc09195b-e0a8-440c-a30d-c08ea39f1833"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc2a810e-3391-4738-8090-ca180d84826e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a724160c-cc50-4ded-abac-0941d4159543"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b14db78-d413-4db2-b469-e02167724dea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6efe731f-379e-481a-a97a-e3282421d7bf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bc51b0df-99f5-4683-a8ca-790b225c884d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f0798c9-6a1e-4a6e-981c-697a024536ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "01126f9a-09ce-48a9-9a58-1f9cbec5fe1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f021fea8-cd64-497d-be79-a1f6eed8a974"
                }
              }
            ]
          },
          {
            "id": "d35611be-2f45-4cac-920c-26c6462f2a45",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aaecdd62-a185-43e5-98f6-52b93e7044f7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2224402-cab3-44da-8d3a-9c783d7f92b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d132363d-56c4-471f-bfd0-d84a3237100e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ef2a513-cb6a-4dd8-abca-601a0aa18afe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "681ecf4c-2583-4644-973e-814f99fe3539"
                    }
                  }
                ]
              },
              {
                "id": "6cb6a131-acd4-4103-b8d6-3d84fc0e4ae8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e1a9ba5-fe61-40f8-ab50-5db874a4c27e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d564b9df-77f2-48ef-a588-d88880b79e59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e7ac9ef-be5d-4e73-897c-fa9ef9099fc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01bba6d8-09b6-47a3-9a0a-4a931df0653a"
                    }
                  }
                ]
              },
              {
                "id": "9814cef6-0689-45b5-a103-1db747729ab8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5cf1624-45e7-4bee-ba7e-ca2d6b4a61e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6606b9db-3a7e-4494-ac4b-23ac63e5e9c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afd77166-614a-41d5-9d80-d26ec3927aff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "16e82478-744a-4afa-92e0-74b74644befc"
                    }
                  }
                ]
              },
              {
                "id": "48eb8365-2d8a-4cf4-8bb1-bc70dfa11381",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f14f2f2-7c40-4f38-9877-b144d878a0cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ef02b1e-b4e3-4a33-8359-1be25b06bdfd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b66cb50-b7ea-46c9-b15a-856f58a30c94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "62e91252-6267-4c03-a29a-5de9b780006c"
                    }
                  }
                ]
              },
              {
                "id": "f6f22756-6e6a-48db-912e-f6bbdeec2903",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b70c9679-8915-461e-a088-8eff4d95bc53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d59bbeb-9125-42af-aa2d-d72e722f43b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f97cb10a-e5ba-4802-8b3f-5d2c114dfdf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e56b596-3563-4092-a794-2f48861e8b93"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a5a44ee-98e7-4fe2-bf1d-cd7b113e3326",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "141f7dd6-9b70-4a8c-92cf-52f447bc5456"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b43bbdcd-7bc1-44a2-989a-01ae72c5b53e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f7e4c2ec-e83a-485e-a750-32df31dda51e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f900410-2dec-4e0f-bc6d-49d430794f80",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c14dbd60-d242-4593-8202-bebcef3b0514"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11b0e813-a44d-4631-b1a3-affbf67d2c1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4416a303-de85-43a1-b44f-99fa0cebb5a7"
            }
          }
        ]
      },
      {
        "id": "ca860bc1-70eb-4072-bc57-28d768991f92",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1e3d8cc4-bea9-453b-9a7c-92e5018c0003",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24871cb0-2d62-4cc5-acb6-3b77dbe3a7b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2f9d8a2c-d106-450e-91ab-d468cd92aafe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d416405-9b64-4b9d-ba8d-f77cbd4de05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407f572f-a434-49bd-bc35-51752da94887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de44e383-5ff8-4ab4-8cec-f55a1322cd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0751f12b-2daa-46e9-a5b0-1741a439d6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaefef7-956f-46dc-aec6-ada09dc11081",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cfcb7b-1a62-457d-8fe2-6892e1fb7520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e32e40-e26d-48c2-ad51-5a2027b6e044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781b47c3-b7d3-46fa-aa10-dd981a82553b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19f04308-5d50-46e9-9b3a-a6be7f9f8052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f3f5cc-c4a9-4a33-b383-9b59fea3e370",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91e1b45-901c-4537-a4b8-fab4586bd760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abd5cc6-c1ed-4843-b114-426370767007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cec525-78a1-4417-956a-b61b3e2398dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "144816e8-dfc2-4987-bd8d-ab4a7ea3fcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979cfc6b-95ca-4077-b071-60e8d5d20939",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15bcdc3-db95-45cd-a950-07ec8f38a673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3c724e-e5b6-4c9d-989c-8aeaa43e67d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da05232f-1e31-4e45-bd06-09de9c45411b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a187d13-14ee-41cb-9605-09096b29da4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ad4bb9-eb75-4b49-99e4-9797b39cab2c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdfc7bf-917f-4afe-b917-33aa4c042635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6787f2-0871-451b-b7aa-c41f9d5d899a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a18cf67-95ab-40e9-b61f-400ccc49f460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3b4c81-f793-4a89-bf14-b8dff51f7443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad1a98e-2aea-4406-ab92-b47b004a6109",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97097e0-523b-4762-a4e1-917efc12fb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a548c7a-8e46-4855-aac4-3ebd44b4f011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6658a3b-fe52-4603-a526-821b8db233b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02fa2013-6695-4d10-ba4b-ec2dc65ea77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d522cd2-8472-44c8-86ec-895c45e785c2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cbb4da-3431-4342-bbe5-501148ea885a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c530be10-b73a-4555-bfeb-7dfbfe10b6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7bdba1-f42a-407a-99d6-a788cdb19d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9628ba-adf0-449e-ad35-317d12f61768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1955ce1-0d93-4bf1-bd0c-ca99d04e6174",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32aaa41-d89a-472c-ab88-1aa94f893034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f016652-c1b5-4138-b8c7-958ee5602cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26198348-0f13-4c8b-8e17-63ae8c3a6711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "090c3d63-aaea-47ad-9c89-b3e58500a5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbb481d-45fe-4dd4-9917-53c7984da74d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e8dc8c-8c9f-45bf-989f-8616f8293c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8413bf8-b10c-4595-af7f-9198b78d20e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3428d684-a63e-4c4b-9975-4a10b2b2f508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b22318-93fc-407e-887e-51158c86b806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4572d986-30c0-4d8d-9f3f-1963116636c5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a506fcb-80e0-4285-b4c2-ac4b95cfedd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc04a33-bd81-44fb-869c-dffa7cb4c2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4866038-ff07-4656-9409-2f81da34b893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78262094-b991-48b4-9a6e-43a969af3af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d2d3ea-40f5-4db4-b5c5-6fb1c4b4f2bc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95ba4fe-1bda-44b2-b193-7c5984297124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b73d59-f8e7-463f-b70a-7033800af670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a09c844-ed6a-4664-bab2-47d25f3a906b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbe88da-73f3-43aa-a661-ea926a5beb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9e7cfd-446b-4f67-8b98-eae469cb930e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d28bc4-a6f7-4560-9071-b20113e1272d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdcb16c-875b-45d7-8128-6ec58a098288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab93e95-b751-454a-bfe3-e36528f0416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "087b3afc-2552-472c-9e65-d4c7ab12f7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361f5870-03d9-45e0-90f2-2668c01924a8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d494c6b-8e92-4533-b5d1-c8e7e52e606a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5beedf1d-a954-470d-816b-ef2324ef2957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470b3599-06e5-4440-b0b9-1985d79eeb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c3fac5-0082-469c-a33b-a6b8f8cc5230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9472a5cd-e0e2-4449-a3d9-e5f203878134",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b76e89-627c-4948-bb6c-c215870a7944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a34f4a50-be1a-4475-b46d-fa963a35dd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215678cb-ba57-4181-988e-d0c1d3abb823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f46f404f-ec4c-4507-ac98-8430a5a40e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdfb783-f955-471b-b494-aa5146320b5f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ee0351-5bbe-4700-9f06-7a22b5f91645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad55e96-00f5-41fd-9f2a-8c58cf1d3dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775a99be-91a1-471b-a8a5-2105b6570498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc59412-2f6c-4d16-a75d-c5781e22aaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34f4a28-99ba-4578-8589-39dee31a3f49",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df7fd38-bf8f-4883-ac9e-f88556e59889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8db31ea-75bf-4475-adfd-622de2ac6061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1fbaa6-44e3-440d-96aa-6ed6e43beeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a5038d-1f66-4322-b4c7-81702fa477b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b10fb7-44b6-4386-8fbf-63393093b569",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56aaa50f-0482-4493-914c-be4fb42b258a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feec9d8f-7486-4da3-850e-f383b98b7cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e7a321-2fcd-4b80-b46e-3806eda3c06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a609473-70f6-4c4d-bd6e-102ad89fe0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d71fda0-fe71-4d64-81c7-874ae2888931",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dbab9d-eb95-4444-9e54-5bd0ed1094ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e1235f-a59d-4044-86e7-a4cdf196ae2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a1a7ed-d2d1-4f85-867c-6c5009643719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "926124c4-34ef-4774-bd29-4a0d3c5d2923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99464ab0-b54f-4c68-add8-008d7a99d877",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59e3867-037d-41c7-8139-e1196d34f87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ab32bb-a596-4285-9676-d1f12f726a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6192787-a588-4225-adf1-7aafcb4deb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b68390-93b7-4bc2-9a95-b0f66c9a9331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512d8e60-b995-4633-9bee-fffb6899b5a3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d124c63-0975-4f24-b51c-9df8664d9bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a8d27c-086f-4038-be87-2082fc568167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318e00cb-b5e8-4bf1-a026-51595c9ab2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a7a7135-9b9a-4cc4-aaf7-6c1db59bced7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fedd13-8cb3-41ec-9c22-e5ac0fd3dbe4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3854333-6835-4759-a834-ef2a111ec58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ae9d57-e113-4903-9243-7f9172cff97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08786ca0-2753-42e3-9e52-c6de728c8a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fe80da-36a2-401c-bb33-5e9f1149be8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01106ae2-fcbe-4e56-8ddb-f2274bd5e4ea",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b2fe36-7740-4197-94d4-d1e0319bd98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0859c9ed-86a1-42b5-acd1-a828a81a32c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5660609d-79b9-4a6f-a3b7-444aa89d57f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "916c479c-d727-43de-99f3-d17ab46a1a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bebca84-618f-4703-aafa-7506d75a9d64",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5092584-1495-42cf-9540-d83838671b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0316fb43-6850-4ef8-8fe8-99bf94411f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce7fd65-5d28-467a-9e72-a68838677267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2786e5-4ab3-46d3-8f16-1ac931f7b059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81d958b-5214-4e88-bcf8-9ed35d30f50a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e79b28d-0c0e-4985-8c56-df34415dc949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65801055-7bb7-41d8-8d0c-81f912a780c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd66ebf6-0fdf-4f03-8055-d88bfa3b0563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86b7c2bb-2306-4e95-b944-7054ebfc6c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8867eb00-97fb-42ee-941c-9f80a05d5cf3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513dfafe-b8d6-4bd7-8418-171a5224c43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee057e1-985d-4685-a281-0de4dfe8b1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ead56bb-25b3-4169-9e7e-ead0cf69e749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8371a0f5-26fa-4b0e-b351-1410cf4b22d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd8847c-7be1-4944-be45-8a1bb46afa7c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdc29ef-4fc9-4a96-9b78-8bb9da4eb7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3030d74f-2aff-4570-a18c-8653ff335e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de66122-6bdf-4b72-83d5-1bd802d5f8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23209541-1dfa-43cc-8134-ca7e5abe6b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474e29a4-c9c2-4576-9249-6ee8a5f7bbaa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bce726d-0526-4069-b35b-821d634b760d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f049ee2-f778-4d69-a7f1-2c16a6781da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a09f02-78ad-46bf-a361-d91df1bda064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d44ce8-df37-44f7-b85c-00cc2476e542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35cf2d6-d263-4f7f-9c5e-30b8632152a1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d507b96-71a2-4f24-b291-e212262aecf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f18c164-6e0f-4278-89f4-8ae6ccd10464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55891455-7166-45a3-820e-afcde6aa9400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d75f6e-08d4-489c-b78b-bc80ba8777b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8b1974-5928-4154-8a5d-986a9de05eb6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c405065d-6fca-4fd8-912a-9b20f2519197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a672c426-829d-486d-a3b8-b3eca59c8578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe242231-b91c-4247-9014-657cc2c155cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e9ad47-dcd5-4d5c-84da-33ddef487b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69f06b6-0ab2-49cc-96ab-7dfae10157a4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e61ed6-282c-42ec-836b-60b2ffdc1da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b86fe3d-05db-4b82-a8e4-e4cfe4fe2b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe2f99f-2bf3-4f1d-8599-585c85c25c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b70d98b-bb87-4626-9ccb-cecc0e71d9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce4a81d-6ab3-4b59-8766-5506f803f4de",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84280eaa-5af4-4dda-8dff-6b59f8b2ac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab538538-5ddd-43a6-9147-dcd9891a2de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b859e8c5-3c9a-46e8-979e-36b515cd2de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a82647b8-01b2-4e1a-b2a0-5398d8ddcdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fba361-8f1a-4637-a7fa-3d452d5c87d6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b21a93-c796-41dd-ae30-5c2d80ed39f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62592e61-a298-4ffe-8db1-8e8cb93d30f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6803b874-025e-4e0f-a6d2-66e1728ba47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a386fd0-7ac2-4a7d-a817-5298d951f2bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f980aab2-0d85-4485-8898-4d6ac083a318",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82bfae03-fa7e-424b-be39-d30b69320c5f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6366dce7-f385-43a9-8bb0-b9a85df51006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91486d91-3c77-43ff-86ad-b1a351ade062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829fca13-33f9-4bd9-a614-056baf47af9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc5d5dad-1940-41e3-9b6e-269960822790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5180421-aa88-49c0-8d4d-428ed2c3d1be",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa423a79-fa2d-4f29-a875-529bbf99904a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "b7783121-cb30-44bc-b4b8-19a89308ad36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3b4c75-5a53-47af-aac6-78bfb269cccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de0e44a2-f0fa-47d3-a33f-341c8ccb191d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d85c64ab-aaa5-4aae-b245-3ccf05bd5d8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2452b0a4-292c-4e52-b264-efc6a53ea2bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fa247fb-9754-43e9-af85-2ab10c812136",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13418bfa-e1f0-4b14-8431-17b8305d5435"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6d91b1c-6bb3-4c72-9f42-c131ff534481",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb872b19-24af-43f1-b1de-a9e3175ecb4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f26794b-f02c-4ed2-a008-5f57126ec247",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70bee99a-6a80-4c26-bb5b-8a38f83befb5"
            }
          }
        ]
      },
      {
        "id": "fcc99582-75af-4323-96df-eb2cd1bac27c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3b280446-e110-4200-8335-272e0bb0c08c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9c1c61b-bd61-4e0f-8603-d6e61b7de381",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e61ce218-d808-424d-a436-cc15c403d367",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f19d77-bd74-4307-a6a5-31727b948144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44a1c47-e105-460c-ad10-8cda5dde51ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa3723c-2e26-4671-aa31-d37a16421ba5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48ede07-5986-415c-9224-c8df06bdb3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec217555-da42-4a3f-9ddc-b1609d765803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852bf0c9-73fb-4375-aa58-3c2fe9ecb7cf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960742b4-ed7e-4e88-a023-4f7a1bcb1b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328624f8-5729-4974-a2a7-be01646e007c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071d891c-be43-4e84-a291-b873ea5b19c1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfccb8fb-f06f-439f-8d2f-93add0bf1da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac10cd8-c47d-4567-8ea6-2063b84a517d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80fb4acb-9873-4c02-b646-d4508c112a85",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befbec68-c188-4dbc-95e1-8ff45a9fb792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bab7793-96df-4136-be5f-841cf8744c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ef03a3-1c2d-48b3-8cc7-c9ed79d4f0ac",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b391039d-2ef2-4477-b4f0-77899ae913b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beaa7790-0558-44cb-aff7-77b93348e05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95395858-8341-48b2-89bd-4e388e2d485b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ebd979a-9be9-409c-89d9-e7246563ef1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcbd302-d7cb-4b65-9c89-ce1dcceb118f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7718f732-d09a-425e-b527-2e5dd20ad91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7424bd-85a8-45fa-abc0-2e0593ae0fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535c79f0-29a8-4a93-8554-be24a5b1493e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49af754-81c6-4eb4-a7c1-4aa685a9715b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0d409a5-89ce-46f1-acf6-14c01cf0e972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cee0791-4e97-4356-9c99-2d9cbe620fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825babc2-4341-4f2e-9f01-dc6319a5d5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91ef2ca-844c-4dbb-8838-5dfb68b7e804",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e9b6ac-67ca-40ce-bd5e-9e2d92b2e915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f1bde47-a01a-4f39-8d0d-214937cdfebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c64b52-70d1-45a3-b871-101192c0d9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8b6888-15df-4d71-beb8-01de23b6543f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70aac1b-9d61-425c-af3d-e9daf2bf5712",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c803f468-5973-4b29-8c55-ce0036aed6ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367b7d29-004a-4c8a-82cc-539443184c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dee3393-d7f7-4961-9a5a-56342439ef6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab9d56b-0735-4013-9333-58821262dc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91d821e-c302-4f5b-8903-0a59330c63ee",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbeb487-7f3a-4738-90e4-f8fbeb12455f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c104a91-ab0a-48e1-aa56-e1aaa87f6585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ae1ca9-9e73-4ed5-a388-a7ae13edb8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17790e46-e71f-477e-b654-e2fb80066af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90832a24-5ced-4648-aac4-f92e4cc78e2e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c009b1-2c5c-498a-ab15-ac34032f7ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12066c3-8475-4b8d-9123-d70ea34699a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497567df-d6be-4e1b-8f15-55809c24dfe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce89fe3-61da-41d8-84af-3fc5c663043a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe15dde-7ce5-415d-aad2-d1007d4ca43b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6a1b26-696c-4a03-988f-a3319dc5217d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab0ce7dc-9ad9-4dfa-b8af-a34b70dc4693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f1dc36-a82c-463f-be21-8c6ee7231438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b3f692-9035-4342-a022-e07d044f27ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90da594-a226-4065-ac7e-e73475a5d02f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d70156b-b1e5-42bf-b743-3db9c19818fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afaa3bd0-eda8-401c-acf2-a2c3c7297ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306aaece-fe64-46d5-ba61-2ea114ee5495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eae61b6-16f4-4370-899b-def49fd2d0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21be219-ba51-48d3-b2ef-b503764f700f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f375c7-17f8-4b15-8b8c-a780dd541cf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52ce3eb1-db0c-4c3e-bf63-eeaa3bd30158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3965f55-3b98-427b-9348-5b0e2718fbe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b8e7faa-029d-44b2-a7ab-d552921faedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8445a8b-d324-417a-87c8-2b0ad3c2ca70",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96856020-628d-4b8a-a184-cddb05f469d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f55c877-f936-4fc2-9816-7573735e7ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e906c8-1a25-426f-ade4-b7f0394d76dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5e5863-3907-4665-b98c-465606f0c8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fb1c7e-fcdb-410d-be1b-0e207c86068c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22ee5e0-1edb-46da-a945-251e81a52a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf947c2-ef25-4af2-b9ce-e347b22b5651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049f0ccf-df79-406d-b175-a7312c7837f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e6497a1-57ec-4df3-b08a-1f926b1d353f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712899ce-066a-4bc7-818d-0f0979f9a4f5",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f512b7f-afad-4f3c-8960-9931519726f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f81ae4-a597-47c7-94f4-bfc59d91a725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785ced8b-224f-4323-95e3-1381af5f35eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285ed024-aaa1-4d01-9960-75fe1c351060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f899cd2d-1f24-4d63-8d9d-f9c2967df533",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a1167f-6009-4456-9eef-ae23416d61e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0b467f-bc48-45da-a99b-067ef179d13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ab8f1f-1555-4906-b0f9-3e5a38e51036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f099bf-741c-4ee7-a1df-9f467911d4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8318fda8-03f9-4bea-b02e-cc2abea8471e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da61ea38-5666-4b86-a087-dd362358a11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e04b4cd-3848-4d5a-8c75-30f525f14dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6fabb5-6a8a-4e59-91ac-b38feb43b3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0628eac0-fd7d-4c68-8a79-62b2f258dd2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb796f23-463c-464c-997d-6835c0923f6d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc33213-6228-4c06-ac42-d99c63d37caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4731ee82-2db0-466d-b798-edb265bd01a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fa4874-e2c4-413f-a94b-f0b43ed0024e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5980194-5e75-4887-8057-19b4eaa1c3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6af257-1f9b-4958-99b0-64c2086e99ec",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304c4d59-678c-4e0a-a78e-4e1f56512f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07f66c8-bce1-438e-bcca-282dee9aed20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6cefe2-b2b7-43a7-84fe-be455711197d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5422de1f-72ad-477f-8c43-6cdce7e2a979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56adaf0-233c-4d08-ab11-e7fa8371e8b6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222261ad-6161-4f35-85a7-d02b3fa10460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccfc273-a000-494f-995d-879fd480df9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f496173-6521-4117-8ee0-cb83c0ee87ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f2a1ab-ee2a-4d80-93b6-ad7d930da3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaa7343-dda7-49a5-92cf-e28e6b39de5d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd19b0b-b0d5-49d6-86d1-2fac41f3b3bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdfc7f4-23f8-4cb7-a05c-0903d9675606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce89609-44d3-4dc9-930b-7dadb7d2b6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5568532a-6c00-47ea-ae45-eb913d4130f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b5e20f-397d-478b-8c4c-a4ee1490832e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d329f54a-675c-40a3-b95f-b52d5509e1b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702238e0-f681-4ba0-ab85-2e3441026429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112e8d34-5f21-4a9e-aed4-7b4e0b7d5e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a441c94-2732-43ec-a4aa-e713f398bcbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaab543-abaf-4bb5-9a83-681896719266",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d592b42c-195b-48e0-8724-a9e824ab34f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec00c12-af45-46c5-b4b1-f67d526bf1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563f0dc5-23d6-4523-8f5a-b3d4d4a9d182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1772bcf5-40b3-438b-a96f-90a3344e5bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc5c42b-7744-4395-8519-faee35fd4354",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd665f3-ddf4-4f45-9af6-a4faa29182cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d05902-d29e-42b5-8bdf-696e64fb6ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850e1816-2d8f-4b27-b5d0-d784a9be8a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8b760a-2469-48c4-971d-a480ce1a06d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9af8d29-58bc-44fd-9976-fce12ddd1d49",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef9efac-646b-4b19-973f-5390e089d549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c55c06-9948-4b6b-804e-544dbece8cf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d3b31e-e3e2-4589-a2cc-5beae13af444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1278a6-3977-4e54-bf41-f10fc3c2a2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f13c3f-482a-43f5-9d7d-841afb9e8a2c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d44dafe-6d70-42ca-91a1-8b078442e27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f2db98-528f-4d03-b133-9a13547eac5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79272286-54cd-482a-b0c3-90957b41cbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e5ff82-6568-4ed2-92eb-52b20cf533a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f76c996-e618-4e19-bdec-6fbff85bb345",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2c936a-946d-4f03-83af-6fa9e0f67121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59d5f44-1151-4200-9f93-d4869e67b7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd04573d-ec40-4ab6-ac89-90f9db74742c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e77c66-6b0b-4600-ba4b-b154e1fd6e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8796260b-ef05-4e85-9a1b-4c3757f4e43b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4301bea2-7c8c-4e9d-acb7-284e290ae7ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5912679c-e15f-47c1-ace2-5f92d546527a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0d2be2-5a6a-49bb-a5c7-21fc57988eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad87234e-b98e-4429-b2e4-431fd6040040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0566960c-fef1-4e94-a11f-0fb123d2927e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb0b92d-592e-4927-915b-f4c343f18f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b5d8be-16a1-448d-b79d-ff7cc76fbfb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8e3508-3632-4d04-b1c4-a68c60b985f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba0b3da-2277-40f9-b822-ceaa61866281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780aad35-188a-44d2-a06e-b557aaa31c38",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e0c758-3c35-4df3-8f77-f8c881d48987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "525497fa-437a-4db6-b43c-bfae43c0ab08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bce4b85-0ad6-4481-9eec-5adf7d192da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d608c2a6-4ac8-469f-8223-9ad7770554b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752dc33c-5f08-4d61-a495-5eed6cc020b7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3818d83e-785c-40b4-8d5a-8f6f0bc1da8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7280cfa4-9060-440e-98f4-8465345c3f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3c09aa-b687-44c3-a9d7-b2c13ee75af3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b057c0c-47ca-497c-863f-86fd4ed8d3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3ed465-7048-4bac-910c-a407a0844991",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d385a727-7c01-4530-b43e-175cfe639697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a237da-fe6d-45c1-a6ef-b5c14274eb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05af474-3ae2-49ef-886d-c5f51e9567d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2948b6-a947-4bde-8841-846ca770b83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbfa1c9-5eeb-47a6-996a-ffdb5b2907f1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d6ada3-efde-464a-8ddf-bed61d017b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e136b2-7017-4912-ad09-4c2d5daeaf07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcdbbfc-e77d-4c26-9289-bdcd2a3b1853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e06978-7c78-43de-a928-1dec48e6ef8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ef205c-9bdc-4721-aa5b-4c13cb25e107",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14374fcf-f4b9-4666-b158-cd702c577be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1415a72-1c36-4b42-8412-856e69f84166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064ec63e-a7eb-4e38-9ab9-8db6fac57c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b30a76-d281-4366-8a8e-e74e3a42fe7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af74ce88-a552-42c2-bcce-4f2d63c168b5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0e0cce-2188-4671-b630-1f0cee3d2eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded36f75-772a-4cb2-8b32-a60bdd20c943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48437746-2b0b-485e-bf3b-48bfb789865e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c57f765-25c9-4be4-aef9-a1ad18eeb31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb55785-493e-456f-b012-aa4c04c1ed4a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364cd65f-0e41-48c0-993a-f79bb84a4083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff88543-5182-4e03-9825-e7a6bca9423d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20e7c56-50c7-407a-828b-616101076fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8542e755-2ade-4621-99b7-a5e1d23abc3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137ebad7-f2dc-4b38-8751-8978904f65da",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb5fe06-485a-4c81-90e1-3eada4bd6a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee9032f-c34a-4588-9668-dc9ff6df3941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fa097a-1ee0-4cfc-84f7-919f22d9dba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae4a927-ddb4-4a84-8847-329adb5a39ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edc153d-946d-4dd1-9f7b-0abbdb8e863e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f1406e-718e-40bb-9cb3-d693626f702a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3903a733-b4cf-4bd3-8336-74ba43c918f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111a6e55-19ad-4a1c-af7a-d35e75bf4cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5e22e7-8ccb-42d4-810c-057f5c737e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40767a9f-5422-437b-ac30-c0215baf5ad4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df3a384-839f-45f6-a726-66afefe53658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f03e579-b67c-461b-bb8b-a6fe01b9342c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab9bfae-565e-4852-ba2a-0c4379135d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6d7d16-59d7-41b2-b5d5-98d78cb7b32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7a2e4f-adcb-465e-bb02-cc85725d8275",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc42fc00-9b4f-4607-ab2e-5e201fe6c407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ff3735-80a9-4444-8018-8badfc708f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfba971a-b2e8-43b8-a317-e92a213c7422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf2eae1-48e4-4f66-902f-ca9baf6c1355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558e916b-0e84-4abb-a6dc-e7aef2c3bbf9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e36351-ef68-4c62-a287-78d1a769a766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70b76f0-cbc9-4f3e-9afd-eba165af974c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f0c134-f50c-4d57-9b5b-680ce5d3d431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257b9ca8-f3ad-4543-9409-6d1382be8633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69444f2c-5f92-425e-8ad0-c0085f061c39",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26f770f-9dd1-4a6a-a187-466d15de04f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145dfccf-3c14-4352-925b-f4a948b3829d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b2ff94-5d5a-4993-bfe5-f2486b80d63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3876b0c-017a-4e2c-9b83-4b65115d96ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5d8d3b-35d7-4297-ac47-f4e27a8a1934",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395a1672-e79a-414c-94df-9528652bad79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab1e5ef-917a-4c8d-a8ae-33ae2ca1e955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0895da2-03f9-4f00-9d18-fcd85b532293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7064be77-12f3-4479-a1ad-c6f91f0e77ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4313ea4c-480c-4190-bb7b-c56ae3100400",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbde488a-731a-4b95-a4ad-e0628d63d304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd10574c-c4ab-49ea-818f-7b644911c2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dcc601-a064-4f29-a908-469d9af7850b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523ecfe8-dbb6-4849-bf97-03c58082b486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca477907-3546-4ccd-9ea7-09520c85d390",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896ceaba-1289-4a46-a494-5816241d6e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beea5238-d645-42c2-9e7e-f7ad6b0e2162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32027a6b-4499-487e-888c-8d4f56334039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e1a3c3f-414b-4901-b754-08b2341b2432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f525f0ec-add3-4a36-864f-eacd4fc4eabd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e398d535-2993-433e-bec1-ea7aa5376e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28acfe2-9bee-4184-a789-c5d90b4ca577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053e5c88-7a9f-4965-a904-815215341bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd35cbc-c07d-41eb-af7d-43ad611a840e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63473289-82cd-4200-8bf8-6c78bcc72947",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc0793f-56d6-4a85-a4d8-2d911033a9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f444efd-6c5d-4ef9-a64d-633cc501ab2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53715511-b99d-453c-9bf0-e95960c6aa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f89c092-7574-4e45-9443-375f54a5386b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c5407a-dc0b-4e73-aef5-02c2d2eb5934",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7456ea63-3d43-4c18-b7bd-36a0e441885c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ad81917-f3e9-484b-994f-56e304f56829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "956c097a-f6e8-48e7-852e-bca38948456c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57cbb6b-d240-4273-a5bf-d42603bb3c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d68b95c-54d2-4a0e-978c-2e7f21c1561e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2113315-82ec-458b-a88c-655660f21976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2406be71-d9d5-4aad-a6a6-cf68804aec65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86df450-8855-4f59-b5c8-f4d0d2224b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0dc29cb-665e-4613-9e71-a4ecb0d57b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666f5b40-84d1-4a43-b112-25674ed8cb77",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03f7a89-ccc6-40c1-abae-4d3514004099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f45dd7-456a-40bf-bdb0-8a95383bdc14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28626afa-e553-4ddb-899e-b3e17fc634b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bdf254-cb1a-4023-a2af-391abcb8c051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776d7d54-f240-406f-b9c0-a1c6460a0728",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bbcdc9-9220-435c-bb48-5fb0026da158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5074d8-a8a2-4959-932b-0daa1d21b246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc9d0f9-4c53-4348-8921-a0231167a171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19360f34-41f4-4544-90ad-cd535970eb95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ef361c-4fe3-4634-a8a8-3f8dfa014d75",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd8c50f-ba3a-4d1d-8d69-df7193cf5651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e048ab00-b35e-4a22-9755-2d67ecc5b263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56ee152-c3cd-4d36-ad36-935a05db634e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69421363-91e3-49ae-ac6d-02959ae0e883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5aa766-3ff2-4a33-8e04-2d9529cfb67c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c199daba-7e48-4a59-9e8c-767418eaa88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35c7bfe-7382-47c5-837d-795518327e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf5ee41-5ce0-4c51-9fda-cf08bed8c82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e880e295-c260-472f-8a59-3915672c4b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6574b24-b7cb-4a54-ae55-56f34dc42ee4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc840ec3-8592-4f50-8142-7dd927ef44c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763e5d9e-8ac0-4e57-ad89-f595391fc2dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cb6b62-2bdc-4bcb-9481-1c79eeabeba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b44523-c05c-490d-b47d-41983cb7f15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40203dff-a116-48b0-ab45-935090a49264",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0517cfe-e1e5-40f6-89d4-721088a81739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3139e2ff-6be0-40a7-9203-46e0630f5a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3041871-433d-4ccf-9fdd-2e878ffd72af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdafb7e0-874d-4c6d-965e-8569eecfcbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df68fb3-cb5b-41cd-bd49-d7ed13367440",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cf298a-d980-4e08-93bf-400195539dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e62a71-30cf-4b06-928a-7d7cd054dd3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50338c0d-34da-48a1-8859-feca2a5fa95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be78bbfc-8c3e-44de-a9e7-1353c4b7beaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7665d9d8-02c8-4616-b48c-092f4f2b1ddd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e34f7c6-d4cd-49f6-8290-0d455f67b923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d7eda8-134e-441c-85bc-3b23c9ac737d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2c83d1-b9de-4501-b832-b7eb8d3e9445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a933c38c-8f0c-48e0-8a0f-215918bd4848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834c0096-9add-4f7d-97a9-564817dbafcc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae520f92-b35a-4ccc-aa2c-303a9fb412cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99c999f-af47-457b-9568-aee8fa1e08ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cb69d7-9b09-4da7-a985-42d7467426c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a5793e-d6a6-4e19-ba13-e6582111de4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ed5cde-0aa3-4020-a911-c5d0f0c8ae5f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404911df-77a9-4d4e-901e-66b9805f170e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c521de5-f56a-433d-a1cd-37a0476f6190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446b7c8d-1239-4d8a-acd9-428fe1b15ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a2dd8c-99c6-4dc3-a472-495861e8466d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da098906-d760-4bfe-ac6d-cd3b2aa182f6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811743f1-4ca6-49c4-b3f2-4d6dfd965c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e20694-1776-419f-901f-eb613802ea80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bb04c4-601b-40cf-8e03-70d636ee31d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576a981b-e7c2-4f54-88d1-845d1a611b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad319c4-b3ce-4390-9788-2b15c0ae2dd2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4e0930-45cb-42ed-803e-190bdd1b7165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0f2405-781e-458f-bc79-e49b82e74758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b147e28b-9930-45d3-9dc6-8fba3d6c741a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2d2524-bc6f-463f-a398-b61149d1491f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73270d79-0f43-4c34-ab63-5c6aa6536196",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a912e2f-eced-49a1-a3f3-50bc494c271c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7349568-085e-4dad-b175-0c7c28a1fc8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5c7a20-1e49-4723-9f9a-53d5176f67b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f04cab-62cf-4588-bba0-80e20455b2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663b9d90-4107-46b6-b8a0-601d4a7c5483",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8902e277-256a-42e8-a222-c9b8371023ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5785ed3-ea80-4955-89f2-3d4022a3fb78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f698c8-4d7a-455b-81a3-7f15efbf6d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae302bd-fbfa-4489-ae67-4e6a0457550e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bac141-550d-42b7-a9ba-5e68111cad78",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e37182-3bef-4d4f-9fb9-f83d52d803a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436166d5-5494-457f-9406-1135392d32d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0625c03-cd85-43b0-b03c-3a4de55585d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192d80dc-8229-4084-bb3a-49f2bc4c2f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95370090-9461-4eda-b179-fbcfa0ff1781",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14de7635-a12d-47b9-b991-31696b46c7cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4026f957-019e-4268-914c-d04bb4132359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf562ac-60ac-4578-8f26-773682d7e423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ba889e-a18f-48e0-add7-57b044e011df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6518e739-1ffc-4a27-937b-0437e19ada2e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c305ab8a-178a-44c7-b6a6-8c0f11931888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b55f27d8-c6b8-469d-a15e-6730ac55bff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cb7051-4afd-4b82-afe4-054013a6faf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324238d8-3e72-4b0c-9da7-6e9de04b49ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6571c697-269c-461b-8ba7-9b533df6dfa8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5259ea-91cc-4a21-a06d-90189c81d90c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aa57a5f-f2fb-4a97-bbd8-9da5c2e1b592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78af967f-c7f6-43b1-ba42-7303f2a21898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e749a6d-3e27-49ab-98ae-b765e5162bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4341be-ed21-4c0b-821c-d437065fa267",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12831340-e6a1-44ed-af7f-c45388fa2629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c10ea3a0-4917-4688-91b1-3bd5aadb9e5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d7da40-434b-46b8-9798-466e2b224d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd307f42-eb6a-45aa-a2d4-9feb883051c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0dea06-b84a-4cd2-933a-ec302b251e96",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df8e675-7c74-4ec6-a887-fe4f6990ef59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6a9939-1cc9-48b6-9ac8-3645a8f025e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5439e508-5c21-4798-891c-f1ca86aa5788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0fdd1d-e35e-4afd-999a-56543c78046e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc97685a-04cf-4de6-97dd-b972bbdac8d3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5225c9e0-a84f-43e7-9867-a43b1c2f177b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "302e456b-ee01-4eb0-856a-e9c20b850513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f98c6d-f556-402f-9ef8-ed8b47aa8e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd695454-82e8-4adb-9773-983bc11553bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9b96a4-f587-4830-b8f5-9dcb8b5f9667",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d72cf3-d9c7-4377-95cb-90bf822b779c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11203559-4379-41ab-bb39-7a5fc7b58283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7b2f20-85eb-4536-9298-d6e378c511c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6040e9e3-c515-4f32-a070-2b4531be7888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e634ba7-1adf-4f79-97d4-0592e86c170b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1960f39a-4db4-4701-b7e8-4ad859ccc1b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b85beee2-e773-4e9a-92cb-fb2ca555280e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "792b72d0-fedc-4d9e-a7d7-2fa00ef04a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2afa58e8-c833-44be-a43a-275311add8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e60097-b13b-4602-9119-67ec39bc868f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef158bf9-363e-43e8-9eb7-13ca88cf0c50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d1fe4c-41c8-4135-90ed-1e9539ec5491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56becd3-f897-420f-a3fd-ae2da767e0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62a8ad8-2e4a-4199-8946-81e35b98519f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5225c281-4f6f-4894-bad4-f2712447fed5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cae8d3-dcfe-4fb1-9840-0387e3d20cde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d29c788a-04cf-47d5-b248-f7409703cd8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66259dd8-41a9-4017-b797-9957eec60674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581382ed-630c-4aa0-89b7-4b2284f1c811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5bee63-40ef-44ac-9f9b-12349653ddbf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90f54f2-a347-40bb-95ab-c3acd7f96f8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37edec82-f07e-4fe4-a49b-4a5bccbf9218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ad5b41-de53-48c6-8512-af4a2e0690fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3133080-087e-4497-a116-2f3f3ddd36bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c2b13d-cb07-4129-b8bc-935ef486e1d1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f19c52-2f6a-4cf7-9ebb-8e2121bb272d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dbce647-f7af-41ce-9193-ef540a5fe179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f506cdda-5d6b-49cc-9f8e-7a40da5562ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c240f8e4-1c3c-4ab7-8433-43c1a214c580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddc38a2-cc34-49f5-a5ca-8c8b20d3bd12",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355802f2-3a29-4006-8618-8406cd84f7c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36def5b6-bea6-47ca-98c9-5b131caf7c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed34c26-d939-4580-97b5-42b56a89978e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147d30f8-71f5-4d2f-bca0-2d44fd850e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1fef0a-e2a9-4742-bd7c-1b9bb25c9111",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67c1c9c-aa6f-44cf-920e-3cd341276bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74f5b85c-02f3-45c7-a967-ae61d4c5bba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c636ec-62a2-439f-8c5e-8ad10b86243f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0f2dba-767e-4060-a764-4ad44b4162e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c892c7a-5105-4231-a724-31ca45ce038d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8040ab-630c-4c39-bf4e-8fe865307169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb41e9f-16be-45a4-b691-854acf36178c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24fb257-2f5d-4a19-9fa4-7753e63af50f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61fff34-7d74-4b43-8388-80f25e1693e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68ab453-4a78-431b-80d2-bb6c14d50b21",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eedc35e-0170-4cca-8c7c-3d0bc52b31b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f9d95a-a2d6-4825-917a-651d8c74f66d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456f7123-6d2f-470a-bf6d-1008b810f5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161e47ec-6142-4720-8a0b-97e9e84f24d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5724a7-9a16-4206-b347-3972e22a25b0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f67f10b-d91e-48be-94cf-5bf268fb355f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f534d0-70b0-49b8-bfeb-c1c0a988cf18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0377ddac-90e6-4807-ad3e-b22b8e644702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cc35b3-e51d-4ac0-aef4-84aa1d80f9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e247f6-001e-407f-8885-78438e443f11",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2489454c-b207-4e80-b89c-c87a80c536f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ec56a4-6e66-46a2-be95-dbc9cfb10782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c1a6fb-9f02-4484-97f4-4ce92ee7c961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2d88e0-fd43-4874-afc7-9ac033b4ffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e28a54-fb54-4621-aae1-e715aa394f10",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d9a3aa-6d6e-44be-9d03-3c97339c5aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2c65f36-1367-4612-af8f-35c96086bca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b4f115-ee3f-4c23-8bd0-2e81d0db33d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a610ff-0799-45a5-a6d0-5bb697a4c52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d3db7a-1790-4333-8c2b-2f58e916691a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65debff1-ca0b-4d1c-bf79-81bea17a9fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf5eeae-2a78-4da0-b781-0bd7ee657c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c1872a-7563-42eb-955b-6625d94a2cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58b5d56-15e3-4285-9730-d65e0db3b01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b96e6d0-3eaa-4665-b114-fa070fbf00a2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f54647-689a-47dc-8c27-ca34105b8a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afe095b3-6cfb-4e25-ab5e-e5c95da7989e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec7e945-2aaf-4da9-8069-f81950e04a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ab0d50-9d30-4501-a8d1-63e0307768a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b17e58e-6e00-4b9e-b1f1-86aa4835cb7b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22170927-9c8d-4593-8805-8dc509839539",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9663a002-7109-49ae-82c3-4bcafa574ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7000ac89-5c7a-4af9-abb5-02449632505f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997f1740-01b8-44f1-b60a-52640cae209b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9012bca-13c6-4be4-bdd2-760275918e97",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8764d5b2-e29f-4971-b0c8-52a650ad7dbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb637436-cde6-4b38-8d83-21ba4db39485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded454b9-17a5-4ac5-9ea6-0997fec864e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d07b6f-d63c-4616-ab2c-312e76e3dd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112a8669-1e5f-474d-a214-66c9d3af549f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2d4eef-17fa-4a87-b2e8-7a27b2886cc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6136b1-e3b8-4166-a603-20a08dc4b3c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c95017-4f69-49a5-90b5-8ac25d33cda8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f0c92e-e423-4b81-9af5-e30427222f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d696080a-2aee-42e6-a774-93f74cafd5cf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a324da-3fcb-4c4e-84a9-4cf5ae5fd386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b50dccd-ba36-451e-958a-45686dba5bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d725ab-3c64-47f1-86d1-a16ae5fa2e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2194df58-73b1-4677-916b-05e6060b7756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3b43eb-6791-4d27-80a3-283bbe3b8d44",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62343b6-3f96-479c-ad05-9e39233399ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "926947fd-17f0-446e-89b7-e0a7351b3f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88846ebd-5865-4bed-9a68-47a732ce71d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a1d1b4-e1b4-4aec-a201-62b1061336eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d747ee7-c4a7-4de8-9f75-6e2124754a85",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fcd5f3-e0e0-4702-bc78-8449667be7f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32e87972-92eb-441b-ab65-9695d79fcf98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cfb830-e0eb-41a8-9748-3262926bda5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd296f07-0988-42e4-9df8-51c381dd997f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152d52c7-11e7-4f7f-aa6d-3a3b2d957f19",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bde5f9a-5091-4d41-a854-706a212e0574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a40f1f69-1413-4a00-8794-8c94abfa3719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12769b59-e121-41d3-a0de-2454d3be744e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4a6c10-faf7-4275-b3cb-eb4c758d6216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c721dcc-1f69-4a9b-a54f-4733bbe40b08",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8cb959-ee6b-46cd-86fd-ce0362feef4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f687066-6e2a-4907-8c2f-7f234e4f3a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5aba7f-8a4d-4e73-9af1-5a47eeed7c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f870bde-8fb3-43fc-a91b-759497b0f3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6875c22-7ca0-40f2-b72e-2b064fff5c02",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d14b088-00cb-41fd-ac34-a9e266270481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2733afd3-926f-42a5-83ac-ee680b8ee89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2cf692-217a-4c7f-974f-01250d403870",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41b5e29-67e9-4ef4-8b2d-cb9752d252bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f5b918-d1a9-40d7-9385-640d304e6ab8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3281ad04-e334-4157-9425-7959367e2166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71fc6b7d-19ee-47c3-8e21-af3dcd25d9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d952e27f-ce00-41f3-8663-7d78c95b5920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e608d5-aa32-4f08-a861-dc9db82a2bc4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0002ff86-e673-46b6-a839-9224232e332d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b20dfc7-98d8-4e35-9be1-ae33ba598e9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0225368c-8869-40ac-a1f4-9f31b86b19c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57881097-ba8b-40f6-a4f0-3ee9d2917a12"
                    }
                  }
                ]
              },
              {
                "id": "8c68039e-8e47-49fa-a39a-eb19b526e2fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba62f189-f894-4081-89b6-c3ff34c8dccf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2928d6-f428-4eea-b43c-441bd0b4a67e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "30792709-75d5-4593-bd37-91735b898e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0e7847-f851-41d8-a8f1-9b5bd3b65f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70c22f39-e9c5-499b-93f6-741066ccae99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a35bc8-d09a-449d-81e3-4c61be376fa0",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1371b9e-eeb9-4960-ba40-73ea1cde6878",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "87b94347-4623-439f-a992-843de37acac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721c4882-0417-467b-bac5-0525fa321ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b370c95-3720-4d73-86f1-93203f12cbf9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2620a780-9690-457a-a89f-73da5fa8099d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "beacba43-c00a-4f44-9a16-bc699a407fd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "375acc26-89d4-4116-9111-3e06875e9fc2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "596fb4aa-a8b0-4aab-be64-ea78c1691fad"
                    }
                  }
                ]
              },
              {
                "id": "c88fd185-bcec-4f29-88c9-57112e596841",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e7536acf-d176-4009-8930-9f41a64753a6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ec1478-cd92-4100-9218-e5fa33502405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4c50a89e-6102-4c7e-ae94-e7a742d44a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f61988f-584c-4f0b-b55d-cdd99124e7cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e893a85-0bd1-4c4d-bb76-74e96c5a35cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1aa0b68b-8431-4baa-a03d-6257e84e9917",
            "name": "Positive Testing",
            "item": [
              {
                "id": "74f6e820-7fdc-4847-be6a-5f43f083dad2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e9d13a1-eba6-4c94-942f-c67547e9dfe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9f45670a-8ab2-498f-8dd3-5039ad259e67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8656c51-10d4-4d2a-9ba7-c4e446a703b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "779d0182-36b4-4db5-84cd-57975b916b47"
                    }
                  }
                ]
              },
              {
                "id": "26a0c0bf-4413-455f-a69a-8edf271623d7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "271d71f3-bc13-4975-9337-de0262350243",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aee00c90-0183-472f-ac6e-2b065c07c682"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f46399b-4978-40db-ae3d-763ba1c051fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdac83f7-fbb6-481d-a4bf-98433a01b389"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "435e66c5-fc4a-4fa7-9d37-8d628408264c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ccdbcc6b-52eb-4e1a-8dda-48b92f3f6348"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00a9c684-e852-4572-88a6-c4cae3a82ba7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "831d6ac8-7f1e-45e3-b9c6-a7eec1b28c1d"
            }
          }
        ]
      },
      {
        "id": "55feba8e-276e-49af-bca1-2f641962b72a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5d96e2fb-eac6-467a-8bc9-e89876ffdd7e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e56f1655-c3a5-4580-80e8-a088286bd448",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "606fe967-71e9-4619-8739-d0fb9d5fcece",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b857f779-a2e6-4848-a798-1be8868ffd24",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "43682ea6-0a84-49f8-b458-1fe8c82ca005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af66a89a-74ce-4258-a8f8-c7d40c901feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89ba7a1e-dbfa-4333-8d1f-a89c0b51ed35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b615b5a1-eda4-425f-9423-968b8e8cc95d",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdb105d-6049-4a78-bcb8-cf15d172d3da",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e38e9b15-5022-4090-9be6-935863ee0da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec84b7c4-9324-4b06-89be-3f3a11a50907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5df8220-46ad-43bf-8a5b-a9029c0fda4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "686b9993-d478-4f64-b214-e5e5709c111b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7306bc9-ff9a-49c8-9bef-5370b5d2e70b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d1a7a92-d197-4188-902f-ba5797b84061",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e41c9dff-2846-49ad-b79f-3cc037cf48af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99589dfd-9a29-4624-8006-c0aa77ca5d92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ff6bac29-c1fe-4801-a623-c47d77aa4702"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a65adb6-cbbd-4d4a-a71b-95002f139d57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d60682e-ae80-4664-a985-813c58d48b6b"
            }
          }
        ]
      },
      {
        "id": "f6297a98-3f68-4718-b966-6af9796df004",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "06f4e5ea-8432-4c64-b5e9-6eba77875caa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "374de79e-aa09-4573-bcfe-4d2d524fcf28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "175d6eb7-c7ee-42d7-84bd-bac686c6e1b4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d808590-65a4-4cbc-834b-da8da4b26117",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4a0cbad3-9a06-4baa-b24c-688dfe4e26c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f4f423-7e85-4898-b7d7-6debe7bf012e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "335305b7-bf65-4dd1-a8b1-7bef9a525d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb6eab3-5a45-41ac-ae8d-95ece6156fd6",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e51386-e263-4203-85ed-2b6e5101bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "54eec7ac-6aca-4f0b-bec5-b97f1adc8cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff68a92-1cef-4780-b826-43bfd8aac873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8524c4cb-c518-4c00-a46c-92f777a62640"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "451f04b5-46fd-41bb-b862-1f152cecbcd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9566208-378a-4998-bf9e-074fe161f83e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce64df98-f463-478d-b35d-4ae060d5f395",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a73c1733-ec83-424a-aa65-34471d76a9b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2065bd3a-3f0f-4f64-993c-fc48820a1e25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "686ee34c-59c2-42c4-b859-4bc76979def8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12f6ff9e-103c-4f87-bf03-2f378df40fa8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "479cce30-9dd4-4f3b-8958-43d9992336ca"
            }
          }
        ]
      },
      {
        "id": "da285d6e-92fa-4e5b-aee1-587217a1d882",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c7d33548-0abf-4ad8-b6be-bde75e5dfd24",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7478d810-1e36-4673-88f3-7f4a02fae822",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57ebc6c9-dbcf-4094-b8a4-68bd76ef32b5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cc29e2-4e9f-4acf-ac20-8087bdb1ace0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e4ff9005-ae36-4e3d-95cf-7aaf144d53dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b02d06-ca62-44fd-a383-2fa48aec8616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36a37e4f-eb49-49ac-94a2-fbc97057c100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbb5c13-559a-49a9-a032-5c8b2f8ee832",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0606ce-29c5-437b-843b-fe9c7b4f08c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3669ae87-12ac-4325-91ea-eb6ce658e151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353d5d71-d709-4339-91cc-68ac519bc1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0fae427-f650-4a08-97b6-dca2adaf6e75"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18be0ebc-2da4-4ef7-9b0c-bacc9bd42e2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a1555c2-d634-4ef8-a164-12f38d295996"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69454ac0-b579-43f5-be58-e7ecb1e60689",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bf6266e-d4f6-4160-91ce-b2cdf526eb7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "336d7f3b-21af-4307-ae7b-b8e6f053ada7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "463f3d9d-60bd-4bb5-9f4d-9049944e9963"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00626261-be60-4e67-b6c2-3df68212e148",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85e7a072-eeef-4dd5-8589-6ad3512d316b"
            }
          }
        ]
      },
      {
        "id": "745b58c5-65cc-4fd3-b519-be32aba71df7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6427463f-a884-429b-8a4f-3c81e03b9d02",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c791ac47-a173-48ef-b503-9e85df755c0c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1c89be37-4124-4f1e-8593-d8db8341b6b3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94d0e0f1-6289-4166-863c-2ffbb4dca6e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cda949d-41c7-4a93-beb6-cfb8a733c895",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 648.8053435114504,
      "responseMin": 7,
      "responseMax": 5308,
      "responseSd": 705.3670883195666,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674261578640,
      "completed": 1674261761647
    },
    "executions": [
      {
        "id": "6d706987-3294-4fb0-b8fb-1665bdeea7ac",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2ef934af-c86b-43f1-99dc-f5b50d55b201",
          "httpRequestId": "aa60f349-174a-4d8b-9785-10c403c281e2"
        },
        "item": {
          "id": "6d706987-3294-4fb0-b8fb-1665bdeea7ac",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ccf60ac5-3153-4429-9b90-3a8ac130b633",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "47dff5dc-8acd-45f7-82d5-67f9adf605e3",
        "cursor": {
          "ref": "163dcda5-a69e-4660-836d-f4d332657252",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9930c807-413e-4678-acc9-277d1d87bd96"
        },
        "item": {
          "id": "47dff5dc-8acd-45f7-82d5-67f9adf605e3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "67957a2f-e0b8-4253-8295-31ca3960e24a",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "33a90c1f-c610-406c-bee5-7a99d589ba5f",
        "cursor": {
          "ref": "d944b07b-ae61-4b46-a252-0edf63f8f489",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2df46ffd-0a6a-477a-a63c-a9492d2d0250"
        },
        "item": {
          "id": "33a90c1f-c610-406c-bee5-7a99d589ba5f",
          "name": "did_json"
        },
        "response": {
          "id": "820592fb-06e5-4e65-92d4-38a4189ae0c7",
          "status": "OK",
          "code": 200,
          "responseTime": 753,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98581b1d-fe7e-4151-adf6-82dd10f6acd2",
        "cursor": {
          "ref": "cba13058-1267-4831-8ade-08d1eeedd884",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be58771c-b686-4fe2-86df-b3df98f87692"
        },
        "item": {
          "id": "98581b1d-fe7e-4151-adf6-82dd10f6acd2",
          "name": "did:invalid"
        },
        "response": {
          "id": "9f06df57-31f7-435c-9557-a72be6429adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98581b1d-fe7e-4151-adf6-82dd10f6acd2",
        "cursor": {
          "ref": "cba13058-1267-4831-8ade-08d1eeedd884",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be58771c-b686-4fe2-86df-b3df98f87692"
        },
        "item": {
          "id": "98581b1d-fe7e-4151-adf6-82dd10f6acd2",
          "name": "did:invalid"
        },
        "response": {
          "id": "9f06df57-31f7-435c-9557-a72be6429adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f14e51-0e98-4a06-a8b0-dffaa4efaf75",
        "cursor": {
          "ref": "84ae2d51-e503-496a-b6df-8fb863412ac4",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fea9bb28-5256-4157-b760-dc216db0326f"
        },
        "item": {
          "id": "e9f14e51-0e98-4a06-a8b0-dffaa4efaf75",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cd4fa7d6-c31f-4552-a1e3-1478675383ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 590,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fa6c49-bcf7-4c2f-a078-6eb7568372a9",
        "cursor": {
          "ref": "a8b4982c-ea85-4d06-81a4-c8297f5a8bce",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6a0085e0-4d22-4104-8cd9-dc845058b54b"
        },
        "item": {
          "id": "d2fa6c49-bcf7-4c2f-a078-6eb7568372a9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3e93a97c-5db7-45eb-be4b-84826ba7b4e7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 594,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9127cdc1-c7f2-4a69-9389-4337d6876222",
        "cursor": {
          "ref": "b91827c3-567f-4c2b-b8fc-dc1899fba2a0",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1e3a5039-5091-4ed0-be6f-e6df7dbdcc31"
        },
        "item": {
          "id": "9127cdc1-c7f2-4a69-9389-4337d6876222",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fa32b0ff-dff1-4375-b648-617f6533c2bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a04a021-7a71-4d55-a6e4-396b8bd71e36",
        "cursor": {
          "ref": "afaf401c-77b4-4425-afb7-17ff5f6f067a",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "31eda53d-5954-4dd1-af85-7d9b324da2ad"
        },
        "item": {
          "id": "3a04a021-7a71-4d55-a6e4-396b8bd71e36",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "80fea8ec-13d1-45ca-8c8f-1d043d063e4e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 532,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a04a021-7a71-4d55-a6e4-396b8bd71e36",
        "cursor": {
          "ref": "afaf401c-77b4-4425-afb7-17ff5f6f067a",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "31eda53d-5954-4dd1-af85-7d9b324da2ad"
        },
        "item": {
          "id": "3a04a021-7a71-4d55-a6e4-396b8bd71e36",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "80fea8ec-13d1-45ca-8c8f-1d043d063e4e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 532,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba41d6c7-90de-4274-915a-a63b93ac2854",
        "cursor": {
          "ref": "cc8566bd-5fa3-44a8-8980-f02bac2e8ffc",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "10d46845-78f3-4bb9-9635-70652658949a"
        },
        "item": {
          "id": "ba41d6c7-90de-4274-915a-a63b93ac2854",
          "name": "identifiers"
        },
        "response": {
          "id": "8dbb4710-f2d4-491b-a287-fe56bdd0fe8d",
          "status": "OK",
          "code": 200,
          "responseTime": 873,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2d814d-0b24-42b0-ae16-c434fc7962d3",
        "cursor": {
          "ref": "879b3cdc-cafb-4ea4-a3a7-52cd707f6843",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "385933fe-9485-4d72-9af8-a83eca16439a"
        },
        "item": {
          "id": "fc2d814d-0b24-42b0-ae16-c434fc7962d3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5dd6008e-bf8d-433a-8a20-7eb849358d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2d814d-0b24-42b0-ae16-c434fc7962d3",
        "cursor": {
          "ref": "879b3cdc-cafb-4ea4-a3a7-52cd707f6843",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "385933fe-9485-4d72-9af8-a83eca16439a"
        },
        "item": {
          "id": "fc2d814d-0b24-42b0-ae16-c434fc7962d3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5dd6008e-bf8d-433a-8a20-7eb849358d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c07490-8d6a-4020-a395-238f389c3709",
        "cursor": {
          "ref": "c48e99f4-4b4a-4b2d-bdfa-228c706114c5",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bd44b6f4-3b75-4c82-b46c-d8e7a5036b2f"
        },
        "item": {
          "id": "72c07490-8d6a-4020-a395-238f389c3709",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "af356d78-82ea-47df-9a49-71acb2042bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e784790-a818-49df-8cd2-ba400215f6f1",
        "cursor": {
          "ref": "0a464f93-47c1-41dd-ba9f-4506384c7494",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c68f9bd3-64bd-487a-a46f-0ff9b00836f7"
        },
        "item": {
          "id": "2e784790-a818-49df-8cd2-ba400215f6f1",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "28478531-ef7c-426f-ad09-1c22b6fb6f2d",
          "status": "Created",
          "code": 201,
          "responseTime": 2475,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "4d84964d-7146-496e-a96e-041a00af260f",
        "cursor": {
          "ref": "8f405033-0f56-4467-8e5f-d441d7e8b5cc",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7459e407-5738-4d91-9634-081bf73261a8"
        },
        "item": {
          "id": "4d84964d-7146-496e-a96e-041a00af260f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "df06c262-b230-4973-8c50-57279bb70abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b582da35-423b-43d2-ac3a-81c3d8e040b3",
        "cursor": {
          "ref": "dd91ed69-f332-47e6-a25e-27ede4044af9",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2f89197c-198d-483c-ac8f-e91dd9324703"
        },
        "item": {
          "id": "b582da35-423b-43d2-ac3a-81c3d8e040b3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2e883cc2-c11e-4618-8768-9e0cc6ef9f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0001f2-18fb-46be-a896-ce3373470e47",
        "cursor": {
          "ref": "dc611779-9f5b-4bca-aada-8ed38a577dcd",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cd6e4661-1cb8-4371-bbbc-bab169c8b3bb"
        },
        "item": {
          "id": "ef0001f2-18fb-46be-a896-ce3373470e47",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "35b67676-7090-4ebb-b023-7030ea59bdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f1ad7c-e63c-4fa2-ab16-bd73ae0335d3",
        "cursor": {
          "ref": "1cfff122-959a-49e9-88a1-37b40025e064",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e670ae5c-b4c2-4eaf-bc39-ffd4c44e2708"
        },
        "item": {
          "id": "c2f1ad7c-e63c-4fa2-ab16-bd73ae0335d3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b9dd63fe-06e3-47d7-943a-9070412c3bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d071fab8-b5f5-456f-a080-98ed5d99478a",
        "cursor": {
          "ref": "a1766595-a58b-4b4d-87e0-037c953e0b8a",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "590638f2-63ca-41fa-9ed7-661c2bf2a674"
        },
        "item": {
          "id": "d071fab8-b5f5-456f-a080-98ed5d99478a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c34d0bdf-d41c-4eca-b150-b7003c973420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c786eb-895f-46a7-8437-b011240f8977",
        "cursor": {
          "ref": "6e749a88-9bb1-4d74-a480-922d2df7f838",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d21d2769-2bfb-40c1-bc23-d082a5e21173"
        },
        "item": {
          "id": "f8c786eb-895f-46a7-8437-b011240f8977",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0873b307-ac43-4906-ad03-05b0aa08d4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9258ead7-e4c0-463a-ad26-b1eb681765e2",
        "cursor": {
          "ref": "c14b6a7b-cd1b-48ca-9961-eaab17c73561",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "81ed9ccf-6829-47bd-9ca2-3587c23ebac8"
        },
        "item": {
          "id": "9258ead7-e4c0-463a-ad26-b1eb681765e2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5717f61a-f97c-4acf-b065-152e1117a25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e03bde-0177-4f4f-9a3c-8a37cf51c4fb",
        "cursor": {
          "ref": "0fe74b5b-ce68-4272-b37e-232c5a0c0e8a",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c602a80a-5d2f-4e35-bafc-1b5c7ecf4cae"
        },
        "item": {
          "id": "e6e03bde-0177-4f4f-9a3c-8a37cf51c4fb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7bdd08b4-8883-4929-a2f5-b604ef53bd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a35cef-ed64-4582-935c-d31ad39c7533",
        "cursor": {
          "ref": "62339426-6280-4b7d-a781-28de452e416a",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "82b20023-f1e6-481e-b327-8290eec44133"
        },
        "item": {
          "id": "84a35cef-ed64-4582-935c-d31ad39c7533",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bb0669a5-f2cd-4fab-9f82-0483bdd8e687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95740ff2-d5f2-464c-a4b8-d508af293318",
        "cursor": {
          "ref": "db959ccb-fce0-4cdf-987b-b6aec139315d",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "01650b90-51fd-4392-b190-476f4fd157c3"
        },
        "item": {
          "id": "95740ff2-d5f2-464c-a4b8-d508af293318",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e178bbdb-60a8-44ca-828c-20699d5fc581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc70429b-aaa4-471c-8d3c-79efefaba385",
        "cursor": {
          "ref": "5acc96db-2124-4ad0-9d4d-0a6b8451b233",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c9db06b9-a380-4043-9820-f6307d9a74e9"
        },
        "item": {
          "id": "cc70429b-aaa4-471c-8d3c-79efefaba385",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "9b6da335-9ed2-47a6-a349-76e75bbd5632",
          "status": "Created",
          "code": 201,
          "responseTime": 4473,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "26d4a2b5-fbd4-43ed-935c-4929e9b5142e",
        "cursor": {
          "ref": "f280d7bc-6741-403e-954d-1a393118115e",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3c708101-6b76-4b22-a13b-42fa61687d17"
        },
        "item": {
          "id": "26d4a2b5-fbd4-43ed-935c-4929e9b5142e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a30d2669-eef1-449a-adae-488cfe572d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8b3153-8876-46cb-9668-5c437fc2656a",
        "cursor": {
          "ref": "869be158-849a-4ed8-b78b-0c0a9c467cea",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b9401585-6194-4f0f-94e0-58f76e6365e5"
        },
        "item": {
          "id": "4f8b3153-8876-46cb-9668-5c437fc2656a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7e673acc-728f-4d8e-8882-846fdb5fdea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b19d968-ae10-4699-93a4-9d4135b6ee8e",
        "cursor": {
          "ref": "8461eff1-53ee-49d9-abe8-23b1c0ed0c55",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "385fe896-4e5a-4e7e-86e9-3ec01d8d107e"
        },
        "item": {
          "id": "4b19d968-ae10-4699-93a4-9d4135b6ee8e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "22cf8c54-8817-46d6-bff4-6c74c5904288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b03bf65-c58c-4b93-80a1-5698eaf4197c",
        "cursor": {
          "ref": "4e947aca-1063-495d-93cc-01bf5a1c90e7",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f68869e2-6720-4989-8511-934d810cfc49"
        },
        "item": {
          "id": "8b03bf65-c58c-4b93-80a1-5698eaf4197c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7bfd8f14-11f7-41ab-949b-171b480eb8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d067fb4-b7b7-484a-90af-0a327214c9b9",
        "cursor": {
          "ref": "44e542d4-e071-418d-a8f9-b1989ddc213b",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5b23b1ec-cd9b-474a-944e-0436a96ae60b"
        },
        "item": {
          "id": "4d067fb4-b7b7-484a-90af-0a327214c9b9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "30dc6326-2e52-4814-83f6-2f339b261e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ed560c-7163-4af6-a5fc-1aa3cf132028",
        "cursor": {
          "ref": "6ed8d59f-6648-4808-a33f-ca3d887c344b",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "783a5823-e0d9-4f3d-b52a-5b94ee771aac"
        },
        "item": {
          "id": "12ed560c-7163-4af6-a5fc-1aa3cf132028",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3b63daba-84a2-4b0a-94d7-c5b84848528e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fe7008-7f1c-4f1c-9ca5-daa83c17970e",
        "cursor": {
          "ref": "5f27ff73-9b44-401c-ae91-42d9dd4cb7e6",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6baa6e82-bed6-4ada-8759-ced9f3dd466a"
        },
        "item": {
          "id": "12fe7008-7f1c-4f1c-9ca5-daa83c17970e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "48bb9d07-718b-4356-9fa9-95811d0c4632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584eaba7-a7bc-4909-9073-071bef139639",
        "cursor": {
          "ref": "06cb520d-fa0d-4b57-9b70-6556b012aeaa",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f3cd2b2e-0305-4a9d-9ec8-c8197d39c418"
        },
        "item": {
          "id": "584eaba7-a7bc-4909-9073-071bef139639",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c71a2e73-bd9a-4dbf-a996-394195e0f99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f06636-d8a0-4c9a-aeb2-5a5b70b2827c",
        "cursor": {
          "ref": "3bf15bea-a710-41ac-a743-384ba829a214",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9c4e76a0-2749-4e47-8a9f-529ec15afc36"
        },
        "item": {
          "id": "40f06636-d8a0-4c9a-aeb2-5a5b70b2827c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "10d7addc-c252-4113-bc9c-7d52ba066a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926c5430-56d6-4b9f-bc33-5071e1793616",
        "cursor": {
          "ref": "6083c471-c50b-4ca9-b689-f421e0daa281",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3a973004-3f1d-402c-a62e-2c908d07c6b8"
        },
        "item": {
          "id": "926c5430-56d6-4b9f-bc33-5071e1793616",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8a7b51e0-dad8-4f3b-af9d-dad5ed09e986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9009597e-1310-4e33-8299-1d7d3a88ab1f",
        "cursor": {
          "ref": "9dc8bd39-daff-49a3-9bc9-44b5cd080488",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "87ffcad9-68f8-4f39-a8f7-44e34d9bd9e7"
        },
        "item": {
          "id": "9009597e-1310-4e33-8299-1d7d3a88ab1f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "72cc5dce-7e1e-4d55-9050-ab4738c83966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddef6747-4242-4278-9c11-c5badd4b227a",
        "cursor": {
          "ref": "1be1ebff-cc48-459a-b236-59746734a53e",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fb410daf-cd01-4d7a-8941-382c0f23a051"
        },
        "item": {
          "id": "ddef6747-4242-4278-9c11-c5badd4b227a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e70aa5a4-845d-4959-9bb9-39212b8cd5cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 3448,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "6eabd769-7443-4f26-862e-dc697a3a973c",
        "cursor": {
          "ref": "e96cb1b9-bb5f-4eb1-866b-76e901c25ec1",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "87c69ab0-e153-406e-90d3-1ee36246509a"
        },
        "item": {
          "id": "6eabd769-7443-4f26-862e-dc697a3a973c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0807322f-34ee-45ea-bd0f-9efec68b94db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 891,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b197d66a-1a3a-44b0-802f-d2a8f8b217b6",
        "cursor": {
          "ref": "f3a4b25c-d0ef-4af3-8b29-6f491386fa6c",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "722d6992-b335-4de1-829f-09cea6292e34"
        },
        "item": {
          "id": "b197d66a-1a3a-44b0-802f-d2a8f8b217b6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "250bf5a1-e753-4a1c-9c4d-a4fee15de0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfc74e3-7158-4146-83ab-8c4f52699849",
        "cursor": {
          "ref": "a95dab30-dc04-42d9-bae5-675b00be70a9",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1618c4a8-0c11-430b-89bd-cad6dcf90e25"
        },
        "item": {
          "id": "bdfc74e3-7158-4146-83ab-8c4f52699849",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "debacddc-9968-4865-a90b-086893e53bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e2ee4f-ac47-4e65-9477-ad285ce4fa70",
        "cursor": {
          "ref": "cbca2513-aed2-4bde-9147-c06a52a12ff8",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d670ab3e-8770-42ad-be3b-0ce26173782d"
        },
        "item": {
          "id": "c1e2ee4f-ac47-4e65-9477-ad285ce4fa70",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3cf47df4-66c6-4f96-a40f-7e025bb9b843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeed367d-81e8-4725-80e6-2ff6aee2e1fc",
        "cursor": {
          "ref": "669af2c8-c7f9-4371-96fa-8d2dfd1ae7d1",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d5ec0780-4afa-4276-866f-7940b904bb00"
        },
        "item": {
          "id": "aeed367d-81e8-4725-80e6-2ff6aee2e1fc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c0346651-8d65-4ddb-8f25-db5007de7bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a5b35f-351e-4c61-b259-497594fbc7e1",
        "cursor": {
          "ref": "b51f3910-19cf-4fea-8296-65d6e37a2305",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "95d594bb-5e03-4ad5-a550-45ada99b7ea5"
        },
        "item": {
          "id": "54a5b35f-351e-4c61-b259-497594fbc7e1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a938ebe4-69b6-4729-8de6-9193c6180bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f3b156-b88a-41f9-baae-3a4130393d31",
        "cursor": {
          "ref": "41288a7a-fc30-4752-9cfa-ce7011f7c3ea",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "11f17c3e-aa94-426c-99df-0a023d317aa4"
        },
        "item": {
          "id": "43f3b156-b88a-41f9-baae-3a4130393d31",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8ba0f99b-08de-4b80-86b3-38c047ad3dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68846a6-a114-46b2-af19-17ba23b1c5d3",
        "cursor": {
          "ref": "0556c2fd-2eca-4f2d-bff9-61a930d3af2e",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eb0b044c-95fe-4a43-88ca-d8a2ccddca9f"
        },
        "item": {
          "id": "d68846a6-a114-46b2-af19-17ba23b1c5d3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e7005196-5230-4de0-aac1-32acaa5a812b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411d5023-a284-4dd1-ac0b-aaa6e4d68d84",
        "cursor": {
          "ref": "0ea6c63e-e083-44bc-b8c9-10f39845b956",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a75c1f76-452b-4aa5-937a-7133fa519a14"
        },
        "item": {
          "id": "411d5023-a284-4dd1-ac0b-aaa6e4d68d84",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "992f8acc-61f0-4447-8371-e2fff0bab7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5849ab-a72b-4258-ba34-cdd589b289bf",
        "cursor": {
          "ref": "5c505828-0f46-4c8f-8ae0-07ba31362f7a",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7533eefc-4035-4317-af4b-bcf5bd122c51"
        },
        "item": {
          "id": "5d5849ab-a72b-4258-ba34-cdd589b289bf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "04e42ce8-1f0f-4fb3-93ee-ffa7e4cae15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6429773-6ef0-4de9-9fe4-5a3f83ecfc7d",
        "cursor": {
          "ref": "b2c3ed86-015b-48b8-a3b9-44c68d8dde07",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "78dda24a-a0bf-43ee-ad7c-5e3589b31a1d"
        },
        "item": {
          "id": "b6429773-6ef0-4de9-9fe4-5a3f83ecfc7d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "29f99488-5107-453a-bb1b-b46868a0d5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b1c6ab-7e82-4c15-a580-191b6ef3d8c0",
        "cursor": {
          "ref": "810b5da9-2e9b-4233-a8b8-14b1949b0c58",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "aa2b69c2-8d2c-494e-bcf7-f2231a8ec6cc"
        },
        "item": {
          "id": "47b1c6ab-7e82-4c15-a580-191b6ef3d8c0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d47c294e-d66e-4a8b-b889-ef2d7de8a5ed",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 650,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2f7c81-32a8-4fb1-b408-70b4ec7bbedb",
        "cursor": {
          "ref": "7a58947f-9c3d-485a-89e4-fbfacc026d7c",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4207fa5f-d48e-4aa7-a010-796cd5d16e27"
        },
        "item": {
          "id": "3d2f7c81-32a8-4fb1-b408-70b4ec7bbedb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e2ed995d-e5a9-4fe8-8e0a-1022110ab719",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 560,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "e3892716-322a-47bf-a91a-3dfdbc2feb53",
        "cursor": {
          "ref": "f3cbc0db-a166-468c-8344-4859ef207725",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b4f9cd78-2fbf-4014-b6ab-b5d6f45de2df"
        },
        "item": {
          "id": "e3892716-322a-47bf-a91a-3dfdbc2feb53",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "026f443b-e1eb-4e61-875a-1e920b557a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e23890a-dc26-475d-941b-d78702c50d8f",
        "cursor": {
          "ref": "9c81c050-3638-45a0-8d21-270e323013f8",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e5179cc1-320f-4f6e-9cdc-4a70f11679b7"
        },
        "item": {
          "id": "0e23890a-dc26-475d-941b-d78702c50d8f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6a0c2d3b-7e89-41ba-a6fe-4210a8eae0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501e68b0-98d8-460f-a494-9b0b1ce3ea15",
        "cursor": {
          "ref": "def89025-ee4f-414c-8f58-f165fe974115",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "aa82061a-df97-4554-8885-5d40f46579ca"
        },
        "item": {
          "id": "501e68b0-98d8-460f-a494-9b0b1ce3ea15",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1695d656-dc73-46cb-be64-d49f925af8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45406884-b5ad-4563-b37f-d0721a82a197",
        "cursor": {
          "ref": "8db5385f-3778-487c-8c71-1e6432a818e2",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d03ca8eb-9550-4ba9-a8a0-c4ab1a415860"
        },
        "item": {
          "id": "45406884-b5ad-4563-b37f-d0721a82a197",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1847e83b-5231-461b-9a91-68dd63b96419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e41c05-d25b-4062-9191-32249f271b45",
        "cursor": {
          "ref": "868ac74f-6f06-4f6a-accb-a3ab2334ca7a",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "17d73baa-e31d-4268-8efe-14e728cbbd5a"
        },
        "item": {
          "id": "a8e41c05-d25b-4062-9191-32249f271b45",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5fab2e31-1978-45d6-ad2f-366912cbfb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90585a4c-0c47-451a-9d7f-6a6e49456dc4",
        "cursor": {
          "ref": "ed892f18-7c4a-4958-9904-99d49254b6cb",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dc840f3d-2992-4053-aa64-8cad0c8cb2b3"
        },
        "item": {
          "id": "90585a4c-0c47-451a-9d7f-6a6e49456dc4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e38533c3-0000-42ee-89fd-2dc9f68942c3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 608,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e419f2-042a-4310-ad88-3e9e1f109fe3",
        "cursor": {
          "ref": "0a9b94c8-dd65-4e85-be43-767ee9ac20e6",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c9a8c1c9-6aec-4ec6-ba11-fe9b145a9658"
        },
        "item": {
          "id": "c3e419f2-042a-4310-ad88-3e9e1f109fe3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9d6e9622-9354-4c25-93a5-d532e4553b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2fd94a-0241-486f-be0d-623558c51149",
        "cursor": {
          "ref": "4e2ff41a-5432-4812-91fd-9d27452afd53",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7af613f9-74fb-4604-b820-b981fcfde0bc"
        },
        "item": {
          "id": "1b2fd94a-0241-486f-be0d-623558c51149",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c53ba82f-8ed9-48a3-bc2e-32e08dfdbda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1653,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772eb28f-6c33-48cb-9122-36a74667e704",
        "cursor": {
          "ref": "f8f7db1f-8cb8-49c7-9e49-87e49df61c6a",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "df615893-e2cd-44e9-96ff-d5a709f74a9b"
        },
        "item": {
          "id": "772eb28f-6c33-48cb-9122-36a74667e704",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3561b7b8-f382-4375-945b-24e7c69c550f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1999,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc4cf92-167c-4f9b-bac7-fa5e9194937d",
        "cursor": {
          "ref": "c14436d3-2303-4846-aa74-06ac934d094f",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b2e4a2e5-e382-46f4-ab96-33710d35571a"
        },
        "item": {
          "id": "5fc4cf92-167c-4f9b-bac7-fa5e9194937d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7caa40a7-0da0-4982-8d02-d9cf4905d7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1391,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cdb985-4dfa-4e80-8f3f-a739dd9e2228",
        "cursor": {
          "ref": "dee5d0c9-f827-4800-b3ae-b199e7205a0c",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cc01c9b5-996b-4639-a6d1-0015b422be2c"
        },
        "item": {
          "id": "56cdb985-4dfa-4e80-8f3f-a739dd9e2228",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ee64b7f7-347d-43ca-9db5-dc81615c3138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1682,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f94605b-b5cd-4d51-abd5-79a08b9ec668",
        "cursor": {
          "ref": "d1dda65a-a67e-45ef-a9e6-d9f7babccd48",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "609adb5a-2dea-4d4a-884c-cee0ebed6f84"
        },
        "item": {
          "id": "9f94605b-b5cd-4d51-abd5-79a08b9ec668",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "38798ded-01ba-485e-b81f-c751943128a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81c74f2-25b8-4242-9af5-4a89612de91e",
        "cursor": {
          "ref": "8d91e681-7955-440c-a595-34f29305ab13",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "df73b114-0710-4bba-8951-2b384eccf1be"
        },
        "item": {
          "id": "b81c74f2-25b8-4242-9af5-4a89612de91e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "60b09e5f-23d1-4d7b-9648-6a831c75005f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78a636f-df3a-4bf2-a1a5-110e7c13d625",
        "cursor": {
          "ref": "4506fa5a-121d-45a5-bdd5-9e9da38f12b1",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b5f09bc8-6e34-494f-8248-6bd1d375115f"
        },
        "item": {
          "id": "d78a636f-df3a-4bf2-a1a5-110e7c13d625",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f8387546-f7a0-4c56-ac5c-65d1720ae37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f158876-5acf-4cd8-8ff6-b884072bb537",
        "cursor": {
          "ref": "31ee1f08-2e72-4fd6-b7b6-aa269017ad0c",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "47b856b2-d967-4d3e-91b2-7ba737dadfd7"
        },
        "item": {
          "id": "5f158876-5acf-4cd8-8ff6-b884072bb537",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b9796312-7969-4f3f-ba8a-fedfe3e979ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61c9b53-e539-4dcb-a01d-6b8d8a1dee07",
        "cursor": {
          "ref": "b51dc956-7c3b-4289-9ed2-f67bdb7c516a",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2b9ac46f-4aa9-4cd8-a1f9-efe9ccd3a0ab"
        },
        "item": {
          "id": "b61c9b53-e539-4dcb-a01d-6b8d8a1dee07",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "583cd94b-e6e5-4861-ba22-117f5d2dd2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9dfd71-55c1-461c-99ef-68d23a52deaf",
        "cursor": {
          "ref": "8a7bf4e7-6f9e-4d00-981c-da09ff5679c8",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3462ff28-6a55-46f7-b018-686cdb7d11d0"
        },
        "item": {
          "id": "fc9dfd71-55c1-461c-99ef-68d23a52deaf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d35f7fa4-1fdd-4147-806e-be7f5a8feb67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc7a69e-2a38-4906-a8af-d1bd0099dccd",
        "cursor": {
          "ref": "a1a8bb20-49fa-46f6-b1fd-a728a2481845",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7e86f4e2-5e5b-40b6-8bbd-6f464f9ac238"
        },
        "item": {
          "id": "8bc7a69e-2a38-4906-a8af-d1bd0099dccd",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2e98ec12-23a1-467f-8ce1-29949b763c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f9e363-a041-44c1-a8e5-218bfcfb1f64",
        "cursor": {
          "ref": "726c9d09-47ed-4937-ba9d-b79576a4fe7c",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "15b83348-2d99-4dd4-a01f-a132f7d33c2a"
        },
        "item": {
          "id": "85f9e363-a041-44c1-a8e5-218bfcfb1f64",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bff6b92a-d779-4a0e-9169-6f395fa5387d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837e7d98-6c18-4d7b-a804-15a6d269125f",
        "cursor": {
          "ref": "491e6eae-c05c-40af-aa35-728c49cbdac5",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "17e2723c-135e-42cf-984c-a438735dd6b9"
        },
        "item": {
          "id": "837e7d98-6c18-4d7b-a804-15a6d269125f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "64d6bd40-d3cf-4bbf-a583-8bd8150bd0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951c2c13-cfcc-470e-b598-e50ada97d84a",
        "cursor": {
          "ref": "cf53d190-7f66-4554-9f44-2154e43de8a4",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c1a50e39-8e1c-4f43-af54-2997b3060e79"
        },
        "item": {
          "id": "951c2c13-cfcc-470e-b598-e50ada97d84a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6bcdab83-a7f6-4f40-8daa-bc17a3e9885c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04716eb1-02cc-4394-b9f4-1278cdcaa294",
        "cursor": {
          "ref": "76e7e5b7-93c5-48d6-91db-1cbbecec3817",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "966b11ed-44af-448c-90a5-662b3d11a9e8"
        },
        "item": {
          "id": "04716eb1-02cc-4394-b9f4-1278cdcaa294",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "806cca07-4bee-4aae-a36c-53ac24fbcb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e591ea-24c3-4216-bf52-c0152e3c1613",
        "cursor": {
          "ref": "cc5f80ab-a455-481f-a1f5-31115361fac8",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d5b3d989-1fe4-405b-b443-1d007a400fd4"
        },
        "item": {
          "id": "d2e591ea-24c3-4216-bf52-c0152e3c1613",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a76e7353-4d47-4bab-af7e-6a4a697af04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05871e1d-dcfb-4a21-9e15-ea0cca88bedf",
        "cursor": {
          "ref": "d7d3d3c8-416a-4224-87b1-213bdda66bc8",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e946da32-ce53-44bc-bbf5-6d952ceb3ba1"
        },
        "item": {
          "id": "05871e1d-dcfb-4a21-9e15-ea0cca88bedf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dbf95801-f27e-4c06-94f3-7bf57f622f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0268df6-559f-4b58-ba4f-d576bddce41b",
        "cursor": {
          "ref": "76a8944f-a824-4fe1-99ee-a955c531169d",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bedd8a8e-1147-4dfd-ae4e-ebfd61c61437"
        },
        "item": {
          "id": "a0268df6-559f-4b58-ba4f-d576bddce41b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a58a83e2-ba3e-49d9-aa61-7c17b73f5dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e14eeb-4306-4601-bb67-6585647cedac",
        "cursor": {
          "ref": "0af91e5d-be01-46b0-ae23-c1c205e56de1",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e2f10239-abc8-4fc0-ab53-9275340bf454"
        },
        "item": {
          "id": "98e14eeb-4306-4601-bb67-6585647cedac",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "50457d73-810e-4760-a651-fb68d1ddfe8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b06f44-fa47-43e4-877d-4f7f0e1128cd",
        "cursor": {
          "ref": "751a2dbc-758f-4165-8ebe-0b44bd35f9dd",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c8786ac5-58cc-46fc-bc79-f7a615fe417b"
        },
        "item": {
          "id": "35b06f44-fa47-43e4-877d-4f7f0e1128cd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "62de7b32-b664-4811-8665-7937fbba5c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6a7031-5fc8-4c43-b05d-4854ad2ad51a",
        "cursor": {
          "ref": "6bd70664-b6d3-41a6-98a1-69ecc3420531",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2466e52b-4b18-4900-afad-1bf32967e43f"
        },
        "item": {
          "id": "3b6a7031-5fc8-4c43-b05d-4854ad2ad51a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c0083c6c-b99f-41ad-b335-44b96ae405cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59458659-6394-4897-affc-2d011c190a0a",
        "cursor": {
          "ref": "06086c05-5605-437d-beee-69f78b0e956d",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e89f3ec9-0cff-4009-b05e-c69c9b9729bb"
        },
        "item": {
          "id": "59458659-6394-4897-affc-2d011c190a0a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "99b11f6f-6bc1-481c-8f2c-0402f3f5bc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14836c61-266e-4725-a70f-a141818e587e",
        "cursor": {
          "ref": "301d341d-d342-4656-86d9-c4ead1ffcfde",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fe10e6da-dd14-4d3c-9180-b8e00e0e4977"
        },
        "item": {
          "id": "14836c61-266e-4725-a70f-a141818e587e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5f405607-251f-4464-88c9-63a1e6c72789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d3037f-3e66-4ee9-b56a-98f209f70452",
        "cursor": {
          "ref": "74e377bc-e8a4-447e-9ae0-2a347f6909e9",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3a3ca06f-d9f9-4076-ba81-9e45a181360a"
        },
        "item": {
          "id": "e6d3037f-3e66-4ee9-b56a-98f209f70452",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a83b35c6-4f74-4d6a-a2fe-a7e4861dc21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75746ef7-02d5-4323-b71e-ce144977a98a",
        "cursor": {
          "ref": "0758d41c-86c3-4fc3-a906-a130cb41b264",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bd8ae710-0eee-48f4-854d-3be4f05c81f6"
        },
        "item": {
          "id": "75746ef7-02d5-4323-b71e-ce144977a98a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1cdc7212-a3ba-4453-a862-6f1848020503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac8662a-db05-4083-893e-dd4623cf4bd3",
        "cursor": {
          "ref": "5aade5bf-504d-4f37-bd96-464e199bb528",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1ecaa409-47ca-4834-9216-65bc0d946d52"
        },
        "item": {
          "id": "2ac8662a-db05-4083-893e-dd4623cf4bd3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "981d138a-43da-4196-92bc-47b857e86a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34150cad-0180-4a52-ba24-828a2e4613af",
        "cursor": {
          "ref": "5f5f4b50-5c0a-4bce-b928-10e06369dc9a",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "aa02bb45-b8bf-441f-8716-94571798500e"
        },
        "item": {
          "id": "34150cad-0180-4a52-ba24-828a2e4613af",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "99b36303-a05d-455e-832d-9107841e9717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6639dd70-60ac-4875-9e55-d66e0c01d051",
        "cursor": {
          "ref": "74361937-db38-4dae-acf9-fca958b4563e",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a1db737f-ce7a-4a06-8de7-8ca5a13a5cde"
        },
        "item": {
          "id": "6639dd70-60ac-4875-9e55-d66e0c01d051",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "34de4c73-ac69-4338-82b1-76cff59ca066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45188b8-0045-470c-8ae6-6cde52bfcdd2",
        "cursor": {
          "ref": "81331b9c-40d2-4f46-a637-9ac3d313865d",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "15a3c084-0c49-45cd-bad7-29fa89681200"
        },
        "item": {
          "id": "e45188b8-0045-470c-8ae6-6cde52bfcdd2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6b884112-08f8-481e-982b-6e57bcc507d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7f29cc-4c6c-4571-aa4f-94c449b1d762",
        "cursor": {
          "ref": "b9400709-9d97-4469-85d2-73e9bd276da5",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "80528c73-2e17-444e-88d3-dc968229a24b"
        },
        "item": {
          "id": "4b7f29cc-4c6c-4571-aa4f-94c449b1d762",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a4f902f9-03aa-400c-b17d-461a636e9e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a77305-8ef2-434b-827a-59fcb46b31bd",
        "cursor": {
          "ref": "7987ff03-e369-41ab-80bf-7450af73cffb",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dd723970-0131-4291-a803-d69641420e8d"
        },
        "item": {
          "id": "56a77305-8ef2-434b-827a-59fcb46b31bd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c5c85acf-c073-4ce4-9777-9483ebab12c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff34b34-867a-44b3-81dc-f5275767878f",
        "cursor": {
          "ref": "eae74ebc-46cd-43b0-99d9-a013156b0919",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7a6b8454-ca26-45cc-8971-4386cea3650b"
        },
        "item": {
          "id": "3ff34b34-867a-44b3-81dc-f5275767878f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f8bfaf1a-0b6d-481f-8df5-8ea9ae069c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946e0d9b-1331-480a-bd68-cb5ad45bf9f0",
        "cursor": {
          "ref": "ae0cecdd-cc7e-43d1-bdb2-8907d98bf68e",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "43f7c362-46a4-4b74-acb0-761010ac9452"
        },
        "item": {
          "id": "946e0d9b-1331-480a-bd68-cb5ad45bf9f0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0fcfba27-de80-4275-9bdd-fc0b8d673691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9555c8-b652-42e9-b60f-79c9eb2ff133",
        "cursor": {
          "ref": "80168897-27fe-4714-a055-00284dcdaed7",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "24ad7190-73da-4ec5-ba23-cead78900f78"
        },
        "item": {
          "id": "fb9555c8-b652-42e9-b60f-79c9eb2ff133",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bad60315-07ad-4d73-8cde-474c06632636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6b7ca2-d5aa-42e3-9a87-467c6b55a707",
        "cursor": {
          "ref": "7893ac14-6e59-4877-acc6-02d12b153859",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e7006fcf-1560-458a-916a-be0f1a2d4db1"
        },
        "item": {
          "id": "9f6b7ca2-d5aa-42e3-9a87-467c6b55a707",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "86113353-2cac-42fd-80bf-e23f7b84b318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0848d44-6f32-482c-bb77-391fab377ca6",
        "cursor": {
          "ref": "a1290c4a-c3b8-419c-8c46-a808233b1110",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bb952dbe-22c5-47ad-8541-e943f2176a0c"
        },
        "item": {
          "id": "f0848d44-6f32-482c-bb77-391fab377ca6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c494e385-2911-439a-86b5-bbeecd2d2f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7ec94a-665b-4f57-be84-e96db929209e",
        "cursor": {
          "ref": "7b26c876-0685-4ffc-8fa7-4e7168a143bf",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "91fc68c9-b05f-4535-918a-07a8d2445fec"
        },
        "item": {
          "id": "6f7ec94a-665b-4f57-be84-e96db929209e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b8c9b245-0a27-430d-bf9b-b35da1ea5f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9e4320-fd5c-41ad-8b37-976c934ae517",
        "cursor": {
          "ref": "398ac5e9-8967-4ce0-a0da-467be37b5d97",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ba540ce8-b7ab-4e52-817c-0eab2c876c27"
        },
        "item": {
          "id": "4d9e4320-fd5c-41ad-8b37-976c934ae517",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "84b3cd5f-f2d6-4bec-804e-2283c9578aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c90654e-3373-47b2-b808-7a6b0727437e",
        "cursor": {
          "ref": "b1b161ec-20b2-4009-aad7-69795d2d4f96",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "83316cc1-041f-4b0e-89a7-87903d046425"
        },
        "item": {
          "id": "8c90654e-3373-47b2-b808-7a6b0727437e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4ef2e077-4eb0-470a-a893-a8d07f2fad1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c96cde-f080-4fdd-8b4d-837a0049beca",
        "cursor": {
          "ref": "f28ffdc8-dcf9-44e6-85db-1d715bec588d",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d7d35ee8-4743-4e71-a1cf-1a883913b424"
        },
        "item": {
          "id": "b6c96cde-f080-4fdd-8b4d-837a0049beca",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e5c5af9c-2da7-4adf-8a8b-471c9830f557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c162623e-a3c8-4087-a8b4-4e4e187edaca",
        "cursor": {
          "ref": "fc9dea76-a804-43fb-87ac-2d4379c4f28d",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ef81ed18-8752-4408-ab89-680c8a60d6bb"
        },
        "item": {
          "id": "c162623e-a3c8-4087-a8b4-4e4e187edaca",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8184edc2-6bec-4c7f-8fda-23c18ea4b1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb91806-f75c-4c08-9023-83eb032cab14",
        "cursor": {
          "ref": "d0641570-af35-4787-8718-4e6fde03dbc0",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d678d401-de1a-46c4-b3e3-a9ff70ad3658"
        },
        "item": {
          "id": "8cb91806-f75c-4c08-9023-83eb032cab14",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b7439421-c3ba-43ed-b895-ea80423332af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d012d6-fe70-4871-afd3-f60ee22c1096",
        "cursor": {
          "ref": "17e468c2-8176-47c5-985a-2ddc77558c93",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fa6964f5-b73f-49d9-90f9-f6e93a5013fd"
        },
        "item": {
          "id": "17d012d6-fe70-4871-afd3-f60ee22c1096",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3e73724f-41ca-4e8b-8324-3e41479cee1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abdac21-28d8-4326-98db-6cac2a111d24",
        "cursor": {
          "ref": "be043638-09c8-4d91-a67c-91ec45ab3bc4",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6abf6e80-4e5a-49b9-88b2-e1171676905f"
        },
        "item": {
          "id": "8abdac21-28d8-4326-98db-6cac2a111d24",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "74a95775-830b-4c5c-9d13-07d09b9488bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04bf81b-ac60-49a3-ba7f-45e017bb44ea",
        "cursor": {
          "ref": "d2484c52-5242-4a38-9128-89b7f114e03f",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "daa99a04-f169-4d7e-a351-51a5fa6267ea"
        },
        "item": {
          "id": "a04bf81b-ac60-49a3-ba7f-45e017bb44ea",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cd469a62-c24a-43af-99e4-baadd5ffd11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c39a34-44bc-4d7c-9d43-4ad1f7215f43",
        "cursor": {
          "ref": "f488cc68-29a9-4aa0-b25f-926a79ddecef",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5c6aa666-6f54-44a0-83d3-36f052f88935"
        },
        "item": {
          "id": "e8c39a34-44bc-4d7c-9d43-4ad1f7215f43",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8554cf2e-06be-4f25-b47a-0e9678a1bd84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21190c4e-5550-42a6-bb84-c42ecbb7c746",
        "cursor": {
          "ref": "c10e06fe-a616-40e9-a11e-affc10bd9a2c",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "177c14ca-af69-4b83-8173-4766c41640a2"
        },
        "item": {
          "id": "21190c4e-5550-42a6-bb84-c42ecbb7c746",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4837563d-a6b6-466c-a5fc-2eb332d9691f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1075ef5-0385-45bc-8486-d34fdfb82964",
        "cursor": {
          "ref": "167ad9d3-33ee-4aa6-a3a9-54bd60f2328d",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3d5f1efa-09de-497e-8f14-32cd2d587fb4"
        },
        "item": {
          "id": "e1075ef5-0385-45bc-8486-d34fdfb82964",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "eba5e199-d206-4c83-815e-4092cfdd55e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7935db9f-482d-43f0-8a7a-e7f33c990792",
        "cursor": {
          "ref": "7e67734f-1ed2-46ab-888d-a8afdbeedd43",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "732f9bf8-2946-4800-9ce2-c84b364a6d46"
        },
        "item": {
          "id": "7935db9f-482d-43f0-8a7a-e7f33c990792",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "13c33824-9bf9-4d79-98b1-f35ce8b6c90b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921274df-51d0-40b5-873e-13ef438ae5f2",
        "cursor": {
          "ref": "62500e86-a173-42bc-bc6e-fcee3c422faa",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d57dab34-c636-4fac-bcce-927cdcdf44c2"
        },
        "item": {
          "id": "921274df-51d0-40b5-873e-13ef438ae5f2",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c2261ec9-8b00-481e-8667-7037628b5a64",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 591,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaecdd62-a185-43e5-98f6-52b93e7044f7",
        "cursor": {
          "ref": "ea619c07-8b3d-4a7d-b6dd-c610288f1c66",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a0f17b7d-2cb7-432d-8b18-cb18771811db"
        },
        "item": {
          "id": "aaecdd62-a185-43e5-98f6-52b93e7044f7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b6908e4d-1c2c-4051-adc7-201162ec87cd",
          "status": "Created",
          "code": 201,
          "responseTime": 4074,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "6cb6a131-acd4-4103-b8d6-3d84fc0e4ae8",
        "cursor": {
          "ref": "eb8d207b-dfe8-4f91-bb09-a47b32344615",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "883b2516-a185-4542-ad66-86974ff69663"
        },
        "item": {
          "id": "6cb6a131-acd4-4103-b8d6-3d84fc0e4ae8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fa815e36-e22b-4a7f-a0bf-26736ec210b9",
          "status": "Created",
          "code": 201,
          "responseTime": 4085,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "9814cef6-0689-45b5-a103-1db747729ab8",
        "cursor": {
          "ref": "35421605-205c-4597-a3b5-ab5f4eb0d252",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a49049ec-7ede-4487-97c5-625d54369bed"
        },
        "item": {
          "id": "9814cef6-0689-45b5-a103-1db747729ab8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "282eedf0-7ef3-4d35-a26e-8fe5a077525e",
          "status": "Created",
          "code": 201,
          "responseTime": 5308,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "48eb8365-2d8a-4cf4-8bb1-bc70dfa11381",
        "cursor": {
          "ref": "61ffc990-7e91-4283-9ca9-591e02f43209",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2393f076-9566-4d2d-8acb-e0a4aa61f270"
        },
        "item": {
          "id": "48eb8365-2d8a-4cf4-8bb1-bc70dfa11381",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ebb179ae-316e-4f49-8043-b0781252a179",
          "status": "Created",
          "code": 201,
          "responseTime": 4020,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "f6f22756-6e6a-48db-912e-f6bbdeec2903",
        "cursor": {
          "ref": "f8f6df99-bb54-4bb5-8400-8c5d56a9102a",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "36310675-a656-40c5-b2e8-48f975494b9c"
        },
        "item": {
          "id": "f6f22756-6e6a-48db-912e-f6bbdeec2903",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f437df4d-0603-4867-97be-917b09c379d0",
          "status": "Created",
          "code": 201,
          "responseTime": 5025,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "2f9d8a2c-d106-450e-91ab-d468cd92aafe",
        "cursor": {
          "ref": "48ec77b1-137d-463a-a1cd-17b4d45cb1e6",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "02874011-79b4-4cbf-bbf4-7a0932ee441b"
        },
        "item": {
          "id": "2f9d8a2c-d106-450e-91ab-d468cd92aafe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "87c55fd3-ab0b-4575-a63c-3d2d4f76c030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9d8a2c-d106-450e-91ab-d468cd92aafe",
        "cursor": {
          "ref": "48ec77b1-137d-463a-a1cd-17b4d45cb1e6",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "02874011-79b4-4cbf-bbf4-7a0932ee441b"
        },
        "item": {
          "id": "2f9d8a2c-d106-450e-91ab-d468cd92aafe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "87c55fd3-ab0b-4575-a63c-3d2d4f76c030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaefef7-956f-46dc-aec6-ada09dc11081",
        "cursor": {
          "ref": "9aebc83d-7c6d-4bb0-b9a0-5f105890f9d9",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9a0d27f0-f11a-4eb3-9e43-752b394f5384"
        },
        "item": {
          "id": "aeaefef7-956f-46dc-aec6-ada09dc11081",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "966c7aa7-4b17-46a1-b260-7a298c8286f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f3f5cc-c4a9-4a33-b383-9b59fea3e370",
        "cursor": {
          "ref": "b0481a9a-fcad-4bd4-9de6-801a2e2af750",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a541ad1c-fcac-41e9-9773-45bf69698405"
        },
        "item": {
          "id": "f0f3f5cc-c4a9-4a33-b383-9b59fea3e370",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "28a56602-67ac-4698-af05-6e72ab51b979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979cfc6b-95ca-4077-b071-60e8d5d20939",
        "cursor": {
          "ref": "47623aeb-b59f-4ec8-a4cf-def657e7e940",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "512480cf-234b-49bd-a7c7-4e535b9fca4d"
        },
        "item": {
          "id": "979cfc6b-95ca-4077-b071-60e8d5d20939",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a58a4d4c-4a35-4be5-9373-c7be0c89f5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ad4bb9-eb75-4b49-99e4-9797b39cab2c",
        "cursor": {
          "ref": "c4eec8db-be9b-405b-b1d5-e072d62ed363",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6521f9d6-238f-40c8-b4b1-4c32d76ef2cc"
        },
        "item": {
          "id": "b9ad4bb9-eb75-4b49-99e4-9797b39cab2c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e8772035-3eb7-444e-bedf-519aa066a6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad1a98e-2aea-4406-ab92-b47b004a6109",
        "cursor": {
          "ref": "a861c040-6465-447b-97bb-eb6e022c5d86",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6688389e-9661-40af-9a9c-e052adce149e"
        },
        "item": {
          "id": "dad1a98e-2aea-4406-ab92-b47b004a6109",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2d72cd14-34d4-49f1-83ea-e23b3d81bc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d522cd2-8472-44c8-86ec-895c45e785c2",
        "cursor": {
          "ref": "ba95dee5-5639-49a6-9022-fb604d6051a7",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a2b10581-5e7f-42fe-a1f9-bfc5a2396b9b"
        },
        "item": {
          "id": "2d522cd2-8472-44c8-86ec-895c45e785c2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ffc03a35-682a-41a4-8657-fdbaf7003d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1955ce1-0d93-4bf1-bd0c-ca99d04e6174",
        "cursor": {
          "ref": "31986dca-531a-4808-af9d-583f1aedbb02",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "585bd3af-df7b-45bc-bbde-645751f531cc"
        },
        "item": {
          "id": "c1955ce1-0d93-4bf1-bd0c-ca99d04e6174",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5d31447e-bbe2-4417-bac7-5d6132cd4fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbb481d-45fe-4dd4-9917-53c7984da74d",
        "cursor": {
          "ref": "3984ece3-7600-4ff5-9fa7-0c5c8b0d1b2f",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "11452643-9226-45f8-b7cb-1b841f6310ca"
        },
        "item": {
          "id": "8dbb481d-45fe-4dd4-9917-53c7984da74d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "55910fe2-a72c-486f-8428-548cd48b1ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4572d986-30c0-4d8d-9f3f-1963116636c5",
        "cursor": {
          "ref": "7f756c4f-9acb-459b-af9d-bca2b109767e",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "43858487-5b69-4d80-9687-7cea72acc6ac"
        },
        "item": {
          "id": "4572d986-30c0-4d8d-9f3f-1963116636c5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6780aa09-f04c-4a02-8950-23e649bd11b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d2d3ea-40f5-4db4-b5c5-6fb1c4b4f2bc",
        "cursor": {
          "ref": "07f9cd8b-cc34-4513-87c2-a13716c9fab5",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0ccc5450-4a01-4717-84c9-8bb2dc59bf29"
        },
        "item": {
          "id": "a8d2d3ea-40f5-4db4-b5c5-6fb1c4b4f2bc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "82f6bbc5-5040-4fed-a361-845e075ee5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9e7cfd-446b-4f67-8b98-eae469cb930e",
        "cursor": {
          "ref": "02d578eb-11cb-4f39-bd74-a7aead6b3d83",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ead1a866-ab11-47d2-968c-02bba924c7bb"
        },
        "item": {
          "id": "bc9e7cfd-446b-4f67-8b98-eae469cb930e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "06bde380-fd22-4098-bfec-d1b21a2d2a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361f5870-03d9-45e0-90f2-2668c01924a8",
        "cursor": {
          "ref": "be097c55-8909-4bf9-9ce9-2cf671e102bb",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c55b2691-ea4b-4f04-b93b-eaa38d507bfd"
        },
        "item": {
          "id": "361f5870-03d9-45e0-90f2-2668c01924a8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7cb5217d-4948-4199-92cf-5b558679d31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9472a5cd-e0e2-4449-a3d9-e5f203878134",
        "cursor": {
          "ref": "38e32888-96a9-43fc-8b09-df039841d6de",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "125f0ad8-b294-4e85-a546-730721b78152"
        },
        "item": {
          "id": "9472a5cd-e0e2-4449-a3d9-e5f203878134",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "357f8a8a-7298-46e3-9735-49f65719f16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 700,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdfb783-f955-471b-b494-aa5146320b5f",
        "cursor": {
          "ref": "0fe1a8bc-5d69-4692-883b-11d722dbd510",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ddd37587-4a4f-4053-a000-2e58ef811d7a"
        },
        "item": {
          "id": "ecdfb783-f955-471b-b494-aa5146320b5f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bc6ab7d6-f2d3-4266-9b24-48a48ae0eaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34f4a28-99ba-4578-8589-39dee31a3f49",
        "cursor": {
          "ref": "849460de-d229-4981-94b3-2cc5c9210104",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c356d4ce-6571-4d50-866d-d90415904593"
        },
        "item": {
          "id": "a34f4a28-99ba-4578-8589-39dee31a3f49",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7e0c7852-f270-4ccd-8d3d-05838656dd2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b10fb7-44b6-4386-8fbf-63393093b569",
        "cursor": {
          "ref": "b19fcbdc-ed81-4907-9978-af3c66bf4f9d",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4f5ae11d-3b65-4cad-a196-5b980caef317"
        },
        "item": {
          "id": "21b10fb7-44b6-4386-8fbf-63393093b569",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "60b2513c-2d82-46fd-b57c-87b2fa83c208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d71fda0-fe71-4d64-81c7-874ae2888931",
        "cursor": {
          "ref": "edd270eb-4a2c-46bf-96a4-6d77059a58e1",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9ad07d42-6caf-4119-bac3-e06f50c78e1d"
        },
        "item": {
          "id": "0d71fda0-fe71-4d64-81c7-874ae2888931",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c4894e93-c3e1-4540-b5c6-5d17aa83d53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99464ab0-b54f-4c68-add8-008d7a99d877",
        "cursor": {
          "ref": "b0647d3a-29ce-49c8-99ed-634307b36643",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9c27441a-a89b-4068-9148-69d9d5652985"
        },
        "item": {
          "id": "99464ab0-b54f-4c68-add8-008d7a99d877",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bbc9b806-545f-4973-91c0-10833889ab3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512d8e60-b995-4633-9bee-fffb6899b5a3",
        "cursor": {
          "ref": "a118179b-8f68-4e3d-8f4b-e384ed60bbbd",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "22c57011-43e0-4a7d-b5a3-8dc4c93eb78a"
        },
        "item": {
          "id": "512d8e60-b995-4633-9bee-fffb6899b5a3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3d2ca322-bd69-47ad-8185-3bcc1f9d7a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fedd13-8cb3-41ec-9c22-e5ac0fd3dbe4",
        "cursor": {
          "ref": "cb26371a-339a-4fe3-b49a-4a7e9c58af28",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3a326b22-447c-437d-8254-c44c1e1281b1"
        },
        "item": {
          "id": "76fedd13-8cb3-41ec-9c22-e5ac0fd3dbe4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "aaa84e7a-0d0c-4c14-a068-ae0c4844bdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01106ae2-fcbe-4e56-8ddb-f2274bd5e4ea",
        "cursor": {
          "ref": "ba922164-e373-4b1a-b986-90379580cf9d",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "20bc9828-9f78-4dd9-9bbb-3298ab1e5d2c"
        },
        "item": {
          "id": "01106ae2-fcbe-4e56-8ddb-f2274bd5e4ea",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6d8affa9-e3ca-46f3-b0f5-850560d2e308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bebca84-618f-4703-aafa-7506d75a9d64",
        "cursor": {
          "ref": "4d1408ec-f479-4dae-a10d-abad6056ce00",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a4a20056-6e21-462e-8bff-bb0a5681a426"
        },
        "item": {
          "id": "0bebca84-618f-4703-aafa-7506d75a9d64",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "cff2fba5-972f-4933-b791-aa8f83902ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1151,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81d958b-5214-4e88-bcf8-9ed35d30f50a",
        "cursor": {
          "ref": "2da367bc-ea5e-43c2-9663-ddd48383a702",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "81b58cf2-4e2e-4eeb-820d-f9164f85a44c"
        },
        "item": {
          "id": "c81d958b-5214-4e88-bcf8-9ed35d30f50a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "310a1ed7-e865-4d5c-ac63-62f54682d4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1747,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8867eb00-97fb-42ee-941c-9f80a05d5cf3",
        "cursor": {
          "ref": "70b145cc-612e-47e8-bae0-61d70f067807",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "90d6abb2-fdc9-4338-ac05-e2123644ec57"
        },
        "item": {
          "id": "8867eb00-97fb-42ee-941c-9f80a05d5cf3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "04560bfd-b72b-44b7-a691-d550a0e2a067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1876,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd8847c-7be1-4944-be45-8a1bb46afa7c",
        "cursor": {
          "ref": "affb5075-7e1a-4a82-9f2e-664ab1398fcc",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "06683a4c-c452-4741-aa51-bb3bf71a8072"
        },
        "item": {
          "id": "dfd8847c-7be1-4944-be45-8a1bb46afa7c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1cf88cfa-107c-4f3d-8058-359c94b555bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2069,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474e29a4-c9c2-4576-9249-6ee8a5f7bbaa",
        "cursor": {
          "ref": "94cdb8df-e758-48ec-bdaa-58cfae20661a",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ed64a182-f86d-4486-836c-bed590839d26"
        },
        "item": {
          "id": "474e29a4-c9c2-4576-9249-6ee8a5f7bbaa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "08177caa-7026-4f76-b08d-254dc565d1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1705,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35cf2d6-d263-4f7f-9c5e-30b8632152a1",
        "cursor": {
          "ref": "0d382926-e173-4bd2-a877-f4d9a6320e13",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f4aea5fc-6ed9-48d9-8e02-3a96c0b8d93c"
        },
        "item": {
          "id": "d35cf2d6-d263-4f7f-9c5e-30b8632152a1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5c447a24-ad5a-4837-9fc9-729d7b5f007e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8b1974-5928-4154-8a5d-986a9de05eb6",
        "cursor": {
          "ref": "ad2a4319-b896-4364-9b13-e8f92897fb4e",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "236d83b2-1b99-46f6-8547-1d6bf28437f7"
        },
        "item": {
          "id": "5b8b1974-5928-4154-8a5d-986a9de05eb6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f6a91f74-0d59-473e-ad7e-94f62acc5b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69f06b6-0ab2-49cc-96ab-7dfae10157a4",
        "cursor": {
          "ref": "252809aa-10d7-4a63-ad7e-414acb0ea41e",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6bd61191-dcb0-4d97-9f8c-d79bee94c789"
        },
        "item": {
          "id": "e69f06b6-0ab2-49cc-96ab-7dfae10157a4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ad13a7f9-89db-4300-99b1-714b20cb2b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce4a81d-6ab3-4b59-8766-5506f803f4de",
        "cursor": {
          "ref": "e8158743-9e11-4327-9b3f-03fe2485e251",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "63f878ee-2fe9-45f3-9d2a-705561e62218"
        },
        "item": {
          "id": "fce4a81d-6ab3-4b59-8766-5506f803f4de",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ee0d4ad5-f7bd-45f5-b222-232fc04090f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fba361-8f1a-4637-a7fa-3d452d5c87d6",
        "cursor": {
          "ref": "88afa5dc-590d-4c2d-9fb2-db00f15bb40a",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4733628e-2e28-45ef-b16b-9cd5970b0995"
        },
        "item": {
          "id": "44fba361-8f1a-4637-a7fa-3d452d5c87d6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "45177a13-d15d-4335-a651-8c7cfd80089c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bfae03-fa7e-424b-be39-d30b69320c5f",
        "cursor": {
          "ref": "f528cda1-96a2-4d98-8bb1-bd8b7d6aff2a",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "44b07638-2476-4595-808e-5003931c9534"
        },
        "item": {
          "id": "82bfae03-fa7e-424b-be39-d30b69320c5f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c48d834a-461a-468e-906d-5cd633680d63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5180421-aa88-49c0-8d4d-428ed2c3d1be",
        "cursor": {
          "ref": "19d23624-ff49-4673-b0c5-8df3f8449e52",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ad65dbed-0d38-44a6-be0d-882cf66a239e"
        },
        "item": {
          "id": "f5180421-aa88-49c0-8d4d-428ed2c3d1be",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "3dc52098-ef77-4fbd-8153-79401dc09a77",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 650,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61ce218-d808-424d-a436-cc15c403d367",
        "cursor": {
          "ref": "45cc0f0a-5cdc-412f-9018-413743ee3e46",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4dda1350-fb44-4101-bcf4-fb611be6f0aa"
        },
        "item": {
          "id": "e61ce218-d808-424d-a436-cc15c403d367",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "93d78b00-eb00-4c3c-8a41-bb28b5341551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61ce218-d808-424d-a436-cc15c403d367",
        "cursor": {
          "ref": "45cc0f0a-5cdc-412f-9018-413743ee3e46",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4dda1350-fb44-4101-bcf4-fb611be6f0aa"
        },
        "item": {
          "id": "e61ce218-d808-424d-a436-cc15c403d367",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "93d78b00-eb00-4c3c-8a41-bb28b5341551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa3723c-2e26-4671-aa31-d37a16421ba5",
        "cursor": {
          "ref": "8d41eb83-8aa7-401a-bad2-764ce3944d61",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a2b3e183-ff9d-43a6-9f7c-f3addba48761"
        },
        "item": {
          "id": "9fa3723c-2e26-4671-aa31-d37a16421ba5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0b3a689d-82b1-4430-80f6-2da064fd37ad",
          "status": "OK",
          "code": 200,
          "responseTime": 439,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "852bf0c9-73fb-4375-aa58-3c2fe9ecb7cf",
        "cursor": {
          "ref": "efb9ab3c-a14b-4260-bc0c-99cd952d8969",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "71372945-0a67-4d56-a129-d5f99ea6f8a4"
        },
        "item": {
          "id": "852bf0c9-73fb-4375-aa58-3c2fe9ecb7cf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "703eb08e-3e8b-42e4-afb1-d9f492adff9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071d891c-be43-4e84-a291-b873ea5b19c1",
        "cursor": {
          "ref": "5dc4f2ab-9a1f-4791-bf02-5fe0922981c5",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "30a819a9-d5d4-4f1d-9672-3446195c73b1"
        },
        "item": {
          "id": "071d891c-be43-4e84-a291-b873ea5b19c1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "122bf337-aa35-49b8-a062-0adec66d8c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80fb4acb-9873-4c02-b646-d4508c112a85",
        "cursor": {
          "ref": "2994cf55-ba6f-4785-970e-8bbece0ca7a7",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "91d9f3ea-b4ac-4f44-a3e9-d672b075dac9"
        },
        "item": {
          "id": "80fb4acb-9873-4c02-b646-d4508c112a85",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e2f31545-3128-4ad9-8594-cd95e58f3b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ef03a3-1c2d-48b3-8cc7-c9ed79d4f0ac",
        "cursor": {
          "ref": "c9972cfe-8035-4337-b426-1e46d8845303",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0710b735-2329-408a-a4a3-cf36f05ea905"
        },
        "item": {
          "id": "22ef03a3-1c2d-48b3-8cc7-c9ed79d4f0ac",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "075c92f2-beb7-42a5-8bee-bb0a8f353b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95395858-8341-48b2-89bd-4e388e2d485b",
        "cursor": {
          "ref": "35cb435b-d6db-4385-90ac-fe40df394023",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cc157805-9910-4df1-a1ce-675d082c354e"
        },
        "item": {
          "id": "95395858-8341-48b2-89bd-4e388e2d485b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b0f81d35-66a3-4e35-958a-c8d240cc536c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535c79f0-29a8-4a93-8554-be24a5b1493e",
        "cursor": {
          "ref": "70b55f7b-dc1a-44b8-b755-2f95f454c826",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a67cc32f-3402-4123-94e1-35ef9eac21a9"
        },
        "item": {
          "id": "535c79f0-29a8-4a93-8554-be24a5b1493e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "998b2565-4a19-4485-87bc-162a91e3cb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91ef2ca-844c-4dbb-8838-5dfb68b7e804",
        "cursor": {
          "ref": "6373e669-f0cf-4b6e-ac9e-aacfd5ce46e3",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0c13dc0e-c88a-4b42-8d1e-3fdd0e691db8"
        },
        "item": {
          "id": "b91ef2ca-844c-4dbb-8838-5dfb68b7e804",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "79cae471-5c8d-49ad-b871-11a9d1be928b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70aac1b-9d61-425c-af3d-e9daf2bf5712",
        "cursor": {
          "ref": "77045e25-e0e6-43f6-bf92-3c9dda622488",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fdd3de22-4dba-4dae-8b66-e1d2fdee7b50"
        },
        "item": {
          "id": "d70aac1b-9d61-425c-af3d-e9daf2bf5712",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "addf2f73-d7c0-4fad-8756-321bbaee6d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91d821e-c302-4f5b-8903-0a59330c63ee",
        "cursor": {
          "ref": "236e2698-9ab9-4388-85dd-1ceededcdb11",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "552664a3-a669-4c2f-b098-98abddbd4f9e"
        },
        "item": {
          "id": "c91d821e-c302-4f5b-8903-0a59330c63ee",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6be6f162-8fcb-4aff-81b0-5ab1911401f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90832a24-5ced-4648-aac4-f92e4cc78e2e",
        "cursor": {
          "ref": "b6e6b581-f63e-4abb-927c-e78ffc8470ee",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7f6c5e6c-c4b1-4445-bf23-475bafef5435"
        },
        "item": {
          "id": "90832a24-5ced-4648-aac4-f92e4cc78e2e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3c60eb1e-8e87-435e-aef2-c9707663681b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe15dde-7ce5-415d-aad2-d1007d4ca43b",
        "cursor": {
          "ref": "99ea31ef-0c75-4c42-9a3b-67a86953f832",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bcb8b96e-e6a5-470e-8151-6a3ef982db6e"
        },
        "item": {
          "id": "5fe15dde-7ce5-415d-aad2-d1007d4ca43b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8f7f7a56-43b5-441d-a594-17d90e83de28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90da594-a226-4065-ac7e-e73475a5d02f",
        "cursor": {
          "ref": "1d835b6c-c3f8-4836-8b63-2b30fdd8c942",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cdb7ff60-5c74-4153-8759-9d24764dc1af"
        },
        "item": {
          "id": "c90da594-a226-4065-ac7e-e73475a5d02f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5b8db246-40df-4c68-b706-451097595a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21be219-ba51-48d3-b2ef-b503764f700f",
        "cursor": {
          "ref": "f151d202-7229-43cd-8ab5-8b14d5cc1101",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c7eababb-a868-4171-a1ad-af509c7375d0"
        },
        "item": {
          "id": "c21be219-ba51-48d3-b2ef-b503764f700f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5f652aa3-2fda-48cb-b540-e7ea4559b6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8445a8b-d324-417a-87c8-2b0ad3c2ca70",
        "cursor": {
          "ref": "afb7d7af-97ef-4e39-98d1-1dd7ce9c9c52",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0b186317-f4ab-48a0-8d6e-e93ae31d75d6"
        },
        "item": {
          "id": "f8445a8b-d324-417a-87c8-2b0ad3c2ca70",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "73e215a6-6f12-4fe3-b3a1-bc2d18e0744b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fb1c7e-fcdb-410d-be1b-0e207c86068c",
        "cursor": {
          "ref": "5d30f70e-2e46-4f5d-a8ff-ed9f7ab77c60",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c29521fd-a11d-4d5d-82f2-30ea9be0172b"
        },
        "item": {
          "id": "73fb1c7e-fcdb-410d-be1b-0e207c86068c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "88f15a50-5c97-4133-94df-701eaa6c1942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712899ce-066a-4bc7-818d-0f0979f9a4f5",
        "cursor": {
          "ref": "6f70e9b7-61cb-4819-9e28-01fa6bc2cfb6",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "63e081a0-cf6e-4586-87f4-ddc20f7eef24"
        },
        "item": {
          "id": "712899ce-066a-4bc7-818d-0f0979f9a4f5",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "44599e1b-6303-47d8-a32f-b69384200138",
          "status": "OK",
          "code": 200,
          "responseTime": 2072,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "f899cd2d-1f24-4d63-8d9d-f9c2967df533",
        "cursor": {
          "ref": "22abbfd5-8122-4ebe-aeab-2bf26e6d2e19",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5875a60f-4467-466c-80bb-00129e4b8a74"
        },
        "item": {
          "id": "f899cd2d-1f24-4d63-8d9d-f9c2967df533",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a1a956c9-8c05-4071-bcc8-8a5d77cc6123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8318fda8-03f9-4bea-b02e-cc2abea8471e",
        "cursor": {
          "ref": "87b0e5ae-ea43-429d-a543-82ec992ba5e2",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "18f79ddb-c3e4-482d-a61d-4cf18971f10d"
        },
        "item": {
          "id": "8318fda8-03f9-4bea-b02e-cc2abea8471e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f5dc4ee6-e714-48c7-bba3-f81fc6c2bbb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb796f23-463c-464c-997d-6835c0923f6d",
        "cursor": {
          "ref": "7fd759f4-3893-4af6-8958-7aa01ecedab4",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c576f9a7-9b2c-4ac7-8acb-26372bceb5f9"
        },
        "item": {
          "id": "fb796f23-463c-464c-997d-6835c0923f6d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3bdc10b2-e312-4aeb-aa2b-e4f76dc78b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6af257-1f9b-4958-99b0-64c2086e99ec",
        "cursor": {
          "ref": "cab7fdda-aaf6-428e-a0c4-9e86ee9a6df4",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "52ecda3e-9f72-4188-a814-7a328e77ebe8"
        },
        "item": {
          "id": "da6af257-1f9b-4958-99b0-64c2086e99ec",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "29da8390-0d68-4181-bdb1-05aa8c7959cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56adaf0-233c-4d08-ab11-e7fa8371e8b6",
        "cursor": {
          "ref": "8b8e21a9-7dfa-45d0-b450-6ed6e0eb6802",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8dac2068-9366-456b-a861-2a42c644c120"
        },
        "item": {
          "id": "e56adaf0-233c-4d08-ab11-e7fa8371e8b6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2678770a-9060-41e9-bfc4-7833e5be27ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaa7343-dda7-49a5-92cf-e28e6b39de5d",
        "cursor": {
          "ref": "30c8feed-3082-403d-a454-618176418a01",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c964df18-bd28-4a7a-9a43-c9cd844c6cdc"
        },
        "item": {
          "id": "acaa7343-dda7-49a5-92cf-e28e6b39de5d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0367d555-1f1f-446c-9b0b-dd822483969f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b5e20f-397d-478b-8c4c-a4ee1490832e",
        "cursor": {
          "ref": "d7b4d6e9-0ff8-4c3c-850a-a7cf13dc1274",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4d113dc8-91ae-4228-b7e9-9e1fa3e200a7"
        },
        "item": {
          "id": "16b5e20f-397d-478b-8c4c-a4ee1490832e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "911c856d-76d8-4ef6-9292-ab50239a0297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaab543-abaf-4bb5-9a83-681896719266",
        "cursor": {
          "ref": "fcef4831-1c25-44f9-b3e8-63cfd514b7d1",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8080045b-9803-4dc2-bccd-671647108c59"
        },
        "item": {
          "id": "fcaab543-abaf-4bb5-9a83-681896719266",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d4ff6316-5b23-426f-aeb9-4fb21905a78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc5c42b-7744-4395-8519-faee35fd4354",
        "cursor": {
          "ref": "e2596b03-3484-4dca-a85a-9329eb282ded",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5707c7c4-ffb6-48b9-8015-f40d3c225670"
        },
        "item": {
          "id": "abc5c42b-7744-4395-8519-faee35fd4354",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a283c9e0-22a4-446a-825c-8f2554542cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9af8d29-58bc-44fd-9976-fce12ddd1d49",
        "cursor": {
          "ref": "18c3f4c0-8879-4b4c-8102-88447fea0c44",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cf8fccd8-e59e-478e-9bfb-aeb3b08c475f"
        },
        "item": {
          "id": "f9af8d29-58bc-44fd-9976-fce12ddd1d49",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d73301f7-4b2b-479f-bfa0-2f36c535cc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f13c3f-482a-43f5-9d7d-841afb9e8a2c",
        "cursor": {
          "ref": "3a77a85f-3fec-43f6-a5de-3ab0cc4fb76b",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a2ec8fbb-a218-47b6-b669-b2d9ccafdc54"
        },
        "item": {
          "id": "83f13c3f-482a-43f5-9d7d-841afb9e8a2c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b75e3db4-032a-4d24-99b6-c1f45923955b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f76c996-e618-4e19-bdec-6fbff85bb345",
        "cursor": {
          "ref": "6193fed8-fe3a-4d7b-86e0-9b2aee1cdf33",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a3502eb3-19f6-4ffa-a9c8-9067b3db6fe8"
        },
        "item": {
          "id": "8f76c996-e618-4e19-bdec-6fbff85bb345",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "90e0237f-d7ef-4895-87d3-11aa86ddfa40",
          "status": "OK",
          "code": 200,
          "responseTime": 379,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "8796260b-ef05-4e85-9a1b-4c3757f4e43b",
        "cursor": {
          "ref": "a3858b5e-0c1d-41ab-b669-deaa4e5c612a",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "94eeba38-5c55-4de5-8369-0188eba690e0"
        },
        "item": {
          "id": "8796260b-ef05-4e85-9a1b-4c3757f4e43b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "615ca026-0527-462e-9eec-14724e02306e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0566960c-fef1-4e94-a11f-0fb123d2927e",
        "cursor": {
          "ref": "d3ba91f5-d280-46c1-b037-a91042197434",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6dee54e6-a109-45f7-be30-0d21cb76efdb"
        },
        "item": {
          "id": "0566960c-fef1-4e94-a11f-0fb123d2927e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "42ba6007-c35d-49d3-889d-7afdeaadc2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780aad35-188a-44d2-a06e-b557aaa31c38",
        "cursor": {
          "ref": "f064fee0-18f5-427f-918e-0b1dcb571373",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "208e6f00-a216-4401-a89a-fb9e7b54010b"
        },
        "item": {
          "id": "780aad35-188a-44d2-a06e-b557aaa31c38",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1ae40878-701d-4cee-ad28-362c0b25cce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752dc33c-5f08-4d61-a495-5eed6cc020b7",
        "cursor": {
          "ref": "27d7b8c6-7e78-41b8-801b-d5eeb0ecec7e",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c319369e-7269-4d69-b56a-b4b3c4e82fb4"
        },
        "item": {
          "id": "752dc33c-5f08-4d61-a495-5eed6cc020b7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "652e99f0-41cc-4640-ac30-bbdbdedfb456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3ed465-7048-4bac-910c-a407a0844991",
        "cursor": {
          "ref": "6a6bbcbe-9114-44f9-b533-01772900c1bb",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0e3e7afc-8bf9-46e1-882c-7dbc3210befb"
        },
        "item": {
          "id": "7d3ed465-7048-4bac-910c-a407a0844991",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e3ee39aa-a8dd-4518-86bb-5a7662196640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 887,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbfa1c9-5eeb-47a6-996a-ffdb5b2907f1",
        "cursor": {
          "ref": "241a4059-fa95-4cc2-bfac-8f53628493a9",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7ba91c9b-2194-4681-bdf5-e7ed06d6b70f"
        },
        "item": {
          "id": "3bbfa1c9-5eeb-47a6-996a-ffdb5b2907f1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f7cdc2bc-50d9-4c37-bb78-3a81cbd363f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ef205c-9bdc-4721-aa5b-4c13cb25e107",
        "cursor": {
          "ref": "ab3224a2-f6ff-40e9-94df-a4ceb6c614be",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fb885c9f-b661-4768-a1c8-d321fd50c955"
        },
        "item": {
          "id": "03ef205c-9bdc-4721-aa5b-4c13cb25e107",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "72b340e8-6136-44e9-97fc-d2b3f3d2999d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af74ce88-a552-42c2-bcce-4f2d63c168b5",
        "cursor": {
          "ref": "a11df55e-61ec-4b49-8866-a557c0783933",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d1e5b149-3cf9-440f-a002-94bcfe0a513e"
        },
        "item": {
          "id": "af74ce88-a552-42c2-bcce-4f2d63c168b5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5587cdec-df3a-486d-a3cd-fb4377f7964a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb55785-493e-456f-b012-aa4c04c1ed4a",
        "cursor": {
          "ref": "8cbdae15-b666-4d61-931b-45eeef39c74b",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "32c4aeba-f87f-4039-8e62-29cb1e9bf6dd"
        },
        "item": {
          "id": "3cb55785-493e-456f-b012-aa4c04c1ed4a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b5b34590-698b-4629-9d36-0d07b2298501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137ebad7-f2dc-4b38-8751-8978904f65da",
        "cursor": {
          "ref": "474ed0f2-e016-4c4d-b74b-bab58cf37561",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6f0f631a-8ca1-4d5f-811b-cdc73dcf665b"
        },
        "item": {
          "id": "137ebad7-f2dc-4b38-8751-8978904f65da",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "acd6a844-9333-4385-99f8-03d351ba33c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edc153d-946d-4dd1-9f7b-0abbdb8e863e",
        "cursor": {
          "ref": "8079db5c-9907-49c0-8271-9e954aeb6a6c",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c5cabd52-0ad2-4d82-94ce-8cf80cd3c9ad"
        },
        "item": {
          "id": "9edc153d-946d-4dd1-9f7b-0abbdb8e863e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dfd52329-fb2c-440e-a1ea-51f69aed2ada",
          "status": "OK",
          "code": 200,
          "responseTime": 351,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "40767a9f-5422-437b-ac30-c0215baf5ad4",
        "cursor": {
          "ref": "5b527f01-203b-4206-b01d-d477ad649b74",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7738d986-43c2-4c9b-b96a-8c2b50402a4b"
        },
        "item": {
          "id": "40767a9f-5422-437b-ac30-c0215baf5ad4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "77111f3c-b94e-4100-930d-990019261f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7a2e4f-adcb-465e-bb02-cc85725d8275",
        "cursor": {
          "ref": "90ee375d-de6c-451e-b28f-5249bf5ec277",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ab5c8329-b914-4c83-9b79-71d788f359a9"
        },
        "item": {
          "id": "bb7a2e4f-adcb-465e-bb02-cc85725d8275",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a35353b9-c118-4337-8d42-04e312c6fe9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558e916b-0e84-4abb-a6dc-e7aef2c3bbf9",
        "cursor": {
          "ref": "fd5872b5-1cce-4494-907f-a3d18caed00f",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c91b395a-6e3a-40ef-b780-c951a4100842"
        },
        "item": {
          "id": "558e916b-0e84-4abb-a6dc-e7aef2c3bbf9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a4887abd-2b12-46e3-8266-546f32ddb11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69444f2c-5f92-425e-8ad0-c0085f061c39",
        "cursor": {
          "ref": "4e128b4c-b760-4ca7-ad5b-73407fafcc5a",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "926c08ca-e451-4a87-86ae-072f216c1c2d"
        },
        "item": {
          "id": "69444f2c-5f92-425e-8ad0-c0085f061c39",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1fd62ff4-1d11-4979-ab3a-6e01ecb9c9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5d8d3b-35d7-4297-ac47-f4e27a8a1934",
        "cursor": {
          "ref": "aba6593b-10c0-4d04-b18b-1b97b4a7f680",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ee241252-7c61-4df3-bc01-16bb24993698"
        },
        "item": {
          "id": "af5d8d3b-35d7-4297-ac47-f4e27a8a1934",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "79f2935a-0cea-40b9-9155-b43e35982eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4313ea4c-480c-4190-bb7b-c56ae3100400",
        "cursor": {
          "ref": "86c43b18-a8a7-4e4c-a8fc-898c030e95ad",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "caf2e92c-dca8-4a62-a666-8e27b0a87036"
        },
        "item": {
          "id": "4313ea4c-480c-4190-bb7b-c56ae3100400",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1eb27051-5d3e-48ac-b100-7a7e053c8805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca477907-3546-4ccd-9ea7-09520c85d390",
        "cursor": {
          "ref": "1ca0d638-450b-45ea-91e3-f5fdf8ce804f",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "21221aaa-6772-4c05-bf00-363d28dbb36c"
        },
        "item": {
          "id": "ca477907-3546-4ccd-9ea7-09520c85d390",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "814bf4b8-3cfe-413b-bb89-6fa651d729f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f525f0ec-add3-4a36-864f-eacd4fc4eabd",
        "cursor": {
          "ref": "36f4d120-0989-4fb7-8786-5d98a0def0fb",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f5899534-816d-40a2-88f7-e476a2ae3941"
        },
        "item": {
          "id": "f525f0ec-add3-4a36-864f-eacd4fc4eabd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bf2a3895-4ced-405f-b1d7-2d3318f19d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63473289-82cd-4200-8bf8-6c78bcc72947",
        "cursor": {
          "ref": "643250bc-8418-46ff-b5fe-19ac65d5d295",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d7f29a7b-fb99-469f-90f7-b4668b319598"
        },
        "item": {
          "id": "63473289-82cd-4200-8bf8-6c78bcc72947",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "83edb99a-b108-49a8-ba99-b4e303443342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c5407a-dc0b-4e73-aef5-02c2d2eb5934",
        "cursor": {
          "ref": "66b9ea66-831c-4e06-9714-82dcd8ba3a60",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "21e4529e-8e0b-444d-8a07-7977d4ba43b6"
        },
        "item": {
          "id": "65c5407a-dc0b-4e73-aef5-02c2d2eb5934",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "319b3fb5-0994-4e52-8fca-072edac05792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d68b95c-54d2-4a0e-978c-2e7f21c1561e",
        "cursor": {
          "ref": "b599f6c8-6762-4f04-83cb-c755c3267362",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "90eba7d2-9399-4694-82e0-cc9681245c05"
        },
        "item": {
          "id": "7d68b95c-54d2-4a0e-978c-2e7f21c1561e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6b1e9f3b-78f0-4f85-a19d-dfe67f265773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666f5b40-84d1-4a43-b112-25674ed8cb77",
        "cursor": {
          "ref": "fb7a7e73-a3c2-42db-9448-d54d4b39b2bc",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "67a4cc6f-3ed0-4030-90bc-616b05874bea"
        },
        "item": {
          "id": "666f5b40-84d1-4a43-b112-25674ed8cb77",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cc59a092-b7f7-4e4d-a8c5-3d14c6a5523f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776d7d54-f240-406f-b9c0-a1c6460a0728",
        "cursor": {
          "ref": "5ce9d4bb-69d0-4ffc-99b9-dc49c2217f9f",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "16d82d0a-0abb-46b4-a85f-6e4f1b6c00a9"
        },
        "item": {
          "id": "776d7d54-f240-406f-b9c0-a1c6460a0728",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4eb84307-d65b-4634-91a5-6c38e494ff42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ef361c-4fe3-4634-a8a8-3f8dfa014d75",
        "cursor": {
          "ref": "0f2964c2-6a2c-42bc-859a-ac1de0a57fce",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1bbcc86c-51ab-450c-bf30-9a7752083f31"
        },
        "item": {
          "id": "21ef361c-4fe3-4634-a8a8-3f8dfa014d75",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "61e1ab88-08b5-4ab7-964f-e037f05fbe09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5aa766-3ff2-4a33-8e04-2d9529cfb67c",
        "cursor": {
          "ref": "493a56be-54ec-4d94-852b-f259987c357a",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7e6df01c-e3fa-468e-8723-9cff7bfc88fa"
        },
        "item": {
          "id": "6d5aa766-3ff2-4a33-8e04-2d9529cfb67c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "48b404a4-0dd3-4c89-a889-2eaccf3c4b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6574b24-b7cb-4a54-ae55-56f34dc42ee4",
        "cursor": {
          "ref": "88e3e2fc-928d-4834-96a9-854a689d6f63",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "09320415-e739-4e1d-bd92-698ce4fdcd59"
        },
        "item": {
          "id": "f6574b24-b7cb-4a54-ae55-56f34dc42ee4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cbd65d37-c510-4020-915d-31f393544df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40203dff-a116-48b0-ab45-935090a49264",
        "cursor": {
          "ref": "4ee1da29-5cf5-40cd-871c-261cd54924dd",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2b483f97-1c8f-4799-88cc-5f65d65d851f"
        },
        "item": {
          "id": "40203dff-a116-48b0-ab45-935090a49264",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9a57d2b3-779a-42ab-8339-dd02b0a0cd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df68fb3-cb5b-41cd-bd49-d7ed13367440",
        "cursor": {
          "ref": "a1815ac8-e624-4acd-aa78-f7c21c7a559e",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "eb35c3e8-e345-4a7c-b633-4c35600a4c78"
        },
        "item": {
          "id": "9df68fb3-cb5b-41cd-bd49-d7ed13367440",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "211a1fa2-5c20-4acc-bd71-eed011fdba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7665d9d8-02c8-4616-b48c-092f4f2b1ddd",
        "cursor": {
          "ref": "bfe53cff-1bb6-4689-9db4-0f057db878fa",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bdb2e136-1351-466e-bd91-d5c199114eec"
        },
        "item": {
          "id": "7665d9d8-02c8-4616-b48c-092f4f2b1ddd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "43632e72-f827-486b-b62a-1bf11755cae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834c0096-9add-4f7d-97a9-564817dbafcc",
        "cursor": {
          "ref": "1131c3ab-47d3-4278-9321-e723f1c7afc5",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2aa224fc-9648-4017-8eb4-0cfd81d912c1"
        },
        "item": {
          "id": "834c0096-9add-4f7d-97a9-564817dbafcc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a49c6b1a-c75d-4de2-9744-cfda04176fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ed5cde-0aa3-4020-a911-c5d0f0c8ae5f",
        "cursor": {
          "ref": "af143587-f5c7-4b37-a25f-501b43183695",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "824a5682-a017-4d12-a65b-b906f5a8be8a"
        },
        "item": {
          "id": "f1ed5cde-0aa3-4020-a911-c5d0f0c8ae5f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a420d75c-4994-430d-83a6-5707d274ce56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da098906-d760-4bfe-ac6d-cd3b2aa182f6",
        "cursor": {
          "ref": "eb6f20c5-9589-4a57-8afe-641a79940223",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2ac427be-a7fe-45ea-a2cc-d2235c810e1f"
        },
        "item": {
          "id": "da098906-d760-4bfe-ac6d-cd3b2aa182f6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a3db0b12-3b60-4ef1-bb51-a9b8a9660604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad319c4-b3ce-4390-9788-2b15c0ae2dd2",
        "cursor": {
          "ref": "2b52e095-23ef-4b68-b2bd-d71950c028e2",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2ddf005f-e561-4958-9b7c-855ddf20739b"
        },
        "item": {
          "id": "6ad319c4-b3ce-4390-9788-2b15c0ae2dd2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "82bde5f3-ed1f-440b-81c3-e7d538d1f116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73270d79-0f43-4c34-ab63-5c6aa6536196",
        "cursor": {
          "ref": "0b0679e6-6130-48f9-9199-a33f31e25a08",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ce4fc29c-ef1f-441f-85ba-daa94ccfd94a"
        },
        "item": {
          "id": "73270d79-0f43-4c34-ab63-5c6aa6536196",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "60d5498c-3d74-4892-8d4c-6de25a280b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663b9d90-4107-46b6-b8a0-601d4a7c5483",
        "cursor": {
          "ref": "2253d826-bf3a-4035-8a5a-d1fb54205a66",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "826f1b01-a29c-454e-bebd-edae98610980"
        },
        "item": {
          "id": "663b9d90-4107-46b6-b8a0-601d4a7c5483",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f5311606-e995-483e-b3f3-8b91ae97d023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bac141-550d-42b7-a9ba-5e68111cad78",
        "cursor": {
          "ref": "063f04fb-8d91-439b-b5cb-e91c6e1a8859",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "20ad5a66-a358-4737-b9a4-2f4c5820b465"
        },
        "item": {
          "id": "08bac141-550d-42b7-a9ba-5e68111cad78",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3009ad80-93ba-4914-8b51-c6422c4fdebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95370090-9461-4eda-b179-fbcfa0ff1781",
        "cursor": {
          "ref": "5b1783a6-1312-4234-b240-2005b1d5dfd2",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e534af15-674a-4669-86f4-71b0f2c16a7b"
        },
        "item": {
          "id": "95370090-9461-4eda-b179-fbcfa0ff1781",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "52f1491c-f554-4b64-8397-2a92b07749c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6518e739-1ffc-4a27-937b-0437e19ada2e",
        "cursor": {
          "ref": "a1564257-2a58-46c1-b833-5b3827af6dc3",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ede8a0fc-3602-445c-9ae2-82e535921777"
        },
        "item": {
          "id": "6518e739-1ffc-4a27-937b-0437e19ada2e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1430ccc4-42b6-4ffd-b644-279231c577b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6571c697-269c-461b-8ba7-9b533df6dfa8",
        "cursor": {
          "ref": "23f23f8d-8334-4858-98d3-fa3db647a2ac",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2d85516f-33e3-4630-9c3b-71d7d7ad3a03"
        },
        "item": {
          "id": "6571c697-269c-461b-8ba7-9b533df6dfa8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c0eda5a2-c8f3-4167-bb7f-04681984466c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4341be-ed21-4c0b-821c-d437065fa267",
        "cursor": {
          "ref": "c11aedb7-4be6-4f04-9735-dd611ab2bc53",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3d8e08c1-280a-4add-8a4a-4aed4373fe40"
        },
        "item": {
          "id": "7d4341be-ed21-4c0b-821c-d437065fa267",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "42f8a22d-43c2-4ccd-8c6e-5adfad177da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0dea06-b84a-4cd2-933a-ec302b251e96",
        "cursor": {
          "ref": "b60afc45-0798-48d4-80ba-83e4891cdd79",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "de93b2e1-6702-4a19-a79d-0205aed92e51"
        },
        "item": {
          "id": "ca0dea06-b84a-4cd2-933a-ec302b251e96",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a2728cbc-de90-4e5b-955c-7e63b5707423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc97685a-04cf-4de6-97dd-b972bbdac8d3",
        "cursor": {
          "ref": "01805856-afe5-44ec-9472-6647f72afa7e",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1be25d39-d2ca-457a-aa41-eea4bdd9e116"
        },
        "item": {
          "id": "dc97685a-04cf-4de6-97dd-b972bbdac8d3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "064fe6ed-f880-4ef1-b0f2-0170c6c3817c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9b96a4-f587-4830-b8f5-9dcb8b5f9667",
        "cursor": {
          "ref": "d81c6d68-2ecc-47cc-8b43-023b5d3f6d5f",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f573f059-61cf-40fc-8ba4-f659fc85db57"
        },
        "item": {
          "id": "bc9b96a4-f587-4830-b8f5-9dcb8b5f9667",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0d447bda-ccda-44e9-b81c-34e6ac0951dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e634ba7-1adf-4f79-97d4-0592e86c170b",
        "cursor": {
          "ref": "289afb74-99e1-46c7-9600-835f05c1d5b5",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "faa79754-dc4b-4950-8711-ccc24a485515"
        },
        "item": {
          "id": "7e634ba7-1adf-4f79-97d4-0592e86c170b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0d369811-2fa0-45e3-9c8b-ef2529506263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e60097-b13b-4602-9119-67ec39bc868f",
        "cursor": {
          "ref": "6db94382-abab-4179-a9e7-04a91dc26ed8",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "60b7f117-2629-4f72-a7c9-6e3ee3ca93cc"
        },
        "item": {
          "id": "d9e60097-b13b-4602-9119-67ec39bc868f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c5762faf-a8d9-4455-bc5c-bfb3debd408a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5225c281-4f6f-4894-bad4-f2712447fed5",
        "cursor": {
          "ref": "0592947d-f6f7-4299-a9b1-3eb295635d7b",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5ebff57a-e356-4a45-81c2-23785ce5bb11"
        },
        "item": {
          "id": "5225c281-4f6f-4894-bad4-f2712447fed5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7a8fabfa-0c30-4e65-881d-910b1cf2c1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5bee63-40ef-44ac-9f9b-12349653ddbf",
        "cursor": {
          "ref": "5ab021a7-f4a3-4ecd-9ded-41f99fb4a530",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5505c6e1-df2b-4dbf-8967-a5349da14f1e"
        },
        "item": {
          "id": "ca5bee63-40ef-44ac-9f9b-12349653ddbf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8a16d311-b011-40f7-b792-088f271f547d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c2b13d-cb07-4129-b8bc-935ef486e1d1",
        "cursor": {
          "ref": "780482ee-be7e-42d9-9f06-e021d1c19700",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c5790248-191f-4af0-90bc-ba80791142da"
        },
        "item": {
          "id": "a7c2b13d-cb07-4129-b8bc-935ef486e1d1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4ca282ef-d002-47a2-9aab-f6b5385405d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddc38a2-cc34-49f5-a5ca-8c8b20d3bd12",
        "cursor": {
          "ref": "0da14d80-fe12-4b0a-812d-3c021026d972",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b094c581-39d2-4141-b8aa-0c6bc4c4cdd3"
        },
        "item": {
          "id": "0ddc38a2-cc34-49f5-a5ca-8c8b20d3bd12",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e0397cc0-bfd7-4ffa-b771-106b0b8d6bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1fef0a-e2a9-4742-bd7c-1b9bb25c9111",
        "cursor": {
          "ref": "afc7d6db-853a-4877-9960-fbafa1c3db61",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8c00d2a1-33df-4da5-b598-f0f488a64e20"
        },
        "item": {
          "id": "6f1fef0a-e2a9-4742-bd7c-1b9bb25c9111",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "54cc4321-7b40-4b15-a29b-3f671cada4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c892c7a-5105-4231-a724-31ca45ce038d",
        "cursor": {
          "ref": "0a0e74a1-83ea-49c6-8239-8c5a4617210c",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ac2509e6-d3c4-49b4-8105-192e6c3d1709"
        },
        "item": {
          "id": "1c892c7a-5105-4231-a724-31ca45ce038d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3625c333-2fdc-41e8-99e8-126bba9881dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68ab453-4a78-431b-80d2-bb6c14d50b21",
        "cursor": {
          "ref": "7481e8d8-59a9-4bab-952e-0bd503e32b6e",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3f1fe76b-3c56-4d75-9008-59b16e13be8a"
        },
        "item": {
          "id": "c68ab453-4a78-431b-80d2-bb6c14d50b21",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f541a22b-b9a2-43f1-bf43-460be59c35bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5724a7-9a16-4206-b347-3972e22a25b0",
        "cursor": {
          "ref": "120a1a3f-1cbd-4b35-9492-eab35dcc620c",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "56aecf67-1393-4b86-801a-d0c1383756fb"
        },
        "item": {
          "id": "8d5724a7-9a16-4206-b347-3972e22a25b0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ee5629ed-f238-4489-a5ba-f70d28c5fe3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e247f6-001e-407f-8885-78438e443f11",
        "cursor": {
          "ref": "0a8c132f-3867-483c-ab26-865aa7814691",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ef5861ee-44d5-47ee-a1aa-d2ab8de25051"
        },
        "item": {
          "id": "09e247f6-001e-407f-8885-78438e443f11",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f8b41fde-c223-4996-8830-b20a5059effb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e28a54-fb54-4621-aae1-e715aa394f10",
        "cursor": {
          "ref": "621e23a6-9978-4921-99bd-51bc1f5545f2",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a8696ad8-99ca-4456-a164-55d6ddd7fa65"
        },
        "item": {
          "id": "78e28a54-fb54-4621-aae1-e715aa394f10",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a261a4b5-6f19-4749-9d00-ea519d70bf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d3db7a-1790-4333-8c2b-2f58e916691a",
        "cursor": {
          "ref": "f9b527b1-1423-4d18-b82a-8a4b4a98c74d",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "39c16fc0-a775-4e46-89a6-610d87c95f9b"
        },
        "item": {
          "id": "58d3db7a-1790-4333-8c2b-2f58e916691a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d345fdb7-6d70-4aed-90b9-451fa748a639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b96e6d0-3eaa-4665-b114-fa070fbf00a2",
        "cursor": {
          "ref": "3fa87c2c-50c7-411b-8acb-6e1062e9bcee",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "058d70bc-4b93-4037-9856-f1e57532b9bc"
        },
        "item": {
          "id": "7b96e6d0-3eaa-4665-b114-fa070fbf00a2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e4f0bfef-78cf-4504-908a-baaa90fc9ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b17e58e-6e00-4b9e-b1f1-86aa4835cb7b",
        "cursor": {
          "ref": "fda55357-1a66-4d19-818a-00a6dcd62969",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1f23af14-3b18-4664-8e85-955d7c486bdd"
        },
        "item": {
          "id": "0b17e58e-6e00-4b9e-b1f1-86aa4835cb7b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "55176972-3f40-421d-a17a-12ed0182ab8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9012bca-13c6-4be4-bdd2-760275918e97",
        "cursor": {
          "ref": "e1c11ca6-2e7b-499b-b604-ad80c2f2210e",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b4b2897d-24db-4378-a68d-097c6d974197"
        },
        "item": {
          "id": "f9012bca-13c6-4be4-bdd2-760275918e97",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d582cb62-9dee-4753-9e56-0c966d13c534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112a8669-1e5f-474d-a214-66c9d3af549f",
        "cursor": {
          "ref": "6bbc98f0-8879-40a8-ac24-dcc33a24f72a",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ba253118-2fc9-46a8-bc45-02c54726b366"
        },
        "item": {
          "id": "112a8669-1e5f-474d-a214-66c9d3af549f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6aff04d9-31db-4f44-8dea-19d10c1739fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d696080a-2aee-42e6-a774-93f74cafd5cf",
        "cursor": {
          "ref": "6481cf00-953d-4417-813b-cb44d581c86d",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c6ff4e37-c4da-4f32-b413-aa9b73e265d5"
        },
        "item": {
          "id": "d696080a-2aee-42e6-a774-93f74cafd5cf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "38183cfc-55e5-43c3-a41f-d25c3c883005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3b43eb-6791-4d27-80a3-283bbe3b8d44",
        "cursor": {
          "ref": "7de1477c-4dcf-4709-9598-533fc77c8caf",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8698c775-8ef9-460b-af24-fd74ca6ed118"
        },
        "item": {
          "id": "6a3b43eb-6791-4d27-80a3-283bbe3b8d44",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d26efe3d-b395-481e-86f9-f12ff253d723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d747ee7-c4a7-4de8-9f75-6e2124754a85",
        "cursor": {
          "ref": "c35178da-b996-4e14-b5d8-d4f063d40e86",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "afe4a88c-9bbe-45d4-8268-f10ed1f3ba6d"
        },
        "item": {
          "id": "4d747ee7-c4a7-4de8-9f75-6e2124754a85",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b969d2c7-c6ed-4582-a9f1-eb8cbe711750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152d52c7-11e7-4f7f-aa6d-3a3b2d957f19",
        "cursor": {
          "ref": "9f943e1b-28d7-4392-9e16-eae17f5b05ce",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9c8215f4-38e2-4426-b24b-7f40a615115b"
        },
        "item": {
          "id": "152d52c7-11e7-4f7f-aa6d-3a3b2d957f19",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a2919f25-1dcd-47e6-8063-0ad174698988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c721dcc-1f69-4a9b-a54f-4733bbe40b08",
        "cursor": {
          "ref": "5bd21a10-f53a-40b5-90ae-4149c269a446",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c523fbb5-97e4-4e9b-916c-cd979d090584"
        },
        "item": {
          "id": "3c721dcc-1f69-4a9b-a54f-4733bbe40b08",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c76a8618-8698-4f96-8fef-090f599d080b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6875c22-7ca0-40f2-b72e-2b064fff5c02",
        "cursor": {
          "ref": "e3f0a07a-fd7b-4e92-a1df-4448c95d117f",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2b483f54-6e91-41d0-b498-3e09abc02088"
        },
        "item": {
          "id": "c6875c22-7ca0-40f2-b72e-2b064fff5c02",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c66f979f-0467-4047-9aff-c388138fafa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f5b918-d1a9-40d7-9385-640d304e6ab8",
        "cursor": {
          "ref": "f975e0fe-0f3a-48df-b8eb-a37b2eabf3b0",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "94a84e1f-8ea8-4d79-82a9-307f77548094"
        },
        "item": {
          "id": "01f5b918-d1a9-40d7-9385-640d304e6ab8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "672724d0-20f3-4205-86e0-a28b84b8eaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba62f189-f894-4081-89b6-c3ff34c8dccf",
        "cursor": {
          "ref": "c588947c-3fe8-41bd-b282-a1d46a32265e",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1db4a884-6679-4c63-849a-ade0910b6337"
        },
        "item": {
          "id": "ba62f189-f894-4081-89b6-c3ff34c8dccf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "be9f4a1a-6280-40c9-8cbe-05882f9d0b16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a35bc8-d09a-449d-81e3-4c61be376fa0",
        "cursor": {
          "ref": "01cd0729-9250-4f7d-a4dc-0768fb5c0c7f",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e55f23a7-6fec-466f-9442-be20fd8e8161"
        },
        "item": {
          "id": "c5a35bc8-d09a-449d-81e3-4c61be376fa0",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "da88f74c-4e10-4da3-b037-533cc40061ed",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 337,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7536acf-d176-4009-8930-9f41a64753a6",
        "cursor": {
          "ref": "b8867e57-340e-418d-b04e-a07069493af5",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1b79bb3d-9808-493c-b021-e743583c7ffd"
        },
        "item": {
          "id": "e7536acf-d176-4009-8930-9f41a64753a6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9d378eab-4812-45cf-9bc6-99adf6dcbbf3",
          "status": "OK",
          "code": 200,
          "responseTime": 380,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f6e820-7fdc-4847-be6a-5f43f083dad2",
        "cursor": {
          "ref": "f852dc09-9650-45c2-b26f-d04e2e977400",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "efffef14-3f0c-4ded-8234-c906d4ef4a45"
        },
        "item": {
          "id": "74f6e820-7fdc-4847-be6a-5f43f083dad2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4c8ef2c4-6a39-4a5b-a862-1e4e57c0e15d",
          "status": "OK",
          "code": 200,
          "responseTime": 1973,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a0c0bf-4413-455f-a69a-8edf271623d7",
        "cursor": {
          "ref": "f21633c7-4f0f-4c4f-8ad1-d8f829dd377e",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "725d111f-2fa6-47cd-9863-dd639b397e33"
        },
        "item": {
          "id": "26a0c0bf-4413-455f-a69a-8edf271623d7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2e2fe994-6946-4c1b-97c6-b8883f5d14ab",
          "status": "OK",
          "code": 200,
          "responseTime": 1760,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "606fe967-71e9-4619-8739-d0fb9d5fcece",
        "cursor": {
          "ref": "8d0a7682-dfab-4816-874b-e5f7b71aa219",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3ed7ae69-c53f-4adc-a060-cbf3f6614344"
        },
        "item": {
          "id": "606fe967-71e9-4619-8739-d0fb9d5fcece",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "93c62e7a-5c17-43a4-ae9c-c94c23f0c166",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606fe967-71e9-4619-8739-d0fb9d5fcece",
        "cursor": {
          "ref": "8d0a7682-dfab-4816-874b-e5f7b71aa219",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3ed7ae69-c53f-4adc-a060-cbf3f6614344"
        },
        "item": {
          "id": "606fe967-71e9-4619-8739-d0fb9d5fcece",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "93c62e7a-5c17-43a4-ae9c-c94c23f0c166",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606fe967-71e9-4619-8739-d0fb9d5fcece",
        "cursor": {
          "ref": "8d0a7682-dfab-4816-874b-e5f7b71aa219",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3ed7ae69-c53f-4adc-a060-cbf3f6614344"
        },
        "item": {
          "id": "606fe967-71e9-4619-8739-d0fb9d5fcece",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "93c62e7a-5c17-43a4-ae9c-c94c23f0c166",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b615b5a1-eda4-425f-9423-968b8e8cc95d",
        "cursor": {
          "ref": "38b3e0a6-ebb6-49b6-aaa2-c55af1682a8e",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c1a93432-98c4-41d4-a29b-b16564f86122"
        },
        "item": {
          "id": "b615b5a1-eda4-425f-9423-968b8e8cc95d",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "85f22dcd-f4de-4e5b-9abb-e9723b14bf1d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 324,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175d6eb7-c7ee-42d7-84bd-bac686c6e1b4",
        "cursor": {
          "ref": "82fd8b00-3c89-4501-91f7-d656a8afb4df",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "73527bf5-febd-44b0-90f8-37451a0b8971"
        },
        "item": {
          "id": "175d6eb7-c7ee-42d7-84bd-bac686c6e1b4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1ce4a7aa-87de-49a7-a7a1-af92cdf8d48e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175d6eb7-c7ee-42d7-84bd-bac686c6e1b4",
        "cursor": {
          "ref": "82fd8b00-3c89-4501-91f7-d656a8afb4df",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "73527bf5-febd-44b0-90f8-37451a0b8971"
        },
        "item": {
          "id": "175d6eb7-c7ee-42d7-84bd-bac686c6e1b4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1ce4a7aa-87de-49a7-a7a1-af92cdf8d48e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb6eab3-5a45-41ac-ae8d-95ece6156fd6",
        "cursor": {
          "ref": "77bf2715-df94-45c4-8ec1-5d952630589d",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5720b31d-78a3-4b76-8e03-9446dc2c7a4c"
        },
        "item": {
          "id": "fcb6eab3-5a45-41ac-ae8d-95ece6156fd6",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "00ba97cd-0a8b-4999-829e-70984bc146a4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 556,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ebc6c9-dbcf-4094-b8a4-68bd76ef32b5",
        "cursor": {
          "ref": "dbef52b2-85fc-4b52-9ba2-6b5fdb153b9c",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "367f6bfe-91ad-4e84-b933-7f46bee0f677"
        },
        "item": {
          "id": "57ebc6c9-dbcf-4094-b8a4-68bd76ef32b5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "27c39770-6a38-42e8-8364-c81b859c3c9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ebc6c9-dbcf-4094-b8a4-68bd76ef32b5",
        "cursor": {
          "ref": "dbef52b2-85fc-4b52-9ba2-6b5fdb153b9c",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "367f6bfe-91ad-4e84-b933-7f46bee0f677"
        },
        "item": {
          "id": "57ebc6c9-dbcf-4094-b8a4-68bd76ef32b5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "27c39770-6a38-42e8-8364-c81b859c3c9a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbb5c13-559a-49a9-a032-5c8b2f8ee832",
        "cursor": {
          "ref": "df3417dd-0dfb-4336-972f-0e5437eb66e9",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2eb4ed32-51d3-4728-bfd6-fc448f5cde90"
        },
        "item": {
          "id": "dfbb5c13-559a-49a9-a032-5c8b2f8ee832",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "795cd36d-db9e-4da4-9410-4db1a01fb74c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 556,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}