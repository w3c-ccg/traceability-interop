{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "27c3dcd9-52e9-4a60-b36a-f70fe721ceb8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6b89e50b-f162-4266-9cf1-fb88a90cd7ad",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0b948ce-0b21-49f2-a1d3-80ec57254289",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "355802c0-ad26-4da2-8b83-27e5529da57a"
                }
              }
            ]
          },
          {
            "id": "43b6a794-da94-4416-b6cf-b6d72038f1a6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "705651ca-6e0e-4188-b089-a807f086a0c6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f517c6f8-3293-44d3-867c-aa8d370628c1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "da94aed4-373d-48f7-bb71-baf0093b9d2e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1219bfce-c9da-4f42-acc5-ad3842b3f93d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "90b7f732-4096-477b-84a4-ed287ec6fd1d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfbaa592-0322-4520-b79d-fd19e4d50ded",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e974c9a-7736-4f2d-ae00-6ae485a6a323"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e6e3bba-28fc-4d9b-950f-151197e325e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "180abe4d-5f99-4b12-847c-e5d8086fd6d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "18ea0583-e367-4ffc-bfa4-f4353f964ecb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b6c94ff-3b95-452c-bf15-3d56e9b88ead"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e26c3d5-1ce9-4abe-8116-b06dad67844e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "92aba249-2038-4d5b-992e-214c6dbaef35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93bd826d-fcac-4ade-b7ad-6eba4530f79b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c4bca29-0bba-4378-9055-71487a60abfd"
            }
          }
        ]
      },
      {
        "id": "c5bb7b02-a5cf-4203-97d3-3eb50dfa3e78",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "221bd42b-4e01-4890-864c-0f86fbf7edf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb2d2e52-c827-43ed-8e7e-7782d7a3b800",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "611dc4e8-8fb3-455f-8fd0-10eb32d4102d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50dcb0a-e43e-41dd-a7e5-5a80fef71fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef554565-7e97-4d44-bb7d-bab2062ad0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c27300c-4ced-4b7b-91fd-188de69df6ad",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae99a85e-9bc8-4298-8296-f0d4e51913aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53ad3a1c-170a-4186-af8e-7ccb3107f346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a503f97f-c4c1-4539-ba66-01887b054155",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53deee53-1235-4421-8ed1-575edd4ac653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cceaa575-8bb5-4565-83b7-14272f7d21fb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c18d9633-09fa-478e-a87b-4b190b3b63d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d762983-5a7c-423d-b5b1-d0eb4b680e5b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa27b7ef-d646-4717-9cd6-87d064dda489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39f5db54-fc69-40b5-82e7-6d49d541a84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24907b09-ca56-433e-b49e-6fc92472c735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc642cb8-a2d7-41e2-a1e5-0775fccbcb74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8d9cb2f8-ce95-4267-b4d4-d103c8e6c502",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0046bf1f-6800-432a-bf51-728ce00dc684",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e71919d2-6bf9-49b3-9468-1fc673f561ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "64210ef2-9973-483f-bf82-216a353c3893"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf37bcbc-0341-4aff-852f-3bdb79e13db6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "51b900ee-8c9c-474a-bea9-0ce4be6d9284"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fe26574-2a2d-4cbb-a2d0-b1f3fc8529fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a050213f-cbe4-448f-9820-9948a05a3559"
            }
          }
        ]
      },
      {
        "id": "6eea5be2-5cbf-465d-b0d0-a5efd0ce7a57",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "70dc4918-c62c-41f4-a624-4e508cbac166",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2fdb442-cf78-4756-af02-31d7a9c3f783",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f9c515bd-ac7e-4fe3-bd99-4508cdab3493",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f75df61-0689-46df-9c43-9c09488a88ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e14a08-a6c7-4d89-88c4-f33bf0d99349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de2f617-7bce-4278-a200-30e805d82810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cc2173e-a313-4387-a3eb-55ea70175133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9b6ab8-d45d-4b71-b176-6be394f732af",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3724d6ce-2f57-4e7b-bfad-8e05027ab5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61a128f-7989-4963-a4bb-d7c09e494b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0278e0a1-4f3b-4225-9716-be5c82ba7c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97b0bbb2-a4de-4614-bf93-f9657194cd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30ce7562-0d9c-4f8f-82f7-3f751e9c9eb6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf22e46-58b5-4b6b-93e4-54a40638497e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d9e9d1-cb62-402b-a18a-b76a3dbb8e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ea49c3-f578-4771-84f6-9cb5c8e7b9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cac27048-fc8e-446d-9c12-573589294e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e34368-0565-4c1e-a80d-e24b9e04a04d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cd29b9-5098-4322-9286-2af814a3a589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425df598-15c1-4a27-8cb8-4009e63f2c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddf0827-f323-45cc-a295-eb5e799201b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa6c1e38-8651-4b80-9932-1f47e7c8b4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ddedca5-c122-4377-b530-8a82869a0eae",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f8d603-b832-4936-b936-14cca693e359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb5a945-c480-4b35-8674-65bda84c9e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a5dacb-4589-4ee1-a476-e72d241fb08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72c71fa0-6e6a-4643-b5c1-4b41ddf769e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4012b600-ca1a-4a59-8f85-f1871db57f10",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc4b40a-c82b-4ab0-a580-30caeaaf175b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd53d2ba-9257-47df-be91-da3a0a67d1bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d099330e-5b09-4822-9fea-13f12b4c9d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7878f76-81ec-4c3a-a543-757e7037d240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac18ab9-d000-4f21-9256-fc5a27aa3413",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34e9338-dd45-4402-956a-03982ecef0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1342f553-d5ee-47c7-b02a-4977067e7607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0970ef-fd08-4383-a45e-caeee7e141cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5fb023c-6d15-4dc4-873a-dcbdff0273a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe71ab3-aee6-42df-9e05-942092a8be14",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e6fb84-28ca-40f2-a8b7-59e24e7489f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2290fa5b-865b-4951-83c9-d5703e27dea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbc08ec-7b98-4930-b06a-506cd3ecff8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "539e2a97-c40e-4d5b-b714-ff13d4e8663c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3a19ad-9119-45b9-9617-6fb4a31f5277",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3197e445-31cf-4d39-a61e-a599ef42162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c069523e-db04-421d-8479-9e424f4f5820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478473e7-9863-4acc-ace7-36a9112c84db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6800eafa-8b83-4680-bfa5-038cda160762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8af2146-e1af-4fee-bec4-bf952c4a79c5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35909ac-9fd0-4b04-81ae-9d24bab3aef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bafbfab-5628-4cee-9e58-19b849e1ae83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be04e2e-fb34-4320-a522-bc69074bac46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bfc1902-e213-47d8-bfba-35929baaee6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b499cd92-e356-4bd4-a066-d31602b6dcc0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61fa1e0-1dfe-46e0-ba3f-e727a669bbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fc4fb2-acb6-4191-932f-ab058bc1cd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f48761-772d-4822-bddf-07e725fea59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7599d169-42cc-4cad-ad24-e67823d756f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a7ca30-29f8-4dcf-8c45-23d510ef556b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e94701-069e-41cf-aa8d-d1556abf61b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1021e95-83ec-48c1-842c-a1e041506e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9505c8c3-1a6d-4027-9170-570def3de8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dc629fc-04e3-40e5-82fe-4ef4335e3f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128cdf58-9e18-46d5-a646-d567b322f843",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ddac36-249d-4367-b697-6e2763789711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630b5014-cee3-473a-ae82-0682ffa273d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbe7f9b-4b5e-485d-bd40-0a3c1e4f0dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0a90d94-7dfb-4a96-b299-b555dbb9a496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87c0482-fbcb-449e-870c-7309c53af9ed",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba00a9ed-1c69-4d9e-8526-1417268664c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b5776e-3540-44ef-912e-b1770086d6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7020fa-0c42-4bd0-94ad-29c549d3e178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5a4dd1c-0752-44e9-95c4-eef9a9172903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af63bdf4-c0ff-448e-863a-f9f359eae64e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5185776b-b6f6-444c-b419-911bf633f7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def674f0-09f0-4f96-9c32-c4766647aeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8699727c-d005-45ac-b0c0-012f4404e1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba25d7a7-dd0f-4a64-94d0-b05f5e95f7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11064cd0-ab7b-4086-afb7-8926505d4a53",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab63a8ee-b119-4277-afd9-0f94b56c7eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb40f4d-873b-4565-b600-e424d5a3665f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cdae02-61e7-4c5f-9968-9972d4542f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "588081b5-c2ad-4cbe-98c8-bbb18e4324b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59f8878-4396-424f-8522-47eb4b5e2d42",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0535a68d-dd92-4782-9cdd-3e7f020dd27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0728678-f54a-4222-b945-7d5ed3209bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451c34bc-647b-4dfe-924d-167dc09a6716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7627ec5f-712e-4596-bf15-e95d8ce7ad07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f445405c-3dcb-4cd3-a5a1-543687b7c6ee",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcdbc69-5a9c-4422-9d3d-0724736bdca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005f9f2b-20af-46c9-ab6c-817767adf341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613d4ebe-a804-4fdc-81cb-1fe1803868f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "287752f1-f663-4385-8357-a63db4fb456f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4226bb32-3dab-4a27-86a4-c3ee88ea26f7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9203709-a579-4734-9b34-b48445b0d145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdc477c-fcdd-4656-a6c6-0550ad878569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d23844-0383-4b74-9126-bc9cf1de9fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d956f0-7f1c-420f-9755-d3afca0ff95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125583d0-74cc-4b9b-adc8-86a66b290052",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10df35e-b4d1-4669-bf3d-63d8aa765d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0aa562-9d76-4db9-ae4b-c097aba5d2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141edbb5-51e2-4691-85ee-e70725f67086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1f6be5-86c9-41fc-8813-76bcbbdb53e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e868c935-67cc-46c6-951c-a766d2d44515",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0b9fb1-ce23-429c-b350-3dbac7ff18b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b548d9d-4516-45ac-99cd-5132c4937b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf67358-47b2-402c-b383-a7bbe1e6f06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0beade4-ae98-4147-b00f-f2471ff03f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0586ab46-709b-4275-9fe1-675770e0b16e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e1bc10-51bb-40f8-acd6-5bb00728f085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7282db3d-73bb-4a20-b206-d3f82816ca44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9e3ab7-ef91-4bef-b722-f0e132a9ee46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72b6a1f2-45bd-4395-be1e-39eb0c061582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6f7e93-8e9f-4a68-a9cb-b21b814f3198",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b363558-6435-4b56-a5ae-6bcf79420b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35daa3e8-7916-40d0-bd41-876ca9ad4aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3775583f-9c72-4837-b001-134fc2fcb1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0762656b-e1f5-4dbf-95d0-0475d8ad866f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dcb411-e2c2-4cc6-b6b5-b57275bfc4de",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8e099f-4cf6-4ad2-aaf1-d45094759314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0badfef4-537c-4304-ae44-9cf75b716474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cafe818-8987-4bee-9604-151e5ad525da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "102c00cd-e206-4bfd-a20b-9953b12434d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6aab78-fd6e-4392-a095-14ef97c4ef1d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d74487-3340-4d06-9caf-ef676cfc1333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ba1177-54a2-40af-b5a9-92a527f4ed77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f605f4-6876-434b-b5fd-e3dc0d001b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8828482-c238-42d5-9390-3589e9e9affd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ef4f33-cd39-4186-8850-1b5626a879a5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cb9147-11e9-4145-819c-41f622485b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d11c53-bb48-41ec-9aed-009723f6bc03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8178ccc2-d533-43ef-8344-c4cb62f5562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca16bd4f-55c9-49bb-866c-cb6686ad3f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfec7d95-ab5c-4111-bb41-47468ccb1741",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8878382-8804-430e-b81a-bdfd1f588e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b10ae7-2524-4f01-b094-648f27ba2ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8eeecac-2e92-4e89-867e-05f162506484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff71f2c-7b28-45af-9a0f-c014b41d2956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0f9d3c-a510-43c7-a93a-6fb11b3b9620",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1276c0a-7e4f-41c6-b738-65fccd183faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd13314b-2e8e-475b-8982-717476bc312e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffa81fa-db18-45c3-a237-99ca1b482a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75304fd-8008-46f1-b062-42074431774a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c4c38a-48e6-4fbe-90ce-d3d80ac5357b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f59da6-aa6b-40f1-831b-073decef1624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225ee919-4cb9-45bf-9fbd-e450b4d4f00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ed982b-ff07-413b-aa90-70ee37a593a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2565ed-ece8-4304-8e03-3c712eda3ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38eaba69-0fe3-46c3-b016-0049b908d25c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837c186d-95ae-49d6-963f-e915b93bda88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344c7290-bf12-41d2-a43d-c58e140e784d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f0e9ea-9fa3-4058-909d-f577121a3f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "314bcc8d-5ad6-4d78-bd28-18a1d65fd721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7e80bb-9c5e-43d0-a572-f6a4b03455cb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1321da8-9ceb-4ef9-a57d-ce14c8441766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab73f856-f1db-480b-a297-57f56d884556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae705c4-b0ad-4b39-857f-96ab39de0785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db5afc1-5f9d-4f88-92bb-e6264b361438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd18edc-c9ce-461e-a79d-fe75e9a4d400",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84895b40-6bc9-4b5c-ac7e-1c9a1636b08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4837e4b-3b6a-43bc-8fa9-cf173273c33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8903d04f-5327-4dfb-a84d-aa883706d804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e27be1a2-58e9-419d-a78e-aa18a44c6e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42405de1-967c-483e-a9bb-4bda94f45761",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9111a7-9973-4890-82ff-8068e66dbac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db798de-e343-4729-a394-b11ccb150e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8bc6f1-1e04-4887-bdf2-f01f68c9053d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "743eab63-f5a3-4d3b-be85-74425f0defba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154b7469-3d8c-4a18-b59d-f00f024104f5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c37861c-36e1-4034-ae92-7ad75df690fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62edd401-3a59-443a-9f3a-3ee2b3ffba3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8acc70-a4f3-4eb1-9abd-ce9b36887b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26e95b42-533d-4eef-9ccd-e7e95809e5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2d1504-71d3-479d-a2cb-da854e1f34de",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb303e0-9be4-4e1f-9cb4-b8f7a530aa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b71ca1-6e09-4872-bd0e-d92a215d9456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0aadb9-a315-4429-856a-896f70f3806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad44d28-34d1-4790-af73-89c674d97dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3458d19-faef-4b28-a851-545c3ddfbb8b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09092fbc-1681-44a5-bd41-d05dd9fa39d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a02ff78c-77ad-4745-b113-75a12f08db2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef27292-a81d-4504-80bd-619d6faf8f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b280e42-b1a1-4d77-8e4d-4735b56a5d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99e8f37-a690-4857-af26-199b56d712e0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a5800e-e0d6-4d21-adea-752bf88b6f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fd968d-f3e7-4bf6-a5b5-4c392920824f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa68471-05e8-4302-8aac-f1127515cf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c00f61e2-4d79-4d2a-bdd5-65fc0d8832bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac76a90-0f72-4c6f-a35a-ec95d096bfd7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ff71d3-4814-4fd2-9225-0f90539d0271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b53f416-25e6-442f-80c7-9e9c3155fb5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d34deb-bf2b-4daa-8e53-6c18e091e82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d82525-43fd-4381-870c-9e8c61471f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2855d2-12ae-4bb0-a7d6-8ee765803a1f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf2d863-be1d-470a-8721-faaa9852d1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302de91c-5e02-4f03-88ac-d5273a3e9de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e26fd0a-e43e-4af4-bb5c-8213b0e785e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "38387bab-0b69-4c30-a1ce-d70f93f8f169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7e4284-4c24-4d96-9540-3754f5385913",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7bba039-99e3-46d2-9845-46eb57048613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4c0c2b-e02b-4bc1-b951-d394ca95a7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad05866-51cf-4282-98be-c14450e2abb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1504b88a-2750-4f73-bab6-a074de98edab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b19b21d-4a36-40bc-b153-7d889cfb4917",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7be80b-66d2-4efd-968f-1d4998f12065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8139ec-b5a5-4907-bcba-c77772c95701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd20bc8-aa94-47bf-a68d-bc75f161aa99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "660352cd-5a06-4b80-b1e1-df68112a6b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f118403d-8c86-4d7c-a33f-abd0ef3eb123",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a061b2-968f-41f1-8cef-48fa98a0636f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57e1452-0181-4f5b-a91c-d9662a1470f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e03c3c-066b-4d80-935f-1e9766b4d438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "59c1678a-49e8-41c0-a034-6b1b3d201f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255f7050-d980-4628-9a97-6edf7a914d69",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c324e9-ea7c-4ed7-aed2-0afc79138afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02002277-492f-49d3-9dde-8fda46633093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e0a8bd-0686-4fc3-8826-7471e9cdba47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf79fa1b-3140-43e3-861b-3e38eb0acc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2192364c-8773-4559-bead-a9124087bb61",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead7f665-04e6-4bfd-9657-b68aec9d7037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8acc2e-b656-4615-b26f-13cf80a77e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a18bcc3-3dff-47dd-a8d2-a83f1f8fd0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8660c721-93ec-464a-839f-7db04e4fde9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966c6a9d-3678-4618-8a03-e760bb562fbe",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43ac7be-1439-4270-824a-285535e90487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f04a47-62d7-4d83-baf2-92caefe99ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135cfd9a-a926-4e65-9409-bd0d8682f2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffea1963-e357-43b5-84e9-c7b1bbb0abd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ecad41-310b-4b18-8991-15a01bcbaf81",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96765ef2-bf0a-45eb-bd39-8341f9c8f24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbb62b8-0790-4570-a057-e1e76f022bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ede0c2-5225-41b4-bf97-259f3d4254e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "634d3332-c1b9-43ae-937a-c031d742f090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f4635e-b072-41fb-adc2-c3e7820d4bac",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d02cb7c-c902-4106-931c-4b30d9673001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479a0ca8-de36-406a-b387-2e0f2368fb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a467f6f-88f6-4ace-8db5-b4d0b693d85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2be9edf-15e6-4a5a-9cf2-8fb2b5fdbca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba5ab6c-1313-4980-a90d-54ed0c75935f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1414f459-b0d7-4323-a80d-7644dcbe2116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1db9bc0-1217-4903-82f4-62ff7cd9505f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45a104a-3d04-43e4-b964-7391308827bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65362b1f-96f7-4959-8745-33462a960932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff711c1-f866-4c51-884f-e8267403ae3b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32026927-4646-4ee2-b72c-ad1beeeab80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e8cc8d-cc1c-4732-8d12-cdb28b245eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3696e14b-f6e4-44d7-8382-71ac31472751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f01608f-0173-4632-8944-59e0a1c34393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c32d417-5c96-4389-bc3e-caea9f21cfba",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b76c0e-e2f8-4db2-8bec-27bfce703833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcfa537-cb7f-43c5-b793-ba7e9d88b01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73139381-13a0-48d7-834a-384c04e4f177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5eed749-71a9-4ef0-b6d6-4505e0d3286d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf00469-19d4-4d14-ad10-155aab68c205",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bf7978-2859-41a0-8f3d-3d04eb4d5eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f7f6e4-24c6-42f3-bdc3-c85b86dd569c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079bfc78-9544-44a4-93e0-0207d7bff2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "049dd972-d7dc-4ff2-9cf4-848578293427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c22eda-6433-404a-bd38-90187cdec1d9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c85d03-2f7c-4480-a5f3-b35099f39425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74092b48-6df0-463d-ad8b-b36c5357d78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017b1da5-1b67-4d85-9118-708e805c5379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01f0fe9b-f629-481c-a021-e0dc5e85b0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d8d5f2-760d-4695-af38-c15f3e87ac7a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17eae11-f5f0-4100-b86a-1061095a1a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840c8306-4753-4a0e-a266-9be5a14af509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884ec695-2c99-45e5-a83d-ef57b8bd05e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75e41b12-dac9-4691-a0a4-44839ffe6e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465e7532-8531-4e45-b9c3-f24ddf4b3cb0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c5769d-4cae-44db-b956-457b196a43c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6514ef0-8f95-4ce8-8b9b-e225d315fb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9892a8-7a8a-440c-a5c6-258341f9db57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02f52a29-8863-4d43-9556-c471156cbf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a16250-bd60-4205-aa7b-2ffc81cdab68",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06d21c2-bc5a-46d8-b8f5-fd96c6d06360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08cc59cc-de22-4c5d-8ed6-bd699ed48d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b335b4-d04b-4db8-9663-bfbb92adb0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fab2b7-c7a3-4a0f-af7e-b3f29d09e344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ce9008-342e-42cf-9590-d01797645884",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722d13a4-98f7-4076-bf81-b673ccd2ffc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3804a4-e7ff-41f4-83d5-2905f2fc56ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cfa4a6-af22-4750-8eaf-b705bfc5fada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b023c7e3-b428-4bab-bd7d-2ec00b961f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ba64ee-f3fc-4129-9ede-64b29b477f9a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c669e79-2d3f-4dc6-a55d-b264a9b40019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73410c3d-8905-46e4-bfe3-d4eba5562ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c787df9-6df6-498b-9e48-6b2c1da0af36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "645fdd63-2bcf-42fd-832e-81831f310199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f88db0c-299e-45bb-92a7-676d0a074867",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4488dab0-37e8-4832-b9b2-3b7a79823d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6ab5ff-172e-4418-9c61-a5c77d94d8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc252c75-1bb1-4950-8262-fcb16fdb3e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e227c438-48da-457a-be09-01fd933f0316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd1c68a-5367-42a3-90bf-31e5559e2f52",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f171436-c862-45b0-95f3-e73c3897f92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ae24c4-09ab-4e6d-9bd6-69793f7800be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b2a132-1a89-4484-8cf2-66672a641778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d939d73-bbda-4747-bc5e-d2f6e006af31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a00c323-9887-4726-811d-996c230cb335",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da19312c-fd6b-4177-af4c-a04a7c8ef247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5dd94e0-ef01-44f8-a1e9-6b0e1776d119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb19332-9699-4674-ad96-188b076c4c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "405875ba-775f-4ea1-af2f-f4f4ca882f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52956369-c04e-4638-adb5-1cb732a8c3c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875eaaf9-5f5b-4f86-b4a8-8d509d9b4661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874268b0-04ae-4c6e-b6ac-867cd402e825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52463df5-79ee-491f-a006-4587561670c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8a3455-f160-4f69-a20e-91a9d992926e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a181ae97-92fd-40e2-bd2d-f99643c58462",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69df4d52-185d-4469-84da-b58b70982fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46700fe0-081d-4edc-b91f-6ed21dc7edad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82e9e14-e559-4b2f-904a-5f186249a5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "41f4cbb5-6b2a-4f72-b19d-0d492356fcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3019a079-e5aa-4a49-ad96-e0007611b159",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c5f811-45b5-4f97-905f-c6670177bc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba93d6ab-ebda-4cfe-b342-c70040008c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1686b845-f6e0-497e-94f5-d1aeb5ea90ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d44ad00c-2dc3-443a-a0d2-bb9911d89600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a153cc8a-e952-4b6c-b7ca-d247c18454e6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abc2181-c189-4a1c-87fe-0558b7ade7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a26334-09d7-4491-9a4d-fcb0e012cb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede1edba-6c34-4e2e-8af6-ac29e6cd3e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2564ca-eab2-418a-8276-7220cbc45061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19991b04-a783-40d8-ab3b-24a47779d6b1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f12cf99-b581-44ac-a95f-0398b50aa73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38204f0-c0ff-484d-9599-6b3e439b5bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c9594b-6f36-4fa1-86b6-f3fe32e6890c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f849f106-d2d6-436c-9328-4d6a3bcd7659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e55b99-cbb8-4e32-b607-5401706ecfda",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25a75f3-7ff0-4cce-a17f-3b928d1d73fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f488bc-ae02-4896-9cfc-c79468001ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69fcc1a-cf9b-45bf-b5fb-eb2be6a9e322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f303c968-7e51-456c-a6d8-c4b57b4cc868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896ce4bf-9e67-40e2-be78-7cb59fa266ef",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f08b47c-255d-40ba-b21d-f9cffdc83f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61217c93-b083-454f-93c6-c2f08964615f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa8b5d0-a1eb-46a1-a008-f619960edc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed118353-1e90-4994-bbcd-fbe05cc492d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f5979c-3d6a-4be3-9b91-230b722d0dc6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490fcdde-0c49-4643-a1e3-b40cd62d6d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90c85ee-4f81-4474-a467-ee83a14d4bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400d7080-6a34-44c1-9974-37cf683f445f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2a402b-4690-40ec-8777-8e8f6ffd9dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462a7ada-39f8-4194-9c35-974d66bf0085",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9559c68-cd03-4518-9c5c-31c957d1c896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b78e710-cf79-4d21-a12f-7dc7e6222bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba42a86-c68d-420b-97aa-388d14f680a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "52bcc798-56a9-4726-9637-fbd330914c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "297985ab-e755-4fb1-b4ca-4e9f2d55b541",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552d2bef-13b6-4c42-804c-7d29adbf6ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec3221b-4615-4265-8364-a03a0dd85494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee987b4e-6326-4df1-9910-6b146aa2676c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd37ce6e-0f8a-4b16-a3d0-0fe4e2e3d552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6545b43e-f9cd-482e-947e-93a070918f9f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e09108-9205-4252-bcd1-ca762e8e846f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bcaee0a-3ec2-4ad8-9aa1-78d7955c2d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f05984d-94e9-4e2c-88de-bd41c439c3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a74acc-1da6-4f51-b9ab-856b60054d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4e2b8a-03ba-4c33-b98c-daf55665d98a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c85571-0725-4ddb-b87b-8660c99cef29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64207565-502d-46b7-b9f1-e964ab8a4c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5df60c9-f349-400e-94a5-4721dd274817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6daaed-e705-41d7-9f22-4351d43c1171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c841f9e0-ee46-4611-a34c-156bdb783775",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb676ce-83bd-455b-96bb-8b95a01ef8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a65a84a-0c48-44b1-9a97-1628c6e98267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe4fdc2-654f-4823-a609-824976661132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "431e7b1b-a998-4d73-908a-2de22d0e15c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9cc53c-6d9c-4ab0-82f7-d0cceb37a8e2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59475a35-7163-4d86-ac13-4743440a59ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05fcb41-5976-4a3e-91ea-ea4c44c862e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71c0ba9-c04f-4063-b720-60700d84be7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3439ef-e705-4eb5-9bb8-126294d6b78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9cf9db-0386-4e19-a2d7-316f586e991d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f06a514-9353-4b36-b222-1668e8885579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fdc5942-4bf5-4752-8a1b-f7a40d2d605b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f60ed2-1e29-4e71-96fa-be3b4a8ee71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95fa4e9f-f9ef-4116-84e5-e83bceab5ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8502d702-612c-4c87-ad82-2769b8828965",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7daa4b-54c0-48ae-8eff-229521d3fb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144d4d36-2051-4455-9a24-a4757c1e58af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658f893f-0372-40e7-95c5-692df751199b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cea5f40-4750-472f-9cd3-1f8ac3f9b6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5360e6b-3acd-4d90-aa40-763fd4a2bf7f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8774164d-f0cd-474a-86a8-d6f61a8b9e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6032fb-60bc-457c-8d96-2563d190da59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c92668-3984-4a10-9bc2-eb25b08b0c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "763f3c84-d8e0-4303-bdd5-d66189f23c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4e7432-b79c-4263-a2ce-83e6337c6ed5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e20b216-274f-4b00-8e82-0b928be8e21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2044b73a-696a-4570-9d11-0d9d73a6e6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9183297-724b-4548-be5a-af1d7cb2258e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07aa6d63-09f4-496b-bcd7-9eaad3a489d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c5ac4c-591d-4c19-a823-47613e3ad4ff",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086c666f-2517-4363-8aab-8f5acf7b2097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57f57a8-3896-42a3-80e0-fd228ed8c845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067d2f56-f6b6-49f6-9175-9c7a6e7fbc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f98221a7-8fa3-4463-ad53-17a87631e9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a39f6ac-8023-4f94-a32d-8aae7c70da2f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d11e22-c836-4985-90f8-a5140fc6a6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502057e6-4205-435f-a799-a6cc72d48f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1942d6-ceb2-4a61-a8bc-0856803d6fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8304e897-e5de-4a60-8e4e-325b0ebb6f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6055f781-baed-45ad-bd50-850089b66a3e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7f3526-d115-4b43-909d-15e1d0b4a4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e15fc13-4537-477a-9e9d-ad98e7e65c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a7dbd6-2ae3-414f-9adf-0e18738270a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0b7a2b-942b-427f-9f20-2f6482c71ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b30a40d-20aa-4b3e-83a6-5219412b983c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94b8047-42f8-47d3-9ffc-97182a4d912d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332fb630-eeb2-4b9e-9791-3047dbad23a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683b8522-5503-4a0e-b7fd-76fb6bfc6828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6fb0a46-04fe-4f84-bfae-10213e6c8828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a959779-fe47-40d6-a646-7d1a1292f91a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e921a3-df5e-4f6f-844b-6ec7e9d20a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25f407e-0076-43b8-a377-acb8c22eb985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f29318-f847-4c40-9ef7-79299fa01f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "275ef01c-58b3-4c8f-9720-f52ae40ed7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e1d208-b939-4d70-b9df-dfcd684fcd49",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cc91fa-09da-4530-a38e-575c3abe4650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5bfd66-4d23-404c-9b14-858f3c0a018d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412c079f-5cb0-4c1c-af12-ce4512c7e5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "763b631d-7287-485b-8c17-d5e548e4e052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bc0c8a-8dd1-4690-bf51-d251bcefcd87",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdedbc7-f386-409e-b0d8-081288ab63ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8df57e-4016-4a48-963a-f4b5e7a7b13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82ee18d-5810-442e-bee6-a2e05023f74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e212dce3-b04b-4e27-a7a8-35c9cc3b3dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f53fc7-ce84-4b14-8310-4c98eec2d1c1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113e47e5-b296-45d6-a4d7-c50ffa2a7c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9213d515-ad87-484a-884c-9eaebad828ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bd3fa4-6fae-4a22-95e4-2e549763e363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5390262f-4bd9-4ad7-90fe-a31188fc87a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ed92e0-dfcc-4c7d-a30d-7d64a19b3a9a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073fd544-fa39-4df0-8c39-a30597ed91bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b8652c-c528-4e26-b0b3-a5c37c0547d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbe3d87-3cba-4d4a-9ca2-0055dc13aa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1958957e-a1d5-4d53-8a9b-ccc27bed2fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f9c235-3332-458b-b290-d8c4ee630e1e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3deea5-0e02-4374-8ba6-53403d56d620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687ea02d-c56a-4ec4-81ef-c364ebc33eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1041cc0e-4d65-40ce-b48d-b8a14853d08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "75590b3f-de6c-4547-973c-e4e1c23aea1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d70eeec-8cab-4544-9583-b82e86a14e6c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67aa10fc-b339-4969-8b52-21b40bba6200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf7d734-822e-4413-bf7e-6685bcfaac83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a253eb-79f9-4962-8296-d64eacb54271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70b6f5f5-e7e8-49fd-ae1f-03cc7cb5bc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd39a787-7247-477e-a623-0fcfa2c53f0c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba145b4-7d91-4e0b-a719-5f37c09f3c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546017c2-2ca8-43b0-8ed4-52b8a6bc63a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1bbd47-9b30-4c71-b846-16a77fe706ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bcf6a93-a90f-407d-8e85-dbbc71f0da58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a046df65-2926-48df-a91c-20143984eee8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b281b24-48ca-4ec5-b6aa-43736c533700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dca1314-bde7-478c-94a6-dbd04f4835dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e266bc8a-1e84-4f42-8275-a63f15709a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d955f1-b463-4793-a160-18644d63a61a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8d1dea-5b9f-4787-b0ba-b81201c30858",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11488d9-d714-4b89-94da-636b85265641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d8a8df39-4194-423e-b2fa-45e261bff73e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b76c58-a6c9-457d-9672-ef23f1f53b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e51ddc-16f6-4fb0-aa38-9fe42fa6f730"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "397a73ed-7dc8-4b79-93db-2084430b7354",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "401a1ed6-aba1-4200-aa62-9dcf694bd217",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef2e3e2-60eb-4263-a5ce-43b0a7524bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aafe5441-518f-42bf-a362-f8033ec8b81d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bb0239-5592-4175-8021-0e943f6232f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0f17e3e-a660-4333-b0bf-8032503ae237"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1bc2be3-362d-413c-a166-e03138fddb2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60b14519-f795-4070-bfeb-50bc7f976b17"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5300654-6a33-4dc9-83b2-2e311d45c77b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d49b5db-1bb9-48ee-a311-45f4cf4cf4f7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4559f186-48f8-4d8e-9b4d-04c4ff4ab8ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38f4c65e-d789-4457-a5ee-654a099ef7a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6c39bdab-90b1-458d-b59b-871bd750b3bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "101c2f8c-5a00-4144-af3b-720f4b196abf"
                }
              }
            ]
          },
          {
            "id": "def1a906-b744-4aaf-9a70-44e16e35bb3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "126418cb-8579-4ac7-9ecc-fc4657436b49",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "652df8a1-9d2c-471a-ab59-e49ce86f4cae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e40c91d-aba9-4e48-9dae-a8afa21a8580"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71d5b4fb-033e-4014-a9a6-7c334cd93ee9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b7ca7bb1-995b-4425-8bc8-3419d08f7901"
                    }
                  }
                ]
              },
              {
                "id": "2ca49dc5-fc7b-436c-9e52-56954f8e9d9d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d15d062-ae48-47ef-8b9e-c4a86c0b79f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b336421-d366-4130-8689-aba5ebc83c03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c194a7d3-fab9-4175-80b0-cfeb5cac425f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a85230ee-57b9-4c04-9ad9-f2acb7538a86"
                    }
                  }
                ]
              },
              {
                "id": "e572de14-5e6c-4637-85a9-798ff903bd83",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12230932-635b-4d31-9bf9-933ea45dcfa9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec3e1f9e-7867-47c4-a028-81a20a9bd5e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad1fa6c3-fcba-4d3c-9a9a-f14bdac034ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1c04452e-1f5f-48de-9282-0a173b16fb11"
                    }
                  }
                ]
              },
              {
                "id": "1dd1abd7-cbc8-4d27-8ded-c028c97ba313",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a4f6703-b687-44e2-9059-05ce87350a98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b72321f-64e8-4069-838e-aa7f47a97052"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff7b3508-f40b-452c-b39a-e18265d3797c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4abf2118-ad76-4616-ad2d-139231dfb0a2"
                    }
                  }
                ]
              },
              {
                "id": "04a37fad-3fe9-424a-9d07-43cae5b02dd7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf3e350d-745a-442d-9e83-231a8a73ffc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c07f0f8-6daf-4c2c-b37e-edecbc5f37d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98fb9a30-d0b5-4472-a7aa-f20a52382fab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4a2fb680-d7f3-42ea-adea-9e42dda4a5fd"
                    }
                  }
                ]
              },
              {
                "id": "4aa96fda-c3a7-4074-bffa-88dde1e1f929",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1af71564-bfd4-4b75-bc91-c6846bba2506",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbb18a06-d10a-4c44-8bdc-118704e3bab1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62270ef8-7645-4133-824b-0295eb12e0dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec06f695-ef0b-491b-9125-e57a453dcfdb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56a4436b-2646-46be-9ecf-44980215e661",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a31f7b3a-e75e-48f9-92f9-d6d092ac55a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1b8ff334-508f-4cec-af47-bcaa913fd1a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ab82c24-67de-4d23-a6ca-59e212a97bc0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e68b28c4-e762-4b57-86fc-a17c8f5176b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "35f3c755-8dd7-41fb-ba01-7cb33cf68eee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcc05e6a-0b52-4cb6-be7c-45b3d004ef86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ad1cbd4-b843-4e4d-8a3f-0d6e32e0dc5c"
            }
          }
        ]
      },
      {
        "id": "c7da6b07-3fa6-4c64-b95c-9fd05220cfe2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "52c66915-101b-48fa-aeab-6536eddf76c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ede0afd4-8d7d-481b-80b7-2773318e8216",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f399411-a16b-40ec-b370-f2ee0965fd95",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1627c696-f296-4367-ac3d-fdd049130f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26da01d9-8dcc-4407-808c-341ddc5c6de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91a31f2-19f1-4253-97a6-80ca72aee198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "15cb73c2-0632-4fd6-99ee-385ed3a4facd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b215f7-98ef-48f4-ad1f-88a9151d7cfd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5fdcba-b5e4-45c9-b5a1-7e490e3b724c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e07eae2-9650-4888-b7e2-1e30186d10a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fba5b3-0516-46bd-9f64-65707bb3252d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51679c8c-0db8-4c5b-990e-5e5c905254a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c143fe-8247-47ab-9397-68ea9f28280b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397e6f98-734a-44c0-91ce-853fbd606526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0b14fb-36a2-45ea-8da9-f7ad89d7a212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2749fd-c1a2-4329-85fe-25c9d1a41bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0acbcd-3319-412f-818e-9a791fe4af67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f18583d-e692-4369-b7cd-22f070d4836f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9d8ebf-6f1a-4415-9eab-cbcc42abf56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fd5d39-51bc-496a-9fda-bdb37a7f1b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05521a0-4dad-48fc-b636-a558a6c7581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7177db9-1408-4f35-9b69-6a047106c427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57920910-afae-4ede-898a-9281ddee8ad0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf33373-93e1-40bd-bce7-735394dd1319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80ad079-de10-49d7-8c2d-68ac676a73b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e692e9b-87cc-4164-87e3-74bacf454d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae89786e-0e62-4107-80a0-3611ed9c7827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c2ac76-3ebf-4cb6-97bc-0fcbf847ff2a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f589baf-8df6-4df4-a90e-d71c1ea039a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3477d53-6677-4fc1-ac9d-e4b58661384f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd1b3a4-4a20-4900-893e-c3a07677720c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d199097a-a73f-4c61-9a76-62515ec9623c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c44ee9a-6fc6-4bbd-87f7-4836a2675833",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0d0be4-2fa5-4ca3-be23-9984e31a3da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b44fddf-1a33-420e-bee3-44cb74431d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65117d2-0245-4997-b658-1dde7f5a0770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4906d0-3e52-4ea4-b0cf-32ab57007999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd255503-ded5-4c28-88e8-203bf171ad72",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40c2357-ff43-4ede-b963-ce8e0ab81a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f4f0cd-bc61-467a-8d2d-38b470cdebc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2136ba2-ff9f-4df0-b368-bd0a81b4287f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b776f7eb-cf5f-4ea8-aef4-1c7e85597236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab09fd8-edba-462b-97a7-5a59d43f9b9f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaae383-1320-48db-ad07-3bfa81be0b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a9b7fe-383c-49b1-9d4b-ad577391fdba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26ac393-dc51-4153-b754-2d065e5706cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0a0db0-d139-42a2-8f28-64c94d18447d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f864cbc6-7e75-4578-b23b-3e18d0e6e08b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04faa5b-67eb-4cff-af07-4645c00b9fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8f451c-8381-4895-9c33-5e4d1321c41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf5bcc4-cc22-4f68-88ea-b6a8435ef0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "197c7249-f3b1-4c70-a68f-a0470424a2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412d77ac-2584-4d22-9436-8596a2f9f054",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c419c904-8789-47c7-ac78-47bbed35a1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdffbe92-302e-412f-b4df-2e842c247dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2fd76f-aff7-4e56-9b8b-f893b6d12ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ae11aa93-0a70-4b61-8ab4-0a3bce7bef32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d24ab1c-7d21-4252-b262-935ae753a73f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3aab53f-5753-4bbc-9862-3f21f7add179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96042f5f-290d-4bf6-a0ee-1a3d94a2f015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1e2180-b198-4ffb-85c4-a77c3f80601d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e72cfb8-5e04-418e-8aca-6f2aa3ef01ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5228379b-be90-4a2e-bfdf-98834c586e01",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676a28d6-c3ce-4fe8-8325-4070d1f76f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adf84ac-d84a-458f-80a0-07e429bb6cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5014dce1-b9ab-4307-89c7-84c3b41c5bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff132663-a28d-4c0f-9975-46063605a80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e3d7ba-4606-411f-8055-b42d0443bd1c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17a8348-5c9a-417d-bd54-3f2959987b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7434f1ed-58c3-4aea-b5dc-c2452ec8ca08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a4915a-c660-4be6-8e9c-b80c603f7aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f77149a-313e-4901-a0a7-d32d9b443405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2beec8-b687-49cb-8fb5-25795d8e0ced",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67bbd6b-3854-403a-95e7-1956a66e831d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acc0254-0d7a-45f8-ad2e-46c6ce7b1deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53324293-e5f2-4240-8da1-810058d87cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "445e4f26-9a46-4c1f-9060-ea99f048a10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a88cee-47c6-4aa0-aa67-8d86bb365b48",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02f3cd2-effe-4b66-b2d6-a5750b102003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdca49c-8250-4b6c-8cbe-9148212d90dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ebb25d-6c09-4000-9f97-abca6bb9ddae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "71df3519-249c-4c86-bba7-eb04431217ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f67b034-877a-459c-a8a9-717325b88a60",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef6da51-b4af-470c-9086-6cb3029e1412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb17b0c-da47-4a07-805e-3c99fd8f516f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566b9d8b-8e82-4b7f-afaf-aebded053665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "305efd7f-2f31-41e8-a989-a4f8f527fead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fc164e-558c-4aa5-a2e5-0511270bf606",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2875bba3-a130-40ef-b569-800fd862ea64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38407e1e-ae30-4209-94f8-be739d2d2f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb5e2e6-070e-4253-b31a-a875b29efcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d33369f3-b2cc-4356-a38c-0ef2fcc03754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0709ffdd-0bef-4e54-8833-de71591c4332",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b044598-4ae2-4749-81a7-143bf900eec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b80508e-429e-4287-860a-46aecd35fbcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9d7956-54c9-4c62-833a-e2cca4d4316a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53fbcae4-5cf8-4e9b-92de-d3d529646ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b9bf67-9232-4242-af06-ee9186c65697",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b9e62b-0d92-4433-aa41-00ed809c93c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c57ac0-8600-48c1-bd9a-6b5dca263998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be164a00-482e-4ade-a9ef-fbe87ee9437b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b7e3bd-71e3-4ff2-99a8-f97bd9e6f216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a667aca5-20c9-4fff-bb3c-9c176a8319e0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678a7526-8c2a-43f0-a6b6-6970752f0d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1484bafc-7811-4358-ab61-e186e0145510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b598bf4-65f3-47b6-9e8d-74acb5d012d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7d4d3f-4051-4a85-876b-e767d9740402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9d60f7-b4bd-4b45-bbea-5a20d48b8c20",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b45ffa-0bce-4683-9220-ad6b2b0223b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784dd172-554b-4dbc-b887-95e3406a6946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f04a4a5-2f56-4c76-a461-73f5ac300186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa04822-0cd9-4104-bf93-9e5723f3108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b569f50-6fc3-474a-8a3d-6556daf3703f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff2a3ed-6c33-44c6-ab4c-eafeb695ffba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471bd7ae-56a9-4bca-8110-ad865bc8a413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f882b18-7869-458a-8d00-af7e72db4c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c74d10d6-450f-4fa2-8852-5fa836defead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82652074-a2c9-419b-9eef-09a06608049f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ca2568-cbad-42f4-832f-162a05f64840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b832b622-4488-43fb-94d8-ee762274a5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00b96ed-c004-410d-a795-ca6063020848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2d481c-11c8-4fed-9031-5acfcfd21811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f55921-a531-47e2-8852-37428392d0ab",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c7cd6e-2811-4249-a1fe-64f85566850f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff18f486-5a75-4c6e-a0d9-9de0f461edb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71594268-dfbd-42bf-98ca-b57605aa8c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85ce85c-4e75-436e-b678-46c67b304ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cda37d-9f38-43a0-8220-ef56bc04bd54",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5cfd05-b751-45b2-ad43-db0b711ac23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc499c47-aa64-4341-8c54-40f163e7b0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7879f31a-29db-4c6e-a91e-c5ef0f25a34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4989c7-b1d7-4371-a012-dfba5c3831e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b52851-7ea4-449d-af21-98c16f435f68",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5452e7-e525-4674-ad78-30b6e1e4c6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1e2624-7709-4c29-b1b7-50ff326ba1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97bde70-51d8-4e73-b53e-dac5556769af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2733fdcc-63aa-4114-8d08-3354ad2f707f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9c1a1a-4319-4698-a8fc-f6e749ec8e7b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9696a08-8724-4f66-8043-b505e5458b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd261564-5943-4acd-83cc-f25d431a92fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e86832-63e5-4083-9b20-c0266ed259c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "805f6e77-994d-4057-83c3-bf0795b707b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cc0432-ec8e-44c6-b8f7-75a0b64750d8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da806241-b070-408d-925e-358cb08eb266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7538774-3217-4e7f-96ba-e3521ba7668c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebc1739-4cc0-4804-803c-b974f00399d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0dd8630-f96f-4685-b51e-f665e2616e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b016d550-b44e-4501-95b7-3c8597bc63c9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "763b0792-8c56-4a39-b5fa-c814c53c0808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27e5e6d-27db-45ae-864d-8ff02a225aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a4466c-4ae5-4af9-8eb0-85bee3766a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3f1e1a-6c1e-434a-a37b-4bcac2582332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59efb67b-25cd-4239-9792-288352cb5354",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e2154a-bc32-41b2-a99e-eb3a9b6f9eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903fb2f5-3f80-4e06-a85a-0179a7eb79c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2455b7-23c2-4bc3-939c-14cd48fbe5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "572c6c99-f5bf-4a0f-a80d-2279cdc93df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19486966-3c98-44d9-9b44-f13ea4892145",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df520b98-b9ea-46bd-ae71-9d0e871112c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cc1399-e4f7-4795-ba19-08c2f69c8cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60a0c46-7a41-4060-8e30-3fcd27eaef67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cc896d-5cc6-4c90-a6b6-85de2ad8522c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a77f0a3e-bc30-4c15-8134-679874a93b98",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e38113b2-4d95-4ceb-84bb-445c40397584",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de269d4e-b012-46c6-acbd-41175bc3f251",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef9af92-26a7-43ef-96b7-d1db5816e316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf8bcb9-606f-4921-8a29-6b194165f923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be8db347-b026-493c-835d-07957a64a00b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf68bf30-4e8e-4c62-902a-bf490f5aa6f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccf20a4e-e47a-4e23-983a-b42709c97345"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04a0fb2a-0233-4a3f-8528-772d3420e7c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ad50809-37a3-40de-8393-6c66e7694161"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ced30967-325d-4bbe-abb4-cd0034c52090",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7a4c55b-10ab-4d06-b6e9-cb19792ee026"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b178327-cccb-496a-b882-9e140cec624a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19718b45-7905-4a46-8e2d-4444ce3dbcd8"
            }
          }
        ]
      },
      {
        "id": "bd05cf0a-74a1-4407-b9ed-5bea3506a91d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f118ecf0-b8ea-49cd-bac8-3ebc58370115",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0419245-badf-4cb5-91c7-fa12f1d4a513",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2780deae-6b90-439c-a6a3-6cd920b188d9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597a092b-acf3-423b-9fb0-9823a0700b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f06bcd-0b1f-4e7c-b6e0-799f6ffe97ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da58b182-eca4-49f7-928b-07579a29023d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7052b3-01cf-4b12-a947-e4ec876bf47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7064836b-41de-40cc-b304-db873c438777",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95356ee-78ff-4f15-868b-6f862f0024f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4edae7-d135-4bcc-aa4e-c65dd7696252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f8da2c-56dc-423b-8d69-134dad4e056c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "047f7acb-081d-4563-9744-13f782a84348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fe0bfb-5cd4-4a18-a527-f24753b47a43",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7b3437-cba2-44b5-a6e1-0fd500ad3fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726c72ae-11a7-4556-af04-9ac5d7d50d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf58246-1662-4d68-ab1d-39376b8e5201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d7e30c-d409-45eb-bcc0-c59fafaab258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff05ca9-d7da-4bd2-a998-29fbbbce3bd7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d356472e-e4fa-43b6-ae11-d722b78f1e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4717c4c-3d68-42d0-b367-66f18667b638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41acecf2-6a5f-4bdb-89cf-a5ef4cd87a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "787145ae-4dd8-4563-8213-de505164e148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b973696c-34a0-4e7d-82c3-01f3f21c2a32",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06828fd9-7f16-4d77-8e43-d4c13eda3a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9c06f6-7524-4e13-8a8a-f8072ea0577e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec3f5d0-0cb2-4714-8d27-e2046ccac193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33505ab4-a640-4ed4-a89e-d630b32bb8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ecafcb-9251-44f5-a26c-cd47b923ee47",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac4dbb1-7caa-402e-ab27-420b614ff765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c85c72-dc23-44b7-ba1f-596c4379bd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1208d7e-62ec-4ebe-ab5d-b3da62da066d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38eb8a1b-ce60-43b8-bf94-bd7f00fbc616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b254b885-747e-4758-88d8-565c0c0f8943",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2d0a2b-1c17-48e7-9329-f72892f1496b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522d1605-95a9-4e12-bafd-b61d9e1bb9a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e979675f-e321-4d70-814b-fc21839826e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ea3739-8815-4b38-a340-29c0ae4e6987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c26842c-3952-479e-aaf5-fae6b064064a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1647451d-95bb-49b7-ace2-53c70440e101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6bfffa-793f-4ff8-91d3-5d49c46ded64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412a30d8-db9b-4faf-bacd-479034f9ff0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b06fb67c-3292-4b72-8d14-017e58c47300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1667bf-bca1-409d-b853-2d3904ef376e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0671c0f-8bd6-4f13-93e6-285274140a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec7a101-64e6-4d64-b991-02c3877c2715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606660d8-13ee-4fcd-99a4-20faf19bd1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ffa0349-ec74-40b3-8580-efc2a35cd261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b83598-65ec-474e-879a-c12ff5e8a01f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abfee92-7607-4add-9d44-572286b2d8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb68ed0-dffc-49da-a9e5-69c0e07a6787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45928f04-8851-4e54-8fde-cea0a627b49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7bccc0-c6aa-4406-9372-d6a4ccebfce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56465d0-d690-41a5-bed3-c5c6a4746a4e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a7c4f5-fc8d-4d35-bc94-aadb452b7f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336d2040-2c24-4a79-b330-2c5cbd9d25e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c789bb03-6574-45d2-9726-0e0cea0b24e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2fa8a4-bb03-4eb6-9291-9d03d143180b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa44398-c3dd-4091-8869-947acd9bdd49",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16777aa9-26b5-48c9-b167-5547206b8588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7caea98e-801e-4155-a170-94d4303fde0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5358df-f77f-494e-8752-e2a4b372d3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb044a7-2227-4ed8-8d21-7070ddc0885b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d3464b-f0db-401e-949b-5b3542c025ef",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21421a93-951a-426e-8b23-ac8046fc4f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f16cf0-f90d-41bb-89d6-2b0f52e82804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e660275e-4ea8-4487-a54b-0d2d90e1a739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "415d9002-2c6d-42a1-9b2d-44ef7a21ff62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa242567-d63f-46e6-b3d0-1aecd45bbd9a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223f78ee-fdbb-49c3-9eba-4ff3561971b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0b80fd-d25c-43f1-884f-d80c7e52016f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb6793b-254b-4b6c-a416-c8014725f9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2cee3e-c19b-4b4c-91e6-e773ee521003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07717473-3c82-4477-9c9b-3d3675f7e5b3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4250f8c4-9f82-4a53-81da-1aef0731baaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "398b25a3-e5aa-4d32-9d67-3ce7d78a369c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9b59fc-bd48-4004-98e0-4f4429726696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea60faea-01a1-45b0-ad9d-e13297e2454b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca084f4-1655-41b3-a1a2-49828ae9b3e6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434f4400-2b33-426a-b7bc-26656c0a8ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b7ab3e-9cba-4f28-a4bf-ebb423cc8c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdcffbe-fc26-4759-8a1d-1732b9ae8530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "55bea5a1-3f39-4185-a082-64868f39c829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8111dd-088e-4a32-8558-6dc6146b1579",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21295d47-d46b-4be7-84e5-89ec8d903d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a783a1ea-625f-45e3-aed3-248d407330f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e07f24-d040-4db7-929d-617bdcc11fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "704f0ade-4a41-4cad-947f-5ee4ca3e17c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcda914b-9ce2-43fb-a4eb-67c3cf111f22",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bf4cd9-b78b-4ef0-8d9e-8908adab6a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf41788-f002-48d9-8c35-b36aecff0a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f556e8f4-6bf1-47dd-8ad4-b6566463d046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "628cdc6a-c1c7-4ed0-92d1-ff5bee2942ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8ab938-e661-4686-b481-bf9f9adbc8b9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddf4dec-665a-4621-a255-707c62bc358f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd33c39d-b7fe-4b2f-9d50-ced744fca97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2f4495-a3a0-4aca-add9-7dd9ea64c8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42756730-5ce0-4b68-90b1-949b9956d5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1587b2-ec7d-4096-a6e8-9c453689e0c1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126958e3-59bb-4ad2-8634-d01237b6c8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d16e26-81a8-45e3-a091-e007976ba55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e480ca-a897-4d4f-a13d-6762d2c3071b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "941efc91-968e-45bf-8d09-18e6911b5f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcaaa46f-3fe4-40a2-b57f-0056347f20c2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988ef4bc-6a45-4476-a859-2273efbdd53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204aa0fd-ba39-484f-ab79-42cfa64fc54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca862681-ddf2-49c0-ba4f-1305e004058e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbbe7cc-7d26-4e6a-a56c-00832ef5bdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d55e30-04e2-4097-a4a3-de2392feeb2d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aec323-5ead-4502-beaf-19432d319149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d6fb50-112a-4bfe-971b-32ffa0f131eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd52faf-4b2c-425a-a4f1-d2aa1f89fa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb1771e-27ac-402f-abdb-f21e8c4c938b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4794938e-72e1-4182-b8bc-c067a23bef11",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135145f5-037c-4dc7-b96d-4bfebed667eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57dc60f-c027-47d8-8f1c-2a885b223704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae778b00-feec-4480-9cc6-0afe02eecdb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b38bf076-5616-40c0-8eed-e34bc4db7fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902ececd-e664-4651-bba5-2f86efada777",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4b5c73-1d71-457f-b9d8-89dd75269c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954990b3-efe9-4c8b-bb14-cf6e13f40189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a789773-d466-468c-a97e-a7a802c1f36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c594e803-e3f4-4649-ab19-b14878cc0e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b8e419-e11f-4bd3-a426-ff4321b0a80e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449a2de9-e838-4622-9756-aab401d838f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f0e4677-d28e-4b62-96a1-0341aa47fe92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecc8183-05bc-4f23-9026-caa6d7d33e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "feb8479e-57ca-4052-bad1-52e613bc022f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5502eaf4-8bb1-4a7b-9f2e-fa05832d2d8f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c723157f-4ccc-4dbf-af6e-a4f25ee27066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d730453-c58d-4f4e-ac90-26235b14bfdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13de5c3a-463a-4ae6-af39-41f86986bacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d078f7ae-ba44-4835-b3b2-69b55197720b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bfaee0-a13b-47dd-bdee-73342268b59b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8352f4-07d2-4c4d-a1c9-fd34a5579fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72827fd5-7d56-4afa-8b70-01f2729903a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bae0b47-cb6b-4830-a428-e561a6cbe912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc217c8a-c466-4f37-a0ee-853827a23735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6225393-9edd-4a0a-9a27-8bf823e33f4d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429f9a88-d21c-489a-be24-eb547b36ba5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b7f026-cbe1-4052-8a97-d93e86d2fff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde2830c-3c9e-44d1-a12e-348594525077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51361604-fd2d-4188-9564-f8ae6db3c7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7940064-3070-4b4c-908a-06d02349b320",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bd2d19-e313-4584-acea-c3727ab0b247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5abd7c5-a8cf-413c-baf6-b1df2103c6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ac162a-7b15-4a6f-82f3-cefca36b0425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a18ea11d-cfa4-4c56-a7e7-edfd34d4e9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05a03cd-8bff-4fe1-8591-a012a8f115ca",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ebd1fc-3e4c-4203-b50d-6636f74247f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2bfc40-6ad8-4a6c-9069-3a8d9692ff2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9f5aa9-1629-4771-bea2-b89dd45b6874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cd2ff5-ee97-47e1-bdfb-0f83060db7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58994e2a-f50d-4bdf-83b5-63b4e67fed97",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40732edf-5094-4024-bf72-d21c07173019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55206f41-cb0a-4fca-a374-59a32cab808a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a865f32b-2cb0-48a3-83e0-434ee167ca8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3400cc-1f79-4be3-9d8e-ae0c0cda4975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c551ee-3e21-4bd2-99f4-83e1cfb81224",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1eea6dc-e6cf-4d41-832b-d8479d334ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308cfd8f-71a4-4880-a5b5-6b6a2d0bc0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4a60a1-7377-4d8f-87c7-30e1c0e76e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b548adf-c04b-45db-82cf-a676552f6d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e180bcc-a9bf-49aa-be57-8b911419ab2e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f00661-d714-4152-90e0-304a3456a53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af173497-ba8b-4efb-b095-9973f6feaf2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81676f0-6554-4f2f-99f9-d42d190b1c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47897ce-e49f-485a-ae48-19142be6510c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dafbdc-9938-403d-bb7c-c70317a8292c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad8d706-dc73-49dd-8e53-cdc7d15c9123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec05cd2-e5c0-4a66-8685-5eaeecdb9672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d023944-58a6-448e-9f1a-4a79d76737f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bee67edb-d3c7-42de-9f83-146b226a1313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e8bac1-b31a-473c-a6f7-b2aff1142a42",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba9e94f-9054-4efa-bdfb-d1b3a269b689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa75893-e334-4d91-bd89-1ef40b71f1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbaa4db-856f-4d35-b96e-badd09061f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "154177b2-bc46-46a8-b7a7-c38357b7bb48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a21387-31c5-41f8-8967-30b44d5f9bf3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bc0563-2cbf-4a98-b034-ce1762c68c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25c40b7-c5e6-490a-9105-34f325b67acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f03d1a-fba8-41df-89cf-35be5a322545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e48c4d0-faf8-4276-9ea1-f9d276ff41c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dd690f-08b7-4311-a662-8a254ce8e424",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f2e6dd-441b-46bb-8c67-c14c5cc49633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb0c58a-38f7-4079-83b3-f37f3cc53db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b005c8-4652-4a9c-91e7-3cdb8f591219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "618cb54f-48e5-49bd-bb24-a01b7d7383c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3571d688-0f94-4966-bc50-3ee8cefb166d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35a20171-1248-417a-917b-f06dd34123a0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4c0184-117f-488e-9dd8-cf9ac240a344",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2998107a-d95c-4cd5-9e4a-7a410569620c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f672127-7ec1-41e2-8f7f-150198d99aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e685f2f-527e-45ea-8d3d-16e1cd99503d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c997f92-077f-4ce9-b4d1-c5c951a7d088",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "361ae288-ee41-4f7c-a0cb-2c1b3545eb65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "058532a1-4085-4de0-b193-38168c41fc67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2297a0cc-4ef7-4a38-b531-9830545dc6cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "661b02e6-ec18-4019-ad62-00d7af628e65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd2143e8-bb19-4b7f-b2bd-4d6747dc65a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d9aa3f6-b693-41f9-8306-f49d9fe20e9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbf35326-fd57-4208-a85a-f6561ca3bc8c"
            }
          }
        ]
      },
      {
        "id": "4143de05-d64e-41d2-9891-3987cc573c8d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5d4afb20-acce-4e79-90fa-33c86ae28826",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af8a0c2a-5ba5-4030-8187-ac5fbdd59383",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8089a0e1-279d-404f-aabe-143f25c2fe71",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae758fb6-51ee-456d-a857-a5f97c6e3ffb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a0e5a5-0a85-482a-8c28-59947d86e2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd13eb7-f65f-4781-9092-a63ac2efc60a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f0e11c-8f49-4764-9343-e89178f8c7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7afed17-778c-4151-a8ac-913337fa5416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef474c2-1cd0-490e-8017-afc826060982",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafc71da-9376-4aae-8b40-0cc240398f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad3323a-52d3-43e3-aee3-ee79be052854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a11732a-0359-40d2-a14c-040cc3014add",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ca932b-6fd7-40ed-8854-0bb8459c2d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cd6621-dbaa-47d0-93ed-296f16ffd286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8093d65a-3588-467f-82e5-ada83d4b0b58",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb0b0d7-5976-48d8-b81b-4ad1cae605e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206ed66f-a7b0-428f-ad2d-0a983c3924b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16218ea3-6fd4-4807-a8cb-170d6a16ce0e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89c9dfc-90f5-4d99-8475-a9b70ecf5099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93c0015-251c-4a1a-b937-0c40c207e3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15734bf0-c725-4a41-943f-20f8f2713acb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7f4ee1-d4d6-40ba-8607-fde3f74cc404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d5635e-f0ef-4d59-91ae-c4da2a7c8b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bd306c-2f07-4151-8851-855815ad6207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b01827d-d3c1-48b4-afb7-42a9dcf87fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a24760c-e10b-4f80-8fd3-1863ca9b7d34",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40eeec1e-2c14-4ad0-95e2-0f48d8b3ab60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f247c4f-2f83-4d05-8ab9-3e2888674eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5610ab3-c8c1-4b3f-a7a0-53005e5a4470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efbfbda-743f-43a8-875a-ae0256032fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfdaf30-4843-4db7-8a89-2bc0a6911b8c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80652a7d-5dd7-4700-be1a-3af6e507b577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "352b7840-08c5-446e-bd48-b32d0a5aa395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec29cd2b-9d16-4b4e-be21-6d8e27d28060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62ad9aee-30f3-4d40-ac83-8eaa9e0be7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3411cb65-3ee3-4e2a-9dd8-1ec896297df0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d94544-d9f1-42c4-b6a3-553b4e5b3dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f6a2dc-64c7-49b8-b707-568507bc9165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fda6132-26ad-4ca0-9413-2690bfd689d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701e7173-4d2c-40f7-93fd-897762909f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6258dcab-f437-46da-aa69-180c7ecc99d3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fa68c7-10cd-4d8e-8a6f-d4ff26aa308c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cc2d97-a729-441a-ab43-ff798e7ea513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fd58ec-87bc-4c0d-88a7-51496a5dd119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6abfe2-8d68-49b8-a8b6-9b401a5f3216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c25505e-50a3-49e1-a90a-1514fbf1bea9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b699d230-9110-4314-99af-4224472d49cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd07a2f-b8c7-49f1-8ad4-9f223348f3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfcefac-f1c2-4505-bd15-fd083acaa666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb034be5-ef05-46bc-8d4d-0a64967c5cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073d5931-543d-472a-83f2-e7da99c16519",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf78489-f4cf-4c5a-86a8-c98ebfed7b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd78a4af-8cd7-4a66-b492-c2648af7c590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86f3922-1942-4c07-af28-63123b7e74a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748e6d95-83df-4515-8be8-84af3201965a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac3bbd2-2900-4e05-98c9-1f0c2663dcda",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eab3177-386a-42c7-a412-fbc1061ee68d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82d64d7f-88ca-4bb0-8dac-9072923828d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "123bcd84-25ab-42ac-91b7-41fe3e8fb866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904320fd-88cb-49de-b292-f9db9da78d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4205795b-df75-4d9f-bb08-0ca8da96e20b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad58f8e-23d7-422d-b822-225e52f7686a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c7ea401-ca4a-4a14-bc5a-4fa89357b1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b4caef-1fdd-4f78-b0b8-b8b659e951e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f73519-a6ef-4075-96a3-2d0ed45fea05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bb146a-1d45-48f9-96c5-d4d61b60fab3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105db849-f06b-4c6f-acea-f66f2706bbb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "486f8a06-20e7-4660-8097-1315fe67341f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de76763c-a9b6-4c9a-9d6f-445594c45cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0def5679-77a3-419b-94a7-6c430d3cc61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0b1bb6-6d21-4245-af02-9550e67619bf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac22c6b5-133f-4967-a595-088e902f5b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "becdb1b7-50d9-46f8-a917-73f1c3d5ca7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bac23a-edf9-42e2-9b3c-599b04f92d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478ab5ef-df58-4336-8661-65417143a28b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd46249-7645-4c43-af05-da1f480d8ad2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65207ba-1338-43ef-95ee-251694f8e109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1622b7d-dce8-4ac6-9d9d-0fef3b000e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c0b43d-fe82-47e8-8eb0-1e05ccd1434a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b125a41-e42e-4355-83c9-d88dcfe6e9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d8c3fc-3d28-4e06-9600-48d36abdbda9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142ae234-e827-4937-bb62-7c634ae17ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da76b04-cd51-44fa-ad7d-98d201405e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2513927-2fe0-44ce-a4b0-7423f17dbe74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4e8230-9a91-42e7-a43d-b78200c6a105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f20b428-1523-4cd1-8992-65229163151d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500e548b-1d2c-499e-8256-4c38d9b94f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e431af53-c45c-429f-a1f6-6baee01d4b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ce7988-7356-4f50-8aaa-9f7519a4145d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573f11b2-389d-4417-8b60-560660954e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ededf5a3-aa6e-4483-811f-40ff8072abc7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2707a47b-da7f-4fcc-98c9-2136a9cee62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b07711-56db-473a-b6f4-db1424634866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b547ba-500b-4e5e-be9c-807197e6d627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eecf333-b86f-4533-a495-eaff63ec9cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cc2ae0-3fbe-4e94-93bd-1384428e8cb5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea1a1e8-e1d6-4443-924a-c7fd89699600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d15f6e-46ca-4494-9fc8-b5c1545b7f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2f239e-ef24-4511-9ad6-4d4c9f2d9602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7d1b1d-693e-44a4-93a0-d58deeebb39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a87d68-3097-49ce-bb64-c6aaeea75159",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6ba73a-9431-45f6-8042-6446b1d19203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b2bcbb-1b6d-441b-836c-5a23ec56b1b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27facf75-a0b8-43e9-9954-df0791d59eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169582cd-539a-4f23-a742-0b52661f55fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09ad010-e89a-4e52-836f-6b1d40990ba7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd684ee3-2922-4252-828f-a52e1d29c345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69ddbf45-ef69-46a8-934a-037781b5b3f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f1ee5c-a728-4af1-a017-5890d4247f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd17828-45ad-4e29-b798-a10a5e191a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd030028-b1c7-4b01-9eb3-e9d867fc6448",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adef73fc-9f17-41c9-b48a-b7e53938b75d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "439ab4cf-0a01-4fa2-8fe0-0ad1d7e301cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408de043-c998-421c-b087-e54694007380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5508284c-b857-4a6e-a96d-ac9e0e540580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9c2539-3933-414e-adcc-93ef156b787d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e43d2f5-f889-464a-a39c-3616d77b9541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19dbf926-1de4-4015-a13c-92628591f544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93570362-560c-48c7-ba25-3c62905c57b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1980587-ffc4-4550-8c5f-fca627fdcc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f499d97-e8be-4698-a89c-050f17614724",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafcd3d9-8b3b-49cd-b641-935d10bd93ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3196e235-104f-49cb-99e8-e8ed61e7fe16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82df6c11-041f-45e6-8040-285bbec9b4c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2570dde3-339f-4d19-b400-a3b11eef3d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9552f4ca-7dd1-4913-8eed-2b6f8f9ab849",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c695ce0-7022-41fb-b980-2e1cc984589d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a962af-e623-4249-b5e2-7e04bfb77849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4595e882-acfd-4302-a13c-fcdf8a88bfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62635fc-4bd5-4700-a092-86b1afa386d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24603ec3-0705-4b95-a5dd-79c3b18efd50",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b4112f-9336-4251-bd36-c3360cb6443b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c63405e-7d22-423d-8d47-9df87d590b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd844cb-7c73-4b4e-9533-9abb6ddef6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2177b455-01fb-4668-9f4c-0347efae7e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cb8a0a-9c3c-433a-8ec1-5b257bb91704",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4006594-4069-4848-80ac-4fda7f470fa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11249694-41d3-4a4e-a439-47514be49019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dddde68-48ef-4ef7-9922-34dd16804edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f533774-032b-4303-b833-eb179952ab76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0726ce9e-c3f2-46b0-8000-c847b428b123",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b90c60-5399-43af-afd3-a0acf3ac26b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2ab090a-29f9-46ad-a024-0867264f408d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7cc383e-44c4-497d-b4ba-724419ccb2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e20c716-77e7-4952-9402-7c0e2b3f6958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e995632e-9c42-45c2-ba61-8515764dd275",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3d86b0-bc21-4a64-84a4-2c2718c08b18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2814b2b-f04a-4d65-8463-0901ed4adf3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5500962d-e1b9-4007-bf54-f546cbaf045b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0103dd42-db6d-4415-bb4d-c7e58b169297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ed011f-15ea-42f5-bba1-f27f61038de2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8884b94d-f87f-4d45-9d60-e5ff9040098c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b263400-43e4-4589-b036-b74a248ad8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaae11a4-487c-4c87-b357-36c7940eec48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dee3558-7412-40f6-9dca-382e544f7dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a35fc8a-df64-41a5-9f36-85a9ae33cdd9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8904fe-cad7-4ead-9203-d5ae253143bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9974be7-3101-47a7-aa32-48f34115e958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae0280b-b3cb-4b61-9913-7dfd04864257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2182bfe8-51ea-4399-8380-04264f2f32dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81768c9-b938-4e3d-a190-cb5b0f300b70",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d16f04-bf7b-4efd-8b22-8b8ebda8d7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12038b6d-757e-416b-881e-ef29cb44858f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6940c822-59d9-4b51-bacc-c6726fc31207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b8f2ce-2908-472d-8edf-48d13bc3da09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccf6308-2292-4d31-aa0e-e72f11a3e61b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbd20fc-d53f-4dcf-8215-4da5d95f471b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6bd960-3e13-44c7-bd3b-5a7147595d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea43ff8-f5bb-45af-af0d-72c22dc2ef02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4825aff1-37c0-4315-a38d-191b238e18c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9551baf7-4421-4f10-a1ff-52dd2e356ffd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7233e29-7096-420c-957b-3198cd272742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0f2ede-5e40-4bfe-99a2-ee252bb14fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff269416-6dc7-4973-b3e2-4808037f6ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1dbba1-3da7-42ff-8ab3-1d8f2ac9d483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcc5fcc-d6e9-433a-bf95-ac941797be2f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df3a26c-8df1-461c-ac77-0a1b149d6352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c35ee37-1e99-4981-9648-c773c6dc9df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc49624-324c-40b5-992f-9f9bb12fe502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49616000-ba5d-46ef-abed-ecd6d6a06385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cc5007-b2a6-4a6b-afc6-8320fc9f6152",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a744a20-0e47-4223-8cbf-c22b93800821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e614ffb-0ceb-4841-b8ae-f020b7fea90d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4dfd0b-bb53-42ba-9360-b2c7d569a96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737d9644-c1f7-4747-9d28-d649e86be195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826c3288-9a1b-4614-b2b7-fa2d0cf00cf1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864a47c3-5d64-4728-bdda-c3667a2ed204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17e36a3-05cf-4917-ae80-e8758035df51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b312e8-9645-480a-8f73-5ce6012814a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b5485b-0ce4-4603-9fff-550643ede94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0006d2c3-7c7a-4d60-9756-a79eb281d7d5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af772ecd-b36d-4022-9041-d07e25e9cb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a7483f-1454-4ae9-af42-ce6069ef63d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca9ee1d-c150-435e-878b-666b3c199648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a550d7d-ecc3-4420-8ce7-0b7b17edd49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924c814f-d57c-43c0-aa69-8c2469af097e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05203d66-73c4-443b-94c2-6eca94f1798f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1239965-96c3-4d78-b277-18275b7c2da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b58a58d-6e8d-48dd-add2-70e37aeb017b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129c25c0-409a-4636-b299-a7f7962cc071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b8115a-7ae8-43d7-af55-81a8852b9e80",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb215c0c-4394-431b-b619-f8c3f6f34d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee2e7d8-e54c-4a46-8c36-babac2dd4bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf04520-a05a-4205-ae58-774928932b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f0138a-a4e0-4283-a4c4-98d450e642d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f45c67-33aa-4c93-81ed-6da0522b5a24",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe9b041-fa63-4b8e-bbdb-89c39d7a1620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87a4281-746c-4ce4-b875-000094718508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb61d36-2f45-44ef-8ea2-b596fbf748a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78a4b84-911e-4341-9b15-b712d74ae04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8445da-00cd-4fe2-961e-abf538564be0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7e183b-0e29-44b9-be70-75d4a2743fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933d3b06-aa2c-4345-ac4d-031ae8acfb53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186d05ed-6471-4914-9861-bc69cee0b375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72dc159-d8cf-44e1-8317-82b8f1c2cb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c390dcb-9da0-4acf-91b1-87bb01ac9d36",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a77ad08-ea68-41e4-9599-019635cf2e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e024ac1a-d511-41ed-81c6-12ddc51d7506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53af8668-99cd-48d4-9f7b-5677aa93dd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e03fc38-73ed-4af3-90d2-ad50f135d728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a304a372-63a5-4ad5-9da9-24791d3eb8fe",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5989df-0a13-48ef-993d-4e946646bbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484d9214-c231-45ee-9b9d-dcabc36fd882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c026af22-8af8-4194-832a-f0e49e8f3a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6521c21d-2055-4027-9146-49f931cf35bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1464320-bfc1-4f8f-b2ab-7debc42a839c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08484ffa-06dd-4d57-9046-2e3248d1fa2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b281cbb-338e-4b67-8c0a-58c5888a9f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "815aa9af-fb6c-48d5-b144-e9e32523a06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b395412e-95c4-4a15-8d6e-6ffafb891f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23393fab-0ce5-4527-9612-e0fa110948d3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c398eb-a061-494b-80e8-f14474fed9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3dfe59-43b9-406b-9f95-83e4b645e4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00629314-ec86-42ce-99bc-b7405d85af16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98207bb1-9220-4ef3-a46c-192cc884fe87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14e94b34-ab43-4ac1-99e2-0eeed2f98773",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45a5adb-56f6-4f50-929a-8422664f0297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecd6f4c-9fe4-4756-a4b3-0f69318bdcdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5410558-13df-4829-8a44-605b34ac0577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4584d1dc-b11f-4aea-976d-94c165df0b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5a3b6a-4aab-4fd0-b3ca-406ebca5a6a1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2489b939-ee00-4bf4-a490-6d06733a0555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09461c42-b6d1-4c5e-9b9a-f002cdf84ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6506184-2c11-4f57-ba89-ec3aabf1d323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2c764f-740d-4441-bb0b-bc1234cf8e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2a8e8e-5614-4da1-a3c7-993650bbfdf8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b388ec-ad64-4229-b6fd-bd87367bcc0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2574ec83-adf4-4896-a56c-4d29ade25044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7342b4f5-1b11-4c31-b8b2-cadfb6a21497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e45b79-4c51-4452-941d-5ad2479d608d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b655dc75-c647-45e1-b1e3-cd6e70555ef8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb64cba-aace-4e64-8f45-81f76f09a2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ad82ca-4bba-4175-88c2-ec2b722b7117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4774f7f9-3eeb-464d-8d7e-2ce240215697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a08b6d6-ba0f-4ce0-92d8-71a3c3a6071a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51680d4-e8e7-4f3a-8e63-fc40c291bc51",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b386a9-b7d5-45d6-9274-aa0eea2f7377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84f2e15-6a2b-47f6-8345-325bd0eec581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5548564-4e0b-4322-93e0-ffaa883f733b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a2893b-dafb-479a-a7af-1e5230ddf1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567ca941-ed0c-4c61-8832-3f11d0e245fe",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a71683a-80f8-4342-bf32-1833b12306a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ddcaeb-fe03-4bcc-bf25-73a743ef391b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bc443d-6861-46d1-9931-e725669881e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a03f08-abff-4b52-a0b1-41bf3b81badf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba54bfe5-4673-4fe2-9d35-24b142bc1df8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16153936-9ac7-4bbf-9926-c18f26fa60ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0509110-443f-469c-9a62-f4f6525da855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d940787-bd70-4d5e-800d-5cf1e3debd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78c15b9-3392-4d70-9543-c55dcb01ad3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06448f78-0f08-4e28-8964-7cf4ec5a091b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebefed2-9c87-4c74-a143-76505abbf736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9618ef3a-f415-4bee-8e4a-4555c7b5143a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ccfd2a-73eb-4707-80d0-01e24e0564f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9c7cba-af84-4507-a466-0123ea416a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a324f18b-fa11-4786-a609-2cfd576f197a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec786e99-1c2a-4db8-b1b8-ccd0b67f359a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b7d073-382e-439a-9b56-e7bac4c7588d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd506c1f-6ac8-4a27-96b9-d305a51ac3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8679ab3-5ca5-481d-accf-5c1fe9eff2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd05569-138e-4659-9849-e20513f3e376",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4638bb85-af3a-438b-b1bb-a79213d68937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca45cb5-576b-439c-a1b4-92a3f4f06ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30054d2a-3a77-47b7-9e9d-6c5d91cf1f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652d4b32-5216-4aef-b787-26962df3c8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a507a4d-256f-409a-8d91-b271eb3513ac",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efaa1c6-0a5a-47f1-ba01-fd99f60e143e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6fc9aa-6a5b-4b2f-af97-e6a112234ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0791edb6-0d0e-4b78-ba86-01717dfa1494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a43e4e0-85c6-496f-9fb7-55ff425b2a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745f0cc8-3d0c-4ec8-9e7c-815b68359cf6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689239d7-217e-47b7-b8c6-352449076295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc63fa4-1647-46b3-92c6-45e2b5772210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07655ae7-930f-449a-9c3e-fe0efa7f225f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b094fb8d-e405-4f9b-8f95-5bca48649fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7980fa90-4046-46e2-ae5f-c8efeb8ad2a7",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba887ae9-d18c-44d3-ae53-6a6e83d0b888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c907b4-df96-4185-be88-35cbb48a6186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbda72c8-c2e0-4754-842a-fadcc6548b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a66ffbd-e43e-4adf-96d3-a8555ead7948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10520bfb-51b2-4466-854e-082f15b80fc7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fa701d-7b99-4d59-bb71-a33f97b0d2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdebd28-3a2f-412b-95b1-66e2412310e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22081b0-0bb5-47c8-bcbb-5c0e6e42172b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2dd3290-afca-49c6-b639-1f49b653b0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006dd215-30ea-47ba-9697-e6bc9e45f511",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4ddbce-ec8c-44fd-96a0-249af9ec2698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d5c4c86-ff0d-442e-81f5-60a75df7d3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81875f6e-486a-464e-9a59-8c2e1c488166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6464303-2f27-4f46-8307-4ff5c787c52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c54462-48ec-467b-89b2-22383323a071",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67edf106-a3df-4097-88af-17fe4d570f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcfebe34-0dc7-438d-aab7-3a9434ad7cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f028d2-3791-4e0a-bc29-a275628d5cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599965f6-ec01-431e-ab32-d1d912643734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae9ff90-3040-4050-a64e-0d1077179422",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0280a8-f5cf-4244-8946-e869f3ef11ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7789d6f-0c20-413e-b423-c3218615fe4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9571a859-7f85-4498-9b9e-470a720b477c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f428e242-db6f-48f7-b1f4-506ac8394229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf6a74a-c4d8-4e06-a116-ae301902e20c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c90433-5084-43b8-bc79-6ca2bb1ce97a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "809b0c65-e657-41de-9dfc-0e0a4bb80948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b06bb05-50ec-4ddd-8e89-103c9be68522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a242974-91b4-4ed0-91dd-98c03b00727b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5562e61-e9ef-4ea9-a323-3c2e73d5ff0b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753a218a-88e0-4afe-ac5a-7a4d73b50faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2285778a-6e51-4a0e-8278-192015e976d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b0a319-986c-4933-81e7-6cf68e0e5f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d706d6d0-e470-434f-ae71-c1167f97e3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4330cdc4-fae7-4682-9d04-148e23d357e0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a054046-f191-4024-af38-ebb1a8cabb1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ca5f2c-8841-4d98-bafd-26aeccfb7831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f933a50-03ee-4763-9e4d-731e45bccf62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748ad42f-35ca-43e9-962e-37c6f8302df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f3eef0-d4c3-4bc2-abc5-d2fd79334803",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce54024-f32d-4dff-8054-74c17a74fb46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b643761-38f8-4e2a-99ba-af0d90b06fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c5e085-874f-4e67-83ab-f683a09a8266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b243ba-0a4b-4db7-bdb1-a63c6e0c727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67db60af-853a-4989-b192-c311274825dd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eae2e1f-2081-40ba-806e-6f69b995cfdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1569d067-dec2-48be-9546-bf102078ded1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab27ff0f-33f2-41c6-9897-3397a44a454d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e842a9-e793-4d15-b1fd-444ff869314c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8103e2dd-1d3f-433f-8ba6-cfbc34be6905",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66c1177-b941-4182-9f41-72e70d4de278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a781099-4ebf-44d5-91b1-7c8e97d80cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26856f7e-e022-4e38-921a-c7520b718a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5067c40e-ac4c-4c42-a0b8-249548c52dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3452398a-fbd5-41cc-aa15-485763f98248",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86a8471-7e98-40aa-96f4-c6acebddfc2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5e53f13-a720-4389-a0f8-53881a115866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e266ec30-7271-4752-b76f-b758e68fbb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de842e9c-12e0-4f6b-9c22-d2c1760ac8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec26efe0-5b1f-4c6d-be36-0116be4e8464",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bcfab3-a1f9-48cc-b246-c75d85da0f30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29d814b7-9fa3-4d36-9642-8ef234a5990b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4564bb-93cd-4e20-929b-99d4b5682dd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0297f55-52de-4d64-b3a8-01023c0ca30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b46bff-9890-4728-bc65-9a95fddbf9fd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5d2a65-34be-419d-a907-1f556f35c181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2395b5e-304d-4b4e-9a92-306156cb141e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be23197-d5fc-4c1d-be81-7284e7c7bc4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c80dfe-c51e-4897-89d8-45e851b72bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ccee2d-b286-4074-8b5c-f930a64b8c3d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1757038e-66b9-44e0-ac0d-8d7665501e37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "447d7ef9-5928-409a-96f7-5afa83a31399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afda78b5-6ce7-47c9-bf26-90ab9ea15a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d30c1ca-bb14-46bf-9729-3a9ef02b4eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9628a3-2333-4600-992c-35695810f641",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad24275-ac65-4653-814b-b024bbd72052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092df3b6-18ea-40e1-80b8-156ba4918bdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "270cfd0d-e5c4-4bb0-9401-67bd25256322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2c131d-6048-4737-8305-b719325b7207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcea950-e3bf-4ee0-8fb0-8323ead4f6a1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de2e73d-1655-4835-a44b-e161d94debc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db9e26b8-7417-4bd2-9986-390122c6ea83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d25a3ff-28ae-459d-b594-be440e95c6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dc8c46-58da-4aef-82ab-4c795ae21ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8027290-b2b3-4cec-94bc-17c1535e7eca",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac6e09f-d889-4e64-9d9b-025556f90c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d09d9bd5-3233-4f9d-a649-8ab47a45da52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5df54a-3259-4509-aeb6-85357ae71e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98390a1-8485-4788-be0c-c5af579cc43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fc8d93-45dd-4313-ad61-e9c24f34a2ad",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5221051-07bd-40ed-b00b-2171479fe3f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "510864af-e9e2-49b2-bfe7-bc6b6beaf5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53dc016-0548-4214-9640-28213ec05b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a14236-b12b-46c6-85e7-e6f7c7056f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2178dbfa-e846-4427-8069-f748e552af76",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12451cd2-23bb-449c-92b9-4e9441cb17dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f47232e-3488-4154-ac6e-b553c837cad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4882c001-f95e-4c0e-8d1a-ac902b0e7822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb808a8-b0fa-48a5-af25-df1efed02fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5590866a-1274-407e-9198-eb7dbbf2830e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a711c5-c555-40a8-99dc-e034085b6ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c48bb2-5852-463a-85a7-30a7a326fe5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89c4639-3ebf-445c-a2e3-0e8bca2adeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26496d9-dc31-46a1-851e-990acad1d2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39708692-0eae-46cc-8109-2fa3588dac7d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e50aa7c-5c01-4269-86b4-7f817ec4612e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0977f283-ac1f-4ab6-a1e1-375ec27ebd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e962e333-850a-48b3-ac5b-382c29752a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56ba45e-4c7e-4245-a2b9-6ef0c2af9b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad7d4d0-b5f3-4e90-b43d-0ffba0245fc9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed3eaba-b983-4b4b-8bf5-1deb10653689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7366d7e7-b40c-4d07-bb2f-848de6b0341b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18802ec4-1807-411c-b9d0-ee4391e3dddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11c9048-1611-49ac-baa1-0bbcd050920c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ee32e4-6052-419e-9320-ade82d820da9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e5463f-0659-478c-a6e0-d0f9c2160516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "384cb406-84f7-466c-b864-e39767e3c10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90700dbf-272c-4209-a71e-09ec0088ad19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddb774d-bb71-44aa-9a47-dcab600634db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23855f6-9156-4637-8e93-7042937ab805",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd3aba3-ed5d-43fa-9108-96dbfcd8c358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57af9af0-3afb-428e-a1af-274edd1089c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41febf28-3722-4ce1-ba8d-e2907f03e61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0baf8df-294f-496a-bf04-87119c95394b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13190b60-d970-453d-89b9-d572f6a1a0e3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7afe23e-1d20-45c7-a050-e74bd437cedf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da5ff3c-7bb0-4ddc-87c5-b03a644dfb2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76551041-ba1f-4d04-ad57-f1a0eb2f0d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15f996c-1c84-4167-b971-64df2661b8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed762d2e-f453-40f4-9af9-d9749489bf27",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357aa2fb-d641-43e6-875f-6a039659ea22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7d5f9a8-48bf-48ff-87b1-6c78842ba4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b0d847-a301-40da-9b0d-c4326baafee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9392c2cb-97bb-43ca-9a82-348472f15a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99a84bf-bf0a-4082-a55d-ffc51c303efd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1487c03d-235b-41c0-8a93-492e100de7e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd77ed7b-4873-421c-bac9-581bf2326b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d927dc7-9515-4b9c-8942-c760f986f645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7513de-4ee1-4946-a9f5-1eaa5c7ad03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c254019-9e3b-4500-851e-46af08c282b5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d77d70-eb05-4bda-bb04-72b8026e8c68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "354deefa-d6c1-40f8-bd0e-374e2ef0df03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449c6a32-604f-49d5-900b-783d18656fb6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f9c0fd-c428-40d7-b48a-03d49c948cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e4fc06-52bc-4ff6-8c7a-bf40b5952d19",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9413360c-f21e-4bdd-b474-96ab8b1bbb03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d60ee66-2b7d-449a-9378-a97a95302855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7303ab3e-5a0c-4aed-b5a9-b61f3c0d1599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a88909-7e46-4096-a0c6-a742efc2692d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7e2cf4-5383-4f9b-b66b-f8d2e9b2a4ce",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da06c591-75a6-4a59-bbc0-f8f806bac712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1acdaee-82f2-497a-a1b2-35e0a3dda08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "226a9fa1-eef7-4dea-a459-a23601f23999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0e5219-d14c-4bd7-9998-e52b80e802e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beea0410-7a18-4a5b-abbb-6324c57c35de",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236d813a-ab92-4a6a-8d46-7c9536c67762",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c9bfdf3-5e52-4230-bf5d-2348813d506a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d793b3d9-8cb9-4435-811d-a5d8d12d4ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c95c86-f363-4a7b-9368-9e9cae35d753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9274cbf-0342-4ee6-a871-6f068a315c02",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50913a1b-9c9e-47fa-97df-70fa34ac0633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d616bab-7a90-42aa-be8d-72b2f55ff377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466eb5b7-e8a6-429c-8b24-e3682ff90bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba59060-beac-468e-8811-88b2771f861e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251cd054-9fd9-437f-a465-8fa83f36c89d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a021343-6f71-4e28-ad78-7c831f578886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c31b81-b907-45fc-8713-ca2a9fcca7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caa9d4a-0a16-4ec2-8336-99ee0914bfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8427969c-de9c-4e40-8a0b-82764a180855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617c1f5e-f68f-4339-bf99-ea5775bf0d5a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a638baf9-724a-4a5d-b01d-6d2c6da13a64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c4aa0f-9a6d-4b57-9893-c931c8991cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feca5d84-894c-4a59-accb-7c8bcc210717",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fa69d4-5bff-443a-814a-6cc4c21406f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ed20aa-3e83-4a1a-998d-a73510291713",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f475abc2-ef8d-45c2-86bb-46c6f26f430c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd67e24b-df35-495d-a549-d957469c162c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d388557-c22f-4475-81ff-86b99661497c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d75a68-1c38-4177-bb14-a4cfc8a62ffc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2408d99c-3cab-4db0-89a5-10d15f8fff87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa2606a8-2887-4985-b0d4-0892e8895962"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "443e3803-6a47-415f-bb19-6f94556c4c99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9cc478f-5b84-4be2-9fad-60f9458b0e68"
                    }
                  }
                ]
              },
              {
                "id": "0252a479-b42d-43c9-aa02-34aec03527dc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "97423a18-30f2-4ff5-97c1-a92d1d05e704",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf0337d-8992-4039-81c1-164ca5a26193",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4ce72846-0158-4dcc-8108-2f7de980097b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37415dbd-800b-4b05-9fd3-6b14b20f4b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2b98525-7f35-411f-ab88-7b3c22103c15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e841f4ce-2703-4290-8d14-054a247b3c66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a780933-1846-48eb-81dd-2d87c3d72346"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4585358f-6632-4244-9d31-997efab63eab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0fc59e0-b960-4401-b264-d8878e1309f5"
                    }
                  }
                ]
              },
              {
                "id": "10f29ca8-4421-48c6-810b-bb9cc0420de6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d269c2f7-0046-4cc7-a1ff-a10dc7e7b515",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63f82e4-d31a-417f-881a-7ddec0f507ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "219d5790-0b0e-43d8-833f-86ab33fa8db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4b48dd-aaf4-47e5-9219-62b1bd5bf299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb189c20-7abd-42f9-890d-36e8a9a9001c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "52c1e3de-f425-442d-84b7-c6820888c62d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60e4a371-fcd4-45aa-8d07-72e7866109b5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29f38631-4841-4117-8b3b-37ffb5a1c2a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a38171f3-a0ed-492f-bc68-a493e582be42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0d262c5-5c96-4d8d-9425-a6426b301afe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f1d009f-0e97-4f65-9746-685f35615603"
                    }
                  }
                ]
              },
              {
                "id": "27e41f5e-286f-45c8-beba-9d30cfbf8f96",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9791145c-5e3e-49ec-a046-c69425c95370",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2d465235-d50b-4d52-a827-3e94964e88a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a54405d-c074-44e4-9813-6b5a24210405",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60ab8847-83e6-481d-b1b3-47ca621bd325"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "210dd707-3e08-44e2-9103-b604a0f9e2e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1e4d9fdf-78ec-4d76-8809-4feec951d6af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69a1a0b6-fa2b-4b01-af77-9e26ec0e1da8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d24eafe2-c1fe-4a5d-b7ef-cfa69e4d8b8d"
            }
          }
        ]
      },
      {
        "id": "a454d22d-6a48-4af1-bdc4-5aabff012a74",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1cc28b0a-c7f0-41d9-8228-a004037dde16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cade7d14-9dd1-4279-b2c5-7807f4720af8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8fdcfe1f-629f-46bc-bc29-d6b53b9c35cb",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4bf8ad-9466-4b76-ac0c-8ebd704b6dab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6eb241dc-268c-46d4-a173-442af23dfc72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4047fc93-c69c-4454-bc75-572cc179f0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "725edbcc-eefe-42ff-9af1-430af84d9911"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d80d1ddf-4a1f-40df-8670-38b4bc3c21f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d755a242-96c1-40cb-a365-55537f1c6eef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebaea5e1-623f-491c-b703-c5088fd27734",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05f3280f-f812-4624-822f-675e17d49fb8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f14292a-24ea-4550-827e-32ccc197ed80",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4816cae8-3c39-420c-ab12-4f80936b36da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99e0b626-616c-4166-b334-616eda13295a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4048bfb-21be-4588-ac61-bd66195f270c"
            }
          }
        ]
      },
      {
        "id": "188a03fc-39a9-4d7f-97b5-da95a34f46ae",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b4f68361-40cf-446d-a62e-95d659b4cd4e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14b1cc33-fd4e-4e6f-b053-da9380156a50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f452b911-af23-4cbc-8147-1be893a10637",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c55b528-5805-4bc1-bd10-924f3a775510",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77059d45-5654-47ea-a365-9bf191cb9112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f546443e-aeff-42f5-a0c0-d258457e58d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc1f6374-b0b7-408c-ae78-deb1f0f7eb5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdd8f019-e719-45dc-b108-dd8344f3dc37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d1d0f50-f1ef-45bc-b043-859ad0e24805"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca3a63a2-691e-42a8-bfd2-080ad58b30cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8a0d193-b975-4d67-af37-17464ff36127"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b5cc1a7-8e7a-4633-b8b6-7eafeb5d797e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "45c97bc5-2861-4d95-a9bb-4eb871547a9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7abb0f82-f0bf-42d2-98a1-82182a5930c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69e9e122-25f4-473e-ba18-ba5498d1454d"
            }
          }
        ]
      },
      {
        "id": "71dae844-b47a-4b76-a064-8caffe32fbc1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ce8252f4-4c99-402c-9228-4dff8d312b6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b4a6548-38aa-408a-a9c4-95a108a8e557",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84728702-fcb9-41af-8ce8-ed7444d06dd2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fde507c-f534-46c9-8856-ac3eba25d2be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a282516d-e637-48a5-904d-4a373782aa6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e486bdef-0feb-485c-989f-7c56e59d613e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61248840-d21d-4d34-9fec-4b32a4108669"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d51d5dfc-28a8-4906-a03a-337615416bb6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ad4533a-ac90-4966-bcf6-e8b7d1dd9445"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da321472-7ddf-498a-b424-063039bfa868",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d23d89f0-41f3-48eb-8136-9fae00f2998f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfb075bc-239f-4e4f-8642-c7b09b3e6200",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ed1cf08e-114b-422c-a4c2-6e29c7eed148"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa68af34-b1fc-44cb-8f19-c09b3667fa12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dff0eea0-54cb-4a4a-939c-e68fc382dd28"
            }
          }
        ]
      },
      {
        "id": "ccdea88f-d552-4261-892f-d80d9a285795",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b349c36d-ed60-46e6-8c5c-141d687b5f19",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2258c88c-cd2c-4b0f-a3cb-a509f1107f67",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4c21b3e9-ff1c-44a8-93be-9764f20d31f6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "589f295f-ce96-4637-b552-daaf9fb1ca33",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e50dd6f-8464-4044-acd9-84bb48b9860a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 136.9859154929578,
      "responseMin": 7,
      "responseMax": 8613,
      "responseSd": 609.9166877523601,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697330192807,
      "completed": 1697330246400
    },
    "executions": [
      {
        "id": "6b89e50b-f162-4266-9cf1-fb88a90cd7ad",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1c1912ed-6109-4627-b103-b62dd918ad16",
          "httpRequestId": "e9e2635d-15a1-4865-809c-e364fc52c4c0"
        },
        "item": {
          "id": "6b89e50b-f162-4266-9cf1-fb88a90cd7ad",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "25430e49-6a58-4764-b11b-1f5cd541eb93",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "43b6a794-da94-4416-b6cf-b6d72038f1a6",
        "cursor": {
          "ref": "c56781b9-b54c-45c1-908a-d7e6081b080e",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "faafa7a4-c4c7-45ce-b174-7aa90040f4bf"
        },
        "item": {
          "id": "43b6a794-da94-4416-b6cf-b6d72038f1a6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9091418a-dd06-4d61-bdbe-a09eaac0465b",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "90b7f732-4096-477b-84a4-ed287ec6fd1d",
        "cursor": {
          "ref": "580a1d2a-0f39-4a4c-942a-f6ec96cfb93c",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "cc74a50a-b779-4fd3-b417-472043a5ea7d"
        },
        "item": {
          "id": "90b7f732-4096-477b-84a4-ed287ec6fd1d",
          "name": "did_json"
        },
        "response": {
          "id": "9c96e769-313a-4e01-bd2f-7057fe93cf73",
          "status": "OK",
          "code": 200,
          "responseTime": 413,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611dc4e8-8fb3-455f-8fd0-10eb32d4102d",
        "cursor": {
          "ref": "c3934851-c2ff-4e2c-9d95-649230fbec57",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63a75e39-b25f-4334-acf2-28ff8ab59651"
        },
        "item": {
          "id": "611dc4e8-8fb3-455f-8fd0-10eb32d4102d",
          "name": "did:invalid"
        },
        "response": {
          "id": "5b5a677a-5b1e-48b9-b79d-1eceaf0e63c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 708,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611dc4e8-8fb3-455f-8fd0-10eb32d4102d",
        "cursor": {
          "ref": "c3934851-c2ff-4e2c-9d95-649230fbec57",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "63a75e39-b25f-4334-acf2-28ff8ab59651"
        },
        "item": {
          "id": "611dc4e8-8fb3-455f-8fd0-10eb32d4102d",
          "name": "did:invalid"
        },
        "response": {
          "id": "5b5a677a-5b1e-48b9-b79d-1eceaf0e63c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 708,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c27300c-4ced-4b7b-91fd-188de69df6ad",
        "cursor": {
          "ref": "d43ec6f1-7aa4-496a-983b-7cf4be44edb6",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fe5175cf-26f9-4b3d-9506-11592861d439"
        },
        "item": {
          "id": "2c27300c-4ced-4b7b-91fd-188de69df6ad",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6dfc7d44-454d-4c87-a3ca-ddafcd160762",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a503f97f-c4c1-4539-ba66-01887b054155",
        "cursor": {
          "ref": "5f2c9823-0a88-46f5-907e-dcae414c786d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9bc18b2c-01f8-44cd-ae06-c9d069445584"
        },
        "item": {
          "id": "a503f97f-c4c1-4539-ba66-01887b054155",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5e7a81aa-5a0f-477a-9e08-ae32bb918547",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d762983-5a7c-423d-b5b1-d0eb4b680e5b",
        "cursor": {
          "ref": "3abb3566-6c57-41d5-a8a5-b9072bf04d48",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "55726fc1-d187-4f67-bdb3-546df2c39249"
        },
        "item": {
          "id": "1d762983-5a7c-423d-b5b1-d0eb4b680e5b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "623dea2a-147e-4717-be1e-1ccbeff52581",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0046bf1f-6800-432a-bf51-728ce00dc684",
        "cursor": {
          "ref": "1911457b-79a1-4814-b3d6-daac165588d5",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eb76ef1b-c93f-4f83-895b-5be457b167a0"
        },
        "item": {
          "id": "0046bf1f-6800-432a-bf51-728ce00dc684",
          "name": "identifiers"
        },
        "response": {
          "id": "8245c87b-c6e0-4d9a-978f-1f7e4aa45fdc",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c515bd-ac7e-4fe3-bd99-4508cdab3493",
        "cursor": {
          "ref": "9c4f1d26-ed84-4550-b7c6-096ef0ef1a02",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "68cbf321-9475-4793-abfd-02154f57e966"
        },
        "item": {
          "id": "f9c515bd-ac7e-4fe3-bd99-4508cdab3493",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a0ce97db-242f-4957-a60f-f9ffae1e2e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9b6ab8-d45d-4b71-b176-6be394f732af",
        "cursor": {
          "ref": "d2cef339-2b93-4d52-907d-5ecb0bbc02b8",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b14daa6d-9d5b-42c7-8a52-4329bfbfd390"
        },
        "item": {
          "id": "3b9b6ab8-d45d-4b71-b176-6be394f732af",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "250141cf-81f1-4e42-b189-7a868e93c015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ce7562-0d9c-4f8f-82f7-3f751e9c9eb6",
        "cursor": {
          "ref": "09374228-0dfd-4f33-b906-c4a13ca7a7f2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "226fe62d-b07a-4b3c-b4de-28d417711fa6"
        },
        "item": {
          "id": "30ce7562-0d9c-4f8f-82f7-3f751e9c9eb6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2e677dab-a5b3-413d-a606-2f90d69a569c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e34368-0565-4c1e-a80d-e24b9e04a04d",
        "cursor": {
          "ref": "ff257748-91b3-4000-819d-c6756931cb60",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "70e4197b-fd0a-47f8-97dc-01345213ee9a"
        },
        "item": {
          "id": "a3e34368-0565-4c1e-a80d-e24b9e04a04d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "eeb07ea8-e5b2-4b03-98b0-3c17791e25c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ddedca5-c122-4377-b530-8a82869a0eae",
        "cursor": {
          "ref": "3409b9fe-6d81-420c-9ed6-5433643021d3",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9e28c384-df51-40ad-969c-9a629d3298cc"
        },
        "item": {
          "id": "0ddedca5-c122-4377-b530-8a82869a0eae",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "451810f0-a876-4997-856e-44883ef43fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4012b600-ca1a-4a59-8f85-f1871db57f10",
        "cursor": {
          "ref": "ef823cfe-97f9-4691-b6cc-aa2cc76e831c",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2eef522d-27aa-45cf-b030-f29f4b39ab7d"
        },
        "item": {
          "id": "4012b600-ca1a-4a59-8f85-f1871db57f10",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4a16b357-e258-41d4-b42b-e65fb0b02360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac18ab9-d000-4f21-9256-fc5a27aa3413",
        "cursor": {
          "ref": "fa2e98a4-1ef5-4c2b-9529-f9ca7a5259ea",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2180ed49-081d-49be-9415-c696700c8041"
        },
        "item": {
          "id": "bac18ab9-d000-4f21-9256-fc5a27aa3413",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "01f4c1c9-e107-47ac-b413-f67c8477bbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe71ab3-aee6-42df-9e05-942092a8be14",
        "cursor": {
          "ref": "24bfe150-0e10-4b9d-a5ad-5b5df9e3136c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0ff365db-7896-49fa-827b-1c2486a879e6"
        },
        "item": {
          "id": "8fe71ab3-aee6-42df-9e05-942092a8be14",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8792d0f2-7a2a-48e9-b2c1-7d3a9f7c5118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3a19ad-9119-45b9-9617-6fb4a31f5277",
        "cursor": {
          "ref": "65ce9ac8-ba87-4159-8e17-705f48739f59",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3f979218-aa36-4f11-82d5-bd8815951385"
        },
        "item": {
          "id": "1d3a19ad-9119-45b9-9617-6fb4a31f5277",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "04609fd5-5e50-449e-ab10-2684645d166d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8af2146-e1af-4fee-bec4-bf952c4a79c5",
        "cursor": {
          "ref": "982f0657-73de-4191-842d-87aacc3ee026",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b084cf02-4b25-4a4e-8f8d-90ca96b47f94"
        },
        "item": {
          "id": "f8af2146-e1af-4fee-bec4-bf952c4a79c5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "55667ce5-783a-4c92-a998-0c05eaa6a8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b499cd92-e356-4bd4-a066-d31602b6dcc0",
        "cursor": {
          "ref": "3f63a854-15c1-40f4-b813-37d0eacb0f0e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "19e1a9ac-957d-4397-a47e-f2808fea4b3d"
        },
        "item": {
          "id": "b499cd92-e356-4bd4-a066-d31602b6dcc0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2ae05553-3c38-41be-8360-edeae555abca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a7ca30-29f8-4dcf-8c45-23d510ef556b",
        "cursor": {
          "ref": "abbe512e-b917-4d54-b8a1-5e2a5a0a8b84",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7e0ba4ed-c58a-4c11-ba00-25c8d7d1b1ff"
        },
        "item": {
          "id": "d3a7ca30-29f8-4dcf-8c45-23d510ef556b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "79382322-933f-43c1-bf26-861e4ee4fd14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128cdf58-9e18-46d5-a646-d567b322f843",
        "cursor": {
          "ref": "633d0da6-ae71-409d-9e1e-e6e28101892e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7b80486d-c5c8-4f52-b1b5-4f2b7e600797"
        },
        "item": {
          "id": "128cdf58-9e18-46d5-a646-d567b322f843",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6042da45-b515-46a5-85df-cb72186cf296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87c0482-fbcb-449e-870c-7309c53af9ed",
        "cursor": {
          "ref": "975a54bf-0111-4966-ba11-72a4e989ce0a",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e4e1c623-f263-48c7-a928-41a2a01d154b"
        },
        "item": {
          "id": "e87c0482-fbcb-449e-870c-7309c53af9ed",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4f630b70-a582-46a7-b425-07cf0f8eb349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af63bdf4-c0ff-448e-863a-f9f359eae64e",
        "cursor": {
          "ref": "c195bd36-b700-4bf3-90d6-a247064dec5a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "14282e08-170d-4ed3-b008-4638ef924141"
        },
        "item": {
          "id": "af63bdf4-c0ff-448e-863a-f9f359eae64e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8ac94ce8-0d58-407f-89d6-910a3962f16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11064cd0-ab7b-4086-afb7-8926505d4a53",
        "cursor": {
          "ref": "81fd7cfd-f125-428d-8b42-eed0aa3245ef",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b3b9d9d2-d9ee-4972-9c84-37bbdb291924"
        },
        "item": {
          "id": "11064cd0-ab7b-4086-afb7-8926505d4a53",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b03a4b35-2a9e-4601-8405-6f5b3ad47e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59f8878-4396-424f-8522-47eb4b5e2d42",
        "cursor": {
          "ref": "449af15a-806e-4e39-9173-0ad9e5fd0535",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "86b27250-264b-4a89-990e-2d23a3a92683"
        },
        "item": {
          "id": "b59f8878-4396-424f-8522-47eb4b5e2d42",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d26ce91e-5258-4cf9-9167-50cc18040b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f445405c-3dcb-4cd3-a5a1-543687b7c6ee",
        "cursor": {
          "ref": "f0e29d01-d180-4e38-837a-eeff6ee99b79",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2dfba630-bc42-42cb-a4d3-15d7caf0371b"
        },
        "item": {
          "id": "f445405c-3dcb-4cd3-a5a1-543687b7c6ee",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "04f33dbc-b7b8-4801-a111-197869172519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4226bb32-3dab-4a27-86a4-c3ee88ea26f7",
        "cursor": {
          "ref": "9cc654b6-08a6-42ae-9cf0-afd4965602f9",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "efdf33f1-bf67-4ecf-be79-9e2fc4025c8a"
        },
        "item": {
          "id": "4226bb32-3dab-4a27-86a4-c3ee88ea26f7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b1cebd82-7cc7-4491-90e0-88ce3ec18af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125583d0-74cc-4b9b-adc8-86a66b290052",
        "cursor": {
          "ref": "38e4e0b8-097e-4148-bab7-2df607736d5f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "07b0e048-7cc0-4db2-9df0-b5aa84dd8293"
        },
        "item": {
          "id": "125583d0-74cc-4b9b-adc8-86a66b290052",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "14ea328c-08de-41bc-afc3-9522ae56087f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e868c935-67cc-46c6-951c-a766d2d44515",
        "cursor": {
          "ref": "b084ce08-f7ab-4564-be24-ed58474f62c0",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "69168b5f-7900-460d-adc5-ef7cc9919fb6"
        },
        "item": {
          "id": "e868c935-67cc-46c6-951c-a766d2d44515",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a5d157aa-41ec-4597-ab03-e1acefc5ec63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0586ab46-709b-4275-9fe1-675770e0b16e",
        "cursor": {
          "ref": "8220d54a-86f2-455a-a46a-92eea4c1196f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9133dce2-12fa-4b18-a159-bff4615bb91c"
        },
        "item": {
          "id": "0586ab46-709b-4275-9fe1-675770e0b16e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6503bf18-269e-4284-9242-55c0f114946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6f7e93-8e9f-4a68-a9cb-b21b814f3198",
        "cursor": {
          "ref": "5c2c8e11-ced9-4047-9c1b-12cbcf08da44",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "42883e82-5fbe-4459-a7a7-f21356cb5c48"
        },
        "item": {
          "id": "9d6f7e93-8e9f-4a68-a9cb-b21b814f3198",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b05c5ab2-8b83-4451-bd43-6c562721dec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dcb411-e2c2-4cc6-b6b5-b57275bfc4de",
        "cursor": {
          "ref": "6b17bace-ec07-4c26-a763-40925726dfb0",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6d129fff-b3fa-4a1a-96e1-89b0d8c6aef9"
        },
        "item": {
          "id": "b9dcb411-e2c2-4cc6-b6b5-b57275bfc4de",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cfed9381-bd9f-487d-a7e3-908197a042e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6aab78-fd6e-4392-a095-14ef97c4ef1d",
        "cursor": {
          "ref": "ba2e8b2d-6d5e-4b36-9b64-2d2fbbf4b5d9",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "717cffff-4d06-4cf5-8192-93e59825cd60"
        },
        "item": {
          "id": "8b6aab78-fd6e-4392-a095-14ef97c4ef1d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3156ab59-ee98-423f-ac96-2ae744406cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ef4f33-cd39-4186-8850-1b5626a879a5",
        "cursor": {
          "ref": "2e83fbbc-c4cf-4818-abc0-b9000aaf8e97",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d5843bee-a382-4f81-b4c9-e07c29184b5e"
        },
        "item": {
          "id": "c6ef4f33-cd39-4186-8850-1b5626a879a5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2bd8a153-70f9-487b-ac5c-533c03ca5ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfec7d95-ab5c-4111-bb41-47468ccb1741",
        "cursor": {
          "ref": "55937507-6731-4e11-8ea2-dfe321965d2b",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bc1cac94-2b1f-44a1-bf87-6cad8c876740"
        },
        "item": {
          "id": "bfec7d95-ab5c-4111-bb41-47468ccb1741",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2f9203fa-75ff-4610-bea3-f1a54f0c7a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0f9d3c-a510-43c7-a93a-6fb11b3b9620",
        "cursor": {
          "ref": "73700331-dc0d-4105-9715-3df7ecba2c68",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3e611ff7-1c04-40b4-a1fb-6c45b9e6fc9c"
        },
        "item": {
          "id": "6d0f9d3c-a510-43c7-a93a-6fb11b3b9620",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ad00c7d5-6fd3-4b83-8c96-2b310f63cd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c4c38a-48e6-4fbe-90ce-d3d80ac5357b",
        "cursor": {
          "ref": "e58dc5b3-637d-4165-81a5-46fa276e10f1",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2937d737-b0e4-4ca6-985c-1d34673fdefc"
        },
        "item": {
          "id": "55c4c38a-48e6-4fbe-90ce-d3d80ac5357b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d3209c13-6261-4726-932d-5a8c3ab9187e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38eaba69-0fe3-46c3-b016-0049b908d25c",
        "cursor": {
          "ref": "34e19193-1e0c-45fa-ade5-f30cb8c01431",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dc659b1e-ca59-431e-9851-50adebb152c4"
        },
        "item": {
          "id": "38eaba69-0fe3-46c3-b016-0049b908d25c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2f555a54-dea8-41f2-b266-caf7911498ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7e80bb-9c5e-43d0-a572-f6a4b03455cb",
        "cursor": {
          "ref": "6c0420ab-ea82-443d-9bd1-6568b7dfd30a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d9b81766-1b15-463c-a000-36e1734544ff"
        },
        "item": {
          "id": "cf7e80bb-9c5e-43d0-a572-f6a4b03455cb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7ea023ff-5a9f-4f8d-8437-56c3ae55ace2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd18edc-c9ce-461e-a79d-fe75e9a4d400",
        "cursor": {
          "ref": "d7f07e65-bc78-4931-a1ad-9ec964e8961d",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fe60a916-d7b1-4ea3-94c0-7ecb4095a57f"
        },
        "item": {
          "id": "bbd18edc-c9ce-461e-a79d-fe75e9a4d400",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7d537489-67fe-401b-bcc5-5e1883dd331f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42405de1-967c-483e-a9bb-4bda94f45761",
        "cursor": {
          "ref": "b72deaca-df19-4747-832a-92a293082940",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "385c0ebb-5c93-4366-94ca-b6c2921a8484"
        },
        "item": {
          "id": "42405de1-967c-483e-a9bb-4bda94f45761",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "43848737-ef36-417b-922e-63d736da5c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154b7469-3d8c-4a18-b59d-f00f024104f5",
        "cursor": {
          "ref": "e74b8704-c67f-4f05-8fe9-83d60abf1d05",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f11b5cd0-2303-4929-a148-16b166beb6bb"
        },
        "item": {
          "id": "154b7469-3d8c-4a18-b59d-f00f024104f5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a95673d8-7a25-4f6e-9785-cfef9844315d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2d1504-71d3-479d-a2cb-da854e1f34de",
        "cursor": {
          "ref": "f380576f-252f-462c-91a7-fd07af7c9366",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4846d929-80d2-434c-9716-1b2e8f91d28b"
        },
        "item": {
          "id": "1f2d1504-71d3-479d-a2cb-da854e1f34de",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6dd02f4d-b4e3-4e90-91fd-85d69c990dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3458d19-faef-4b28-a851-545c3ddfbb8b",
        "cursor": {
          "ref": "cc44ce16-ace9-4ae9-af1c-6777953565ed",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5bd1d081-e184-4977-83e1-39da0848a8c2"
        },
        "item": {
          "id": "b3458d19-faef-4b28-a851-545c3ddfbb8b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d80b3389-96eb-4a61-9e8e-23cb0f0130c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99e8f37-a690-4857-af26-199b56d712e0",
        "cursor": {
          "ref": "2d52c2da-ebb9-4f26-8aa9-b661a1e175f7",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9399939e-606d-4c33-8f1a-82b3010965f2"
        },
        "item": {
          "id": "c99e8f37-a690-4857-af26-199b56d712e0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fab40170-895c-4ba3-bf5e-f238e34ed25f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac76a90-0f72-4c6f-a35a-ec95d096bfd7",
        "cursor": {
          "ref": "dd4afaa5-1950-4c0d-848a-aa2737938b99",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a3bfaf8b-ac61-450e-afcd-7c42e8fd38e5"
        },
        "item": {
          "id": "1ac76a90-0f72-4c6f-a35a-ec95d096bfd7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "25dbea3f-c209-4466-adcd-4a7bc16746c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2855d2-12ae-4bb0-a7d6-8ee765803a1f",
        "cursor": {
          "ref": "49f2508f-4111-495d-bc00-45ae7b8330d9",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f7bce73e-0376-4e27-8bc5-53d83f9eefab"
        },
        "item": {
          "id": "4d2855d2-12ae-4bb0-a7d6-8ee765803a1f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "dfe52d71-7af4-4a7a-b3e5-af5dbe0297fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1002,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7e4284-4c24-4d96-9540-3754f5385913",
        "cursor": {
          "ref": "dff0b660-a40b-4e8d-9afc-2c6289966c11",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "565d5ab8-50bf-4d8b-9901-b9861c32a93c"
        },
        "item": {
          "id": "9c7e4284-4c24-4d96-9540-3754f5385913",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1983714c-af4c-450a-8401-780e7c656601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b19b21d-4a36-40bc-b153-7d889cfb4917",
        "cursor": {
          "ref": "1d9e8075-fbf9-4784-8bc0-52a0cf411835",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8ee8cc75-e0fb-4259-9c0e-6a55843be8d4"
        },
        "item": {
          "id": "6b19b21d-4a36-40bc-b153-7d889cfb4917",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "99ff185f-d29f-42a3-b446-41ebfd5047ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f118403d-8c86-4d7c-a33f-abd0ef3eb123",
        "cursor": {
          "ref": "50425eb7-03ba-46a4-bd47-741dbc550545",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d71fe212-4c38-4e20-8bac-85e6bd0a188b"
        },
        "item": {
          "id": "f118403d-8c86-4d7c-a33f-abd0ef3eb123",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2b259855-1b1f-4819-be17-0e564dbadd73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255f7050-d980-4628-9a97-6edf7a914d69",
        "cursor": {
          "ref": "31b31c80-6b5d-4d0c-9651-4ddf328d3335",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2212bbab-ec0a-48d8-886e-a9abdb30e93d"
        },
        "item": {
          "id": "255f7050-d980-4628-9a97-6edf7a914d69",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "56a8d561-62a3-436a-b672-66e2dd229c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2192364c-8773-4559-bead-a9124087bb61",
        "cursor": {
          "ref": "dafe9f6e-b316-4f46-ad76-33638889a97d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e57c3933-c2b8-42b5-943f-c9646630ec77"
        },
        "item": {
          "id": "2192364c-8773-4559-bead-a9124087bb61",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "25c56a07-1029-42d1-b52f-0d5f135df97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966c6a9d-3678-4618-8a03-e760bb562fbe",
        "cursor": {
          "ref": "5d3be125-0f61-4d48-9358-aa6ac02130a4",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "76071906-1e23-4b86-92ae-6a548fb3ccd2"
        },
        "item": {
          "id": "966c6a9d-3678-4618-8a03-e760bb562fbe",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f9cdf064-cbd8-4326-812d-58fe255693eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ecad41-310b-4b18-8991-15a01bcbaf81",
        "cursor": {
          "ref": "e49cb236-b7e5-4d54-88b2-f0cc21a827f7",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9a23abfa-dd47-4ff6-9352-00ae3b85fb99"
        },
        "item": {
          "id": "c7ecad41-310b-4b18-8991-15a01bcbaf81",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c9922631-17a6-4842-a6af-55aa3b4425ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f4635e-b072-41fb-adc2-c3e7820d4bac",
        "cursor": {
          "ref": "9475e20d-e8a8-4a73-9e20-b162e7b0c245",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e8b1102d-3d83-4ac7-8db3-4f05e1dee4af"
        },
        "item": {
          "id": "13f4635e-b072-41fb-adc2-c3e7820d4bac",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6c37000f-797d-4268-835f-8506f7842406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba5ab6c-1313-4980-a90d-54ed0c75935f",
        "cursor": {
          "ref": "60c24bd9-5277-4c82-9c93-8773f46cd718",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f24cbc7a-dc72-407c-b5c1-b89ea21c8118"
        },
        "item": {
          "id": "4ba5ab6c-1313-4980-a90d-54ed0c75935f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "72a5f2ad-a88b-4e28-8c77-85525d36c893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff711c1-f866-4c51-884f-e8267403ae3b",
        "cursor": {
          "ref": "a05cc0e2-68ca-41da-b418-09ba9106e029",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f8b01851-e52d-4e17-849f-c4bbd1660a67"
        },
        "item": {
          "id": "bff711c1-f866-4c51-884f-e8267403ae3b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d01dc7b3-ce33-4bfc-a39a-490e34db14f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c32d417-5c96-4389-bc3e-caea9f21cfba",
        "cursor": {
          "ref": "96324685-c1f7-4c89-8874-903973a64135",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6da71a34-c32d-4808-b857-3c2ccee50b3e"
        },
        "item": {
          "id": "8c32d417-5c96-4389-bc3e-caea9f21cfba",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dc3c59fb-97cf-42c6-9653-691ee36d0d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf00469-19d4-4d14-ad10-155aab68c205",
        "cursor": {
          "ref": "fb9a9aa7-b165-43f6-a9c8-10518747801a",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "749bbf84-9d55-49e9-91ef-0b4ba44ba07d"
        },
        "item": {
          "id": "9bf00469-19d4-4d14-ad10-155aab68c205",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d5f122c5-4cff-4bc5-b476-5a5319c75648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c22eda-6433-404a-bd38-90187cdec1d9",
        "cursor": {
          "ref": "4a904695-0db7-4fc2-919e-b40e6ae36396",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "194f844a-a206-4ab2-9e77-0adb841d05d6"
        },
        "item": {
          "id": "39c22eda-6433-404a-bd38-90187cdec1d9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f1ea8aa2-43a8-4943-8ca5-8e0982c81643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d8d5f2-760d-4695-af38-c15f3e87ac7a",
        "cursor": {
          "ref": "204c0a44-cdf8-4761-838f-b23afaf65e22",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4a15cdbd-3d59-4b7a-addb-105ba231b8f6"
        },
        "item": {
          "id": "e9d8d5f2-760d-4695-af38-c15f3e87ac7a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b53c4c56-7b87-456a-be24-fc9ceca06fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465e7532-8531-4e45-b9c3-f24ddf4b3cb0",
        "cursor": {
          "ref": "13fe7409-4625-4e3e-b977-053464fd0dd6",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e519b1a8-b0f6-4d7b-ae57-8d6dc95faa9b"
        },
        "item": {
          "id": "465e7532-8531-4e45-b9c3-f24ddf4b3cb0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "552f12ab-acd9-4dac-b736-44ed56ea507f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a16250-bd60-4205-aa7b-2ffc81cdab68",
        "cursor": {
          "ref": "ea965050-1e4a-428f-bccf-d2b38229cb2b",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3013edbc-78af-48a8-921c-449a4b544732"
        },
        "item": {
          "id": "d9a16250-bd60-4205-aa7b-2ffc81cdab68",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "67257f21-11b7-4a38-84aa-eff31b8a39ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ce9008-342e-42cf-9590-d01797645884",
        "cursor": {
          "ref": "c1d2e741-fe03-44c2-8637-2aed8ace81b8",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d63b4adf-aeb3-4b51-9c59-96be7f0e50bf"
        },
        "item": {
          "id": "89ce9008-342e-42cf-9590-d01797645884",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7b5827f8-2314-459a-82da-0fada4b3d152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ba64ee-f3fc-4129-9ede-64b29b477f9a",
        "cursor": {
          "ref": "71d05e15-bd90-46c7-abae-2d29fe1b0e3e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d7c41c68-254e-403f-8300-210733898820"
        },
        "item": {
          "id": "40ba64ee-f3fc-4129-9ede-64b29b477f9a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "58beda09-ed92-412e-b806-9080d52a7f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f88db0c-299e-45bb-92a7-676d0a074867",
        "cursor": {
          "ref": "f78e3d2a-2b15-44fc-ad6a-7c430a1346de",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "95b1e393-51e6-4424-8c9f-e4d8ff6546bf"
        },
        "item": {
          "id": "1f88db0c-299e-45bb-92a7-676d0a074867",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8521735a-4424-4f4b-ac24-ecaea0f797a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd1c68a-5367-42a3-90bf-31e5559e2f52",
        "cursor": {
          "ref": "8056cd11-ef52-4364-862f-b06fbe086bec",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c514efe1-2564-439e-85b6-4c5798ed1812"
        },
        "item": {
          "id": "9fd1c68a-5367-42a3-90bf-31e5559e2f52",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fd93a4fb-6630-493f-8d79-abe4f343784c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a00c323-9887-4726-811d-996c230cb335",
        "cursor": {
          "ref": "81a5cc0a-1937-43db-bb7c-35a6210a6c10",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "786298a9-2f1f-430a-b92f-10c644a306b7"
        },
        "item": {
          "id": "0a00c323-9887-4726-811d-996c230cb335",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3a173ed6-73c4-400c-91e5-834a39005e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52956369-c04e-4638-adb5-1cb732a8c3c4",
        "cursor": {
          "ref": "572cc08d-665e-4ed5-8399-55e85d998d14",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "34925154-bb04-4a0a-8097-cce7b9f3d980"
        },
        "item": {
          "id": "52956369-c04e-4638-adb5-1cb732a8c3c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fe76f26e-617d-4e88-9fe0-8bfe0aff02b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a181ae97-92fd-40e2-bd2d-f99643c58462",
        "cursor": {
          "ref": "28c643bd-7387-43fd-9cc6-fb6b7f139f98",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6c55e4f7-2a8d-4dbd-8e3f-de9b51225a5f"
        },
        "item": {
          "id": "a181ae97-92fd-40e2-bd2d-f99643c58462",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "95894443-b1f3-4133-b8c3-d745f3b9b049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3019a079-e5aa-4a49-ad96-e0007611b159",
        "cursor": {
          "ref": "25e21ef5-5d19-4609-bd64-8704be594901",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f723b2f6-db1f-4139-8cff-d18448c83686"
        },
        "item": {
          "id": "3019a079-e5aa-4a49-ad96-e0007611b159",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "912faf72-5ac7-4d9c-ad8e-0b2825931cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a153cc8a-e952-4b6c-b7ca-d247c18454e6",
        "cursor": {
          "ref": "9bda8727-33d2-46ee-ac17-0f800d2ad9b2",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c7827cbb-6b38-4d33-800c-06a32deee12f"
        },
        "item": {
          "id": "a153cc8a-e952-4b6c-b7ca-d247c18454e6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "25296972-6606-43b2-82a8-6d8634aa851d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19991b04-a783-40d8-ab3b-24a47779d6b1",
        "cursor": {
          "ref": "32250b81-5463-4327-9f66-0dc9dea1e1c0",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1000de20-efc9-4085-b807-5974283b0453"
        },
        "item": {
          "id": "19991b04-a783-40d8-ab3b-24a47779d6b1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1b6739e1-49f2-458d-9a93-60fc9e209435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e55b99-cbb8-4e32-b607-5401706ecfda",
        "cursor": {
          "ref": "79ffb393-d623-47a7-837e-85197eef86e8",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c8f5b388-b349-403d-bc6e-ad49cd5e4134"
        },
        "item": {
          "id": "b0e55b99-cbb8-4e32-b607-5401706ecfda",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e603a4e6-5914-4143-bae1-acd59815e95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896ce4bf-9e67-40e2-be78-7cb59fa266ef",
        "cursor": {
          "ref": "12e30695-8504-41dd-a629-8332dd75dd90",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3003828d-5b04-4a24-9a58-90b5f0368554"
        },
        "item": {
          "id": "896ce4bf-9e67-40e2-be78-7cb59fa266ef",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "13cfb339-1aa6-4296-9a5e-88eb0f41d83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f5979c-3d6a-4be3-9b91-230b722d0dc6",
        "cursor": {
          "ref": "742bf0fc-a387-4d60-ae81-ff3c0370367e",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "77db1562-e1d9-4f01-8b41-45027a5d3db4"
        },
        "item": {
          "id": "f5f5979c-3d6a-4be3-9b91-230b722d0dc6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f39f9b21-b8f6-41c7-b4dc-3d5a754ac530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462a7ada-39f8-4194-9c35-974d66bf0085",
        "cursor": {
          "ref": "8e70dbc0-0804-4bf5-aad7-bc5fa3b4dae2",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "24149503-3d08-4271-af56-e74b35741925"
        },
        "item": {
          "id": "462a7ada-39f8-4194-9c35-974d66bf0085",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7a00a22c-9a51-4c65-b5aa-39beab8e9b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "297985ab-e755-4fb1-b4ca-4e9f2d55b541",
        "cursor": {
          "ref": "a4458e9d-39fa-455b-88b4-159dc489e60e",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "569deeeb-1e98-474a-9dbb-abd53384a833"
        },
        "item": {
          "id": "297985ab-e755-4fb1-b4ca-4e9f2d55b541",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "594f5ce1-d407-4c2f-a8cd-9e8d7202dc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6545b43e-f9cd-482e-947e-93a070918f9f",
        "cursor": {
          "ref": "2171c8f2-89c4-48ad-b7d3-94d7f3a45f90",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f470f814-436c-4f57-a2dd-bad89929905d"
        },
        "item": {
          "id": "6545b43e-f9cd-482e-947e-93a070918f9f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5ad40d5a-860a-4b10-854b-53bf65dfb795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4e2b8a-03ba-4c33-b98c-daf55665d98a",
        "cursor": {
          "ref": "9398b4f2-78fe-495b-a52a-4ca884866dab",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "09f817eb-7bcc-414d-843c-3576c8856da4"
        },
        "item": {
          "id": "aa4e2b8a-03ba-4c33-b98c-daf55665d98a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "93b48ded-abc1-401c-937b-a2b084da00ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c841f9e0-ee46-4611-a34c-156bdb783775",
        "cursor": {
          "ref": "ac9967b1-c689-4f40-a31c-37b217b1570b",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f72ef917-0003-4da0-ac0d-26ed0098ccea"
        },
        "item": {
          "id": "c841f9e0-ee46-4611-a34c-156bdb783775",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7b0c6909-0eae-484b-b643-21f7874aae52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9cc53c-6d9c-4ab0-82f7-d0cceb37a8e2",
        "cursor": {
          "ref": "33b389b2-922d-49a2-a258-8e60c1aef2b9",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "afc2f415-9260-4c84-93f6-89dd179b17a0"
        },
        "item": {
          "id": "4f9cc53c-6d9c-4ab0-82f7-d0cceb37a8e2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b20771cb-048b-4517-ac7c-c07db520f1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9cf9db-0386-4e19-a2d7-316f586e991d",
        "cursor": {
          "ref": "6d4a8f27-18f0-4c3e-8332-c0708dc1967e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b89827e9-8d27-4c8b-b7d9-b29b625f9546"
        },
        "item": {
          "id": "ee9cf9db-0386-4e19-a2d7-316f586e991d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0a706022-38b0-4861-91d1-87c333ced10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8502d702-612c-4c87-ad82-2769b8828965",
        "cursor": {
          "ref": "b8f09fa0-7250-4f6f-b805-d0ded49f7aa2",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "933ba039-a4ff-4ffe-86ee-08402f1a482c"
        },
        "item": {
          "id": "8502d702-612c-4c87-ad82-2769b8828965",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a1e2bc7f-94da-4529-84f6-72e171a1508c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5360e6b-3acd-4d90-aa40-763fd4a2bf7f",
        "cursor": {
          "ref": "02ba4e4c-accc-4262-94ea-1aa719648ef7",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "35893bbd-993e-4d3e-aa21-c2bfbfc531f6"
        },
        "item": {
          "id": "b5360e6b-3acd-4d90-aa40-763fd4a2bf7f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b3e6c843-5596-453a-8e91-d564fc7767ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4e7432-b79c-4263-a2ce-83e6337c6ed5",
        "cursor": {
          "ref": "5fe0effc-116d-4d55-bb46-9a8efc476dcf",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "08abcb8c-baa2-44f0-887e-cf76975d5601"
        },
        "item": {
          "id": "8f4e7432-b79c-4263-a2ce-83e6337c6ed5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5a5f7b28-6823-410e-9ac7-fc7d981ac7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c5ac4c-591d-4c19-a823-47613e3ad4ff",
        "cursor": {
          "ref": "c669a791-9c81-4cb2-92d8-de7c8381faa6",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f5d72a6c-2327-4eb3-a8ca-34addc280aba"
        },
        "item": {
          "id": "07c5ac4c-591d-4c19-a823-47613e3ad4ff",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8de57481-2246-4895-82f0-501ec4a6f644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a39f6ac-8023-4f94-a32d-8aae7c70da2f",
        "cursor": {
          "ref": "4c08ddf9-c066-492c-9afa-038fd2d90b38",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "042b756f-cc1b-4044-93fc-743b8e4975ad"
        },
        "item": {
          "id": "8a39f6ac-8023-4f94-a32d-8aae7c70da2f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b07f8074-d516-427b-907a-a5a7f72da4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6055f781-baed-45ad-bd50-850089b66a3e",
        "cursor": {
          "ref": "342be0ae-00fb-4cbb-bedc-8b3a82381243",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "44dbbfdb-ce15-4e98-8d3e-a3099985eb27"
        },
        "item": {
          "id": "6055f781-baed-45ad-bd50-850089b66a3e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9bdd532e-bdad-4e54-a072-eb2f8c627604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b30a40d-20aa-4b3e-83a6-5219412b983c",
        "cursor": {
          "ref": "01d3a5fb-c2fd-4749-9a2d-fc15a1f7b2b0",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e82f9cd9-10d0-434e-8c77-07cbad781aec"
        },
        "item": {
          "id": "6b30a40d-20aa-4b3e-83a6-5219412b983c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c684d1a4-efff-4922-a4dd-f855f0ea0a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a959779-fe47-40d6-a646-7d1a1292f91a",
        "cursor": {
          "ref": "bb0e1249-b07c-412b-bfce-01c66cfe656c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b5ffba87-088f-45e9-99e3-92d968f84d02"
        },
        "item": {
          "id": "4a959779-fe47-40d6-a646-7d1a1292f91a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9d6b0866-72cf-4e47-a96c-2bddc5bc6f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e1d208-b939-4d70-b9df-dfcd684fcd49",
        "cursor": {
          "ref": "a51a97a2-c098-4905-be8e-2ca015600e5f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "72442ec5-9f3d-4b2f-a739-39b746719a45"
        },
        "item": {
          "id": "23e1d208-b939-4d70-b9df-dfcd684fcd49",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6141c873-49a0-4cc4-9178-ed8deac4f714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bc0c8a-8dd1-4690-bf51-d251bcefcd87",
        "cursor": {
          "ref": "020004eb-de1d-4fc5-873c-edf2dad2675d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1a1547c3-28c7-417b-bc1e-7ee52c2e75f1"
        },
        "item": {
          "id": "09bc0c8a-8dd1-4690-bf51-d251bcefcd87",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "53e660f8-3ff7-4ce4-996a-c4eabd96cb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f53fc7-ce84-4b14-8310-4c98eec2d1c1",
        "cursor": {
          "ref": "80c41286-6a8d-409a-87df-0054a9b9afc2",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "57f69e9f-4def-4144-b64b-58dc9858e791"
        },
        "item": {
          "id": "f7f53fc7-ce84-4b14-8310-4c98eec2d1c1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c1d62058-40e0-4c9f-a23b-9e52aafcbbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ed92e0-dfcc-4c7d-a30d-7d64a19b3a9a",
        "cursor": {
          "ref": "563d755d-83d1-4ac5-a3f0-29a8451f57d2",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "23cd0e00-401d-4bd4-a9c5-d60e299d7f73"
        },
        "item": {
          "id": "f6ed92e0-dfcc-4c7d-a30d-7d64a19b3a9a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "741d3933-7cab-4bb0-af50-2b60debe4ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f9c235-3332-458b-b290-d8c4ee630e1e",
        "cursor": {
          "ref": "d672149f-87df-4626-a17a-c2f6137d137f",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9571638e-ad17-4452-b538-612f7231cbf5"
        },
        "item": {
          "id": "c9f9c235-3332-458b-b290-d8c4ee630e1e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0deea1bb-4b5d-44d9-8ea2-158d270a3657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d70eeec-8cab-4544-9583-b82e86a14e6c",
        "cursor": {
          "ref": "8f550183-16f3-471f-b2cf-f472bf27efcd",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ad9a8871-14cc-4054-bd29-e9a416518fd6"
        },
        "item": {
          "id": "7d70eeec-8cab-4544-9583-b82e86a14e6c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4e62e71a-b829-4b23-95a2-df1339a0aef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd39a787-7247-477e-a623-0fcfa2c53f0c",
        "cursor": {
          "ref": "229fcfe5-5a89-4f9e-b6a8-3511ecfd957e",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a4874ba7-b390-4354-a617-13c1b527d06a"
        },
        "item": {
          "id": "fd39a787-7247-477e-a623-0fcfa2c53f0c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a6a634be-8dc3-4e00-ad9c-55b516bd3436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a046df65-2926-48df-a91c-20143984eee8",
        "cursor": {
          "ref": "e4719a4f-2a92-4e37-9dee-c767fe565489",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8a3169ff-870b-4937-905b-fcc24f098c05"
        },
        "item": {
          "id": "a046df65-2926-48df-a91c-20143984eee8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "053f0c48-499b-4243-9ec6-df11c320b723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8d1dea-5b9f-4787-b0ba-b81201c30858",
        "cursor": {
          "ref": "1309388f-88e5-4264-a382-0731c05514a2",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d0ae22f6-ced1-4a8b-b5c9-d03bfe73249a"
        },
        "item": {
          "id": "2f8d1dea-5b9f-4787-b0ba-b81201c30858",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "91c5fc2e-449a-4c16-8f1e-ef07d50211c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401a1ed6-aba1-4200-aa62-9dcf694bd217",
        "cursor": {
          "ref": "25743733-8eed-4f2f-a55e-2fe58768be34",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d2d26881-8e65-42f0-aee0-d5b8e9527b17"
        },
        "item": {
          "id": "401a1ed6-aba1-4200-aa62-9dcf694bd217",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "30bccb4c-cca6-4c55-8658-f565c0e95336",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126418cb-8579-4ac7-9ecc-fc4657436b49",
        "cursor": {
          "ref": "08ed1065-a2e2-4d22-b413-7b5c5400a3e9",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4d9a2872-6799-447d-91ae-f3535ff1b123"
        },
        "item": {
          "id": "126418cb-8579-4ac7-9ecc-fc4657436b49",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c05dd11c-1d49-469b-b84b-45e6fa22673c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "2ca49dc5-fc7b-436c-9e52-56954f8e9d9d",
        "cursor": {
          "ref": "20a97cce-c99d-4a98-83b3-59e50f0e84b1",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "75783170-a55b-4733-8634-b1cea5e11333"
        },
        "item": {
          "id": "2ca49dc5-fc7b-436c-9e52-56954f8e9d9d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d329e04f-23b5-4520-a2ee-8f8f8c8fda41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "e572de14-5e6c-4637-85a9-798ff903bd83",
        "cursor": {
          "ref": "52903f92-f8da-49ad-9391-0d9a9b4b6838",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5b18a673-cf69-46d0-a138-71b8995416b3"
        },
        "item": {
          "id": "e572de14-5e6c-4637-85a9-798ff903bd83",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "53605aeb-2abf-4192-b061-d04b4fb1abfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1dd1abd7-cbc8-4d27-8ded-c028c97ba313",
        "cursor": {
          "ref": "2143b268-62bf-41d8-b5e7-e2b176ce3989",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "60904024-096c-44d2-ac7a-746ac9ea20bf"
        },
        "item": {
          "id": "1dd1abd7-cbc8-4d27-8ded-c028c97ba313",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e6a2ebbd-6834-411c-9425-8cf63fdbfd33",
          "status": "Created",
          "code": 201,
          "responseTime": 4912,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a37fad-3fe9-424a-9d07-43cae5b02dd7",
        "cursor": {
          "ref": "544a1e3f-3b9e-4689-bcd4-fdf5bbd184f1",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "37908971-626e-4aef-8e85-04ee6c766138"
        },
        "item": {
          "id": "04a37fad-3fe9-424a-9d07-43cae5b02dd7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "29b7b7d2-061b-4101-a91a-bf50daf71bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "4aa96fda-c3a7-4074-bffa-88dde1e1f929",
        "cursor": {
          "ref": "66879f6c-e7b6-4ec8-a1fa-918f43c6d560",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "84487578-cf1e-4d50-b3da-7e347319e523"
        },
        "item": {
          "id": "4aa96fda-c3a7-4074-bffa-88dde1e1f929",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6a3d02f4-cd95-4c92-906e-ae353985327d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "7f399411-a16b-40ec-b370-f2ee0965fd95",
        "cursor": {
          "ref": "af5ccbb3-1e9d-41bd-9247-d49370d81377",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "45965dfd-fbde-4c97-bbfe-e1e6fb661e91"
        },
        "item": {
          "id": "7f399411-a16b-40ec-b370-f2ee0965fd95",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c29a6951-3d9b-4042-889d-0e35183d11cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b215f7-98ef-48f4-ad1f-88a9151d7cfd",
        "cursor": {
          "ref": "084f0f60-bc62-4cf5-a5ed-eb71a3b00ccc",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c3aec910-e499-4a7d-a732-2bacc0a3e908"
        },
        "item": {
          "id": "45b215f7-98ef-48f4-ad1f-88a9151d7cfd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "92ff4c2b-d897-4979-8820-742812dc9321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c143fe-8247-47ab-9397-68ea9f28280b",
        "cursor": {
          "ref": "5f00a3c4-3544-44d4-a8a5-d32c4d573150",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e57a0bbd-01a5-4b56-a964-2ad56f440b04"
        },
        "item": {
          "id": "a0c143fe-8247-47ab-9397-68ea9f28280b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e8b2307f-f132-41f3-9d4b-785b7ce7b24c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f18583d-e692-4369-b7cd-22f070d4836f",
        "cursor": {
          "ref": "9cf6963f-c0f2-422b-9424-9356af2ce1d3",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1fca9ff9-4ec4-41ac-8a42-c108e920eb11"
        },
        "item": {
          "id": "7f18583d-e692-4369-b7cd-22f070d4836f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0595b9f4-8c50-4dd5-986b-b4908225dc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57920910-afae-4ede-898a-9281ddee8ad0",
        "cursor": {
          "ref": "55ba7000-5f73-4a4f-94fe-4bd2e5712510",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2f5641d8-84c4-4008-8a31-6c9b984a30b8"
        },
        "item": {
          "id": "57920910-afae-4ede-898a-9281ddee8ad0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c353aa32-c226-4254-ba49-082613bc2ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c2ac76-3ebf-4cb6-97bc-0fcbf847ff2a",
        "cursor": {
          "ref": "fa5d6c04-6da7-454b-a3da-c6da571489ad",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8f59edb1-edf1-4bd4-93d9-8a991ac3e826"
        },
        "item": {
          "id": "27c2ac76-3ebf-4cb6-97bc-0fcbf847ff2a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5bca9a86-a6e5-4572-8654-eac5cf423541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c44ee9a-6fc6-4bbd-87f7-4836a2675833",
        "cursor": {
          "ref": "7d6e91c8-6229-440d-8aff-96bd2235d454",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "160d1a9f-d493-482e-84a9-491080c27c82"
        },
        "item": {
          "id": "9c44ee9a-6fc6-4bbd-87f7-4836a2675833",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "511f081a-1c26-4b5e-ad65-8b3949ff1774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd255503-ded5-4c28-88e8-203bf171ad72",
        "cursor": {
          "ref": "a2e24077-5c2f-40d0-b1a8-d8214c3b235f",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "57b8ff88-a245-497b-b8c4-7a31f159f8d1"
        },
        "item": {
          "id": "bd255503-ded5-4c28-88e8-203bf171ad72",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8059f334-21b2-44bf-b852-2ca20d68db1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab09fd8-edba-462b-97a7-5a59d43f9b9f",
        "cursor": {
          "ref": "d311d038-c415-4b64-9b1a-b45dac906259",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dc247e52-bf7f-4f01-9029-a6d038c7637b"
        },
        "item": {
          "id": "eab09fd8-edba-462b-97a7-5a59d43f9b9f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1855dc15-d6fd-4f20-bbf6-8cd541ef8683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f864cbc6-7e75-4578-b23b-3e18d0e6e08b",
        "cursor": {
          "ref": "0b17b92c-b3ed-4700-8b1d-6b077b3f5f3f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e9929e5a-03ea-428d-9f91-e4ed356dd5bf"
        },
        "item": {
          "id": "f864cbc6-7e75-4578-b23b-3e18d0e6e08b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c6573776-1f7f-4df4-b3af-22506084615d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412d77ac-2584-4d22-9436-8596a2f9f054",
        "cursor": {
          "ref": "ad6ab908-adb9-413b-b3a3-9ba426fba8cb",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b337eaaf-1a8b-4be2-be02-3906a5482798"
        },
        "item": {
          "id": "412d77ac-2584-4d22-9436-8596a2f9f054",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fa93a5d8-c051-482f-9550-e06bbc665741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d24ab1c-7d21-4252-b262-935ae753a73f",
        "cursor": {
          "ref": "1778e226-a9a8-453e-93a9-7955622f85a2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b406e118-3343-40c9-a527-3540d62a239c"
        },
        "item": {
          "id": "0d24ab1c-7d21-4252-b262-935ae753a73f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "076dafe9-b9ac-4286-9b78-25bde19c84e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5228379b-be90-4a2e-bfdf-98834c586e01",
        "cursor": {
          "ref": "c6d6a5d0-cf2a-4a97-bc97-72d4591a912a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "89a0b1f9-7b5d-4cf2-af11-49133c15f07c"
        },
        "item": {
          "id": "5228379b-be90-4a2e-bfdf-98834c586e01",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b9e21452-3175-49f3-ab44-7ef19e9be973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e3d7ba-4606-411f-8055-b42d0443bd1c",
        "cursor": {
          "ref": "6bd7e297-73ac-42c8-b16d-ae8badf3e780",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2d94b41e-2b2c-445d-95f0-118dad31dd44"
        },
        "item": {
          "id": "51e3d7ba-4606-411f-8055-b42d0443bd1c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7a39e071-b173-413c-be42-6d35f5d72486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2beec8-b687-49cb-8fb5-25795d8e0ced",
        "cursor": {
          "ref": "dd73357e-a7a6-4ad6-96f9-f20164f28ca4",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "158670df-c938-4ade-92a0-be8339bd5dc4"
        },
        "item": {
          "id": "8e2beec8-b687-49cb-8fb5-25795d8e0ced",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "52bed3c1-3db8-4736-8d72-fa1d7b8884a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a88cee-47c6-4aa0-aa67-8d86bb365b48",
        "cursor": {
          "ref": "6944cd9b-6e2b-4220-924b-5c898a5644cc",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d635fd29-32a4-44d6-9bec-c8158d462772"
        },
        "item": {
          "id": "41a88cee-47c6-4aa0-aa67-8d86bb365b48",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7b8a3082-860a-4e80-aae5-9687a22b655e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f67b034-877a-459c-a8a9-717325b88a60",
        "cursor": {
          "ref": "aedfa8ce-1adc-4890-8c02-1818320a3c5e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7e1b6e90-d43c-4b4f-8765-9eaf3e3f11e2"
        },
        "item": {
          "id": "2f67b034-877a-459c-a8a9-717325b88a60",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1efc36bf-2262-4278-a5aa-60d2b5a9ee10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fc164e-558c-4aa5-a2e5-0511270bf606",
        "cursor": {
          "ref": "8a224307-0ad6-469d-a243-cc15f314ea59",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9e7f6af1-a9f0-4914-8364-4425395f8b22"
        },
        "item": {
          "id": "e0fc164e-558c-4aa5-a2e5-0511270bf606",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e869f65f-77cb-4076-9bc9-9c6ba9b6c6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0709ffdd-0bef-4e54-8833-de71591c4332",
        "cursor": {
          "ref": "b1d862d3-3e63-4660-9dae-44283bfda562",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b2f1dc87-7971-443a-87b4-464b359d760e"
        },
        "item": {
          "id": "0709ffdd-0bef-4e54-8833-de71591c4332",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9850f074-e0c8-4f81-be3e-1aff6c9bd64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b9bf67-9232-4242-af06-ee9186c65697",
        "cursor": {
          "ref": "603571ef-f033-45a5-8534-fa3a400eb0c1",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2548744b-a6ae-426b-89d5-aec103d24308"
        },
        "item": {
          "id": "15b9bf67-9232-4242-af06-ee9186c65697",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c8c3e44b-db87-446f-a9bf-e04b64f88823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a667aca5-20c9-4fff-bb3c-9c176a8319e0",
        "cursor": {
          "ref": "4413545a-9324-42ca-9537-35ef5218c30d",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "82566d8b-4b52-4c71-bea1-8c5c29774620"
        },
        "item": {
          "id": "a667aca5-20c9-4fff-bb3c-9c176a8319e0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5e2a3d9f-36f6-4d5a-b0f2-f2e8d1ba02d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9d60f7-b4bd-4b45-bbea-5a20d48b8c20",
        "cursor": {
          "ref": "752dae6e-e498-4a4b-b242-eb43d4ef0c71",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3dca1ecb-db54-4f57-80f7-8071df8cc95c"
        },
        "item": {
          "id": "1b9d60f7-b4bd-4b45-bbea-5a20d48b8c20",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a92d252f-5d48-472f-8fba-a0a5bb5f2469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b569f50-6fc3-474a-8a3d-6556daf3703f",
        "cursor": {
          "ref": "ddc3c567-d58b-4a52-b830-1c0b601f4dec",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "51a5ffb0-e38b-4e28-893f-231a26b10294"
        },
        "item": {
          "id": "7b569f50-6fc3-474a-8a3d-6556daf3703f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b667e7a8-6988-4837-8ac3-a55a824fc550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82652074-a2c9-419b-9eef-09a06608049f",
        "cursor": {
          "ref": "117af07b-8615-4075-8cf9-9bc4a39e00fb",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ccbdccd5-91a2-400d-9dfc-8c617ff22922"
        },
        "item": {
          "id": "82652074-a2c9-419b-9eef-09a06608049f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aced4da6-7a63-4b19-b984-6c3650446aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f55921-a531-47e2-8852-37428392d0ab",
        "cursor": {
          "ref": "586b2bf1-aa4f-4516-a3cd-c6195a54f250",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e0f60c9e-42ad-4825-9356-8cb672c0ed76"
        },
        "item": {
          "id": "38f55921-a531-47e2-8852-37428392d0ab",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7ab72096-0f39-4e32-912b-d6d4292d1fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cda37d-9f38-43a0-8220-ef56bc04bd54",
        "cursor": {
          "ref": "b8186ca4-ec09-4552-9458-faffacf363d5",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e57b2597-9127-46cc-b5d4-792f40d6b810"
        },
        "item": {
          "id": "c0cda37d-9f38-43a0-8220-ef56bc04bd54",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4eb784ba-1e30-4f20-b13d-bf2c1428dd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b52851-7ea4-449d-af21-98c16f435f68",
        "cursor": {
          "ref": "3a22ff55-91d9-43ea-9213-1e8cbfa72786",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b1f1022a-fc35-46f2-bd41-48d7f81419df"
        },
        "item": {
          "id": "35b52851-7ea4-449d-af21-98c16f435f68",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "530a9343-3b93-4577-b598-df32e80be0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9c1a1a-4319-4698-a8fc-f6e749ec8e7b",
        "cursor": {
          "ref": "3e0e0a6b-5973-423f-8477-0d8129a76b2d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "40fd4301-4d4c-4846-a7b5-44498eb23e7a"
        },
        "item": {
          "id": "db9c1a1a-4319-4698-a8fc-f6e749ec8e7b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "afa49143-c826-4a98-84a6-d68eb24b3aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cc0432-ec8e-44c6-b8f7-75a0b64750d8",
        "cursor": {
          "ref": "089c7249-b612-4f5a-8e12-035ce4be0ce3",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2adeacd5-2c5b-4df6-b4b0-50b659c3b994"
        },
        "item": {
          "id": "11cc0432-ec8e-44c6-b8f7-75a0b64750d8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7f8e4bdc-2bd0-4828-b3ed-5b3265e85975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b016d550-b44e-4501-95b7-3c8597bc63c9",
        "cursor": {
          "ref": "48d1ef59-d4b8-49ea-96db-2d43158fbf9c",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "62f3d720-cf72-4a8f-afe5-ed83f72be495"
        },
        "item": {
          "id": "b016d550-b44e-4501-95b7-3c8597bc63c9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9b70177e-033d-4ec0-9cb0-87c60a4d3774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59efb67b-25cd-4239-9792-288352cb5354",
        "cursor": {
          "ref": "22391b38-113a-478f-b9fe-76769b10ac16",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e4ff7cd7-7b4e-4c9d-a91c-577cce729929"
        },
        "item": {
          "id": "59efb67b-25cd-4239-9792-288352cb5354",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc3ca391-d34c-44b3-b042-31afc003d73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19486966-3c98-44d9-9b44-f13ea4892145",
        "cursor": {
          "ref": "989abebd-2fee-41b8-8fbf-940f72f5cd88",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "145e1725-4209-4d0b-8dcf-bdcd2bca2087"
        },
        "item": {
          "id": "19486966-3c98-44d9-9b44-f13ea4892145",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "507cd9d8-3200-47e3-91de-833b0bd170b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38113b2-4d95-4ceb-84bb-445c40397584",
        "cursor": {
          "ref": "61599b7e-1890-43c2-af33-9865c693dfad",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0735e310-afa4-4230-9833-fc302d08e093"
        },
        "item": {
          "id": "e38113b2-4d95-4ceb-84bb-445c40397584",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a4775e77-af71-4f4e-baac-4341ff486289",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2780deae-6b90-439c-a6a3-6cd920b188d9",
        "cursor": {
          "ref": "06a2563f-c226-44e3-8b9d-fbba23188ed1",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "131ac298-d6f3-4613-97e5-fa19ddb1e578"
        },
        "item": {
          "id": "2780deae-6b90-439c-a6a3-6cd920b188d9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c73fa08e-a5ad-44ee-8e33-a1fbf6aca2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7064836b-41de-40cc-b304-db873c438777",
        "cursor": {
          "ref": "9f385fbc-df7c-4ddc-8fac-86e1f59fa66a",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5b70d9f8-2104-49e6-940d-52a3aa9dd7ad"
        },
        "item": {
          "id": "7064836b-41de-40cc-b304-db873c438777",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e8e1addf-5d69-4760-9348-1c3fa31a67e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fe0bfb-5cd4-4a18-a527-f24753b47a43",
        "cursor": {
          "ref": "9fce18e3-b701-41d0-8989-740709c757cd",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cd864a2c-680e-47d8-bb61-bdb82c2d22eb"
        },
        "item": {
          "id": "e0fe0bfb-5cd4-4a18-a527-f24753b47a43",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ca0598a4-0562-45b1-a02a-c257c5fe0632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff05ca9-d7da-4bd2-a998-29fbbbce3bd7",
        "cursor": {
          "ref": "c5637560-7e74-4f94-bac1-ee84b58cc149",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c16ae32a-f793-47d5-8f0c-4265255166db"
        },
        "item": {
          "id": "dff05ca9-d7da-4bd2-a998-29fbbbce3bd7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dad23cc1-2858-4fd3-a5d2-337a7e0c4a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b973696c-34a0-4e7d-82c3-01f3f21c2a32",
        "cursor": {
          "ref": "a4feefab-96b4-42c8-ba5b-6677de0a3d3d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3fcb3f6b-68b3-4bbb-bcb6-6916a9e2b30e"
        },
        "item": {
          "id": "b973696c-34a0-4e7d-82c3-01f3f21c2a32",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "75ba2a67-2ba7-4aae-a740-6affad56011e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ecafcb-9251-44f5-a26c-cd47b923ee47",
        "cursor": {
          "ref": "547bda01-a86d-4c1b-bb89-afbfa3208e89",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d6a7af3e-80ba-4664-9eda-5c1519a972cb"
        },
        "item": {
          "id": "34ecafcb-9251-44f5-a26c-cd47b923ee47",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e4d703fe-c1c8-4101-8335-d380d0ee944d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b254b885-747e-4758-88d8-565c0c0f8943",
        "cursor": {
          "ref": "f42bf388-37f7-4c11-a4d0-69d47e84fe3d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f599e465-9ca5-478b-8a91-a6da83a1cd56"
        },
        "item": {
          "id": "b254b885-747e-4758-88d8-565c0c0f8943",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9a2f97fd-65da-4e73-92d9-7a45e054f4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c26842c-3952-479e-aaf5-fae6b064064a",
        "cursor": {
          "ref": "98f5d09f-c79a-4e11-b7e1-854fa7afa04f",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d62366ed-6b36-4e18-869a-4a12a79f24fb"
        },
        "item": {
          "id": "9c26842c-3952-479e-aaf5-fae6b064064a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a3c21896-451a-4ab2-a4d1-d60f4db1f4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1667bf-bca1-409d-b853-2d3904ef376e",
        "cursor": {
          "ref": "5063d9b1-d0ed-4776-9191-4c306e821085",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "668eed17-55d1-442d-8a97-a6d6ea3ebc9a"
        },
        "item": {
          "id": "5e1667bf-bca1-409d-b853-2d3904ef376e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0b4fe9c3-2161-41d1-bce8-f5e2adfb0bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b83598-65ec-474e-879a-c12ff5e8a01f",
        "cursor": {
          "ref": "24a996c4-e09d-4368-9ac7-7bec9d936692",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "84801e5a-be29-441b-9679-0f91f9c756f3"
        },
        "item": {
          "id": "00b83598-65ec-474e-879a-c12ff5e8a01f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5d06c530-c918-4094-a375-9d288f5cbe45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56465d0-d690-41a5-bed3-c5c6a4746a4e",
        "cursor": {
          "ref": "3b1abd84-1d27-433e-8a61-5ce896546a37",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b34a970d-1572-4513-a15d-a9f7f189eb05"
        },
        "item": {
          "id": "d56465d0-d690-41a5-bed3-c5c6a4746a4e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "989880ba-aa6d-4d93-87a0-5621267a510a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa44398-c3dd-4091-8869-947acd9bdd49",
        "cursor": {
          "ref": "24628a2d-ca8d-48d0-b160-cdd0eaeb9faa",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "86cf629e-0768-4e1b-89a7-27caebf13731"
        },
        "item": {
          "id": "aaa44398-c3dd-4091-8869-947acd9bdd49",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5ec70272-67ca-4c43-a15a-e2f8a8003e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d3464b-f0db-401e-949b-5b3542c025ef",
        "cursor": {
          "ref": "7fa80b8b-3cd1-4385-9f76-c7573aa3ddf8",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a393590f-ee1e-456b-a611-1febce2eb930"
        },
        "item": {
          "id": "75d3464b-f0db-401e-949b-5b3542c025ef",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a2cdec19-deee-4068-bd26-acc41f5d4c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa242567-d63f-46e6-b3d0-1aecd45bbd9a",
        "cursor": {
          "ref": "52a7540d-91ed-4085-ad57-8e8074425c2d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0a215d9b-9846-4455-b397-1b48fc963fef"
        },
        "item": {
          "id": "aa242567-d63f-46e6-b3d0-1aecd45bbd9a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a99bc9de-251b-4190-9415-3add71f7a5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07717473-3c82-4477-9c9b-3d3675f7e5b3",
        "cursor": {
          "ref": "62929e9c-16b5-4d08-83c3-3d76067998fa",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5bbeb5fe-6c30-40f0-9dc9-71f104b7f1d3"
        },
        "item": {
          "id": "07717473-3c82-4477-9c9b-3d3675f7e5b3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0f36f983-dd21-4153-b916-aceced402b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca084f4-1655-41b3-a1a2-49828ae9b3e6",
        "cursor": {
          "ref": "a3d3d9ba-7e96-410b-9f8a-0df78550fe1e",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c62226c5-206b-45ee-a7bf-2fd34619cef0"
        },
        "item": {
          "id": "bca084f4-1655-41b3-a1a2-49828ae9b3e6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bbf0252d-932c-48f1-a1bb-f068be69b6a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8111dd-088e-4a32-8558-6dc6146b1579",
        "cursor": {
          "ref": "fea09235-6f3e-4994-9702-6f448573147e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "594e7679-7d2a-4308-ac3f-d02c2217c3d1"
        },
        "item": {
          "id": "fe8111dd-088e-4a32-8558-6dc6146b1579",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "065a93fd-4a67-4e4e-bcb1-648bba5005e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcda914b-9ce2-43fb-a4eb-67c3cf111f22",
        "cursor": {
          "ref": "36b3a42d-1253-4d49-8e89-7d86c172da56",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5d5d61a6-4e10-460d-95d6-b949daa40306"
        },
        "item": {
          "id": "fcda914b-9ce2-43fb-a4eb-67c3cf111f22",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f30bcdd3-a849-4663-93ad-467242256a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8ab938-e661-4686-b481-bf9f9adbc8b9",
        "cursor": {
          "ref": "e36308fa-0623-4a75-af29-8086071b9593",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e2608315-dfb2-438f-a587-baed948e2e61"
        },
        "item": {
          "id": "2f8ab938-e661-4686-b481-bf9f9adbc8b9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b21bdf0d-c3b4-459f-a08c-2ada2b5d3a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1587b2-ec7d-4096-a6e8-9c453689e0c1",
        "cursor": {
          "ref": "9e79cefc-f786-417b-a486-9fb1b5f41859",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d53070db-85bb-4852-bdab-d44fdb73be23"
        },
        "item": {
          "id": "da1587b2-ec7d-4096-a6e8-9c453689e0c1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e051435c-2dc1-42f5-ad15-047b4309deb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaaa46f-3fe4-40a2-b57f-0056347f20c2",
        "cursor": {
          "ref": "f699f3b5-4cda-415d-b876-de8a2ebae44c",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d7f2f021-4a5b-41ce-b06e-d3710c98bd7e"
        },
        "item": {
          "id": "bcaaa46f-3fe4-40a2-b57f-0056347f20c2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "85cdc7d5-52c7-42fc-8a80-85fbb14890db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d55e30-04e2-4097-a4a3-de2392feeb2d",
        "cursor": {
          "ref": "53ca81cb-a211-4576-af02-d5667829051d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f5acae0d-0dc8-4a59-a2ec-c68608093c41"
        },
        "item": {
          "id": "31d55e30-04e2-4097-a4a3-de2392feeb2d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "39e97871-939e-4649-8bc8-8f11393e2bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4794938e-72e1-4182-b8bc-c067a23bef11",
        "cursor": {
          "ref": "f76f70b8-ee91-4f44-8a25-9fccae1d8a08",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "aea85f34-0867-4819-9cc4-aa4e72019faa"
        },
        "item": {
          "id": "4794938e-72e1-4182-b8bc-c067a23bef11",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "04a42b76-3706-4918-93f1-e155a0ceafc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902ececd-e664-4651-bba5-2f86efada777",
        "cursor": {
          "ref": "5ffccc56-dcb6-44f9-b810-64d2f1445a58",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "81adc204-c192-4f3a-9788-9976face0b79"
        },
        "item": {
          "id": "902ececd-e664-4651-bba5-2f86efada777",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "46780219-f3d9-4cc0-bfbe-e38ee4738dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b8e419-e11f-4bd3-a426-ff4321b0a80e",
        "cursor": {
          "ref": "22c33686-6980-4279-aa42-c20a44d3ef5c",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a192d9e0-9444-460d-bd2a-343c60813037"
        },
        "item": {
          "id": "00b8e419-e11f-4bd3-a426-ff4321b0a80e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8fa753dd-b13f-456e-bac7-1b0fb97d0c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5502eaf4-8bb1-4a7b-9f2e-fa05832d2d8f",
        "cursor": {
          "ref": "33797e27-70ad-45c0-8ed4-57080830e3a9",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "260704e9-0bd7-49d6-abbe-79085bce24e1"
        },
        "item": {
          "id": "5502eaf4-8bb1-4a7b-9f2e-fa05832d2d8f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "36275c6f-c1a4-487d-baed-3f1996b738b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bfaee0-a13b-47dd-bdee-73342268b59b",
        "cursor": {
          "ref": "5f30aee0-dd8f-4b2e-856d-be7259d2b4f6",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3b3f6629-4732-4dcc-8a14-91d6f82c83bd"
        },
        "item": {
          "id": "d8bfaee0-a13b-47dd-bdee-73342268b59b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4b7500a2-f62e-4558-94ad-1544e82eee76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6225393-9edd-4a0a-9a27-8bf823e33f4d",
        "cursor": {
          "ref": "289d3f5d-6787-4977-9c0e-a71df63f3a47",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a779f8a8-d4ad-4e3a-8e4c-533c63e33c3b"
        },
        "item": {
          "id": "b6225393-9edd-4a0a-9a27-8bf823e33f4d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "26390e28-9ff3-4931-b274-3ae59f43125a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7940064-3070-4b4c-908a-06d02349b320",
        "cursor": {
          "ref": "26acf376-9ebd-41e6-ba33-f2dabb75036b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cd461a9b-08c2-4586-9557-9f76f13d68d7"
        },
        "item": {
          "id": "c7940064-3070-4b4c-908a-06d02349b320",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9cd77dd4-d1a0-4b1e-bfa1-b15a1e8d15fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05a03cd-8bff-4fe1-8591-a012a8f115ca",
        "cursor": {
          "ref": "f8454698-d669-45dc-a347-5f3e45acc4b9",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b24de2a5-1bf7-4c0f-a4e6-a2bc87595c6a"
        },
        "item": {
          "id": "b05a03cd-8bff-4fe1-8591-a012a8f115ca",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c400a33-9000-4654-9b1f-417e46dbefcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58994e2a-f50d-4bdf-83b5-63b4e67fed97",
        "cursor": {
          "ref": "b1b2adfb-de51-4f84-b4f8-518578581f38",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2190c9cd-63ad-48ea-bd6e-037f60849eba"
        },
        "item": {
          "id": "58994e2a-f50d-4bdf-83b5-63b4e67fed97",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "46851147-a6fd-4567-8f86-13d2d9707c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c551ee-3e21-4bd2-99f4-83e1cfb81224",
        "cursor": {
          "ref": "08af8c21-3395-46e7-b70a-b7366755a85a",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4b4114d5-af9f-4890-9545-bb0f543b7191"
        },
        "item": {
          "id": "90c551ee-3e21-4bd2-99f4-83e1cfb81224",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d3064cbf-8e57-41be-8d32-184f2810741f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e180bcc-a9bf-49aa-be57-8b911419ab2e",
        "cursor": {
          "ref": "25de3ab1-228e-4131-9f58-f49d116f4888",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bdb60367-bebd-485c-8a07-77cf53cb71c4"
        },
        "item": {
          "id": "8e180bcc-a9bf-49aa-be57-8b911419ab2e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "631ecaa1-f1c3-415b-a7f3-91c10ec447ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dafbdc-9938-403d-bb7c-c70317a8292c",
        "cursor": {
          "ref": "23f97308-a808-4bb9-bcdb-dec44a2d6cb3",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f20056d3-f66e-45c7-b15c-1b851ce9833c"
        },
        "item": {
          "id": "69dafbdc-9938-403d-bb7c-c70317a8292c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9dfae883-d916-4f03-97dc-db916cc810d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e8bac1-b31a-473c-a6f7-b2aff1142a42",
        "cursor": {
          "ref": "20fbc530-d729-4550-84ce-581f3421b6b4",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3157b113-3df3-4287-aa17-40c5d1203cd5"
        },
        "item": {
          "id": "97e8bac1-b31a-473c-a6f7-b2aff1142a42",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b14fe3fd-179c-4205-9003-565ebe132aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a21387-31c5-41f8-8967-30b44d5f9bf3",
        "cursor": {
          "ref": "b2d5ae9d-37b0-4d91-9b69-182fa046e3d1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "af3951c4-b4fb-4279-9104-80a8a3e1fea1"
        },
        "item": {
          "id": "81a21387-31c5-41f8-8967-30b44d5f9bf3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f2b9ebdc-f25f-4338-9732-9562c9a88df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dd690f-08b7-4311-a662-8a254ce8e424",
        "cursor": {
          "ref": "2c0ddbca-3ce7-488b-ace8-0ad23ac996e0",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "482ca463-6be7-4d1f-ad1f-9875567d96d8"
        },
        "item": {
          "id": "a7dd690f-08b7-4311-a662-8a254ce8e424",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "67988d7c-9c28-4064-a6c0-55d49e7944ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a20171-1248-417a-917b-f06dd34123a0",
        "cursor": {
          "ref": "12dedad9-832b-42e7-941f-6358a764df51",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bd265017-56ee-4091-be69-1eab132f31d1"
        },
        "item": {
          "id": "35a20171-1248-417a-917b-f06dd34123a0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a1f0f483-05b3-43f2-8080-e153708e3892",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8089a0e1-279d-404f-aabe-143f25c2fe71",
        "cursor": {
          "ref": "22f3b217-c536-4cee-b489-1a8cd7242724",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "eb61922e-a0ae-4bdb-851f-be2607628f1f"
        },
        "item": {
          "id": "8089a0e1-279d-404f-aabe-143f25c2fe71",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3787444b-27d7-4e8a-b295-58bbc630ae3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd13eb7-f65f-4781-9092-a63ac2efc60a",
        "cursor": {
          "ref": "65527235-3885-4f8e-a17d-daebecc759d5",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "41ceb871-4263-4d75-8c52-0c6efd6a18b6"
        },
        "item": {
          "id": "bcd13eb7-f65f-4781-9092-a63ac2efc60a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1fd9a1b6-c155-49da-adc8-b561b9330fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef474c2-1cd0-490e-8017-afc826060982",
        "cursor": {
          "ref": "4e133004-46ae-4945-9c16-7ddb2d54c11d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "17e59f9d-e00e-4a77-b8d9-fcffad303aaa"
        },
        "item": {
          "id": "9ef474c2-1cd0-490e-8017-afc826060982",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "df10447c-a6a2-4d51-96a7-e70f09dce8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a11732a-0359-40d2-a14c-040cc3014add",
        "cursor": {
          "ref": "879c1446-6181-4d09-9479-b99691ef7c3b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f00e6663-14e8-4d30-a333-bf3cc3346b8d"
        },
        "item": {
          "id": "1a11732a-0359-40d2-a14c-040cc3014add",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0674bfe3-7e95-4be8-b7b8-111b7ee5e7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8093d65a-3588-467f-82e5-ada83d4b0b58",
        "cursor": {
          "ref": "96690f4f-1387-4bef-8210-0f2c7bed1cff",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "926c1052-c752-4439-8812-bb96956f960e"
        },
        "item": {
          "id": "8093d65a-3588-467f-82e5-ada83d4b0b58",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7186829d-d12f-4855-8540-b6dac844d225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16218ea3-6fd4-4807-a8cb-170d6a16ce0e",
        "cursor": {
          "ref": "87dcb26a-969f-4621-af38-404b63a677db",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "31740320-7275-4311-90b6-8bd931e1e587"
        },
        "item": {
          "id": "16218ea3-6fd4-4807-a8cb-170d6a16ce0e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f4e271cf-96f3-4cfe-90c2-4343486d6c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15734bf0-c725-4a41-943f-20f8f2713acb",
        "cursor": {
          "ref": "28f8298c-117a-4242-9db0-555126720936",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "47736dae-07c6-4f53-97ff-cc9abb4d774b"
        },
        "item": {
          "id": "15734bf0-c725-4a41-943f-20f8f2713acb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9c6d6fa4-fe15-4def-92f6-9ea3b476f76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a24760c-e10b-4f80-8fd3-1863ca9b7d34",
        "cursor": {
          "ref": "09f2b771-94b7-43cb-a9bb-e702855d0239",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2884fdc9-1bc4-49be-b27b-b0e10baac10f"
        },
        "item": {
          "id": "6a24760c-e10b-4f80-8fd3-1863ca9b7d34",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "98a2a6c6-5cf0-4f2f-aa60-c169ec5c961b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfdaf30-4843-4db7-8a89-2bc0a6911b8c",
        "cursor": {
          "ref": "363ff093-fca1-4cef-a3f8-7788ecb94123",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3911cfd8-1b80-41e8-b0e4-b1f036198998"
        },
        "item": {
          "id": "9bfdaf30-4843-4db7-8a89-2bc0a6911b8c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "295310c9-5685-4706-ae79-402cbe41905b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3411cb65-3ee3-4e2a-9dd8-1ec896297df0",
        "cursor": {
          "ref": "eae61871-2a6a-40e7-8372-f28c6ff54615",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c3cc9cba-c48f-4475-a85d-43f9642f47b1"
        },
        "item": {
          "id": "3411cb65-3ee3-4e2a-9dd8-1ec896297df0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7a60f646-9fee-4183-b87e-657f61a7f863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6258dcab-f437-46da-aa69-180c7ecc99d3",
        "cursor": {
          "ref": "530bc801-375f-43cc-abba-aeea2747f0a3",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3f03447b-fbb2-4f48-925a-aae324b4dc53"
        },
        "item": {
          "id": "6258dcab-f437-46da-aa69-180c7ecc99d3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5a7ab3d0-f9f1-47be-a884-3c134f390324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c25505e-50a3-49e1-a90a-1514fbf1bea9",
        "cursor": {
          "ref": "f3dd61f0-1f79-4036-9516-fa2e844769be",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "00142014-a3be-4560-8041-5585042519f7"
        },
        "item": {
          "id": "3c25505e-50a3-49e1-a90a-1514fbf1bea9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b1105fed-6e2e-49b3-a9d8-ad7259ff1b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073d5931-543d-472a-83f2-e7da99c16519",
        "cursor": {
          "ref": "5b121599-bdf4-4833-86d3-c21287b31c13",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c0a33181-39a4-4a4f-a890-33389e4e8c1a"
        },
        "item": {
          "id": "073d5931-543d-472a-83f2-e7da99c16519",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "82a39d75-fd4b-4042-95a6-85f1d4c0add1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac3bbd2-2900-4e05-98c9-1f0c2663dcda",
        "cursor": {
          "ref": "151e0e56-0088-4da2-9e23-9ab732f0ecc8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9e8d735c-13ad-4d38-9f31-88d05a121ccf"
        },
        "item": {
          "id": "aac3bbd2-2900-4e05-98c9-1f0c2663dcda",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fde734b2-481d-473b-9c3a-411b30205495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4205795b-df75-4d9f-bb08-0ca8da96e20b",
        "cursor": {
          "ref": "8f5d82e2-4216-4bd7-98af-12cdf3674677",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ce20ebbf-c822-410f-8da9-2e877d339a01"
        },
        "item": {
          "id": "4205795b-df75-4d9f-bb08-0ca8da96e20b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d96aaec3-1c87-4f7c-b809-8204dfa3939e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bb146a-1d45-48f9-96c5-d4d61b60fab3",
        "cursor": {
          "ref": "dce0aa01-e79f-4ffe-acdd-2b818bcb1ef4",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f953a347-5794-4292-bb90-75215d97d27b"
        },
        "item": {
          "id": "72bb146a-1d45-48f9-96c5-d4d61b60fab3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a3d70fdf-9aea-4c32-9083-342daf03d7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0b1bb6-6d21-4245-af02-9550e67619bf",
        "cursor": {
          "ref": "602a9f75-273a-48c8-b68b-35cb2c21649e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "44352703-7bb1-4a82-8f57-e8838551ef16"
        },
        "item": {
          "id": "3f0b1bb6-6d21-4245-af02-9550e67619bf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "87a5f262-7990-4e1d-96c3-a1088f2148bc",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "4dd46249-7645-4c43-af05-da1f480d8ad2",
        "cursor": {
          "ref": "1378027e-6164-4c1b-b1e4-2b8fbbafa1cf",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ed914b09-2528-4722-9511-11948fd2b82d"
        },
        "item": {
          "id": "4dd46249-7645-4c43-af05-da1f480d8ad2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "31e3743c-6e98-4e23-a5ce-33a4431d36b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d8c3fc-3d28-4e06-9600-48d36abdbda9",
        "cursor": {
          "ref": "9d00ceb9-5365-4b12-9985-ccef7c95df0b",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bd658023-f4fb-4b38-bebe-cefd29e2bf8c"
        },
        "item": {
          "id": "77d8c3fc-3d28-4e06-9600-48d36abdbda9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c79e303a-507e-4476-8531-9f65f4366a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f20b428-1523-4cd1-8992-65229163151d",
        "cursor": {
          "ref": "0eaea11c-f0c0-45f5-89d2-412777caaef3",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "89f335a1-62e2-45c7-a368-ef89cb31d17b"
        },
        "item": {
          "id": "3f20b428-1523-4cd1-8992-65229163151d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "add51137-baac-4f16-84bf-b2a0bf7e5430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ededf5a3-aa6e-4483-811f-40ff8072abc7",
        "cursor": {
          "ref": "63fe256c-413c-4fc6-bd73-71be86d22b30",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "405460ec-5f59-432a-90ec-efec86731da7"
        },
        "item": {
          "id": "ededf5a3-aa6e-4483-811f-40ff8072abc7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "48316d3c-3223-4366-83bd-a37bb3f478d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cc2ae0-3fbe-4e94-93bd-1384428e8cb5",
        "cursor": {
          "ref": "d9101c8c-12b7-4294-8e34-8d41a7d1353d",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3ce03c34-9c6c-468e-9ca7-f71f60d7d791"
        },
        "item": {
          "id": "c9cc2ae0-3fbe-4e94-93bd-1384428e8cb5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "70ffad42-544d-4902-b8ca-f508aefbb634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a87d68-3097-49ce-bb64-c6aaeea75159",
        "cursor": {
          "ref": "1e4062b3-6d35-46b8-bbdf-7e9282b6c348",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6d70df38-8122-48e5-bc6e-f3f3839649f5"
        },
        "item": {
          "id": "24a87d68-3097-49ce-bb64-c6aaeea75159",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0f5996c7-491c-420c-8c25-16ce7aa1e0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09ad010-e89a-4e52-836f-6b1d40990ba7",
        "cursor": {
          "ref": "f6dac00a-6046-4d60-85ec-845c02be3fcd",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5c2694a7-de1f-4470-83f4-4a2b633f014a"
        },
        "item": {
          "id": "f09ad010-e89a-4e52-836f-6b1d40990ba7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "902b0e35-3d22-440f-a70c-9e570ade28b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd030028-b1c7-4b01-9eb3-e9d867fc6448",
        "cursor": {
          "ref": "c56afdbc-bb91-4580-8626-91998af77ef8",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "81c566d3-d975-4bc4-9da9-5bbc9e657364"
        },
        "item": {
          "id": "bd030028-b1c7-4b01-9eb3-e9d867fc6448",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "744dfc71-6cd5-4cf9-90c2-edd48cbbcc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9c2539-3933-414e-adcc-93ef156b787d",
        "cursor": {
          "ref": "dad7608b-8f3c-4336-adf1-0971ba2cbc22",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b33200e5-cab7-4bed-a910-1d4de8405762"
        },
        "item": {
          "id": "ee9c2539-3933-414e-adcc-93ef156b787d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "aa06603d-be7f-471c-b8b4-95503c8d3bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f499d97-e8be-4698-a89c-050f17614724",
        "cursor": {
          "ref": "a42fe9c6-a744-40ee-9e51-b237e9eb66e9",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e2c45f85-c012-4a18-8d34-a153b83e671f"
        },
        "item": {
          "id": "7f499d97-e8be-4698-a89c-050f17614724",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c3260cfc-be5d-4cf2-b01e-1f1677be3387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9552f4ca-7dd1-4913-8eed-2b6f8f9ab849",
        "cursor": {
          "ref": "8bec9c90-54e9-4877-b8f2-c71793fa2068",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "77bdef2f-5c40-44ce-a951-50ea56ab0795"
        },
        "item": {
          "id": "9552f4ca-7dd1-4913-8eed-2b6f8f9ab849",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cd5710fa-6cc7-44ea-a640-de1815eef9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24603ec3-0705-4b95-a5dd-79c3b18efd50",
        "cursor": {
          "ref": "795e3508-631d-43d1-a47d-ebcb939484a1",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "20f386b9-b3f2-4cd1-8f31-9ed54650e139"
        },
        "item": {
          "id": "24603ec3-0705-4b95-a5dd-79c3b18efd50",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fb5cccb2-6443-4507-9d55-1c661c21ce63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cb8a0a-9c3c-433a-8ec1-5b257bb91704",
        "cursor": {
          "ref": "e8679a55-56b0-414f-a639-ebfd9e4405de",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b9871939-82b3-4cf8-83f1-4ee567357de9"
        },
        "item": {
          "id": "e0cb8a0a-9c3c-433a-8ec1-5b257bb91704",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "26e3bfd6-ea22-463e-8d51-59033d4d9a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0726ce9e-c3f2-46b0-8000-c847b428b123",
        "cursor": {
          "ref": "b844e034-4125-4863-b828-55cec71d7bc1",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "66501307-14c1-48bf-a5b6-41b3df63650d"
        },
        "item": {
          "id": "0726ce9e-c3f2-46b0-8000-c847b428b123",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e796807a-bb0b-4ab9-ad52-1b29262ddbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e995632e-9c42-45c2-ba61-8515764dd275",
        "cursor": {
          "ref": "86c4c028-2527-4c86-b6a5-5022ad992fbf",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e0e1ac27-d82d-428a-a868-0a47c01914fb"
        },
        "item": {
          "id": "e995632e-9c42-45c2-ba61-8515764dd275",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b7fd514b-881f-44b8-9800-fb854d3f3a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ed011f-15ea-42f5-bba1-f27f61038de2",
        "cursor": {
          "ref": "53fb4927-7329-4093-9db6-572ab10beeff",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f3198499-41d0-4cfc-9ed4-522a8bf54121"
        },
        "item": {
          "id": "80ed011f-15ea-42f5-bba1-f27f61038de2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0162f4c4-9ead-40e0-bd79-f2b2221af10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a35fc8a-df64-41a5-9f36-85a9ae33cdd9",
        "cursor": {
          "ref": "c13d2c45-1107-489d-81f5-3d3c9a3c6f9d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0c083322-6d97-4259-9f1b-4ca57a566ab7"
        },
        "item": {
          "id": "6a35fc8a-df64-41a5-9f36-85a9ae33cdd9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bad22920-52eb-474f-8c22-b31e022fd574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81768c9-b938-4e3d-a190-cb5b0f300b70",
        "cursor": {
          "ref": "ceb70b92-abe9-4089-8492-220f01b00217",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "397b8604-5646-4635-ae1a-08a768fabffb"
        },
        "item": {
          "id": "f81768c9-b938-4e3d-a190-cb5b0f300b70",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "065c89eb-03d8-4d55-8f21-1b052aa08fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccf6308-2292-4d31-aa0e-e72f11a3e61b",
        "cursor": {
          "ref": "8d8176c3-6970-4c1e-a7c0-bf40d18632c5",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d9f6dfd7-b8b3-41de-ad8e-cd07a94ab7f2"
        },
        "item": {
          "id": "bccf6308-2292-4d31-aa0e-e72f11a3e61b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c0c0c2f3-b624-406b-a98f-922e5a7619cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9551baf7-4421-4f10-a1ff-52dd2e356ffd",
        "cursor": {
          "ref": "6d433e9e-d729-486a-b676-86617aa812e7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3995b38e-754b-4ff4-8b14-de9be43e2ffc"
        },
        "item": {
          "id": "9551baf7-4421-4f10-a1ff-52dd2e356ffd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c67a134c-9557-4b95-95fa-2b9f6c477097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcc5fcc-d6e9-433a-bf95-ac941797be2f",
        "cursor": {
          "ref": "b9566e81-2bd3-4b72-939b-0e8335179add",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "51c29a3e-128c-4c9c-884c-1ac046b32a3b"
        },
        "item": {
          "id": "dbcc5fcc-d6e9-433a-bf95-ac941797be2f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6e25dfdc-f494-4141-84c0-b74334b2dfca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cc5007-b2a6-4a6b-afc6-8320fc9f6152",
        "cursor": {
          "ref": "aaac3622-3204-4bf1-bdb3-30cbe9546b51",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "755b5132-d46b-4dd8-a2cd-716f2ef817ef"
        },
        "item": {
          "id": "d9cc5007-b2a6-4a6b-afc6-8320fc9f6152",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "562e77dd-229b-4cea-8927-8b22ae0aac52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826c3288-9a1b-4614-b2b7-fa2d0cf00cf1",
        "cursor": {
          "ref": "04172bd1-f100-4c49-9575-3bb5ee517ecf",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b47cb4d1-047f-416b-9ddb-85d31b675130"
        },
        "item": {
          "id": "826c3288-9a1b-4614-b2b7-fa2d0cf00cf1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2f367878-4872-4090-b3d5-78591f444723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0006d2c3-7c7a-4d60-9756-a79eb281d7d5",
        "cursor": {
          "ref": "12e6356e-17b9-4770-b40d-8d3842902b5c",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6ce76f9a-ba30-4449-b1fe-43fde1e4425c"
        },
        "item": {
          "id": "0006d2c3-7c7a-4d60-9756-a79eb281d7d5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "63a78d68-768d-471e-82f7-502c105821f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924c814f-d57c-43c0-aa69-8c2469af097e",
        "cursor": {
          "ref": "58278379-1e66-4fda-b5b2-02e5cbed1423",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3a2baedd-cb8c-45ee-8637-9fbfd05a4ec6"
        },
        "item": {
          "id": "924c814f-d57c-43c0-aa69-8c2469af097e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7702f509-52ae-4bf2-aee6-7d7a3b814646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b8115a-7ae8-43d7-af55-81a8852b9e80",
        "cursor": {
          "ref": "57586dee-8d66-4fd6-aedb-be5c4659cdaf",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "888e1748-2a81-4be1-b6d1-6bb196a2a29c"
        },
        "item": {
          "id": "d6b8115a-7ae8-43d7-af55-81a8852b9e80",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8be5c64b-6e33-43cb-8952-4a01d4b827fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f45c67-33aa-4c93-81ed-6da0522b5a24",
        "cursor": {
          "ref": "ca9b4614-7ba6-4994-9ba8-315ddaa81575",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "acd4e974-b08e-419c-8bb5-87d04d33d8c9"
        },
        "item": {
          "id": "b2f45c67-33aa-4c93-81ed-6da0522b5a24",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3f10226a-0026-4759-ae5d-954f0143a1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8445da-00cd-4fe2-961e-abf538564be0",
        "cursor": {
          "ref": "3e1c11ce-0c00-4d18-98ae-cde6f8484d48",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a0b6078c-c7d0-4b6c-83b6-08a645f2319d"
        },
        "item": {
          "id": "2a8445da-00cd-4fe2-961e-abf538564be0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9d454b84-48ab-46e4-97a6-4076478492f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c390dcb-9da0-4acf-91b1-87bb01ac9d36",
        "cursor": {
          "ref": "08ef44d1-bd80-43d4-9d98-43d3e82943ad",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3165b58a-6264-4471-895a-1cf20bba9a8e"
        },
        "item": {
          "id": "4c390dcb-9da0-4acf-91b1-87bb01ac9d36",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d3c7c1bf-1afc-4d80-836c-091976f79cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a304a372-63a5-4ad5-9da9-24791d3eb8fe",
        "cursor": {
          "ref": "04f74e0e-4688-4c56-b7e1-f4550191406e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "293c6075-25bf-4f11-9fcc-adef41fbd5e4"
        },
        "item": {
          "id": "a304a372-63a5-4ad5-9da9-24791d3eb8fe",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "52d62693-89d8-4d64-9078-a7a3332d37bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1464320-bfc1-4f8f-b2ab-7debc42a839c",
        "cursor": {
          "ref": "f3b58c45-2650-4fd4-b085-c7635c09c677",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "82191858-310a-4dae-8cec-f8eeee06e511"
        },
        "item": {
          "id": "b1464320-bfc1-4f8f-b2ab-7debc42a839c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8dc163d5-113a-48d0-ae67-5702176334e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23393fab-0ce5-4527-9612-e0fa110948d3",
        "cursor": {
          "ref": "bd1ff61b-10af-4167-af75-af7da399aa5d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "046a50eb-e7d2-43cd-97de-512235972da0"
        },
        "item": {
          "id": "23393fab-0ce5-4527-9612-e0fa110948d3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "73d77502-6620-422d-bf9c-e1d4468bffd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e94b34-ab43-4ac1-99e2-0eeed2f98773",
        "cursor": {
          "ref": "da4e3f63-ea12-403c-acd2-a129f191e6a0",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "541dfd3e-70d7-42d7-960e-81115562ad33"
        },
        "item": {
          "id": "14e94b34-ab43-4ac1-99e2-0eeed2f98773",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2e605cb5-374b-4f73-9c0d-50746b95185a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5a3b6a-4aab-4fd0-b3ca-406ebca5a6a1",
        "cursor": {
          "ref": "0e856eef-c657-49ed-86c3-e7485eac7126",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f67aa262-7613-4f9b-b757-1a9e2c46c689"
        },
        "item": {
          "id": "7c5a3b6a-4aab-4fd0-b3ca-406ebca5a6a1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "81859daa-5b2e-488a-acd0-2478b8603425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2a8e8e-5614-4da1-a3c7-993650bbfdf8",
        "cursor": {
          "ref": "e3851f97-bf15-49ab-a805-42c4df6db2bb",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "33528d41-5967-49dd-ae28-9af45a266e38"
        },
        "item": {
          "id": "ad2a8e8e-5614-4da1-a3c7-993650bbfdf8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9bc47719-ad90-48ca-83e7-c19c45e55805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b655dc75-c647-45e1-b1e3-cd6e70555ef8",
        "cursor": {
          "ref": "0c974498-f8f6-41b1-b4e3-60d59fe3f3cf",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dfb4f611-a21d-45ab-ae42-8eb8d7bf07e5"
        },
        "item": {
          "id": "b655dc75-c647-45e1-b1e3-cd6e70555ef8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2a0d2282-6877-42f6-b189-c173060f9295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51680d4-e8e7-4f3a-8e63-fc40c291bc51",
        "cursor": {
          "ref": "769c2b84-0c45-4694-84a2-276dd6010a38",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f15dcebb-6ac9-47b8-a68f-3ea1cb60f071"
        },
        "item": {
          "id": "e51680d4-e8e7-4f3a-8e63-fc40c291bc51",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "29e31891-99f6-4997-a0a0-e627fdac163a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567ca941-ed0c-4c61-8832-3f11d0e245fe",
        "cursor": {
          "ref": "b10875b8-2166-42b3-a1b2-cf89a4383624",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b10865b0-d807-4743-a6e6-851c059c932a"
        },
        "item": {
          "id": "567ca941-ed0c-4c61-8832-3f11d0e245fe",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "843d618a-2383-4b9c-aa2f-962294bed6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba54bfe5-4673-4fe2-9d35-24b142bc1df8",
        "cursor": {
          "ref": "cd278616-4430-4580-b1d2-3fee0b574001",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d497e8e6-c778-4058-9c94-0c1f01732158"
        },
        "item": {
          "id": "ba54bfe5-4673-4fe2-9d35-24b142bc1df8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c9104d37-06ae-465b-a9af-32e720369500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06448f78-0f08-4e28-8964-7cf4ec5a091b",
        "cursor": {
          "ref": "3c5eb869-46c9-4bdf-b601-4aa8e4b95d2d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "176c6205-a4e5-440a-bb8e-4f6ccf685a47"
        },
        "item": {
          "id": "06448f78-0f08-4e28-8964-7cf4ec5a091b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "39e31eb0-79e9-4c22-83ff-038ef0fe1ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a324f18b-fa11-4786-a609-2cfd576f197a",
        "cursor": {
          "ref": "c604147e-bd11-4b16-a140-71fb0c40d452",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "194f6c33-3229-4145-bab8-2adee80adf56"
        },
        "item": {
          "id": "a324f18b-fa11-4786-a609-2cfd576f197a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a430ba13-60c2-4f2a-9593-dcbb7781ad13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd05569-138e-4659-9849-e20513f3e376",
        "cursor": {
          "ref": "92420492-d87f-4d20-bb32-8e4d8d94d571",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ae362eaf-4131-478b-8d3a-b1b16c8cb2fa"
        },
        "item": {
          "id": "cdd05569-138e-4659-9849-e20513f3e376",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8b03e3b2-28c7-40d9-bbf3-d126e9b220fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a507a4d-256f-409a-8d91-b271eb3513ac",
        "cursor": {
          "ref": "c84f3a29-f78b-44d6-ac25-d406d5e557b7",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "800b3c20-f00c-4155-be50-48f2fb8f22fb"
        },
        "item": {
          "id": "1a507a4d-256f-409a-8d91-b271eb3513ac",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3b65d97f-b890-46aa-a45d-59da1c18c3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745f0cc8-3d0c-4ec8-9e7c-815b68359cf6",
        "cursor": {
          "ref": "450eeadd-8c4e-42ad-a95d-a351607b2f24",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "04fd48c1-5600-452a-885e-0dabee78e3e6"
        },
        "item": {
          "id": "745f0cc8-3d0c-4ec8-9e7c-815b68359cf6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "34f9a125-e541-4dd8-b706-7a807d9b12d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7980fa90-4046-46e2-ae5f-c8efeb8ad2a7",
        "cursor": {
          "ref": "c4660467-17fe-4d6e-9d62-1aeda38b8d19",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a0f9976f-274d-43d4-a26a-faf3c62fb389"
        },
        "item": {
          "id": "7980fa90-4046-46e2-ae5f-c8efeb8ad2a7",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1c8dc64c-12be-49ec-94d9-d79debceda43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10520bfb-51b2-4466-854e-082f15b80fc7",
        "cursor": {
          "ref": "cf8f5abf-28c6-4015-bdbe-ea7e2848524e",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "008effd2-054d-405c-97d6-de20b9ede933"
        },
        "item": {
          "id": "10520bfb-51b2-4466-854e-082f15b80fc7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9ab84218-d0a0-4771-a558-cd1b17236ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006dd215-30ea-47ba-9697-e6bc9e45f511",
        "cursor": {
          "ref": "6209ca39-492a-4fdf-be16-08c89d2bdc55",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "71fc0a47-fced-4104-85ab-e78fadcee177"
        },
        "item": {
          "id": "006dd215-30ea-47ba-9697-e6bc9e45f511",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fe42420d-d7b6-4696-a862-f5a9813d4ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c54462-48ec-467b-89b2-22383323a071",
        "cursor": {
          "ref": "a1d06d13-5295-474d-8dc6-85e1cf9fd18c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "33e7adce-7369-4fa9-a40b-d01bf6fa0e57"
        },
        "item": {
          "id": "e0c54462-48ec-467b-89b2-22383323a071",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3e03153d-af01-428e-8d4d-6fa4c7162c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae9ff90-3040-4050-a64e-0d1077179422",
        "cursor": {
          "ref": "e76fd231-cdf5-4f0c-83ca-5e8f02486328",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f86f6101-3f4f-4ed9-bf77-c62aa5e68327"
        },
        "item": {
          "id": "7ae9ff90-3040-4050-a64e-0d1077179422",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b68448c1-0237-4457-a12b-8a584dc7557a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf6a74a-c4d8-4e06-a116-ae301902e20c",
        "cursor": {
          "ref": "75ffa89a-da69-4be7-9435-b01ca2cb6875",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e578f679-90be-40a6-a6a9-811a9f82dc0b"
        },
        "item": {
          "id": "ecf6a74a-c4d8-4e06-a116-ae301902e20c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "10c88c1b-41c1-40f2-921e-8aac083f7960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5562e61-e9ef-4ea9-a323-3c2e73d5ff0b",
        "cursor": {
          "ref": "2a47e555-888e-4949-8e72-084a5b57eb14",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a054e8b7-03db-412e-b091-7103992ea59c"
        },
        "item": {
          "id": "e5562e61-e9ef-4ea9-a323-3c2e73d5ff0b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e0c11028-507f-4b54-8262-6e1012ff4fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4330cdc4-fae7-4682-9d04-148e23d357e0",
        "cursor": {
          "ref": "0c7ff7ec-5a08-4f2e-91fa-a09882ad7978",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bdab0dc6-cd58-42bb-b0d7-304358a662c9"
        },
        "item": {
          "id": "4330cdc4-fae7-4682-9d04-148e23d357e0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "20677ab8-736a-473c-963b-4a919973d9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f3eef0-d4c3-4bc2-abc5-d2fd79334803",
        "cursor": {
          "ref": "e83cfca4-0321-4700-8a55-6808da1ad621",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0f22e6b1-fb1e-4692-a2a9-7fe6913f5155"
        },
        "item": {
          "id": "b7f3eef0-d4c3-4bc2-abc5-d2fd79334803",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4c77768b-cdec-4a12-82d0-743e2da8b60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67db60af-853a-4989-b192-c311274825dd",
        "cursor": {
          "ref": "faa293a3-91f1-4b51-af49-a71bd73aa17f",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8822ea15-f78b-4e82-bf86-80c94791af68"
        },
        "item": {
          "id": "67db60af-853a-4989-b192-c311274825dd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b03d634f-6d9d-4b95-8add-14fd57fc9fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8103e2dd-1d3f-433f-8ba6-cfbc34be6905",
        "cursor": {
          "ref": "bb2af5c5-59d8-4cda-b4bf-e920281b7529",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6c5dfd73-ae67-44c9-ac93-e484d578d6cf"
        },
        "item": {
          "id": "8103e2dd-1d3f-433f-8ba6-cfbc34be6905",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8c6ff9d5-2bba-4b1e-89b8-cc537b211d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3452398a-fbd5-41cc-aa15-485763f98248",
        "cursor": {
          "ref": "d884f7b5-8c56-4d4b-9379-84c1d2794b1a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "87467ead-1845-418d-a6a3-00f68bdd1c4f"
        },
        "item": {
          "id": "3452398a-fbd5-41cc-aa15-485763f98248",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "debeabf8-7cf8-4cf0-9b34-b12bd05c7747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec26efe0-5b1f-4c6d-be36-0116be4e8464",
        "cursor": {
          "ref": "d2eed468-45b9-4fb9-933b-ba327dfa7696",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d0a51d09-ebd9-40cb-b28f-8f281fc77c37"
        },
        "item": {
          "id": "ec26efe0-5b1f-4c6d-be36-0116be4e8464",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "961850cb-40b9-4814-84e3-940f720dc783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b46bff-9890-4728-bc65-9a95fddbf9fd",
        "cursor": {
          "ref": "d3aac152-1dba-4b16-a36b-1e85e894ae2d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7c210c77-d2a0-44c4-bcc0-40ce438b8b08"
        },
        "item": {
          "id": "23b46bff-9890-4728-bc65-9a95fddbf9fd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "581c4812-3584-4bd5-a29a-d515781b7216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ccee2d-b286-4074-8b5c-f930a64b8c3d",
        "cursor": {
          "ref": "a4927e50-de6a-4abf-bb64-c84c23a5dbe6",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "315c646e-83f8-47ca-bdf5-7d0bc02ab4ee"
        },
        "item": {
          "id": "97ccee2d-b286-4074-8b5c-f930a64b8c3d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f6301bff-805f-43e1-bb61-8a8ce8cc186d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9628a3-2333-4600-992c-35695810f641",
        "cursor": {
          "ref": "ec8c7703-c920-4b18-a542-c08dacf0d7fc",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "da6b8450-cf34-4599-8d7b-31756c628f51"
        },
        "item": {
          "id": "8d9628a3-2333-4600-992c-35695810f641",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "da6d3fe0-c67b-4701-80c4-852ba2722a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcea950-e3bf-4ee0-8fb0-8323ead4f6a1",
        "cursor": {
          "ref": "0920e6dc-9441-4ca2-ba23-5347f367ddaa",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "47d3a061-3d68-4e89-b3a9-bd6335e25dc6"
        },
        "item": {
          "id": "2dcea950-e3bf-4ee0-8fb0-8323ead4f6a1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "87d7229e-bee9-4d64-98f4-4774dcb2fd34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8027290-b2b3-4cec-94bc-17c1535e7eca",
        "cursor": {
          "ref": "6b9bceab-21d5-442e-9f97-fc745fa39fe1",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b10d05e3-9536-4bc0-af1f-f084a33c4a98"
        },
        "item": {
          "id": "a8027290-b2b3-4cec-94bc-17c1535e7eca",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "42fc5483-fad0-45c7-9d52-844c55e4752f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fc8d93-45dd-4313-ad61-e9c24f34a2ad",
        "cursor": {
          "ref": "ff9cb018-2ae6-4e50-9b43-7b30aa80b82a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c27ea824-95ec-4f8f-ac11-72f747cd3ba5"
        },
        "item": {
          "id": "19fc8d93-45dd-4313-ad61-e9c24f34a2ad",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "92952642-1299-47c3-9e07-a8009b4e795c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2178dbfa-e846-4427-8069-f748e552af76",
        "cursor": {
          "ref": "939c65bc-4bd7-45a9-8c3b-323af096722f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "91db19f4-1096-42d0-b79d-920a7f8260f7"
        },
        "item": {
          "id": "2178dbfa-e846-4427-8069-f748e552af76",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2430fd45-8d43-445a-8e4f-43fbbe814375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5590866a-1274-407e-9198-eb7dbbf2830e",
        "cursor": {
          "ref": "38649991-126b-44e4-9c54-25681ed35ba2",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d6c60ad0-2843-47b1-94df-c24310373c0b"
        },
        "item": {
          "id": "5590866a-1274-407e-9198-eb7dbbf2830e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "daed6745-fc04-44c2-a6ba-2e52ab611186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39708692-0eae-46cc-8109-2fa3588dac7d",
        "cursor": {
          "ref": "e673c2a9-86e8-412e-8ab6-aa23e87825da",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2615baa2-e8a7-4f0a-ac00-21aec941727a"
        },
        "item": {
          "id": "39708692-0eae-46cc-8109-2fa3588dac7d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "77ab4a84-f826-4e53-9a1f-4192f27bf229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad7d4d0-b5f3-4e90-b43d-0ffba0245fc9",
        "cursor": {
          "ref": "edbfed5d-5f4d-4d8b-bb0d-8f84d65e0568",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "05e0a755-ed17-4bc4-b587-81c586a75129"
        },
        "item": {
          "id": "1ad7d4d0-b5f3-4e90-b43d-0ffba0245fc9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8d2ea25e-4427-48d2-9743-b7294bcafba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ee32e4-6052-419e-9320-ade82d820da9",
        "cursor": {
          "ref": "e1746a74-02b7-4a68-9600-a077f2f909ba",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "eb2e4fd0-f07a-48b8-aa5c-48a0e0648eb0"
        },
        "item": {
          "id": "00ee32e4-6052-419e-9320-ade82d820da9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "431e635f-2c4c-4be3-ba40-fac1a22983e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23855f6-9156-4637-8e93-7042937ab805",
        "cursor": {
          "ref": "4cbdbb7d-a795-4470-a54a-d92fa5eeb474",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "66b5f3e3-c2c1-41b0-bd34-38dab17ba7be"
        },
        "item": {
          "id": "f23855f6-9156-4637-8e93-7042937ab805",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4c85d547-42ce-40e1-af7a-cdd269600174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13190b60-d970-453d-89b9-d572f6a1a0e3",
        "cursor": {
          "ref": "fd04cf08-922b-460d-aa3c-dec55ad1740a",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2456282d-eeee-4e88-a38d-27a93f6375b9"
        },
        "item": {
          "id": "13190b60-d970-453d-89b9-d572f6a1a0e3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c529ebbc-f8c1-4271-945e-cbaa69563f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed762d2e-f453-40f4-9af9-d9749489bf27",
        "cursor": {
          "ref": "068b40af-b0b5-493c-a5e5-6cd8e42fbffa",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0023aaa7-4f1d-4d03-95a0-c3e6a531f3b0"
        },
        "item": {
          "id": "ed762d2e-f453-40f4-9af9-d9749489bf27",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "89a95357-73fd-474a-a484-b6654c2e8dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99a84bf-bf0a-4082-a55d-ffc51c303efd",
        "cursor": {
          "ref": "616c9f6c-7c68-4852-a4d9-4c11b8f4cbf0",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9c2f8f84-aa5d-46ee-989f-78889aa56d09"
        },
        "item": {
          "id": "f99a84bf-bf0a-4082-a55d-ffc51c303efd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "93791424-d75f-42af-8102-6580a857de45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c254019-9e3b-4500-851e-46af08c282b5",
        "cursor": {
          "ref": "14e96235-aad0-4ecd-b3ba-604ffd97bfe0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6a43c603-19cc-4a27-8e87-e98c12bdc142"
        },
        "item": {
          "id": "5c254019-9e3b-4500-851e-46af08c282b5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "86086439-7036-4d21-abba-a2a610b628ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e4fc06-52bc-4ff6-8c7a-bf40b5952d19",
        "cursor": {
          "ref": "32f4a4a4-143c-4f1c-89cf-3166b9c5b71b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "acae1b52-5395-4335-9d62-b064120de176"
        },
        "item": {
          "id": "23e4fc06-52bc-4ff6-8c7a-bf40b5952d19",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1ec6a479-5c81-43ae-a556-3a798cfafaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7e2cf4-5383-4f9b-b66b-f8d2e9b2a4ce",
        "cursor": {
          "ref": "3e7ad5dc-643d-4bc9-a8f2-e862df636f78",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f893f178-6107-4d3b-9b49-e45d6da706f4"
        },
        "item": {
          "id": "eb7e2cf4-5383-4f9b-b66b-f8d2e9b2a4ce",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "df06f3e1-d13c-4372-8e1d-f884c828cdfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beea0410-7a18-4a5b-abbb-6324c57c35de",
        "cursor": {
          "ref": "8cec9ee7-4bdc-426b-aee7-f43128eefc46",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d86f2e9e-d2bb-49bf-be90-09c827376a3a"
        },
        "item": {
          "id": "beea0410-7a18-4a5b-abbb-6324c57c35de",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "624dd0c9-7828-43d4-bc90-d6b96612ed0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9274cbf-0342-4ee6-a871-6f068a315c02",
        "cursor": {
          "ref": "f480ce1b-6174-4967-9062-0be37e1524a4",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b9bfc80b-c798-4086-a088-dd81b85938d0"
        },
        "item": {
          "id": "d9274cbf-0342-4ee6-a871-6f068a315c02",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cc6f2111-c4cf-4b4d-aadb-19c9958a7d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251cd054-9fd9-437f-a465-8fa83f36c89d",
        "cursor": {
          "ref": "4faa899d-dda3-4bb8-8335-2eaeb03e30f7",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8a916561-d5fa-4ca8-b0c6-bc7cfd559929"
        },
        "item": {
          "id": "251cd054-9fd9-437f-a465-8fa83f36c89d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "2b714619-86a8-4345-894e-076b52054bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617c1f5e-f68f-4339-bf99-ea5775bf0d5a",
        "cursor": {
          "ref": "fa6aeae8-f0d8-4cf4-8f09-c1320b035dce",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "818b0e9b-6795-4def-baee-398f869e5ed9"
        },
        "item": {
          "id": "617c1f5e-f68f-4339-bf99-ea5775bf0d5a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "70c9bfc0-3ed2-460c-b5e7-877b1aab2565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ed20aa-3e83-4a1a-998d-a73510291713",
        "cursor": {
          "ref": "a7dc14e9-92a7-4e86-b504-a678ce91330b",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a77e55d2-3261-4f4c-9e94-d4c4dc7fe7b6"
        },
        "item": {
          "id": "01ed20aa-3e83-4a1a-998d-a73510291713",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4963a6ec-e40c-419b-8449-e552f50740ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97423a18-30f2-4ff5-97c1-a92d1d05e704",
        "cursor": {
          "ref": "8d8a8fb6-4018-4a61-a9e8-ff66573117dd",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cd2c2327-b056-40fd-b1b1-a91499039e8b"
        },
        "item": {
          "id": "97423a18-30f2-4ff5-97c1-a92d1d05e704",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e121dae8-82eb-4e0c-b172-09302eff7a62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d269c2f7-0046-4cc7-a1ff-a10dc7e7b515",
        "cursor": {
          "ref": "8e48aa98-8681-413a-b0d8-324c06fc4095",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "afdc6d19-aa05-40ce-bd96-5f21fd15a14c"
        },
        "item": {
          "id": "d269c2f7-0046-4cc7-a1ff-a10dc7e7b515",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b33af07e-0601-402c-8215-5c594b7bc8e5",
          "status": "OK",
          "code": 200,
          "responseTime": 147,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e4a371-fcd4-45aa-8d07-72e7866109b5",
        "cursor": {
          "ref": "b1eb45f2-9794-42e8-aea7-067f7f9fd211",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "039d4847-566a-4e28-967f-fb1871cf1cf2"
        },
        "item": {
          "id": "60e4a371-fcd4-45aa-8d07-72e7866109b5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "83e86b5d-f131-404c-a9d1-5f12756691aa",
          "status": "OK",
          "code": 200,
          "responseTime": 8613,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e41f5e-286f-45c8-beba-9d30cfbf8f96",
        "cursor": {
          "ref": "4cd8716e-561b-4ee6-afc9-685e6348824e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a7d863cc-9695-44f3-937d-5303049bbb85"
        },
        "item": {
          "id": "27e41f5e-286f-45c8-beba-9d30cfbf8f96",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3d24b60c-3f83-4201-9d57-5a645dc6d369",
          "status": "OK",
          "code": 200,
          "responseTime": 2804,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdcfe1f-629f-46bc-bc29-d6b53b9c35cb",
        "cursor": {
          "ref": "8799dab1-e28e-4bea-bb78-f4f7c4dd0266",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "339b0d7a-4082-4267-af9f-baf7bacc75d4"
        },
        "item": {
          "id": "8fdcfe1f-629f-46bc-bc29-d6b53b9c35cb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "42e96003-37d3-4d04-a434-71344d9489ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdcfe1f-629f-46bc-bc29-d6b53b9c35cb",
        "cursor": {
          "ref": "8799dab1-e28e-4bea-bb78-f4f7c4dd0266",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "339b0d7a-4082-4267-af9f-baf7bacc75d4"
        },
        "item": {
          "id": "8fdcfe1f-629f-46bc-bc29-d6b53b9c35cb",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "42e96003-37d3-4d04-a434-71344d9489ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f452b911-af23-4cbc-8147-1be893a10637",
        "cursor": {
          "ref": "4c3ff65e-8961-49b2-8faf-671ea375f2e9",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d8ae0bc1-d0fb-405e-8376-421367912e18"
        },
        "item": {
          "id": "f452b911-af23-4cbc-8147-1be893a10637",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6ba8d301-9c1c-48b4-b24c-a46218123f9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84728702-fcb9-41af-8ce8-ed7444d06dd2",
        "cursor": {
          "ref": "c470976d-f822-45d4-9762-ded2499c3138",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8a0ca203-1bf5-457c-bac5-4737f461614a"
        },
        "item": {
          "id": "84728702-fcb9-41af-8ce8-ed7444d06dd2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9b9d43a8-6968-407b-8a43-8fc0f70c5be4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}