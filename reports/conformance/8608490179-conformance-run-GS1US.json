{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3c30d718-5c39-4846-bd47-1d2aa198b869",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4de00a3b-7301-48e6-add1-b75ca9151560",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8b2d5c28-b193-4d9c-b38a-196e13d9756e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aef06c2d-0b96-4d49-89cd-e95dda62d8ef"
                }
              }
            ]
          },
          {
            "id": "5a7bff5f-4169-4731-b99d-1378e69cda31",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a8aec48-7d7d-4982-9aa1-b8aa5f2f5aff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "34824ba6-7742-4602-a971-46b691472317"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "de22cec7-1d37-4dfc-b4b8-d8b1ec69f85e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "77140931-7807-4eff-a497-1abe8a4c9e00",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60c4ec37-b038-4996-9408-ef30e141a3da",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a2c9c15-00be-4f7e-813a-c15da1876cce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32054c2d-5892-4edf-8e1c-bc77e2d6230b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b29bb2a-e007-4f73-9209-9886fafc6030",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a9a09f8-af92-4c1b-9b53-fa8e801930bf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "04bdc4f6-5764-4f67-a9c8-2429d049eeb4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28576914-52aa-4c6f-9372-88c1cb8e7ec8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c03a6a12-8680-4c10-891e-b482259ab5b7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d762cd22-b69a-426d-85b9-b77ecc3116f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80c90cdf-37ed-4d13-b6fc-0b428ae91fb7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7aed622-5f9e-4876-b5ba-77f199447380"
            }
          }
        ]
      },
      {
        "id": "3ea33e96-e4cf-492c-8700-5812b374b276",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d385320a-3b01-469b-98b5-05e5c0a7a776",
            "name": "Negative Testing",
            "item": [
              {
                "id": "409cd047-8fd9-4c46-92c3-a7027cb3eaeb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b514130-9845-4bde-bf01-0e6db4c04ba4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a67dbb-6300-4353-840f-3648f8c0b4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58f5d83f-c9e0-4c27-b9fb-8a46327b50f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c4695d-1943-4536-affe-2a5c2b2e4c2a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e410b5-92e5-455c-90f1-e458062ed046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fff5a706-a525-49a3-addc-242ed96ce946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384aa471-933a-4805-9b4e-53f2cbe6efee",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a030ae0-aba9-4ac5-bfc8-f561c2250d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19e2b9f5-7131-4ce6-8514-7ef9ba604434"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "424958ce-0f38-47ee-aa81-cf41b71512ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76d88c71-2f6c-4a25-9b96-15dedba69be9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cf4af9-5f8d-42a7-ab9a-1e8a4b78c46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac854eab-99e0-4f7f-bda8-0626ba6cf628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17023b1d-af93-4709-bb46-c01d16b16d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9ea900-d1da-4a52-a01c-549276523bb0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "51a5fd30-a572-4d48-91e7-576af37fb3c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e5799ddd-b4e6-422f-ab5b-fc0aceccd9be",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c32002ac-4f96-4db2-ab39-3028e13e9631",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f2afa911-0ff8-45c5-99c6-b12976202167"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70ee43ea-26f2-4f06-b5d2-b5fcdb6246f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "dbfbd4db-e832-4956-b60d-62a3fab6c7a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0a73a23-971d-4eca-84d4-37f52a86815f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29325a6d-e8b0-47f0-b9ca-b84cf538d2d0"
            }
          }
        ]
      },
      {
        "id": "b53bd212-b42b-422d-a027-3b585be16d23",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "df1ee6d4-2d89-4bf4-a942-d8ba0d81b407",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e42ad4b4-27e8-4115-a3c0-2cdd073ff334",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "193f530a-46de-4e1b-8afd-e02ede2c1bd6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5bb9c3-2a07-4e4e-ad38-afbd382e379c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4171f942-ae2c-4d98-b50a-461b69840e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229d9532-af0c-43e7-97df-7c31dc6b8137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91a6046c-7f7d-4eeb-a0a2-1318d2f2e6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d5355f-a3f7-4137-99ed-c96232eaad29",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea3d894-fe4c-40e0-98f5-3c29a36684b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438bfb1c-e907-4eb5-9b97-bed74a108b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2da377-302e-4bab-a382-22959bd8963e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4fc9216-cb90-43e0-b3db-79c53a654ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d4effb-2d36-4ea3-acc8-f20044ac680a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e67a64-cf51-4c13-a1a6-c130d3d0b22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7f6457-670b-4bce-8a7f-c6ed4db7b80d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e54984-5c0a-4657-8d07-1c228ca970de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71b89096-98de-49e4-aeb2-ff49db949cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184dc987-4f5c-45a0-bb31-99ad642fffe9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2feccfb4-2675-4318-add0-5376e388e63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcaf8ec7-b181-4eb9-86c2-24dc7bb5f0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803424c9-260e-4118-9532-4d0876b62367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1804e541-8f20-44ac-9c93-90a7a3122e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9eca80-5f00-455e-87dc-4007d9ae6996",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2b46b5-c1c0-4f05-ab52-bc6b76ff5179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d70358e-8f6d-4da6-bdd8-9f09d163be88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bfbc0b-890b-4c9f-9aae-ea58676109b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1ef91ae-e035-46c1-a170-d044b52b9ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d3cbad-b97e-4de7-8fc5-694fe1c2904c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869e0eba-8903-4989-9ca9-ddbd80d58dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda4c0a3-bd5a-4fec-a4af-405c40b81b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7772661f-3072-4b6c-b7e2-462a6982ac9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4826934-80fd-42f9-b6fc-c21bbcc4b2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f96c162-cefc-4b5e-a469-7840e57ea8cf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad943746-57df-422a-a6de-3bcbdd9053b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63ce6d4-ab73-4da8-a710-72f69f9cc032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e54ec3-7c07-481f-9cf2-3aa617c368dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46319c55-ff20-48a1-aaa8-875cf6f9b40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e77459-7cab-4d27-baee-7cad85539ca2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cee88b-f07e-4713-a671-7ba9b262e172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d150761-5c05-4900-a53f-7ad3f7e890bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92b2cdc-3b2c-447e-bfce-487af799270e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81481e14-62a1-44ca-8383-ce2f289d3dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236e0998-e38c-47c2-9ef7-0d39f4433950",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774798fb-6df4-40ca-83ff-af58627974f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e7797e-173e-4706-9b55-1bdfcb48523d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650f1d2d-9193-48de-b39a-29ce4c31e245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f509f5b-b643-4aae-8d48-4d8e1e23f838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826ef856-ffdd-4633-bd71-23f59b542b09",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9951414-02ef-4a5d-9303-053bcd9c05d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b2245b-c716-4b82-96c8-5b4104a89b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecc5f8d-7039-4797-a100-ffd3a014d3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "953f1fba-3f5f-40c8-af23-9d7c0bdf2df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09da737-8f64-4a25-882f-96ccf5dd7f9b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96862199-95bf-4b48-8a2f-85b383863cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc741c3-b9a4-49a3-a509-42f2dd78a51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9498e54-3a75-40de-9653-41d0e14f9212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2fb43b4-40a4-46d7-8567-44cd1b9a3246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc8fe53-0cdb-42ef-9cae-36d832902661",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7e6129-3040-463c-8702-f3db6487c129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04309350-4898-4f1a-8140-2a3db8560eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15afd0ee-85c7-40ae-a94e-6d6e1d0764c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50fdff61-7a87-483e-8fa7-27f36790e1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7c0d23-62b9-462e-a680-aaa2bcc7ad31",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d58e89-07b2-43dc-b855-673c80ea3919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a6bc2e-766e-432a-9080-7ff68aa07af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6186e1-c77d-4b27-92a2-56750598fae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f360bfb-aa8d-4b03-84bf-0d8ffc15f083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd672b83-527a-4fa3-996c-046a1b08a96a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8229e531-80a0-4108-8eb0-945178269e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f03e87b-b6d5-4919-9845-fb119d9078ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac0c0c5-cc35-4708-bde8-710c64500518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81dcbe68-e6b0-4d42-a815-f42022c12878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfc6f41-ea81-4b33-b861-af33ede3247a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1e29e6-be13-4dac-a64f-7decbf605957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3143cd9f-89c0-4693-9a1c-5b9cc05ac89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d5ecab-76eb-43bc-9b31-154dd1793041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31011312-39f3-4a66-8b7f-96f47ed74193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e070a7-71c1-481f-89a4-1852f7b11a2d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce357d6f-0922-4e47-a9ac-4829d338e0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0dc95f-8f45-459d-9384-8056973a450c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8f999f-1ff0-43d1-ba3b-a53ae2fa70f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81b1dc69-f1ef-4bb8-8ab6-a85d8db7a5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be5a064-943a-42a9-a7ef-ae780a53c2ba",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3907f933-75c6-4598-be55-3601bda4bb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230f013b-dcf3-4f7a-b7fe-81fde2dad943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0636ab10-5916-44cf-a367-8dbb6e01468e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf517dd7-7d4f-498e-a81e-865bb9fc8187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76750a45-1a61-4812-9cca-87bacf8bda9a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b3ac3d-ced9-4155-8e0f-d4dceee6d8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc51f28c-b14b-4038-b05a-06b42292ee96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce08c69-27e2-45ce-99a9-1e4a1f1f23ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b655dd-35cd-49d4-9a9d-cdc76c7587ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8b8061-963d-4817-b4fb-259b75edf724",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25366fa-d8b8-42dc-b42e-3bbdb183e1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e21e97-5271-4c26-9bc8-114b34fa7f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8261bebe-7d21-42be-8b85-fc583619fe25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecabdc61-7487-45cf-9f6d-66518153b080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2025b655-6259-405e-9464-0bffc3efd5f4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0117736-fed6-444b-8ae9-20068f032119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3551a639-13fd-4893-b379-7fb2f84c7d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62eb1323-4545-4ac6-829c-c52cfcd90a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcd3998-fa25-4227-87f5-cfa582c8584d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee8f6ac-6993-43a3-b843-8ae26e29af88",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cfaed1-83b4-484d-b90f-5d72cf68e44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3835a4f-6162-4a4c-b651-ba48fb9ca416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cead119-5b8c-494b-9ea3-5fb9ebe49ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "948aa4ad-f7d6-4c83-999c-a809a722e70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb4cb04-d25e-4d0a-99e8-b59d4f85133f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a71edc-80ec-4797-89fb-41ba3acfa7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539cf062-fd5e-4126-8f51-638c4f6ad63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dddf37-a363-485d-8b7d-413349732beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb175eb-d3e6-48b9-a09b-ef80894c736a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3e8d14-3839-458d-9e5d-56076c27f976",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7235c427-0c80-4c45-94b6-eb52b41711e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda1f6fb-2b6b-4466-8a2c-321a498ded40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901c30a2-703d-49f7-80c1-feed5c0fe2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "669464ab-ee06-47f6-a5c1-536f077e6bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ecbeb5-e170-49ae-8db9-90581ddc5261",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5fcd45-d983-4597-816b-f7ff38beb327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcd6a93-9b25-473f-b422-9350f81ea910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5127e2-02ee-4404-a8ea-442b7142ab37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "888e2e79-fc66-4cbd-b3df-89b9db555735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884a9298-ef22-4a04-8759-a2b51d01023f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560b5add-0767-4ff7-8939-379f720f851e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7c73a3-af40-4f3d-ae56-005becdf6d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2652dfbd-97f0-47a1-82e6-dc671cb8f81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "38980f46-ad92-41c1-9084-52bd28e96d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d419023c-638d-42b7-8cb3-e517924972d8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04d7960-e07f-4a59-92f5-0ff41df6bbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3732e4-deb1-489c-85f7-648b1143044e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436f4f88-e68e-49c0-ae17-36760846b909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca06a7b4-f64f-4c8b-a3df-e7c87eb9a783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b066898a-4a4f-4434-bd3e-3af63eb153a1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fc82e0-616a-496f-8e7b-73a08992b696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b606440-b329-42c4-8108-0c9f62144329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c41bb10-21fc-4632-96f9-152a78410edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b406e336-84a2-47dd-9dec-7eb0028dc6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063dce6d-d727-4c57-8b70-0e2a20b9131e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d76f2c4-1a0c-41bd-b6d1-57e8169e6a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab66e730-50b0-4baa-aca8-f0188f15aa5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1912e8e5-113c-421d-8793-0bd345cff583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f805da-296e-4b5d-8353-da38121925d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82791f50-ffcf-4fee-b245-f5f2ce83bfc8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecd1d20-a799-4fc2-8f93-ebc21346df85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52bc5ec-4f77-4ba6-aad9-556374d67ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a025602c-a6eb-426d-ab72-feb5255a018a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c57172de-f117-46df-81c1-cd5ee642d172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3db02f7-472c-43cd-912e-af04f200ac29",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df7cc70-1661-47b4-b33f-b02f3471bc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed8b3ad0-bda7-4c40-bd08-19f9570e1132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c59afe0-260b-4359-8db2-47bfcb77a945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "85e1d6fc-ca7c-4b77-acf5-c5771eadded5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dc96fc-e173-4027-a9d5-39531776f555",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cab374-6b14-4ad4-b2c6-e3c91b39644b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ed413e-483d-4203-b3a8-f4fa22fc9716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3cb4f4-7cb0-4c50-ba27-34b88fd14bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4934ccd-50e1-4225-b34a-6e60b6cdbfdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e40d7f-4b22-4bd6-8dd0-d40db463476d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f30842-c4df-49e6-a66d-ec56fd21d7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbca84a-8c4a-4679-814a-3065081d68bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22533284-b1b3-44be-858a-fd068894686c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9f9adf-27d2-4208-bc4a-0ad456e6e2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c51e852-34a8-46e9-992e-86ce9c86c083",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c748f490-3bf7-496a-abce-76773cc44828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef695b65-5fa1-456d-a028-b3fb6375a99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06adcd65-c4f7-4e91-aeba-267d05df6331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0294c4-acb7-42b9-b7e5-e99d04302014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9c7c23-af4b-4f01-93e4-5a8ceecb1827",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c6cc97-489b-43d5-87f2-5466528c8192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6309da1-8327-47dc-af57-d7ab8eb8283b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d37505-d6e9-4ddf-8ad9-ab558e4bf534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5485b6-6372-4a01-be93-2ba8670d26a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83366d4d-67a6-4d84-9df2-37db99adb4cd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edd99e9-528f-4fe3-b6e7-8b6d53dde33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d911c09-6cc9-4159-8626-0e4884cab10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c40f1aa-04dc-4f24-8684-c9fc8396198b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "40c2f4ab-eb62-48f2-8aec-03c7e94ef96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c970c2-25e8-41ca-8912-ed788ce04302",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa74198-a77d-4014-bb25-b8f0f7141af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8993b9c2-6dce-46d1-9218-2c3565f52c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98e6a85-d342-4fdd-981b-19839ea18dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b28662-3cb8-4459-b04a-e9309280cb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ccb32c-51b4-43fe-83fc-5a8a61f27eb4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096be945-cc32-4258-856c-94377f9b552c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e203a345-a947-4501-93f0-73e7b9e664e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f208c7b-0499-4d37-a213-4a95d8231114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c726838-7726-4d8d-9a9b-b53659503bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf26564-b1b4-401b-a9f8-588044ab7c3f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c937d50c-02bb-41ad-ade7-5db95512da7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab8386a-24d6-42d9-b302-cc45247857c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac19125e-a612-47e1-8f96-18315473e235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a527fd3d-152f-4ee3-9d84-4747d52e5cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee9d318-5572-4ca6-ad17-2b7149b02800",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc5f6e5-aec6-46a4-856e-e3722371683a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c955bad5-c96d-4c56-83bd-14e51d00c80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9113c64f-5022-46be-9f90-978ab942430a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00960231-ceae-4b3f-9140-7f854899b654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f1fa75-44a4-4512-bb83-2e3b15d0c078",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab0c50c-5427-40f1-b057-c3eede59c026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80134f5b-088d-454f-8078-a6693ee6c7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195b0753-9728-4e5f-8d13-d385dd1561b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "245983d7-99e8-4207-8487-0287e659efa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18763084-7022-4bfe-b6ed-c018e92b3358",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f24c50-2873-409d-8622-e0cdb52a1925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707ee1a0-bef1-4d00-9b67-de017e40fbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404390d1-df18-4d19-9aad-2402026a83e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eec86c4d-367d-425b-8ad9-1507d9f3e92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4872df3b-92cf-47ae-bb23-d66d9ac06f11",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5063d5-866f-4d2e-9626-c149323d4613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ffa8c6-f58d-4a71-ab01-19177edb6394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5358d14d-be21-4e07-abe7-d423c9857bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7c69212e-4491-4a33-b0a5-77d960a654f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e99b54-a542-4c01-9bb3-0c7cdc397edb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeb75ad-de2a-46dd-9535-47a9bc2a347c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ea1389-fe4a-4704-8e0a-c5418f29b78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82c8733-ceac-4327-8104-4883b495abf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a533110-dbfc-4630-80cc-ade0fd0829f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262db5c8-8114-4f4b-8377-6820dd5df088",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be96cae-de47-4c2a-a379-a3104bf51090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e12495-8777-4f50-aadc-53f7c007eb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d68025b-2bdb-4f57-9e24-87f3185acef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4929b5c5-6a29-4be1-bf81-7e03504dbea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70733af9-7e38-4a45-95ed-47f337601aa6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc53db5-d618-47b0-a4a8-dd4718457816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb0a399-60ee-40c1-968b-74fc7189fd7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246dbc64-5b66-4ba5-952f-bfa55be477d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c65181a-b49e-4145-ade6-e6a7903c4157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af288529-fe96-4c59-9f3c-91ef26c1538c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36275ee-1d35-4e97-bfb1-4163c9a21e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddc5a36-9f3f-42b2-91e3-ceee4b0323af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6b699c-9b3e-4b43-a33f-7cf58bc172ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81511959-6225-4534-9e9c-21ab19ec210d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c339aded-3968-4c53-95f4-9ba61d8446f2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dd2861-a9b2-4213-84a1-e14e18599f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041ae02a-bf55-4621-a907-d549f40ee2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57893397-2ae3-4add-aa24-d11c34d2f976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "705dceb8-a119-43dd-bbd5-6752355c31e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b6fe32-2c7f-4e4f-83ec-39c9c8c265d6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1841ca4-b123-4e62-b891-19f2baaefc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a40eddb-f74f-41da-ad16-4fb447279404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9d1cad-2703-4166-815f-39fe16f1cc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f6094c-f2b6-476d-b40e-5fee7700061d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ef6aa0-279f-4e7b-96df-ac39af4dca33",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe017b8-4a1b-4f04-8371-dea5613dc59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7e064a-7dad-482c-afdc-d4c9e64fc5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adc0915-aa6c-4267-ab2a-1c01f109a310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38730704-dc8c-4574-8177-9bba46b8f2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc6c691-5bf2-4feb-8ef0-68a9124b1954",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d22a16-bdea-4cb3-8c8f-541aadf4d4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69d56b3-7b93-4d6a-b0d3-6afdcf76718a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9a1357-49da-494a-bc0c-dc8b275215ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9fd7dcb-cd6c-45f5-bd98-2bdc36033aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83864186-5c25-4997-8f48-82625917d6b3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3813aa-c66c-43f5-b127-12de03cf76e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fdfdd6-308b-40c6-a411-e0fe1094a06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c633f4-4aaa-4e04-aea0-6f8ad1b73f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff12ac5-fde0-430f-9bfe-6c927aa68e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b7d42e-3854-40f6-9c38-eb2a1c65b294",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff43001-0e88-492c-8eb4-8e98bac6e3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301800f4-f9be-4063-92b7-25761ee4e04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4c0cc1-3ee4-465e-8788-a2052fc77724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43fa09d4-4fd4-49a8-9cf8-da3614792531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bd1723-c7e6-41fe-8635-405b17030780",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ba8e37-d51e-4913-b878-50b286c8ff39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e628dc6-5faf-4f42-96ac-56793339fe88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ac9ecb-4d00-4b8f-8b2b-4ad9316d54a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0d4240-dfa1-49a4-b594-0c59f3d460d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea78f020-70bb-40ab-9856-2a216aeba869",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d441e5-65f2-4a1e-a04d-893381508620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f54fd24-2560-4149-ad9f-bbc7790a9aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287212e8-4900-4af9-b907-a01992709129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a250fa1-b67b-4f0e-8ec6-eada24a9f3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fede33ad-da3d-4dc0-998b-0a9be00907e5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0bc66b-27d8-40c9-adfc-a655c0afd454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327b8da3-8e80-453e-83c1-67a757730aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c73594-41d3-4eee-8afe-bb113c923472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f475f28-b32d-4cd0-aec7-b36108a1f337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea699fd-f7f0-4e3b-8e9a-2538579fde91",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b640ad-f92a-48c2-9db8-543b516ed156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca626616-7a65-41bb-9a66-90fb2cb043be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250a391e-b234-4dd9-ac0e-88ecbb57cc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "93e123b8-bf80-4c16-bceb-73bd876ba3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd75ee5-da7f-42c9-a415-9b5287cec6a4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653bf0a3-0b16-48cf-89c5-a3720f9c8401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2835e390-3b15-454a-8d30-09d2f6962b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ecb0fa-a89b-46b4-9d37-432f10847685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "76b71f3e-6d8a-4f67-8c95-1ef9c3b84ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa754730-798a-45c8-a845-9494df3f46c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8202f2e1-e8bd-464f-803b-4e87cc94d516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fbfcc4-5657-4488-b4a1-3b828a997a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79526b8-3cf4-49c9-9d5e-4f2dd2ab6344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f291fa37-a88a-4ddd-b22a-938df0c86aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54f2907-f7db-40a0-8738-30f682fa8247",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3067e010-46e5-4497-acba-b3ed64b3f9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541c95c6-8272-4d53-b26a-f92a778646d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf2c70a-b050-4501-a57e-b4cec2dea4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bea3b831-f759-47c2-a240-898c86f7f14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56637fe5-9d02-440d-b2b2-fd256722d32d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612a370a-3c8d-4b62-a32b-2268171f1b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d343b70e-f612-4e26-bed1-b045f52dcb2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93426c2-37ab-40c9-a441-2dfbe180e0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e924ecb1-4c02-402e-a8ec-2d0abfc41ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978187f1-8c82-4146-9a7e-025e8c9c3aad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829f9cb2-974f-47e0-a1c0-59e68cc1791b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2091eeea-f90e-4214-8f03-b8c8f34a9663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fdacfd7-a1c6-4a48-af3e-a64835d7e9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "013be07f-037b-4339-a099-359daed3c5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c15002-9830-48f8-854d-29eb3da9fa0d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90c91cc-bcd3-418c-b72b-c07c5ac056d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc09c60-f70a-4b24-86b9-5719c0dcc7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a786a1-2765-426b-a5d4-a83d1d9b66a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ebcb46e-3670-46be-ab94-c9a20ef90102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cead15-a9b9-4a99-bf90-d7907c53b7bb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a486a9-d0bf-4ebe-9608-633655bc48dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6fc196-07a3-4b19-af88-3e5a5cc96c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b6d87d-3629-4816-9256-dd2aef75a519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2053bd8d-b5a6-4911-a5e3-3f4f6f7cd59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c1d1da-e864-473d-9835-f519730d1fb1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5d87cd-74d6-4498-8246-7ee68dd3a4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20388ace-6e4a-470c-84a5-208037c2f48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c1dcbc-7a9b-42da-af10-1021b28ccc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b1328a-f417-431d-97f4-7c5a9a8ec7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9a73d8-c61c-4a67-aff5-c13d19e6c895",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6e924a-dc0f-458a-8461-e6a1ba33d8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395d587b-e7a2-41d3-9c8c-003f7ebfc3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b7de78-ee98-4bfc-91bb-5e49c68e1fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60e8c339-0c98-4f0f-8e0b-0fbfe7a3b5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b018fbb7-3ec2-4298-b484-5dc20cdec52d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728da5de-88e8-4cc7-87a3-20b061bfbd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c956f5df-bcbe-4ca9-8b11-f18bde4ebe4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b54f256-d590-4fe6-97c7-fd36e12e68bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1838d3c-86ea-4556-8b71-0ad4005fda45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47405998-8425-40a9-8875-212994a16c3d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b50746-8c5d-4bea-8d40-3fa9767d1602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2dae3ac-0b21-4f1b-b1dd-c8f4f6c31aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54d3231-3cf6-4e06-ad16-7da25c16dc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8696bb4-8d47-44f6-87a0-bffe86dc9423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc073edf-59e4-4597-8232-4cf5c86004bf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb28448f-3324-43ab-bdc5-86a059f7f387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d381c3-07e6-4707-9d5f-a456752ad89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c61b08-ba38-4291-a217-90435078d5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d18c905-488b-4fc4-aee4-00d6854ca617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e0cd07-b91c-4080-aaca-e8fd75956ee1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca4672a-a87e-416b-b830-207b49d2e607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e4594e-4c73-4cfa-b2f7-006b27014640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a4ba20-93e1-4b65-a42a-19b8c36e51d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a714088a-f921-4050-aa39-86e6d2c62e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9163882d-cb3a-4dd9-8682-48a2fceaec1f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a5dc43-3888-49fb-a19d-63f3fa073cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94346729-bb5b-4b49-b674-f2e302b963b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36352f7-6c88-4f7a-91ec-a27491c58a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ef01214-73f7-4e50-90a6-d0670d786348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903a7731-2302-4c22-b1e2-fbbd82cc9f9c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22320330-c6df-4a05-8bc2-019a6ae93f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbbe9f1-3d7d-4a9e-b967-0a2d7f0d93f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2dee56-9d1c-457f-8768-dd3480811f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa0f9b7-6890-4c12-951c-0223598a9cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9466acde-9980-483e-a91f-eb2b3353e367",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3e0d49-ffb2-4f05-a43d-7160dac32eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5f27e5-70e5-47a2-b6fa-2929433befc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5538b4-6541-43da-900c-15b2ae3b0e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40b95b4f-8fa7-4eb4-8751-37e1bae27f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6143f798-5e49-4cdf-9b28-6a93f86478b6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9aac6d-f5fa-4b83-850d-6e1290ddd7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b8da63-55f1-467d-896d-56d1f4b475fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6177c6b-d5dc-407b-8aa3-189e85ea3ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23784993-26f1-4f1a-b3dd-597b1a6b9366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4bc768-5cd3-44dd-b5e2-24ee2fedf74e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609ae7f4-7006-4e62-b461-5333a18b14b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fd793b-3378-4852-989b-dddc9970b872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ed66e2-e609-4b0e-aa6c-7db484adce58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da92c956-7433-4b42-9041-90d169393448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c17399-3ae3-4533-912d-6718d2373003",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4397bb-a7dd-420d-987c-0c1be3fbf00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420559c2-f6a0-42d1-8b0e-9180470b0503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14771914-57c0-4f49-8c41-f97fad85d2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "873f2711-eba1-495e-ba74-00244a8e9b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4204a623-74ba-478d-b33f-99da575a4030",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7849b658-b954-4d14-bdd6-4f77cd8c52be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804df9f0-8d2c-40ce-a818-d34f436520d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56672fa7-eaa9-48c8-ab49-1ddd3e17cbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ab4ab3-8d2b-4387-ab5c-ee21825da584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0e6502-5887-454d-a1e9-f6b01e0824a0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2480c31-af73-4b3f-a153-201ec47c7611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19af068f-22d9-4a2d-9cb3-31e021d47f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50147a3d-afb8-41eb-b960-f9ff62d51996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e36e6e-0990-484f-b8ff-09ae57b4cc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5178cb-43a9-4b20-9d90-5ea94b693d8d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa63c84d-dbfd-4c0b-bf28-2e16eb8947cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c60dc42-f774-469b-b30c-972c3346146b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb58550-79e2-4dae-b2d8-2d122f9e53cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a59d8a1-24af-4456-9bc2-e3cadcd9ffc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f95ea39-ad9b-43fb-b328-00444a8bccb8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a630fe-df9a-41b2-bdd0-98ad4e5238b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcfd5a4-2388-4f08-8f90-d26c5da4c0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce976291-15c2-4b52-b86f-4948eb0e359a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9591b865-ebe7-4906-a50c-2fbb783ffeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e711a6-ad88-4e9b-919e-0b1e6d1968e4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd1cb19-d0f2-4a8f-81bf-28b402a1cf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbec0266-6d53-47bc-a48c-fcb6aa48242c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d9d364-c5b9-4cd5-8888-ead7b76db5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2df84e20-600c-4a58-8cd5-bf07d89a1c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b2fbc8-b6a5-4754-b6db-8ea0ac5613af",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a218c7-64b0-41d4-839f-8369c0bb08f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db750623-903f-40d1-a9b3-f835b1b72b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1afd58e-5d74-4631-929c-b3d4e44a37ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "efa9f68d-8377-42c8-87e3-8a256f045733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f61dbdb-41a3-45a0-bda3-4860862c5179",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7765dab7-b837-4922-8407-3f49e0568132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ff344e-f2f0-434f-a059-991c4fddd89d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6685f16a-1225-4044-bc4f-62ec4c3c7606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23b47aa9-5047-40e9-8b4c-1dc718eb77ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454cf18e-0c87-48ee-8896-581503ded638",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e735edab-8f72-4284-85c3-4dfc497ae4f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11be1028-3c43-4aee-9671-3d78b94ae727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab4af6f-ecd4-4af6-a5b5-26fc6773d0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a46c1504-4ffc-4fa5-9978-cfff3344f851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8de3ee-fe3f-4fed-ab92-fb49a64bc230",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a007f99-cb66-4b3f-9612-aa0938f49370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a8f25a-bc65-4aa2-b95a-c45c38c0911b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7672e26-6405-4a6c-b458-108742f39337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b927908-4966-4826-b113-9fe971151a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f945f0b6-312b-4b9e-bd93-f61e7c183f3e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605b7231-2d06-44b7-9580-31a12c9a7bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390ada1f-a284-4415-bbcc-f5b56aaea16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfaacdc-5cb9-49eb-96a8-1046f991eac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97ba086c-eb16-4d78-8958-664c8c2f541c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d26dd8b-7ba5-4c47-a650-7eadfa0ccd11",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d19e99-beaa-42f7-b4ea-cc93efbb0f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c52ba0-64f4-404c-9842-1fab772d81b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7707b855-aa79-4dad-8f22-9ea9968bde62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d84a760e-af7d-464c-884f-95b13830d09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea56e853-d239-449c-a722-b78f8e84fefc",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0455e41c-dae0-4397-b952-820df9f1cdec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05ef313-bfe9-4011-9fdc-7746109a743a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b4f99c-202f-4aa0-80c4-fb927f197042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "491e0c7f-d5fb-4929-a646-4db4cdda38c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70b0e97-6c11-470c-9951-5733e4d45c8e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bbc7aa-a64e-4277-bc9a-15bf2a312a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2583d461-4c11-42d2-9faa-9ed1ae531b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49078b89-dad9-4cff-b4be-dd09a26f5f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63e78d79-2595-4132-94c4-b54acaead0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d836d3f-e864-4956-b27b-23cc22c584b5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9137aa2c-f3c0-4a55-97f1-27ed1dc35f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5caf0a09-c7de-4375-a41e-9d8bbb430a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f45c946-cbec-4183-aa03-73344fbd4562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8d848c-b8d1-4c6a-be75-51b20f2cbe1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e20e6ad-1af2-4e28-bab9-362b7ac7b0bf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44cb580-5678-4e34-9bb5-8466bf562b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e397ea77-91ad-4637-b481-b48c191dfe4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b994c34-4d37-46e4-ad32-a849e63a45a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "add73baa-00a2-47df-b1cd-eac6d21b09f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28c2def-95fd-439d-be25-44569b467bca",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8270308-363f-44be-8c9f-c4600e9df623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e414aba-313b-49ba-8bc4-19da8403474e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6190ad8f-f87f-4135-b4fb-42508695f80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba072b7-3d93-4e58-b80a-0c43e65e405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ac647b-3cfb-4793-8797-2651d5bc0fbe",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c29b6a-f2b6-4c21-9aed-dc93cda9fe61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1ee1c6c8-e053-4ffd-9d70-490798c42828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c73d58a-e6c0-4a8e-84fd-5bf311939651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ee704f-f57b-4d88-a9cc-37bcc09ed83a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed99a9bf-def4-44fe-9217-775d56470215",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e66210a9-373f-4e93-abc9-5f8f1b4fa43f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2836943-e983-4a8e-a7a3-6cf87eda274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88c5d267-a625-491d-9a43-7fce391eb11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b74aca1-7dce-4395-9c3d-239b5175a109",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "669a67e7-5c71-4ea4-ab53-b1f69f613303"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e79e46d1-0d21-46d5-8588-35639d797f37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "681d153b-223b-4f4a-9923-109d69b13581"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd856ee0-7adf-4c55-9e27-fbb10c5300ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65dd0baf-8339-41f0-91ba-911c30a471e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f45e44e-d286-436c-9d11-deb8663ff6d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f2f127b-5748-4762-83ce-08791fcf52c2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed8f10ee-ca02-409e-a289-8eb8bdd3f31b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54466b54-e22b-459c-b455-a189037a04d1"
                }
              }
            ]
          },
          {
            "id": "5337cafc-b821-43ea-a4ec-4565426165bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f5969cb6-a369-4ab1-9a08-6f880b1ff4c1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "190507af-c158-4719-afd2-603f1c844c71",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a645af9b-899e-4e31-99cb-1407f92a15a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fece56d9-1b52-4bd5-8c1e-007bec990a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb167b24-2b7c-4337-adca-98d0f0798e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89fd5ac9-f8b5-440c-9e6d-5d488fadd081"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14e9c976-69aa-4704-80b9-2dbf4b70a820",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27ced440-ae3f-4c07-be03-030149f6e8eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2ba9551-3f2e-4ec7-a902-8591f2dedb2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8de58db3-8cdf-4b6a-b2a5-d019a621554f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad868b26-8a38-4e60-94f9-e5130c3f1416"
                    }
                  }
                ]
              },
              {
                "id": "e0ae8190-c886-4f1b-bb83-e5b6d9d2af48",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aeb3a0b-b551-449f-a0cf-239939bf726c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8760df38-d3b8-45c9-839f-b513eadafce4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4830a2d-ec39-4cf6-baab-fc6e8b8204dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44a9b1ee-d277-486d-8737-5f4cd97301ff"
                    }
                  }
                ]
              },
              {
                "id": "6fb14dbc-0927-46ec-aa3e-22d1732bd6bc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07959f9b-bd4e-4058-b48b-f8f668899997",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0c9d04d-04a4-4c0c-9391-8ccf225116cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd446b50-23a1-40e8-9e32-1cc135192ff8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2deadb02-033c-4967-a0d9-fc3096ce80a5"
                    }
                  }
                ]
              },
              {
                "id": "74ea5742-0967-469d-a48e-c2baf81063f0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ab8f814-75ea-4d34-a418-4a1440ec3c8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68a41dad-8e49-4ecb-b1e5-9d76ec6f3663"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5666c825-2d5d-475b-8edf-05a652e87855",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b7922fda-fa84-40db-9893-a1fe4ec55d6a"
                    }
                  }
                ]
              },
              {
                "id": "a9d6be55-0ec4-4122-9342-a2a640775362",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2241acd-7033-4d02-bfc7-da541ee1d7d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7af8c6ac-3a5f-4f75-90ee-fdde75c93665"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87c89c10-f410-41dd-a0f8-ccbc4105ffb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a7b5e66a-57f8-40a0-b044-ab99b3e37082"
                    }
                  }
                ]
              },
              {
                "id": "afb63ed2-e98f-43de-8125-8dee46449198",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dc75436-480c-46a5-b273-04236efa910a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e5b8f30-a487-4caa-b870-21dd8e2aeec5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e276cad-89c1-4ddd-80ae-9a2d26b118ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "88e16d96-1d7b-4787-be79-6be9fd9191d2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc6d55d4-7e98-418d-9f2f-8e81194e8d44",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15bf6b8c-a343-40a7-808c-e5537c85c2d3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f9634c91-1437-457e-b7f8-f3bcbcd7b1cf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "325b86a5-bbcb-4459-8178-15ff93c34048"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aece07f2-2ae9-4b56-a36b-9403c3da46ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1fd844c2-1c48-46a2-97f1-17ec259aad56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6570295-3ae5-4979-9934-ae07b98915bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc82567c-4c14-486d-9bb6-2ac63100ad1e"
            }
          }
        ]
      },
      {
        "id": "3902d8e0-c144-4f36-b3e2-71e7f840ae0c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7c76ab2a-644f-4be5-bfb5-41ccad7f20a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bdc20bd-b831-4527-9e7c-1e34c6f3f5c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5f3e0672-2a30-43df-aed7-34047fbaf9de",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742e059d-e980-4c5e-a90b-db3071b909f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969b7acf-8655-4148-b8a7-bee43f00f118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d3b3b6-6092-49df-b35b-cbbe54060189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bf05e4-c7e9-4b7a-8067-c79e01da5508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6de2fd-716d-423a-8ab1-1f9a5bcfb536",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5bfa7c-6f76-40d8-a517-fbb153399587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e17e84-19cc-438f-b9c5-0b536808c536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833c739c-b650-4f0f-b359-7c008b6b13b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d94052f-c0c5-406c-b5ae-d0bb0127f245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13495aba-f4fd-4cea-8066-0857f1ede72a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff4fa1a-14c3-4873-8757-2e9347bd4b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7508a0-ceb2-4bf0-a370-acfa4b1207d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c39186-e25e-4d64-8588-59bb08b4948a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e13437-aa3a-4000-9b5e-62c0a52df718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fcbdf6-02e7-4a7d-a738-60debf9aa4ad",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e81888-8535-4b91-bd7b-efc4adfab6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f8f8fd-c06a-4f8c-8832-10feca1c0423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9581b0df-3d51-4bd8-8375-b90867d9caff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9e52a2-cd14-4b78-a67f-76a2efb81c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b6e992-80bc-4c15-a53a-ea5fc141a5d5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6ce250-4e2e-4147-8df2-7f9528a7773b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3d1fee-5358-43b1-a50e-bd1cafd38493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8593a6-6db2-44a2-932d-a1fafa9601bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "621114a2-2f2c-4f98-a123-3a93bd2ec446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8a5957-9ddb-4c43-b325-38c12771c16c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df649ae-cd1a-4aac-9d5a-b3593c45de3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a4c53e-5489-4e7a-a710-0364dbe97ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca53ef52-a0a5-4b1e-83e8-dfc9d96a0c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9821fc5e-7338-41f1-89a0-637b97051035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eda9c90-3455-4451-9ab7-8e06a0557d92",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c094a9e3-0c79-4ce6-ad0c-f89979f64ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31c5049-79de-4037-9d6d-cc929ae4a2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aaf84cd-889a-45f8-b528-0cb09c1ad8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3818a9-a0f8-4a68-8fb3-38c4033bbe90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e368daf-d7c7-42c3-a507-502c7eb5f649",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45ec5ec-62ad-47f0-91cc-58a1c3f2f1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30cd375-5316-4f5e-b6de-83d3be34de3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33757bdc-940b-4b54-adb2-d586f70dde88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a8cebf-773e-49fe-aae1-9d21ebb26849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecff2ae4-da79-4767-946f-55d945459316",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab6b689-b11f-46f3-ad51-caec09c8b218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53153808-c329-4c66-80ca-78da4822dbe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0172753b-09f6-43af-b830-7e65bc0ef886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6beabee3-1052-493b-bcc5-88b11fa12024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64f3d9b-dc9a-425a-a8f0-2f5cb9c5ef73",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47ad201-305e-4439-a0b4-4ad6855f3654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f46862-4791-4174-80cf-9598a8a26de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef9e6a7-d896-482e-9c82-3e9646de0ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54d410f3-84da-4cab-98f9-50c7612fb58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7071777d-bf11-4fb6-857e-0ed4bd4fa8dd",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd945d9-29b9-4830-aecd-9a205292989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9ec3a7-14e3-4e13-9474-c0cb2c07dcb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1435e90e-8d45-43b8-a4a9-8156606397ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "23b8e7ea-63c6-4d2b-9ce6-5fad45c1e156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7537fd05-15a2-4054-801c-1d0d32f01217",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1019ce0-0bf0-44d3-b65f-93c152aab381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e09f31-4c81-4d87-be54-dc49f4d54557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283bec13-fef1-444e-8cc4-c6bcd21c4807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "711f37d0-b92f-419e-8a1a-0d0a10cbdb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebc4f71-c67b-421d-a595-e448e2aa8418",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3141a806-8928-47da-9909-7d08fa3bbdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4ed6a1-dbd4-4a1c-a1a6-0db9577e207e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb9f056-09cb-4e23-9624-36752dd6bbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6be34bc2-07b8-4524-8410-c300c2398092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c4aa07-a84f-442d-aa77-9cda42793dc1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01e338f-fc12-4403-b242-481255d23457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9257b3f-61e3-4135-b39c-a2a7882fe65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d6fe3a-6f7c-48b9-acc1-44440766e316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c37da7-beed-4165-802c-ff91afde7f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f723e53c-7b8a-43d0-9b43-1c127b4792f8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd6366d-4127-432c-9674-1fe59c17c126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559dabce-0e86-4f68-9cd7-b2f1cd4b8c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fcd0c6-6613-45a1-b621-d6e8f24d9b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6cf828-8433-4d1a-bb29-c57173f2a7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca19f67-5ab0-44be-b0c3-d8d7aeb1213b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a0b953-5c03-49c1-96fd-bce2dbd1088e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854382ba-fa4d-41e3-8f49-aac9bc9ce189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b04743f-e2ad-4ae7-9399-ba38ee4d7c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "39af48e9-85c5-4e5d-a22b-40532d60813f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5412d2f-fcc2-4d9f-9ee7-176356209030",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1efb76f-a15d-4b35-8163-4a96a7a19f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435244fc-aebb-4272-a484-f9765aea5cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fef04f-8831-4c28-ad29-9d699db1aa37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "31be71c0-f49c-43dc-89ca-b38233c85b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d924de24-6cac-48d0-9e9f-f5fbc5bec191",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72350e5b-a133-41fe-9b67-1b84f7e0c384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ea3b79-65c0-4647-b603-dab30c823d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c463b6aa-6588-4299-b108-21514b7df012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c38c7420-ec06-41bb-881d-2a94dce04cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44079b2f-5297-4876-b0e0-c09513636216",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3df7b9-dfcf-432d-a01c-3f843711c647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660de2e6-7c9f-46ef-8a87-8426dc909d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f850ae41-5265-4203-a52f-2c7a5346367f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62e6d6fd-eb68-4494-9427-c30f0e016111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae3cd4b-d579-4f7e-ba94-c4f34d1597fc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a75d1d-9669-49c7-b41a-74c61681847f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6219f096-1d7f-480c-b4eb-7677844fa92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad4c53c-e363-48ef-952a-bace23b6e7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7ea07f-e5b1-485d-976e-8b96d33b018f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38a79f8-5337-4334-99e9-ebd841e27c24",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40bec79-31e6-4a3f-993c-7f5124a4dabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c7ad33-a79c-4050-8e3f-eb7ce0df26ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be324e57-3744-4a08-aef6-95394448375f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65adba7d-213b-4bee-85d4-5755f61acdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d37432-afb1-451b-b741-a3f9be4dfe96",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5e997e-701d-4bcd-8739-646e4241f525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa41e306-eaca-4e09-9e76-624eeccae002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68135f6d-deaa-4ec4-a435-13c425e5efcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f6694d-eef2-4b8a-957e-dabae6ea59cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62fc970-ad67-48f9-9eec-109639ad9d2e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92282bd-f702-4ecf-bd60-77bc03481d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf93c27f-6e95-401d-8abe-2f0eafdd236c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463f3dbb-bc79-4b0f-a1a8-3d88d7081877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0315fd3-b510-49a2-ada5-ce051377e8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9638702-e8f6-4bc9-99a0-fadaec656c7d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8af8fff-f24d-433b-a4da-8a4073a72ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcfbb20-c8d0-463e-a7e4-6fd89e2c8182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a69489e-d7eb-4e44-b0a1-963de67debc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c682dc75-80fa-4a29-839f-b87457b8faa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8fa9d3f-ea8b-478a-821b-1668a2b3a92d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee5122d-9f76-4c77-8c8b-6d241bd57d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f313ba-1eba-41fb-a565-162fda236d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29aa1a13-b75f-4c9a-9b88-ba4558c1a61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "530df02d-d6dd-4ac6-9ceb-16e77de841fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfecce0-489e-4bd2-8fa7-fc8d4a3d410b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f739886-dd3f-4b39-8ec0-92661009f8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635b23f6-266e-4cf0-91bb-8abd4065c854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98bf76a-6617-4efd-8faa-9e826b791b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d836f076-cc54-45e6-b8f7-12bc4735a7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaebfe3-547e-4250-ae53-7cd3a17e632b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4a83d5-1a4b-4344-af52-dbc1dcf42861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c31ea51-34bf-406d-b69c-56fa8f28abe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1016e899-8905-47a1-8bbd-27172c16c60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae854b52-ba7b-47f8-8a34-a46e35c874b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8646882a-fc43-4150-bb92-e9c8a25e1aa2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc5af76-4c5d-472e-816e-8c49f607423d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4037a3-ad86-4d41-b6ab-506efda725b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd8bab2-ef03-444a-8f60-9bbcd29914b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c004a5-5fb5-4613-a64d-8cd35777ca37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b85fa1-4315-429d-982b-54cf8d8733bf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45d3e62-548a-4576-b767-b66c92ca7a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18983728-a31c-491e-bf3f-2c2433c2a9f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd5807e-f019-41b1-97fa-d6f11a482030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e32a1bcc-5be3-4828-9c0a-52a614760251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e942fc-1146-4a13-b56a-24c958e6795f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02b9725-9f15-493b-81e1-ca06e54a1fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86eafac-0de9-4b35-9c16-a1b5aed476e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95919727-dca6-450a-a32a-bd8f9ed7041a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fb6a21-5cb0-4b44-a863-610945687ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad79b805-00b2-488e-ab1a-5368cae40322",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a131eabd-7711-45d3-967f-28e8fb04ec16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144f6cc1-3aa7-4a6d-803e-8a60e3f57b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58288d87-bdec-492f-9dc7-6d6a42628b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf892413-ee96-4e4b-9cc7-2b8c1fb67447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa2d8b6-d8d0-4661-82a4-580454492dfc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf7ccc4-a925-4d0d-8293-2af999bd0214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f3626d-73df-417d-a426-f9ec376f6297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28674c8-a3e3-46b1-be0d-39eb421c7588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24226f0a-94b8-4836-9969-54b4b4870907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dfa895-e378-4599-8ae9-78bbfabedb42",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d9200a-6374-470a-9ca1-98a6b9ce71ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffaff926-de86-4ac6-8f72-65a72ee43aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6cd554-ee96-4ac4-ae77-fc94a35dffdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf65c6ea-29a8-4429-8819-a37a532cb282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3404b6ad-82c4-47d5-b044-d7d90d7d6576",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7693df2-3c1e-4eac-8b69-8eb15e2b1125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94717cae-8d10-467f-b290-94b58bdfe9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59f0645-8c6d-47f7-93df-f67ed206a352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "832b4143-2917-4657-a0a4-c357b35c4acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f23824-acee-418a-8581-9f155a61116d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d16f6a-0c69-46ce-a56f-a9b132e3b916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0347d7-8619-487f-8c5d-5b93e5085c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdba6b1-f73d-4e4a-a8b2-7af0ce781fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1821fb-46fe-4d43-b201-966da30957f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39df725d-103b-4bbf-9ef7-91a46fb1b0c4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa2e488-9d9c-43b1-a73c-92e6f8b5fd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7322f86-360a-4f54-aaaf-0c5e00df8ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8d271a-75b5-4ac9-97df-7676f30b22db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b1c98f-acfe-4a3c-bb36-a07838f799a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704a1338-a7e5-400b-917d-d3e24c081b19",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacc7790-9a5c-427d-8ea4-00cd6f395977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6bda23-5c7d-42b5-88b3-b8b185bef4f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0205aaf-95c0-4e10-a058-989325076904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "070491ea-d96a-46f3-880d-c4f5ff1186f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e203dfd5-b83e-4b14-ac80-1ae222fc0784",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35b6c24f-1ec9-45cc-91da-235ca6840a2f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f239262-70df-4c23-8c6d-f4070dafa703",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "04553cc9-2d3b-4b3c-b308-527ef5e58723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9344160-6be7-4a04-99f8-c3499a490a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5734aa36-a97e-407d-aa9c-4990c67386c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86f5ee92-3a8a-4fb9-bef3-9f8cd7969bdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef33ee56-c9a1-4c2a-9bd8-c7d078c06134"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7a185ac-23cd-4d3e-a82b-247a82a1b6f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c03e04df-7af8-4b55-9a09-6fe44a2efb11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "712f1b26-f9a5-4661-a1bf-bb2d622fdfbb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5c3344e-19bc-4074-ad15-a43fbe594b95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d43e7bcc-e778-48dd-b664-6a38d53fc2ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c1cafbb-bf5a-4e98-a04b-e278652a63d2"
            }
          }
        ]
      },
      {
        "id": "33980a6a-60c5-4ee6-9d78-e8b725e4648e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d1866660-3d56-4f49-8bbc-48e38595b2af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f907f7f6-78c2-4c44-8bbf-8ef673095081",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3008d241-cb02-4ed4-b3b1-9f4de2ba506f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43a852e-be91-4a3d-9436-4bce95647504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e238f62b-b1fa-45af-bbac-089c0678cb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bea1619-b751-4b44-83d8-429b80cb53b8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fdea10-fbb3-45f3-ac46-fc1281290bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fa6a36-bdf0-403a-92b7-f3f7f414bfec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c905cea-309f-4604-a0da-5f635a6fb737",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c49b794-7a14-4ad6-9199-64a6b37aded2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c7e918-d426-4103-9e89-c06d50f603a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d914e92f-9910-4cab-9b93-d4525b80b694",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7078dc-fe88-4e1f-a107-14b60ae59eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df6cf2a-89af-404f-89de-bad8a2987253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e697205-d7f6-470e-80f4-862ddeda1ebd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d2252e-d34f-4160-b8bc-9ae12b6ff119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1993878a-9840-4f9b-be8d-1153d44f13f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd1ae45-e944-4924-b3e2-64b567de3dd8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e792cd2-2549-47ab-8004-c854aea71edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4287a3-c7aa-4595-875c-a2d224096c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215fcb0b-0682-48cf-b1e3-9937b31345a3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b3ca8f-36ac-49ba-aef6-b492230870c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89c9375a-ec62-402f-b7aa-cc762f18832a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c04005a-1eeb-43ab-9081-6fe7172fa4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f388a40-8238-44ed-b084-90fb6488c78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180d450c-9a13-4524-9866-1173047fb3ef",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ddc033-1050-484c-9d90-b7b8fb8ebb11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac9e4f44-de99-4b00-8ded-7d02f106284b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "553ba2d9-1c6b-4e17-b69c-64e9d0339d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dceda1a-2e83-4cdb-9ae9-8f4350de8bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a033dd9-6480-48e1-a491-a4baa903fd0a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be47c0b-acfd-42df-b4c7-9f7a3a659598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e98c23cd-0474-475d-9611-8dda2219e17c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286b42e6-5f7f-4b2c-b1ed-15eefd1e7a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5448b886-67cc-4682-bbaa-04522b400232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6dcc76a-5e86-4329-a2dc-1f0e1f634abc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75174dd5-76e5-4eba-a9ab-6b1996bc57e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cc6ce95-a6fa-476c-b784-23b67949a41b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efac33a-5e53-4bd8-8401-d19f1652f19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f52340c-a41e-410a-b2be-28bb29877d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d946a9d-ef56-41fe-9c31-8f0ce4094b6d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fc7c49-61fb-4df6-93b7-36a2dbbd08c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b66693a-f099-4550-b779-51851c7e52ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b49c08-516a-4980-9ed3-83b972ce429e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baf30cd4-3f17-4f8c-a998-347df2f4be16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48264106-fbea-4745-8fe7-9cedd13e2811",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7c1da6-29b2-48ea-b107-586f7da1991d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69895387-eeb4-46d0-87c1-a25c6e52a119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7be1929-4970-4ea7-9d97-dc5ff7471a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9586f2-b3e4-4233-99df-796e02421c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0b3fb8-3d09-4bc5-bf05-5efac52a7f81",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cae7078-7a49-4559-bf2a-75c8825df5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3516e29f-fff4-4a7c-8ae3-104fa5cfcbb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0556625b-a7dc-4330-8913-3ae7f22e8c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd5b1a5-45e6-434a-98fe-8ce5dd28bad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c4f2bf-74b1-4558-accb-b25f7cc0bc06",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ee0b64-6959-402b-b200-478b6d78c2e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77eeb426-fd74-4ed0-9b38-cb7465a7a6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da797ab-eb07-41a6-b454-3c31f9a94277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24af315-82ed-462c-9dc6-1d137c7b3799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6657f3b8-9141-4157-aa9b-f583869b05b1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c67b1e-8791-48fb-b30f-0291a756fa1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7cdfb50-7a08-400c-bd5b-1d4394af96f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfea9b7-0797-45dc-b0d8-cd485945c942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a6c279-31ea-4c94-92ad-43a37f4ef3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add8b367-ce25-49d8-8767-1a03c6f2772f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9002ee-ca0a-4329-93bb-e1c2224abdf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b8dff8-2d2c-4699-98b8-cdeca2ce972b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561eee83-c526-4889-a8f8-4e5e1daa6d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9bac50-746f-4f90-87a0-f757f5790783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d55249-6ccf-4c5a-8d39-fef13f37fc5b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e763f632-5672-43ba-9088-66ca0387bf70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c759187-e7fb-4157-b348-bbcd1026a695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f60ef1-82cb-47b1-8da9-af845c13ce53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de69424-4433-4fad-8b4a-dbb89a054514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e38937b-e334-4a20-9787-530fb4da6814",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a66310-7d90-4c28-bf07-b5eb94985146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abb7969-d32a-40e6-a5dd-a97f48194ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38396239-5f3e-4415-bb1a-ecc4fdbf2474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a8ba577-82e2-4e34-8499-851c835f148d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7a5c36-3db7-46d5-95ea-7855aa64c7b4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0811d551-645e-4278-8c91-15dac7e912c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5441ae9-0c66-4f5b-9438-528512a55eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e22443-f3e8-49b1-83cb-7bf537571501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d057e8-e61f-4985-92e2-9c52360addb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b6c76e-c72c-4bed-80ea-66cbff44d45e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7f33f6-8496-4013-8475-1907d362fad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddb54b5-30f5-4b58-9a2d-fe9eebae7d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fecf17b-e462-4b71-af6a-0c085caf5d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67113d58-731e-4ee9-bbfa-b5a9e70d2cf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4273bd6-c5fd-4a23-9432-8bbfe762dc4d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043f8d07-c350-45b5-bd8f-0a06b71b266b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2862b98-363f-4193-b943-d54ec7e5d634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad336f9b-b385-4121-9c5f-cc8f80a06677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540ef209-6ab1-414c-a32b-2dd7cf4dab74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc15954-c8eb-4e19-aa6b-e3ee87b5a7f8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4846119-237f-4071-a5f3-ce3101f462ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3ead51-b947-4f36-98fe-34f632a72b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a751c17-fb83-47d2-87e9-0a684250670b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d8944c-cad1-4e9d-a748-22e49092a3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f157fc4a-ac2b-40bc-a5d4-73828b3b5d2b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9200d72d-2128-4b6f-a462-dcf150dfd19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7d0493-78e1-4bd7-8761-01541e9e9683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e428d39a-5b94-402e-a5a9-bdd7bbc3eae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a69145-6527-458f-adab-bbc4847fd213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b961100b-a9fc-4521-b345-2b069425f109",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a10f1b5-6c8c-4981-baf7-947e0ec13f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8c26d52-8dce-486d-a3f4-f1b4ee9a5984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c21671-b6ff-4ab4-a1f0-311a296481dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3dc5db-5eb8-4566-bfbc-155580b5cced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c82e08-2365-4de6-a483-2209d004774d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a645bf0e-709b-4881-a06b-72ad1da758ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53d39078-ef22-4594-ac45-3a84ec6609bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bee6a9-471e-41c7-85c8-5eded3683fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb46fa66-9418-4214-bc34-16deeb893564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f11b96-2e27-482f-be03-c45af3d9e666",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37095e82-d61d-4850-b9c7-8470c7935952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9198d0e0-5f67-431f-8de9-c27eb7749074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb2b03a-259a-4124-ab4c-f8ab9ba29e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fadf05-b686-42d7-ae81-6f188f305139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909b428a-53e0-4c69-9063-568ffbdfe8c5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df355a0-d572-4daf-adce-ae7c96355baf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f4b468-852e-47f7-a3ae-3da076519aa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e0d499-df19-4d54-8ac1-68a2b375fbbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8884e93f-1d9a-4b5e-bec6-d235455ed4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e403abf1-fcf7-451b-93c1-277254b00ad0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed757a4f-e519-4413-807f-8edbb727dd9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb76b987-5151-4f66-8d10-d34db2f0c418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab63b246-49dc-4558-9e36-1af8f036485b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c93203f-b47b-4f4c-9cd4-507c6dd4c270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b2d1bd-f711-4529-a5c8-f5a1ba769430",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486a795c-734a-4f4f-9cf0-c67e45f5e75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8769d16e-1451-4c0a-8f44-442add526997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be7cc2c-8d71-4145-8e7f-8006a4901772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e00993e-5516-4454-8160-c822f6d702a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2abc89b-1527-4bb9-acdd-ecb62ba74f13",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4143da5-a35b-4b73-baab-d6e63ec1bc1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0984f0e-0a71-4b07-9acc-a6ed910c01ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aac023a-d7b5-441e-975c-cee2d5e29a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a784a39d-7c1e-43ad-8d0e-159b9bda5011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778b4375-5493-4d88-8789-ad2cffee48b8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f8311c-020c-4b52-b89a-49aeef24a3e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d97057f-cd57-4734-a685-7a84cfcbec6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2406418b-34c6-4a6c-b649-0ae55094e801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14069946-1ccf-4f5b-a426-5df1dbbc966f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e2a49b-d5cb-4cbe-bf31-cbe9cd469f73",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851f706a-8d0f-4da4-8709-41b6ec324b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5c63aa-d400-4d9a-ab33-97c73eb2ad61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "685ba64f-cfe3-47e6-96a4-fa3ecde9639e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde991bf-35e9-472c-a946-f6270c44f61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae66f62a-d0f2-440e-a3c5-6b9b2752432e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15cde06-854f-48dd-9468-2cf6064034c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd8eda5e-e18a-4a0a-9504-ead491eb713a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c439b8c4-4ca8-4927-827c-5bc50af0dfee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d591f00d-2ec1-4a1d-bc97-31a625521e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d6ec80-fae5-47cb-b3c9-2c2a655f43c0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a6f094-f1d3-4dd7-9067-756e521c5667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6307477c-4c0e-4fee-9bed-c4318f2b7a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe82fa0-f223-411e-9a06-c06cc8a3da4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983de9ef-2756-423a-8143-1a8934b9a179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863b87c6-ee8e-4eca-8f38-15f17f34380a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f89b40-c14c-41f7-9dbf-77668b082835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b2e5cc-b330-4097-876b-f2246000c022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc29756-0677-46f3-a9f9-aac870aae87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5710f4-f16c-4a74-b97c-0360a54aba06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a47559d-2f75-4988-a4fb-2c268d7cafe9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8764f624-5e1f-43ed-959f-40bcb7d4b0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c568985d-8448-4a52-b7c7-f26e5ae376fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4317c4-a092-4c5d-880c-64dc5545d888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786fd12d-89b3-4a61-b095-c28f720873c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fef16bd-36a7-4245-a91b-d6971091f759",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c757da-602f-4310-bac9-51abcb2628a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d60015-6d88-4b25-8564-7913533feef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c58491-30b5-4c04-ae4c-ac218fefa1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b26ddb2-90ae-41a1-b5d4-a6137e12977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7a9c43-6659-43e8-8033-46c98b3959f4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5e3ba5-6f55-4b86-a507-7cc6d8014e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919d9dd4-39df-4b64-911f-d49518cb5ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167404e0-2db9-4b58-ba96-5d644e52f317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be28b021-2191-4a38-9436-af63dcfc8e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122640bc-bf1f-44ec-a1e3-7d6fbb3f2c48",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20012755-fbc0-44d9-a120-7e56a8b2d426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999c45ba-733b-48ca-9bc3-90c1241342f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcdd41b-c345-415a-819e-d174c17e7cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea0fa7b-c35d-455c-942d-75765a57a661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f136dd13-1a1a-446b-9dd3-fb128302b052",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3787b2db-3b41-4c7f-a3bd-e0a87d08cac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cad187-870e-4b54-959c-478ee324d8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57726a5a-835c-4f92-95b6-e67cd0fb4717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f592c1a-d950-4f84-9d16-8807f7dee91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b86e92-76b3-49e5-8af1-985759adff2c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59caff8d-f57d-4332-af2c-1e5a0b9bd70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f89d012-43f8-4bb5-be90-223d96e92acd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08daefef-c5db-40c6-ae0e-c99c3af39c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d229997-4912-4072-83c1-49896dbba420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2114258c-06bd-4085-ada4-5854485243ab",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9ad3db-52b1-43c2-9cb1-132908aff87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b32499-97e7-4a68-a987-4e11728e4ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a208a1-c54d-421a-874e-9747c7038502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ab3030-dae5-4061-bfde-acab48d78e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cdc145-9e3a-4367-9d3f-98ad8f13b14c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82621a44-3c84-4bc2-adfb-81233f6c404c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e30ea68-2429-4fcc-aa43-8fda34b466ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a007f7e-2741-4ddd-9215-c6469d5a73ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c521e38-54c4-49cc-ab03-e74b9defd6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e7cb32-0812-46de-a0eb-fd7bb1553034",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1296f572-d642-4613-892a-b5372b460b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b415082-c876-47dd-959c-8b4db5e1b092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ac8b29-4907-4166-af9f-b7f18f2a95fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f16facc-03f3-4968-8004-482738bcc743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a7f54a-f61b-4e05-855e-51b95b065776",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0ea565-64c2-4485-8a18-d9aa33966b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24e7984-f904-4589-b39d-88d57e4075c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c22a4c0-6389-469a-b6bc-d2e736146a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e885c92-eb6b-47af-8598-646fb7d8cb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072ea788-5e6b-4fd4-be2d-75aee85f1b7c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15e6ad7-d97d-41e4-9dc9-92887262f35c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86496631-a450-4f5d-aea3-e0573518d95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1971de7-aa4a-4992-8de6-cc326e9dd9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e96cf1-c2dd-4cb7-8892-271836ea2376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8a3fd3-cfae-428c-b659-0bbb2e45282e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b39bd0-af5c-444f-b5db-c08b3c798ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227a9fc7-94ba-49b3-a8a1-4fb22adae2ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af46201-8005-48f3-86e7-fc71ab526b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5593ee07-7b15-4ec9-ab85-430a40e75828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a19c460-0e1d-4ba7-8449-5c9e7acdd52d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d990f10-e10f-4370-b73f-98e0ee07c57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47935efe-9dde-4f99-95da-4689e4dce38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cc24e1-aca6-43b2-8bca-bb7ab8030a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31770312-7161-41a9-9fa6-f8fb0954f08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baafec9-04c9-45da-b625-c768b9fb724e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a027ec01-02c8-42b4-871e-decfe6c74974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdeddee8-8180-4335-bd4c-96424df35a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda74328-f771-4e71-9cb4-6ec8fe02b2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693330d7-e0ba-4d9e-89d3-6db72e37c54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7599373f-0913-47e8-850c-1135096f0cab",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465727eb-d4af-43fd-bee8-f54454aabd07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe97002-ca4e-4fc4-b868-dc0269c64dc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b42f958-92ad-4200-8714-c67b840b4940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315c3901-3408-4fe0-be6a-1cc3fb4b232a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a1808d-f516-4182-9490-b2e85bad5031",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55a88d4-ce08-48ff-86ed-eaa78a9c859d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7311f30-60d4-4783-8031-5a37e154c216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8b14f9-2e91-4901-8966-245426022943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bd3458-a076-4120-9e2f-3ac2707cf0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f9d237-e2b2-463f-9923-89aa5cd5f286",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243034d2-0079-41f4-b2a8-afe9f5d173fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0cd0d6e-6c0a-4cd2-a534-207f88dbd1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65d222b-cefd-4164-86e3-c90325c4c774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ca0d28-4b13-4789-b3c3-8378167e2a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec72fb7-dde3-4bcf-832b-de354c5f0780",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7b698c-7f31-4464-ab84-3070bdeeb5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00dac10a-d413-4528-ad09-a8fb75cd3e25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be53727a-9837-4a86-ac5f-9c0745390482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865b5157-adab-4b62-b505-daf6b8491cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6f4ba8-ad9f-4257-8801-e246fac534a6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c20b606-27a8-46e5-8338-0193bdd41eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ced40dd-2c79-4b94-ac17-727710645482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff7db21-6861-429e-97f2-404757435198",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ba8f10d-da34-4b86-b356-7d3ccbad9e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08d1481-765f-4c83-8bf3-6c0c37b9aae3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec2b34f-407b-4134-baa4-ffe0eec97927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7348dbd4-efff-4f36-be33-51e1695de020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c051e2ec-0fd1-49cf-824e-b0dbec5cd3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d285d9ec-3836-493d-96d5-81a44276dbf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e92fb18-5176-42bb-835b-65fad3438543",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222272ab-31e2-4575-a7f1-31a5e562a316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524263a1-d33b-4f55-8c68-525a29f837af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f86f7d-5359-4d81-8fdf-7d14e5f3cde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7512815b-2a10-4b1e-83f0-57d1713a0a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e01f42-5572-45ac-ba51-2fdc976d5e27",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856a56d3-5425-4ef0-91b8-2b36ae491473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3bfb20-fc05-4024-bcad-4937bf47191f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2451c3c1-c14b-41ce-a726-e6be7a829cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de6e023-2964-42ec-9dd2-feb1cb75bcd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0457a7-91ed-4037-8455-7339008e7373",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6f9838-8d13-4a26-a5fe-505044f79abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9decaeae-0bd4-4fe3-9f66-961e895bfd19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2519050-84be-4d16-af1c-ab27364e4dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9c95c7-3aeb-46c6-973c-3e8cb7bfd1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d81531-9ecd-40f4-b388-ed4020e819d1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339eb863-6f91-47cf-b049-0e9b007b6110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7f8958-64b2-443c-909c-a6bfc4465b46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c231dc39-f2f9-4934-bebc-69cdaa2c0665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846f7f90-537d-4d81-8ca7-cba02a189f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee97d075-2f45-46f6-85a6-b46191d9b993",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6317bb74-49a2-4334-a18d-acb34bb7b1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09ec37d-a490-48f2-8f46-109642fabb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ab5e38-5d9c-44e7-8f08-3ac62aa9265c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ef4433-b2bb-4571-8e2c-2d565c97f294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5687e3a3-af6a-4d4c-88db-af2e78641c69",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4961cae0-4705-4933-9070-3227ef5832c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540bb972-41ab-41c9-aabf-5f2697c7bed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8247d4-5776-4507-8c44-66bd78ad53fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77730105-f3bf-429d-990a-828d4585c374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54ce199-d2b6-4681-8fa6-1af8ff5c558e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43053ca0-dc31-4348-b727-9c07216e36bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87af47f-f3a9-4ec1-b81c-57f2edf7e6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62033a4-f250-4f6c-9f2b-e3d0642a5287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292c9834-06fb-4348-9273-485d4c86be95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ae30ec-8ab1-496b-9761-0164a250149e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee8902f-153a-4204-9ca1-8c980c670b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efa4d4f-a8b0-4e31-ab56-6851802d9b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9ec13f-61f7-4e3f-a68f-7ca0f496acf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3045556-aa3e-4895-add6-ab77cc5c3694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06007863-c688-4ad7-ba70-b26c1c0dfb01",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3a6431-09f8-49fc-9024-bbba30ccb365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d255ee-8086-432d-9c61-cb4c34bc1465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af28136-5303-4c71-ba24-b33349fe5b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d3cbee-c1d5-4110-a36f-750ac781a753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f9fa3e-aac4-4695-a163-26a4ef766c1f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca857d03-7292-4eb6-8ab6-475e2cffd2b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318b6704-8e1f-4171-a97e-defe46faca9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0340e1b-93ce-489e-922c-7b49289d4ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec814171-faa2-4136-8d03-da41f27498a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5a2345-6b4f-42fb-a497-12f5dbd03c99",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ffb2c5-7a4d-4911-939f-b8501f9f8c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e00f149f-ed94-40da-b498-0abecec757c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5668317-1ece-447d-8433-af9c317555cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc03a88-26ac-4e82-8467-351cfa328934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8a8d34-466a-42a7-b09a-068ddcac100e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fe76c9-bb84-40e1-9820-f5a5bb402cf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbd4e141-0e5c-40e8-b965-e640e74447dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e69253b-0d46-493d-becc-25419628f74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6ec606-2af7-4713-842d-0b1352899de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e7290a-5f4a-4519-8162-c9b67babef3a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9056022d-afcd-465a-874c-02d7825de20b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5fd5574-1855-481c-a99a-a4c4da9c7f1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3ee5aa-c1ca-4a23-8bdd-79819d6cf74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e25533-1838-4217-b0b8-f50ab237bb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa5ace8-9b40-4ac5-8a6a-da7425170085",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf06166e-558b-4cf9-90b8-4775a0f30f90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9414e8ff-789e-40f8-b65a-99df87a85690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eddb9f4-77c3-4904-94f2-6b577b526fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c513f21f-fd17-447b-a68e-1927b135a083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3741a940-38dc-4936-9397-0f3c91cd3e98",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b29506-059e-4f45-b88b-63f9feecb21c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ee2c10-000a-45dd-a853-2f887861e0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd48232-2252-4d89-866a-81443a728e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3053b61-707b-42e9-a118-a4e904269260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2e36bc-9e5e-4414-b655-2d58b2affeca",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18e89a5-ac22-429d-8735-abad278065b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a64872d-580f-4d5f-bfd0-2b1ee3519541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d7cacc-6ee7-40ff-81d2-f8ccb24e7117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd89708-edcc-47e0-8b03-c93d740f0498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5749499-5bfa-4079-bd60-856f333fdee3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9e3c07-a508-4e29-8bdb-6c8fe1e3f072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad91b022-7cbe-4650-b784-4d3790bf8e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7fc032-1dfd-4329-a258-68de13319017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d4bb48-49f3-40bd-8df7-55b0101fcf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d44b0e-a3ee-484c-80ae-138bef286d5c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c106ba58-60c3-43f6-9241-80611ba2b304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e39ff6f-e3bd-4b28-8970-6583efa188ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0e5558-479f-4ca5-9f15-1d2266e844c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b979515-004e-4f2f-9d19-f02f2acf83f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9439edb-b7e2-480f-90f5-bfacc88785e2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96101f7-f1ee-4342-b252-ae4e654538f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a99927-6446-49fa-92b1-50b150d9d6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad22289a-5296-40f3-8266-1035357df167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacc137e-35d2-46a6-b845-f0b6aaf3aba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf12cd7-2472-4a3e-b8cb-402eeb3e1b20",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45903f2-7bf9-4fea-8f6b-6e60524becc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944eb0b7-21e3-4feb-b509-35ff21b80128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d559d628-8366-42e2-9c7a-a8b6ef5a69a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaf629c-b493-43fd-a960-9df55ee09b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b26fe4-9487-4c14-ad56-08d18c2dcb3b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48bddb2-daed-40c9-9fdc-8e799a10219e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b96b220-f21b-466e-ae26-fa6817d1b8f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1df160-2f72-413d-8587-98d848a91aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8612e32-57a8-4f52-8a6d-a8b6dc23e5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2acd4f9-41ea-4fbc-9958-241966315d4f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf2b54b-aec3-4a61-a4cb-96db497e09cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12a4a12-1bb4-40b8-bae0-45a722ff7789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f8d498-9a07-49d9-a795-cf95c5c1d8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5057fd7-569b-47a8-96db-8270331a737f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a520e9-c956-4611-8b50-10224f09edc9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fbf639-747b-4e5b-bb53-e57ee44ce5a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c121677a-2cc4-49e0-8b60-1aec63354c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b256152-d011-4835-9484-9564db39a2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f641ae-878c-468b-8aac-61b951eb2980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1929f7c-1ad5-4c3b-a5db-164ab25ffc8e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950c95cd-e811-4ba2-9f40-fbbf2100e4bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7c967bb-97b9-44d1-b16a-0a61944c8f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26325d5e-24bf-4eb8-b6f3-8531ec892ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a36945b-8964-4451-800b-2530e8710514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780deedb-7645-4bb7-8d16-133252d0ba7c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5550e2b9-d0d7-4b30-8a58-4fd5e63b7751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f6a3ee-b0e8-4015-8df6-c084606fe74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52295391-1bc3-4ffa-bc41-afd4fb507a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d171819d-80bc-4745-87a8-9152a260b7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4dd070-b908-499f-a2d9-62857ed8f00b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffe4a81-7906-40de-87ff-b52e664f6e65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e22f1b2-39e5-4c25-a519-c44569f2d4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a339680e-015a-4127-86dd-13c95e2ddabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93a4e6b8-f182-4fd5-ad15-a23f11c05fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c762e3-3f02-47b0-9744-1d07a7c9a7d8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f45701b-7b40-4085-a7c8-1d0195e1ef35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a7e0e33-6f5a-4d0e-8ba6-faace3b1c592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8d2d11-52d8-4f5f-a835-4f182cda6b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1e959c-9bcb-46fe-8ce7-86e70ca6dfc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb2d3ed-7779-4424-8096-e33b8a098def",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2f221f-0792-466f-85cb-140b22d7d1ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b1e5851-ee8c-4114-814e-a57a633427b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab6ad5b-5956-4823-ae69-cb5bdf319c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63bc8ae-5794-4775-bbbe-f11116a42a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dba97f8-2ff6-4f17-85a7-d8bf9f0e5696",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85ea163-b54f-4f4f-9b22-96270e1952e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b2fe764-2cab-4561-a6a4-d086d489a117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5be889-8b48-4658-989d-b558a2ca8dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9024e821-390d-43eb-8a6f-516c49e88789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220395d8-37c8-46a1-9de9-ba9fbb1ad297",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a6ee73-c18e-4f12-b650-9d791a6dd467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a79e818-13b3-4207-b65e-93b953271218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f42dc77-ea2b-40fd-a2b4-fc543a24f70d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3258636a-5939-416b-82ba-bccf2128f581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf18e7d-5110-4321-ad15-3747787d1bac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72f7288-af39-46bc-97e7-a4f3768916d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffee3745-2ac6-47d4-8691-560f38fe7f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b18eb1-bc16-4486-a4f4-21f170815fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a57089-8a73-464f-8864-fa68c42f1b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab504c27-bb7a-420d-a155-af2023adcb5b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f526a2c-1d61-4a00-80c0-4305d4d4c030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3edc743-432d-4247-82c1-0d5c83ec6c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a36a0c-efa0-48f4-87b4-79fb45d53ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f279bc-2ebb-4ac8-acf6-5fae0325a1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7350c4-2252-419b-983d-e6d3d788a2dc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751bb36f-08f0-4ac8-a51b-5b5feb1160dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37a12f55-35fe-48c3-986a-476e9aed7383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46d89bf-4109-41da-ab2a-12a37b4a148d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af8dda1-6cc0-437d-9263-78bb5a21adfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f460078-5142-483c-815e-f82bab7a3ffb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e36e460-7489-4e51-8f65-c3f907555227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80aa51fa-c8a4-4057-b5f8-915b3142c5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4727ad5c-5077-4f1c-b078-2b00cc496e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcddf97-d071-4680-bdcc-395ee1b50443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ab9cbf-ab05-4ba6-9ed3-fd6c8160a2f4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af81dad2-dd2a-42ac-a8d7-3e899fb02a06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fef32fc-7555-4c9d-a91a-84efd91e3c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674053c0-d19a-415b-bc9d-0825f15e8fa8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6ac047-d8a9-4054-8141-3e467713216f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ff4ba8-c400-4590-988a-507825b10819",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983dc735-5c15-4569-beef-17c68bcf5e16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb14db6-4565-4887-9e0b-2c82d072076b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2101240f-9421-4391-bc5d-f0c587ef4674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aace510-4861-40e9-a250-15e8aa220a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83286deb-142d-4d43-a0c5-4d76d98bd834",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a07d3ed-f757-4e99-b15e-0ae3fc963baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d692ef-395b-43e8-95a3-0988420fb1db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb936b7-769b-433a-9885-fe5454a750d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd62dec4-8856-4419-acfd-f8e704d48333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da4d0c5-71f0-410c-b6a3-f5ee11b1bd54",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b183152a-e574-4ea7-a4f3-d9e4e85d65e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e6f994-2b8b-4a5e-8697-aa576d84cdc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c57a57c-bcd8-43fd-b6e8-a38c55d87688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb822d0b-c530-4799-b0e4-57432c0b9004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8efab1aa-9c59-4d91-95a4-5a3362092d1a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fd2abf-02fe-4650-9eca-546609ab6fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "674e89f1-1a80-4f75-a61f-efb759087da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4fa186-2bb4-4cf1-84e5-e72d885cb6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5ba0760-02f4-4db7-8e31-8433720916fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7316131-ee0f-42f3-ab8b-1e4ccc807b6c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7807d9c0-7ac8-45c3-9951-0c15aab2829a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5254e80-3db9-4ad7-9dbe-2ca766a1cbea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11417fe0-4f5a-4624-a026-75bd16b0005d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9101fba5-5966-48bb-bc94-2635bddbed0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3c25f5-4d3e-4dde-9392-3e63da93c8f5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a10539-a191-4d51-8d52-87ba20ebc0f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a026a4e5-5472-40de-9e60-ea2889cce159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523a54d5-711c-4d38-bc85-b3de958ea79a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e321b5c-0c60-4d4e-abb1-e264e048cda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61330d8-9635-4c04-a4e5-43ce3a57a40e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c55916a-357f-4829-aeb8-8c9712b9f147",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e94371e2-95ab-4e0c-b1ce-be0f5200e702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a19847-e945-4b16-8c71-1f65299fa996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933f7ef8-df93-4448-9be3-51e871bb1f40"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7ae4322-35d0-48a0-9859-85d3607c5040",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48c5ee23-3482-4974-b6fb-9affc2222c67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9523c59f-dc98-4f3d-a5f0-bd478b494dbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6344427d-3bed-448a-99e4-2479484e0eed"
                    }
                  }
                ]
              },
              {
                "id": "815f0412-8053-4a3f-a210-f4f6acf25015",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2fa62c6-dacc-4bfb-bec4-4e108f2ecf32",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5affd281-adf3-4145-b647-9cce63512629",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9214c6ef-7f04-4ff0-a97b-98283bcef711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a83208-f254-46f7-a606-40dfd1c4a7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d03ebcf4-b4e4-4df5-a4bf-ea1bc1e7e7eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a6fb8df-3427-4a4b-a3ce-ac79eb0eecd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b18ee7b3-0d45-41c6-931b-c2f0f6f857c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5946188d-f068-4d3f-9065-dfd796751fdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d751994-9c2d-4d53-8317-e9ef3f29dbf3"
                    }
                  }
                ]
              },
              {
                "id": "d06d9f41-1471-412b-a14b-a48c184ba11b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "30a38c4f-f255-43ac-9084-92a5fdaffdca",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bd1a2f-d918-4e4f-bac3-ab5613187a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d216dec3-d621-48b6-b6fb-8e53c9209074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d02475-b12a-41b5-91f0-dd98f8a16498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ece2ac8-589c-4677-9014-87701adf926a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "291dcda1-882f-4ebc-8053-ec1a5ddfd0f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4fe28bf-d4f9-4a28-b760-8d6eb8372419",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c66e95e6-e1f8-47b1-8c0b-a554f4aa9197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3e8d044b-cb9c-4bcb-b81d-9d508db903f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3b6c617-db90-4f2a-89b9-1ae88b0e92ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4344e510-4ce1-4e20-84eb-de2a0fa19060"
                    }
                  }
                ]
              },
              {
                "id": "2d33f8a6-f8fe-499c-8c35-b7c58c38fb66",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0d6e473-0410-4833-ba68-c0a3b086823a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ef947b3d-19f7-4ae0-b0e3-f1a1c082dca1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5627bb7-fe2d-41ff-94bb-aab808d8d24f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "505b6e7d-1121-4374-97b8-f4ec0c72ecc6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "203bfa10-c644-4842-885e-a753bdcf9920",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f864f414-1c5f-4649-84f6-cac5bcea7443"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0b6988a-bc69-4cae-9a0d-d2d8c5dc3767",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5827a7c3-9daa-466d-94d9-b341d04aa9b9"
            }
          }
        ]
      },
      {
        "id": "5c69e001-3432-42c9-a735-10497de5ea96",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6c5ee920-a385-423a-a3ad-a98ddefce1e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ed87a56-7f91-4537-8f2b-dd4d52500b03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c38210b-56f9-4070-831f-ff478dd32087",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c3146f-1591-4614-af27-f6d4fdac8a0a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9715b71e-9646-4353-8020-682768b576e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ca9901-e09e-43d3-8317-d82cfd238d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42031720-3609-4145-af1b-d888eb251a51"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bba382e5-28de-4e25-aeca-240c0aa78cb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec711142-5596-464d-bc3b-89fa8881f683"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d135746-232f-4e99-b90d-0abba458afe0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b0fa64a-9c9d-4dc3-abfc-921c37222391"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74b02fdb-ee62-4597-8d00-01bd17297904",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6871b7ba-4c13-49a0-8e52-ecd37c8ee890"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7629a655-6da3-43ec-8343-8070b8f6b55c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afad2544-5774-42b1-b8e3-23f4ba6c9ebc"
            }
          }
        ]
      },
      {
        "id": "1f690f5d-cf4f-4504-b94f-07f63908ad0a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "de909ff3-7483-44f5-a47b-8b63a5854785",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db3bfae7-5240-48fb-a798-9b2b877d42cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "120dc634-14f7-4fcc-ae91-23d72d5b8e41",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf17065-dcca-49ed-961b-508480bbff9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38443d93-53a0-4ce9-883b-a60ba1d3af5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d92a03-eba8-4d3d-82e3-a38a9caad7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9832db77-a969-4dfc-80b7-178768be997d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff23946c-edbe-41d6-aa40-567ad7b05c25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e1c2aee-f200-42a1-9aab-f41f2ab7db64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2935418-097a-478e-8e80-ec89e22ef5e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7b62a12-1fd6-49f1-8754-8979b6395936"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ca5d3df-29b2-4146-8532-d1ae6e422840",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a659105-cae5-4b20-9334-219011175107"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb25df3f-5771-42a9-9165-f0c2a6d70948",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "569fa2c6-b836-4fc0-96d2-5ba11fe7722d"
            }
          }
        ]
      },
      {
        "id": "a4902b99-78c7-4ac6-a224-daf271857a9b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0ca4ded5-3f77-453a-b8a8-38d5b3eeb8ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a70010f5-af2a-4b4d-a388-f54a4705997b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d47ad08a-82c0-4f0c-93f3-5f9deaba2548",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3d7c95-23f6-4828-ab8e-cc88337a1d8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "079292b7-bd60-42c0-949d-f00e0ca08004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfccf523-c70a-4007-a8fb-8435cf4e1ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "226c3f6e-289c-4fde-ab24-7f312417bae3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b83d5bf3-af5d-4da2-bbf7-6093ee37fee4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64c179c4-1752-4dec-9347-a50b7f06d601"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0014ce0c-2fcf-4ab8-b89f-11b1a47f16b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "775bc041-6d26-4b0b-b78e-f8e925b5b679"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e0fcef4-461a-42f0-8323-cde29423eaf8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a967fd1-8e46-4182-88b6-2054e0b09c14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b224ed28-8311-45ba-91d4-bbda56f5e1f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef5b7ded-e946-450f-8502-99d8f9cf0bff"
            }
          }
        ]
      },
      {
        "id": "c1936fb7-d1ff-47fd-a29f-cfcff8c31f3b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7de31c8f-b6a2-4741-bef9-640b10d0b30c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39e0ee34-18a6-4154-8ace-c3aed2c94629",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "89165207-e8e9-4573-a942-c675d47a8f56",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c93edac-a5c4-4d28-be4a-f7809aed068d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c117d5e-1124-431d-8d74-3ac8b74b167d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 112.29761904761904,
      "responseMin": 7,
      "responseMax": 8881,
      "responseSd": 605.8630426938652,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712622905807,
      "completed": 1712622942418
    },
    "executions": [
      {
        "id": "4de00a3b-7301-48e6-add1-b75ca9151560",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ccb2cd1d-ed68-49e7-a8fc-a3e6f58984f9",
          "httpRequestId": "d7270dd8-df61-40e3-ac21-cc7e29b63f44"
        },
        "item": {
          "id": "4de00a3b-7301-48e6-add1-b75ca9151560",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6c930136-9847-4cdd-83c2-dec39211f938",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "5a7bff5f-4169-4731-b99d-1378e69cda31",
        "cursor": {
          "ref": "1bb7b794-9862-47b1-8b8d-97a2f6f615ff",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "76063f06-b805-46a7-b809-13e0811ab305"
        },
        "item": {
          "id": "5a7bff5f-4169-4731-b99d-1378e69cda31",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "af3de7b4-dc1b-4c39-9f4a-0d7b15825624",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "60c4ec37-b038-4996-9408-ef30e141a3da",
        "cursor": {
          "ref": "f16c93a9-1980-41e4-84f4-820cd208c419",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "67c5587f-52f8-4972-8cfe-4a09e8e2186a"
        },
        "item": {
          "id": "60c4ec37-b038-4996-9408-ef30e141a3da",
          "name": "did_json"
        },
        "response": {
          "id": "dffaf300-d3c6-4844-91e1-74dd5deba7ea",
          "status": "OK",
          "code": 200,
          "responseTime": 345,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b514130-9845-4bde-bf01-0e6db4c04ba4",
        "cursor": {
          "ref": "d778985b-c584-4c62-a428-7cada9ae87ff",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8391b81b-c31f-4a5c-b238-12508e6b81bf"
        },
        "item": {
          "id": "8b514130-9845-4bde-bf01-0e6db4c04ba4",
          "name": "did:invalid"
        },
        "response": {
          "id": "c80942ad-670a-40b8-a349-dcb1a11fef5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 503,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b514130-9845-4bde-bf01-0e6db4c04ba4",
        "cursor": {
          "ref": "d778985b-c584-4c62-a428-7cada9ae87ff",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8391b81b-c31f-4a5c-b238-12508e6b81bf"
        },
        "item": {
          "id": "8b514130-9845-4bde-bf01-0e6db4c04ba4",
          "name": "did:invalid"
        },
        "response": {
          "id": "c80942ad-670a-40b8-a349-dcb1a11fef5e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 503,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c4695d-1943-4536-affe-2a5c2b2e4c2a",
        "cursor": {
          "ref": "747f4938-aa08-44cf-861c-ab3c61dd17dc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "02e07dde-94a2-4687-8a25-573ed7ba15f7"
        },
        "item": {
          "id": "f2c4695d-1943-4536-affe-2a5c2b2e4c2a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7a24b2cb-497b-4f59-8ec9-352d222c2e7a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384aa471-933a-4805-9b4e-53f2cbe6efee",
        "cursor": {
          "ref": "6e4acb8d-b0ee-4486-abcc-0bb13a1295eb",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "760e0122-43b8-465e-ad91-fc4288dbad49"
        },
        "item": {
          "id": "384aa471-933a-4805-9b4e-53f2cbe6efee",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "41104539-fdc6-4a39-8d68-d5e5aee8f866",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d88c71-2f6c-4a25-9b96-15dedba69be9",
        "cursor": {
          "ref": "f0f5048b-4d12-45c5-97bf-c4ee616a7fc8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6c7cefe7-9431-424e-a24f-e0b34b89e3a2"
        },
        "item": {
          "id": "76d88c71-2f6c-4a25-9b96-15dedba69be9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "63ece538-b4b2-46d8-b95a-78d23281e34d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5799ddd-b4e6-422f-ab5b-fc0aceccd9be",
        "cursor": {
          "ref": "8a46f981-c4ea-441c-8166-b1f17aecacdf",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "55b2fe54-df96-4866-b6b6-e24cfd415b10"
        },
        "item": {
          "id": "e5799ddd-b4e6-422f-ab5b-fc0aceccd9be",
          "name": "identifiers"
        },
        "response": {
          "id": "10abeccc-6da6-4789-963d-dcf33825064d",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193f530a-46de-4e1b-8afd-e02ede2c1bd6",
        "cursor": {
          "ref": "001f1898-2f86-45ab-9fba-5da07df3f19a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "16cc7dcf-f0d0-45cb-b984-ddb303f213b1"
        },
        "item": {
          "id": "193f530a-46de-4e1b-8afd-e02ede2c1bd6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ea50be53-bb33-47fb-bf77-05184d033b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d5355f-a3f7-4137-99ed-c96232eaad29",
        "cursor": {
          "ref": "5776ad10-360e-4c10-a9b5-d8cabf8fde20",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "82283249-c036-4a45-9bfb-4de8310c5fcb"
        },
        "item": {
          "id": "78d5355f-a3f7-4137-99ed-c96232eaad29",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c8ea5b6e-b528-41cc-81d0-c50eebbe2f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d4effb-2d36-4ea3-acc8-f20044ac680a",
        "cursor": {
          "ref": "45e54475-1aac-41f8-b79c-153c5841d220",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a1576298-2124-4de3-9798-19e5f5a33fef"
        },
        "item": {
          "id": "a6d4effb-2d36-4ea3-acc8-f20044ac680a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ec4b27a7-3b42-4324-9017-3194e2a2d9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184dc987-4f5c-45a0-bb31-99ad642fffe9",
        "cursor": {
          "ref": "8908057e-f377-4046-a6f9-d2e0d21aba3d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dc0b441a-6422-42a6-912c-84a147db30e5"
        },
        "item": {
          "id": "184dc987-4f5c-45a0-bb31-99ad642fffe9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "60d6e52e-13ac-4131-80a3-6038e55008dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9eca80-5f00-455e-87dc-4007d9ae6996",
        "cursor": {
          "ref": "2f48204e-b874-4a64-a072-84adf9612f39",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2e5af4f5-9608-48b4-a358-c0037d21f878"
        },
        "item": {
          "id": "df9eca80-5f00-455e-87dc-4007d9ae6996",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5f6729a4-1adc-451b-b79f-d8943d8d0b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d3cbad-b97e-4de7-8fc5-694fe1c2904c",
        "cursor": {
          "ref": "35f39fd5-d846-405d-b482-5286e967310d",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b997440f-0f25-4d0e-a7b0-8244592dd3a9"
        },
        "item": {
          "id": "80d3cbad-b97e-4de7-8fc5-694fe1c2904c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c4aa3029-a7e2-4235-8ca0-7eea232bb4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f96c162-cefc-4b5e-a469-7840e57ea8cf",
        "cursor": {
          "ref": "995d6d19-b200-4904-b0f7-461b79c03954",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "dcb9e77e-09af-4782-bcdc-4a3b1b34af14"
        },
        "item": {
          "id": "1f96c162-cefc-4b5e-a469-7840e57ea8cf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1caad73b-0688-436d-a8b6-452f9e39c5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e77459-7cab-4d27-baee-7cad85539ca2",
        "cursor": {
          "ref": "5b2b9d85-dc23-4da8-af4a-f79206126841",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "61b602d5-d81f-488b-bba5-f35392f47c95"
        },
        "item": {
          "id": "99e77459-7cab-4d27-baee-7cad85539ca2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fdb21997-57d0-48a4-9392-79e54ff00a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236e0998-e38c-47c2-9ef7-0d39f4433950",
        "cursor": {
          "ref": "a902b500-df0d-4026-8162-7edd17311a24",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e419d568-179e-4ebb-88d0-0e539981dfc4"
        },
        "item": {
          "id": "236e0998-e38c-47c2-9ef7-0d39f4433950",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d6ce64f6-767d-43a8-b153-b85d4cc653e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826ef856-ffdd-4633-bd71-23f59b542b09",
        "cursor": {
          "ref": "efdd45c5-b722-4203-b3d3-627e39ad7cbb",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d1fec05e-126f-4f06-8b6b-ae63b9ecd36e"
        },
        "item": {
          "id": "826ef856-ffdd-4633-bd71-23f59b542b09",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b5d3a28d-0bd7-475e-b960-2c72365ef814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09da737-8f64-4a25-882f-96ccf5dd7f9b",
        "cursor": {
          "ref": "c69989e3-b6ff-4754-9f69-9a5889e3d2b7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6e974b0e-5d13-4a4a-8206-e4b70c9f5af7"
        },
        "item": {
          "id": "a09da737-8f64-4a25-882f-96ccf5dd7f9b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a0de3e91-7dca-4adb-ba25-b9c11e41799c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc8fe53-0cdb-42ef-9cae-36d832902661",
        "cursor": {
          "ref": "a703df8a-4bbb-4f07-9753-d1cd4ef8b520",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c1a143b4-7ffa-4dc5-afe4-c026ed3a1f2b"
        },
        "item": {
          "id": "bdc8fe53-0cdb-42ef-9cae-36d832902661",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "67aa7c40-7ae9-449d-8884-5de84cb6b147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7c0d23-62b9-462e-a680-aaa2bcc7ad31",
        "cursor": {
          "ref": "218b17d4-43d6-4c13-9e2a-ed7ac085465f",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "afc57546-e0fd-44b6-b47e-58a8bca43681"
        },
        "item": {
          "id": "3d7c0d23-62b9-462e-a680-aaa2bcc7ad31",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "80d9605b-7aa2-4249-bb33-43e54b795870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd672b83-527a-4fa3-996c-046a1b08a96a",
        "cursor": {
          "ref": "c4815314-f162-4ab7-a782-0a2090a187b1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e1f61b93-c710-4774-a2fc-a3af3b32c89c"
        },
        "item": {
          "id": "dd672b83-527a-4fa3-996c-046a1b08a96a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "41dd41ca-7d12-42ca-9ed4-8857d7bd0422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfc6f41-ea81-4b33-b861-af33ede3247a",
        "cursor": {
          "ref": "49971d78-9ff3-4f94-a604-e7d19fb27edd",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "89687de0-b21a-45e8-971d-dc2f95060f55"
        },
        "item": {
          "id": "5cfc6f41-ea81-4b33-b861-af33ede3247a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "42e7327f-ae47-46ef-9162-dff111f65833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e070a7-71c1-481f-89a4-1852f7b11a2d",
        "cursor": {
          "ref": "8be248af-26b3-4e7f-8c5c-3296e24e0a85",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "eda96aeb-c851-48e2-99af-ab9fe8ad7366"
        },
        "item": {
          "id": "28e070a7-71c1-481f-89a4-1852f7b11a2d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dc7283c3-cb75-435b-b10b-3181c5668f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be5a064-943a-42a9-a7ef-ae780a53c2ba",
        "cursor": {
          "ref": "11b4bde9-665f-4b40-ad21-0984a30351be",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9ad414a4-ba93-4687-9830-8e295ae41f41"
        },
        "item": {
          "id": "7be5a064-943a-42a9-a7ef-ae780a53c2ba",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e90974c6-22ed-4a5f-9728-af11582863e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76750a45-1a61-4812-9cca-87bacf8bda9a",
        "cursor": {
          "ref": "2fe1d3c8-10c8-4978-aceb-76ef297a20d2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "67e123b8-e4db-4a4b-aab1-4d16ed116bde"
        },
        "item": {
          "id": "76750a45-1a61-4812-9cca-87bacf8bda9a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cea28df8-75ba-4196-a23a-29d94b57467f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8b8061-963d-4817-b4fb-259b75edf724",
        "cursor": {
          "ref": "16bc807e-2c46-4fd3-95e8-6c2993df1f98",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b93d8e2a-a730-47a1-aa54-e9e1faefd88a"
        },
        "item": {
          "id": "cc8b8061-963d-4817-b4fb-259b75edf724",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "594f91fb-aec4-465b-a6a0-425c842d812e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2025b655-6259-405e-9464-0bffc3efd5f4",
        "cursor": {
          "ref": "07f2a1ec-3f79-4500-8614-e26b181309f5",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "66640283-e5b2-4b92-b26f-512595c742d5"
        },
        "item": {
          "id": "2025b655-6259-405e-9464-0bffc3efd5f4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "37d3392a-fa30-41b0-9dac-f425fd642d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee8f6ac-6993-43a3-b843-8ae26e29af88",
        "cursor": {
          "ref": "7aa757c9-2ab4-4238-8d75-b93673563a61",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "df894a1c-3d73-4fcf-a864-22336f376d09"
        },
        "item": {
          "id": "7ee8f6ac-6993-43a3-b843-8ae26e29af88",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "37c34c23-c7e9-4964-9861-1ce7950758f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb4cb04-d25e-4d0a-99e8-b59d4f85133f",
        "cursor": {
          "ref": "09664e26-c94a-45fc-a732-e3562ac20d7a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9a63177c-a99d-4c82-83c7-547f3f060970"
        },
        "item": {
          "id": "2eb4cb04-d25e-4d0a-99e8-b59d4f85133f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b1112e16-ab24-48a2-899e-005baba0d881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3e8d14-3839-458d-9e5d-56076c27f976",
        "cursor": {
          "ref": "0c304046-955b-440b-bcff-de03d66c4910",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d1d6d492-449a-4b3e-af73-483d2c7ed793"
        },
        "item": {
          "id": "ef3e8d14-3839-458d-9e5d-56076c27f976",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "41ec8d69-4a27-4de9-b46a-4ead854cd364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ecbeb5-e170-49ae-8db9-90581ddc5261",
        "cursor": {
          "ref": "a35418ee-6075-4111-9484-ec07e1d58d55",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a5074f62-4314-4029-b65c-c9cb7f999495"
        },
        "item": {
          "id": "81ecbeb5-e170-49ae-8db9-90581ddc5261",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "add16965-e08d-4261-b966-331b5f60f7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884a9298-ef22-4a04-8759-a2b51d01023f",
        "cursor": {
          "ref": "c58d6601-73ed-47cb-b7da-75554d19ab3e",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d84a229c-dc94-4e4d-954f-052fcd986cd7"
        },
        "item": {
          "id": "884a9298-ef22-4a04-8759-a2b51d01023f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e433348d-d98a-4424-87f1-dda62c3e18a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d419023c-638d-42b7-8cb3-e517924972d8",
        "cursor": {
          "ref": "177ae03f-6be8-490f-86ed-0ef8b1a888d5",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "87d706af-e105-4db4-a7e0-b8a0e31fcbc4"
        },
        "item": {
          "id": "d419023c-638d-42b7-8cb3-e517924972d8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a7baf64b-a5cd-4706-a5c5-86b8050a004d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b066898a-4a4f-4434-bd3e-3af63eb153a1",
        "cursor": {
          "ref": "82e0141b-7358-472a-8d66-c3856361f4d4",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "527e4515-a2f8-4201-9b0e-380796ed2c6d"
        },
        "item": {
          "id": "b066898a-4a4f-4434-bd3e-3af63eb153a1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "cbae2f5b-d80f-4cec-b6af-bd35453e6fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063dce6d-d727-4c57-8b70-0e2a20b9131e",
        "cursor": {
          "ref": "06a3ab41-7ad5-4941-868e-81c27a51e4ea",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d9ab296c-e1e4-49d5-8fe4-76ecf9ba11ec"
        },
        "item": {
          "id": "063dce6d-d727-4c57-8b70-0e2a20b9131e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ce63ee5e-0899-4b24-9313-247e7d147b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82791f50-ffcf-4fee-b245-f5f2ce83bfc8",
        "cursor": {
          "ref": "2d5c2f3a-3015-4e5b-bd77-54d8f8f0e6ce",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "345d7abe-e9fb-4adf-8bd6-a1b9b91bdd67"
        },
        "item": {
          "id": "82791f50-ffcf-4fee-b245-f5f2ce83bfc8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "57c368de-cf02-4352-bc88-fa3dcc583bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3db02f7-472c-43cd-912e-af04f200ac29",
        "cursor": {
          "ref": "829cc469-b5c9-49f1-b9a8-f1104c50ac3e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "52712b0c-2575-4c72-80ff-8a9c4429fd79"
        },
        "item": {
          "id": "b3db02f7-472c-43cd-912e-af04f200ac29",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7b2bace6-5459-4b26-979e-eac164d0a79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dc96fc-e173-4027-a9d5-39531776f555",
        "cursor": {
          "ref": "12124afa-ccc2-4d87-9521-c468deb85dc0",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "283239e1-f1d7-4778-b6ec-f329a60eb610"
        },
        "item": {
          "id": "61dc96fc-e173-4027-a9d5-39531776f555",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a84f95ff-9256-4d6d-9c40-9fc8a9347417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e40d7f-4b22-4bd6-8dd0-d40db463476d",
        "cursor": {
          "ref": "5d0c7585-9101-443d-9d69-8d9ad807b1aa",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5b1d14b3-a2d1-4338-952e-e29dceb23200"
        },
        "item": {
          "id": "40e40d7f-4b22-4bd6-8dd0-d40db463476d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f6fcff3b-ff94-4720-9ce1-5a58b8e645d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c51e852-34a8-46e9-992e-86ce9c86c083",
        "cursor": {
          "ref": "697112fb-758e-4c9b-9dcf-19139d7595ec",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3db75e68-3aac-470a-883d-28f3a1a5730a"
        },
        "item": {
          "id": "4c51e852-34a8-46e9-992e-86ce9c86c083",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6d0f5f71-a668-4d0b-9c02-07cac1298cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9c7c23-af4b-4f01-93e4-5a8ceecb1827",
        "cursor": {
          "ref": "1f22d17a-b2e5-41ac-a6a4-2c17c25486a2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "aee02684-60ed-45f0-8cdf-7d3fd0150559"
        },
        "item": {
          "id": "2f9c7c23-af4b-4f01-93e4-5a8ceecb1827",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "52f91a25-6417-4fec-9dca-f07f5cadc0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83366d4d-67a6-4d84-9df2-37db99adb4cd",
        "cursor": {
          "ref": "2f8b68af-e56f-4fe8-8a2c-6dd5aefc545f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "83817b2e-cdab-4049-bc25-18b567284dd5"
        },
        "item": {
          "id": "83366d4d-67a6-4d84-9df2-37db99adb4cd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2a654d80-fa76-42a4-8566-7a0675e23030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c970c2-25e8-41ca-8912-ed788ce04302",
        "cursor": {
          "ref": "edbc57a0-0d40-4c45-8898-ed1d9cb81eaa",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a47f52ef-7635-41bc-ba63-ade0d0bea6ae"
        },
        "item": {
          "id": "27c970c2-25e8-41ca-8912-ed788ce04302",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "412d1af0-9fd3-4e49-be2a-cbec75178b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ccb32c-51b4-43fe-83fc-5a8a61f27eb4",
        "cursor": {
          "ref": "d7df1e1e-b712-46d2-8d84-837119e4594a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e0007aea-405c-4b8e-9c49-d0374ce86c88"
        },
        "item": {
          "id": "57ccb32c-51b4-43fe-83fc-5a8a61f27eb4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c85c27c5-00e9-41f3-ade2-2d529e829e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf26564-b1b4-401b-a9f8-588044ab7c3f",
        "cursor": {
          "ref": "28dccec3-2d88-4cb9-b17a-c3448a603837",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a18eab40-a592-49e6-b15f-1d488d3c1d8e"
        },
        "item": {
          "id": "adf26564-b1b4-401b-a9f8-588044ab7c3f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "04c2d3de-e3fc-4da6-a36a-5fc47561a20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee9d318-5572-4ca6-ad17-2b7149b02800",
        "cursor": {
          "ref": "35471d6d-6cf9-4441-a949-d267ab4d9a39",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e809c89b-d739-4c7c-b841-94cf98e363c0"
        },
        "item": {
          "id": "8ee9d318-5572-4ca6-ad17-2b7149b02800",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2bcfcb9f-0fe9-416a-a99d-6a1aee81bc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f1fa75-44a4-4512-bb83-2e3b15d0c078",
        "cursor": {
          "ref": "c8a7de58-124f-4cf7-bc69-e685af2f0e19",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "94eb7e08-db1e-4740-89e7-29e67a0900cd"
        },
        "item": {
          "id": "63f1fa75-44a4-4512-bb83-2e3b15d0c078",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5b06c56a-ab13-48e0-8c50-f8f34c25c7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18763084-7022-4bfe-b6ed-c018e92b3358",
        "cursor": {
          "ref": "df85eae2-fd1e-4510-82ec-ef3f18bd256b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3c80a7e9-502a-469a-b888-d2d2161ffbe3"
        },
        "item": {
          "id": "18763084-7022-4bfe-b6ed-c018e92b3358",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d0f43314-8746-4217-b418-82de01dc8bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4872df3b-92cf-47ae-bb23-d66d9ac06f11",
        "cursor": {
          "ref": "286182ab-1649-489e-be6a-6a48319eca95",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d0cb1597-9973-4123-8bbd-bff88ff2a972"
        },
        "item": {
          "id": "4872df3b-92cf-47ae-bb23-d66d9ac06f11",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a8964f66-99da-4d47-9b64-a48afe81f9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e99b54-a542-4c01-9bb3-0c7cdc397edb",
        "cursor": {
          "ref": "d40b8c5b-2fc2-4515-8802-284c09c8c7fe",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d2b995e7-128f-442f-aea6-2305f3e6d250"
        },
        "item": {
          "id": "c7e99b54-a542-4c01-9bb3-0c7cdc397edb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "916e2402-56a1-4fb1-ba52-beff7377ab8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262db5c8-8114-4f4b-8377-6820dd5df088",
        "cursor": {
          "ref": "d1c8ec77-c090-4d1e-9a59-d2af68b5b97f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7d450217-5244-4b89-9323-ea94fcb3e102"
        },
        "item": {
          "id": "262db5c8-8114-4f4b-8377-6820dd5df088",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7b34e95e-9b77-4967-a204-50778b94787d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70733af9-7e38-4a45-95ed-47f337601aa6",
        "cursor": {
          "ref": "e581d52b-aba6-44b4-b5d3-d0e812cb5d04",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "36a64259-de2c-4bc1-8d28-2608b9364141"
        },
        "item": {
          "id": "70733af9-7e38-4a45-95ed-47f337601aa6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "28fe510a-0ed7-4cf1-a853-757db4a9a591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af288529-fe96-4c59-9f3c-91ef26c1538c",
        "cursor": {
          "ref": "90fdec75-7c5c-4774-a088-25db0d1ae1c5",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d8494ff2-e943-4493-9874-28e0e9c4d85b"
        },
        "item": {
          "id": "af288529-fe96-4c59-9f3c-91ef26c1538c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f379b582-e4b8-48af-ba48-80ad4651d13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c339aded-3968-4c53-95f4-9ba61d8446f2",
        "cursor": {
          "ref": "b49b1337-3236-466c-8dfc-ecd509b32eed",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0f28e007-f7c9-4be8-9989-09e43ce9892e"
        },
        "item": {
          "id": "c339aded-3968-4c53-95f4-9ba61d8446f2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ab4524df-ecc3-4b46-a2f4-22574482e733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b6fe32-2c7f-4e4f-83ec-39c9c8c265d6",
        "cursor": {
          "ref": "546d6f8b-4a3e-48e7-b7c4-3f99cc5101fd",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a3b72dcc-eee5-4c1d-b66d-b6312cc85ed6"
        },
        "item": {
          "id": "e9b6fe32-2c7f-4e4f-83ec-39c9c8c265d6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "44669507-c900-477b-b58c-2ac77b433d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ef6aa0-279f-4e7b-96df-ac39af4dca33",
        "cursor": {
          "ref": "355b85cc-99da-4d31-b2c2-7ed53eceaa38",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e10d32cd-d112-4f00-8bb6-e80a937132c5"
        },
        "item": {
          "id": "39ef6aa0-279f-4e7b-96df-ac39af4dca33",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "50b8b71a-ebd4-4971-81f0-40f4d4a50845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc6c691-5bf2-4feb-8ef0-68a9124b1954",
        "cursor": {
          "ref": "7f7b74e6-a52a-49b2-ab37-f0b3aac4fffa",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a8e5dceb-9892-4a10-8c6b-411e8d6ea823"
        },
        "item": {
          "id": "0fc6c691-5bf2-4feb-8ef0-68a9124b1954",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f5a0cf9b-7605-4270-9f3f-981c119526d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83864186-5c25-4997-8f48-82625917d6b3",
        "cursor": {
          "ref": "387a5a6a-8bef-4c02-86e8-31f2e80ad832",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dfee177e-3597-4137-8f19-bedfc0ae65b4"
        },
        "item": {
          "id": "83864186-5c25-4997-8f48-82625917d6b3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1fcba33a-fb9c-4d53-8a16-d011a8446b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b7d42e-3854-40f6-9c38-eb2a1c65b294",
        "cursor": {
          "ref": "28a14706-5922-4b5f-bbf7-bc53adeebb53",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7b6d6786-6a43-4390-8149-b88f7e75f8b2"
        },
        "item": {
          "id": "38b7d42e-3854-40f6-9c38-eb2a1c65b294",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "85a03886-c2b3-460c-b594-9ace9229861c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bd1723-c7e6-41fe-8635-405b17030780",
        "cursor": {
          "ref": "9d2b7706-4f56-4d69-9a6a-59b21ddcac7a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2c8cf3ce-3d86-4a59-b88c-753c011b9bbd"
        },
        "item": {
          "id": "42bd1723-c7e6-41fe-8635-405b17030780",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d63e86da-f668-4633-b81f-6c46a5820e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea78f020-70bb-40ab-9856-2a216aeba869",
        "cursor": {
          "ref": "e737852f-2833-4f27-97e7-9fd9ef5936a3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b5a9927d-1bb5-42d2-a52e-5f1010f9811b"
        },
        "item": {
          "id": "ea78f020-70bb-40ab-9856-2a216aeba869",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "da93f1bc-6b3c-44ae-a416-ed70dcb4b9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fede33ad-da3d-4dc0-998b-0a9be00907e5",
        "cursor": {
          "ref": "1cbf7102-1cc8-4b0e-81a2-0c37b6b3fc58",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d6a90a57-6326-46f8-b26a-e46d73500040"
        },
        "item": {
          "id": "fede33ad-da3d-4dc0-998b-0a9be00907e5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "76bc3480-89a1-4879-a60c-dcb564f403e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea699fd-f7f0-4e3b-8e9a-2538579fde91",
        "cursor": {
          "ref": "294901f6-d9a9-4936-96e0-87f25c3c6b7e",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c815bf8d-0e4f-4223-a146-7b4b55fbf8c3"
        },
        "item": {
          "id": "4ea699fd-f7f0-4e3b-8e9a-2538579fde91",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "831b9b88-9a72-4450-94ea-11ca819b91d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd75ee5-da7f-42c9-a415-9b5287cec6a4",
        "cursor": {
          "ref": "6114f8be-9e37-470c-99b2-eba81946df6c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0289ca4d-af7f-4ed8-9272-b521eed7f8c7"
        },
        "item": {
          "id": "ffd75ee5-da7f-42c9-a415-9b5287cec6a4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "366a61cf-0fb6-44a4-a926-b79aad9857d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa754730-798a-45c8-a845-9494df3f46c6",
        "cursor": {
          "ref": "f5db72cf-9f63-49a3-9c2f-e6859c37e1fd",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3c017a63-5f32-429d-a8cc-2d5369afd083"
        },
        "item": {
          "id": "aa754730-798a-45c8-a845-9494df3f46c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2363d79e-f6db-4d25-9fa0-e301adf24801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54f2907-f7db-40a0-8738-30f682fa8247",
        "cursor": {
          "ref": "2690b300-5ee6-432c-af40-9cc2f748c838",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "02e044b5-982a-4372-8d08-2ecb81dfae5a"
        },
        "item": {
          "id": "a54f2907-f7db-40a0-8738-30f682fa8247",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fe95e6d8-f62a-4690-9265-e7aef7032632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56637fe5-9d02-440d-b2b2-fd256722d32d",
        "cursor": {
          "ref": "84108b60-c291-492d-80a0-e37efd9197b0",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8d3fefc9-b419-4af9-84ae-30b5d88a886f"
        },
        "item": {
          "id": "56637fe5-9d02-440d-b2b2-fd256722d32d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "47e2f233-f5ba-47af-bd88-c6feefa0c79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978187f1-8c82-4146-9a7e-025e8c9c3aad",
        "cursor": {
          "ref": "452bdcd2-645e-4ce0-ab76-34ea3cc93904",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f3267529-9284-4355-880c-f682633e301e"
        },
        "item": {
          "id": "978187f1-8c82-4146-9a7e-025e8c9c3aad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2fdda741-28e8-4b8f-b344-4d1d14a02f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c15002-9830-48f8-854d-29eb3da9fa0d",
        "cursor": {
          "ref": "690fc852-92ad-4e8e-9729-02673016ebfd",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3113444c-85c1-4fa3-ace3-516d10f163b3"
        },
        "item": {
          "id": "20c15002-9830-48f8-854d-29eb3da9fa0d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0c24f3dc-5e00-41a2-9555-a87f4567c429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cead15-a9b9-4a99-bf90-d7907c53b7bb",
        "cursor": {
          "ref": "22f7e29a-705a-48c2-a5fe-432ae47f3578",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4cc9a39e-8fae-4603-8562-5c6127263af7"
        },
        "item": {
          "id": "04cead15-a9b9-4a99-bf90-d7907c53b7bb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "638f74b5-b437-4a0d-818d-436af454bd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c1d1da-e864-473d-9835-f519730d1fb1",
        "cursor": {
          "ref": "42681200-7767-46a9-9342-f20d5149195f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2bc9e2bd-3f92-474f-8f16-688bc11a0660"
        },
        "item": {
          "id": "82c1d1da-e864-473d-9835-f519730d1fb1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8eec49b6-a760-44c4-b7a9-2e56290e715d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9a73d8-c61c-4a67-aff5-c13d19e6c895",
        "cursor": {
          "ref": "f4e7c7de-c1d4-4dfc-80cd-5440dd7be6b2",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0349cf9b-f667-4d85-ab72-c3975b9d727d"
        },
        "item": {
          "id": "6a9a73d8-c61c-4a67-aff5-c13d19e6c895",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "544b583c-886a-459c-aa02-e3cac333fea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b018fbb7-3ec2-4298-b484-5dc20cdec52d",
        "cursor": {
          "ref": "9ce70b89-4fd6-468f-8e97-3a4d42f2e103",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "73658638-0627-45c7-af72-6abfd6f378ea"
        },
        "item": {
          "id": "b018fbb7-3ec2-4298-b484-5dc20cdec52d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "28c35b2a-ef53-467c-ae2e-c462ff6b8395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47405998-8425-40a9-8875-212994a16c3d",
        "cursor": {
          "ref": "d7b55807-bae4-4343-a841-4612ebcafe2c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "51917c2e-3513-4eb1-9ada-7d3d1c1c1af7"
        },
        "item": {
          "id": "47405998-8425-40a9-8875-212994a16c3d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b8fe68ec-c71e-4772-936a-ff4a83cd8858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc073edf-59e4-4597-8232-4cf5c86004bf",
        "cursor": {
          "ref": "86e7a7f6-c59e-4aee-8665-8b84e971f241",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "db62dd93-ebdf-4564-abb7-9412f54fb052"
        },
        "item": {
          "id": "cc073edf-59e4-4597-8232-4cf5c86004bf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f6621a53-5919-40ad-813d-9cf569db18e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e0cd07-b91c-4080-aaca-e8fd75956ee1",
        "cursor": {
          "ref": "ee26b90f-fd63-4c38-8d95-eb6cf8a505d3",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d4aea351-5b0e-47fd-8a98-c59f044a386a"
        },
        "item": {
          "id": "b5e0cd07-b91c-4080-aaca-e8fd75956ee1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f99ed0a8-695a-4ed9-bc21-83cfd6878b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9163882d-cb3a-4dd9-8682-48a2fceaec1f",
        "cursor": {
          "ref": "9d90bec4-cca5-45b2-a94d-6e726da27697",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "115b01f4-d503-4c2d-b576-85834d0807c0"
        },
        "item": {
          "id": "9163882d-cb3a-4dd9-8682-48a2fceaec1f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f489116c-16ed-49ea-b6c3-4e4246b12285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903a7731-2302-4c22-b1e2-fbbd82cc9f9c",
        "cursor": {
          "ref": "7dc5d6f6-0e78-4f0d-b104-81258e2688f5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9b16b0ba-3e24-4472-aa13-d68627d2db1e"
        },
        "item": {
          "id": "903a7731-2302-4c22-b1e2-fbbd82cc9f9c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e48071c3-9cda-41c8-8120-323015dd99ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9466acde-9980-483e-a91f-eb2b3353e367",
        "cursor": {
          "ref": "26911d6c-455b-4136-a775-67114bca8967",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "89b31c55-dbe8-40f3-9211-b6f8c7a2cf58"
        },
        "item": {
          "id": "9466acde-9980-483e-a91f-eb2b3353e367",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8d4a9260-320b-4a9d-a634-4604399b2c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6143f798-5e49-4cdf-9b28-6a93f86478b6",
        "cursor": {
          "ref": "23db1f73-b756-4037-b288-ecf7d54d4443",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "534eeab8-b02e-42d9-a738-0469565033c6"
        },
        "item": {
          "id": "6143f798-5e49-4cdf-9b28-6a93f86478b6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "62891e23-7546-40a5-9653-bc9322155ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4bc768-5cd3-44dd-b5e2-24ee2fedf74e",
        "cursor": {
          "ref": "2a87bed8-6e5f-4762-9385-14be12cb9b68",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ff0ee6af-5221-4dd4-8036-43c50e45d842"
        },
        "item": {
          "id": "8d4bc768-5cd3-44dd-b5e2-24ee2fedf74e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8b4e576f-bebf-46c5-ad2c-ba5efe860d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c17399-3ae3-4533-912d-6718d2373003",
        "cursor": {
          "ref": "634b16cb-55d4-4e63-b860-80edf55c35bd",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8d38de81-ed21-4e3d-9632-f0c65b0c279c"
        },
        "item": {
          "id": "55c17399-3ae3-4533-912d-6718d2373003",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2be636c1-5570-42dc-8fc5-c0f3efea6df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4204a623-74ba-478d-b33f-99da575a4030",
        "cursor": {
          "ref": "d0a9e9ba-ee68-4001-a362-ee190136d5df",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "57700e49-bd36-4e96-89f5-b7581a9b81a2"
        },
        "item": {
          "id": "4204a623-74ba-478d-b33f-99da575a4030",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a22bdb91-3a7d-4a19-a782-542a2bb80ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0e6502-5887-454d-a1e9-f6b01e0824a0",
        "cursor": {
          "ref": "c527676c-b333-4152-8566-9744588cc222",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6198626d-57f2-418c-97a1-795a92e055e5"
        },
        "item": {
          "id": "be0e6502-5887-454d-a1e9-f6b01e0824a0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9d61ebb0-01e1-47c6-a2bd-bd58286ecff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5178cb-43a9-4b20-9d90-5ea94b693d8d",
        "cursor": {
          "ref": "3932c4c0-e044-4655-87ff-17386971632a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8709370f-c0de-44ad-bf61-3a17d94713ee"
        },
        "item": {
          "id": "1c5178cb-43a9-4b20-9d90-5ea94b693d8d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0b75bdde-2bb2-41f9-8bfb-5305b4d42d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f95ea39-ad9b-43fb-b328-00444a8bccb8",
        "cursor": {
          "ref": "34b4c507-14ef-48da-8be1-5ae166afdf38",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d891e212-cd84-4c09-9f1e-1d03d5b0c179"
        },
        "item": {
          "id": "3f95ea39-ad9b-43fb-b328-00444a8bccb8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "20679d2b-9aef-43f5-9ea9-5c65bd7ba8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e711a6-ad88-4e9b-919e-0b1e6d1968e4",
        "cursor": {
          "ref": "c17eedd1-c4fa-4d68-9549-d53ae5a0c559",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c91aa81c-88e5-4900-be33-17d4b562d62f"
        },
        "item": {
          "id": "27e711a6-ad88-4e9b-919e-0b1e6d1968e4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d17c45eb-7b00-4c59-977d-f61617f7afa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b2fbc8-b6a5-4754-b6db-8ea0ac5613af",
        "cursor": {
          "ref": "53e5ce75-ca99-4f09-9e05-99be2d3538e8",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0727accc-f168-42ea-96a7-b79bc8158c80"
        },
        "item": {
          "id": "86b2fbc8-b6a5-4754-b6db-8ea0ac5613af",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "da86bea9-6a80-40ae-8bab-6317adb925bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f61dbdb-41a3-45a0-bda3-4860862c5179",
        "cursor": {
          "ref": "1f617e60-8bd4-4fb4-a04c-ee4e1b391830",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bdee31f3-69ca-4516-adf0-e3fed1a8df3e"
        },
        "item": {
          "id": "2f61dbdb-41a3-45a0-bda3-4860862c5179",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "195f3c78-39f2-442c-afe9-620b6e17dfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454cf18e-0c87-48ee-8896-581503ded638",
        "cursor": {
          "ref": "1c98e235-c924-49be-a6e6-6058bfd3d1e2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a262e3d3-4f97-4630-bcec-2d47b0c240a4"
        },
        "item": {
          "id": "454cf18e-0c87-48ee-8896-581503ded638",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "78dff2a1-b83c-4af9-91bc-2a67835e534f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8de3ee-fe3f-4fed-ab92-fb49a64bc230",
        "cursor": {
          "ref": "e49488a2-a9d8-4f17-80cb-98ce77db5231",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "183d22a8-1d62-4841-8d5e-1172220e7022"
        },
        "item": {
          "id": "9f8de3ee-fe3f-4fed-ab92-fb49a64bc230",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1cc928c9-c4d7-422a-8a7d-c19c33fc71ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f945f0b6-312b-4b9e-bd93-f61e7c183f3e",
        "cursor": {
          "ref": "03a2ff99-7605-4b44-bb94-7ac2ed4ed928",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3b2ea9e9-9d21-4743-afc4-6b58d0f1f90d"
        },
        "item": {
          "id": "f945f0b6-312b-4b9e-bd93-f61e7c183f3e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "64fc3c54-de05-4720-9f5e-350e60a6f2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d26dd8b-7ba5-4c47-a650-7eadfa0ccd11",
        "cursor": {
          "ref": "f4835ed8-3097-43fa-8c11-5a8b01e65d8d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b3ab3a2f-ab63-43e9-a594-cf6756f6a2ff"
        },
        "item": {
          "id": "2d26dd8b-7ba5-4c47-a650-7eadfa0ccd11",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "66e959e3-ed2e-4d2a-9c93-820af75e3faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea56e853-d239-449c-a722-b78f8e84fefc",
        "cursor": {
          "ref": "abf1326d-370b-47f9-9d1a-53cce48ceaf7",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b4e3b6b6-9251-45f7-8e30-e7a1537af71b"
        },
        "item": {
          "id": "ea56e853-d239-449c-a722-b78f8e84fefc",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c44f7400-f6de-4193-87ed-d4059a33fd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70b0e97-6c11-470c-9951-5733e4d45c8e",
        "cursor": {
          "ref": "197964ec-1b8b-486e-8ab8-a48a6375d300",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2af96735-8c7f-4514-8254-d6eb6d9c8013"
        },
        "item": {
          "id": "e70b0e97-6c11-470c-9951-5733e4d45c8e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f4be922c-8615-42e7-8a26-550e47e72159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d836d3f-e864-4956-b27b-23cc22c584b5",
        "cursor": {
          "ref": "589ed0d4-4e6e-4296-9819-1f6fd344fa35",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ace76338-1376-4d3a-b9dc-1063ff15f951"
        },
        "item": {
          "id": "4d836d3f-e864-4956-b27b-23cc22c584b5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bb495824-446e-4758-b4d9-61a3dadcd2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e20e6ad-1af2-4e28-bab9-362b7ac7b0bf",
        "cursor": {
          "ref": "0fb9a487-806c-4194-9422-bfe68b3d747a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6efc0197-3d74-48bd-a550-2536fcb47e82"
        },
        "item": {
          "id": "8e20e6ad-1af2-4e28-bab9-362b7ac7b0bf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bb39b76f-0dff-4355-a66d-86343d60b4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28c2def-95fd-439d-be25-44569b467bca",
        "cursor": {
          "ref": "fd77b6e4-1424-4673-9500-22b7e1bbeae2",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9c597807-54df-47df-96a2-4eb82f02ebf3"
        },
        "item": {
          "id": "c28c2def-95fd-439d-be25-44569b467bca",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b41390d2-2a94-4e4f-8547-b71731c0fc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ac647b-3cfb-4793-8797-2651d5bc0fbe",
        "cursor": {
          "ref": "ab52c4dc-ef5c-421e-b08e-5cd591fe2bcf",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ba2925c2-e25d-49c1-b184-0adff24681b2"
        },
        "item": {
          "id": "25ac647b-3cfb-4793-8797-2651d5bc0fbe",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "04090a7f-be5f-4158-91f2-f01e94ba1617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66210a9-373f-4e93-abc9-5f8f1b4fa43f",
        "cursor": {
          "ref": "d6fd7487-d836-4ae1-a1fa-93f9734517ee",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "41db53d2-e7b6-46d0-8f9d-f6c26b316969"
        },
        "item": {
          "id": "e66210a9-373f-4e93-abc9-5f8f1b4fa43f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6ef1eb79-6905-4cae-b04e-ded49bae0b7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190507af-c158-4719-afd2-603f1c844c71",
        "cursor": {
          "ref": "aea5540a-98cb-49b5-8be4-0d9981367d4b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "684dfbdb-3dac-4ee2-bf77-9067411964f3"
        },
        "item": {
          "id": "190507af-c158-4719-afd2-603f1c844c71",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dd67c232-dcbd-45b1-b447-dd13bbc5ec94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "14e9c976-69aa-4704-80b9-2dbf4b70a820",
        "cursor": {
          "ref": "6a7124d8-3104-43be-9aa0-f67180395b0f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d68ae5cf-170a-4c0b-88c8-56483236d9fb"
        },
        "item": {
          "id": "14e9c976-69aa-4704-80b9-2dbf4b70a820",
          "name": "credentials_issue"
        },
        "response": {
          "id": "df1f5ba6-c687-4a77-aa98-19c408e20ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e0ae8190-c886-4f1b-bb83-e5b6d9d2af48",
        "cursor": {
          "ref": "c62043d9-0b7c-4957-834b-e6ec04c81e6b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6fe6808f-ed84-49a5-bfe0-4ca1b2dc863e"
        },
        "item": {
          "id": "e0ae8190-c886-4f1b-bb83-e5b6d9d2af48",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "17904d75-66ff-4806-9af8-98cca0b2623d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6fb14dbc-0927-46ec-aa3e-22d1732bd6bc",
        "cursor": {
          "ref": "65c3b4c1-ce2d-4574-bfc3-34c8907815de",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d140e9f6-bb1c-44fc-94e6-b3aae9129400"
        },
        "item": {
          "id": "6fb14dbc-0927-46ec-aa3e-22d1732bd6bc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9d768e2a-ce27-4f5d-9ba7-e083ae91f24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "74ea5742-0967-469d-a48e-c2baf81063f0",
        "cursor": {
          "ref": "2c9644f7-c002-45e7-8404-fadd41c3827d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "aa35bd0b-e19f-4963-b585-51e357e90a22"
        },
        "item": {
          "id": "74ea5742-0967-469d-a48e-c2baf81063f0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0ddf7d12-e0be-4711-b1b6-45e154ecf075",
          "status": "Created",
          "code": 201,
          "responseTime": 8881,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d6be55-0ec4-4122-9342-a2a640775362",
        "cursor": {
          "ref": "0db82d5f-aa46-4027-996d-524bc1fb6499",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "57ee60eb-25e0-4d0b-b80d-13e493efd51c"
        },
        "item": {
          "id": "a9d6be55-0ec4-4122-9342-a2a640775362",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "650611b1-be07-44a0-a890-96f36c0d0c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "afb63ed2-e98f-43de-8125-8dee46449198",
        "cursor": {
          "ref": "986b1af5-0e7f-45de-bb36-a9074e248243",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e14c5c56-2cd8-4c64-8aee-57a6504bfee4"
        },
        "item": {
          "id": "afb63ed2-e98f-43de-8125-8dee46449198",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9d1b152c-73f8-4adf-af80-88da1ec9be6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5f3e0672-2a30-43df-aed7-34047fbaf9de",
        "cursor": {
          "ref": "3efa1b2d-72b0-4358-8ad5-c449cfa82d64",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ecc8edb0-98b2-4a69-a301-cf7e806b4b7d"
        },
        "item": {
          "id": "5f3e0672-2a30-43df-aed7-34047fbaf9de",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "42f96b96-1ef0-4fce-9fc2-e58dc43b179c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6de2fd-716d-423a-8ab1-1f9a5bcfb536",
        "cursor": {
          "ref": "93304930-e718-4956-911b-ec39168d0b3c",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3e3bc59b-aee9-4f5e-95f7-481fdf1f9a79"
        },
        "item": {
          "id": "6a6de2fd-716d-423a-8ab1-1f9a5bcfb536",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "706c89fa-fdb4-4950-b334-1ba2a408799a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13495aba-f4fd-4cea-8066-0857f1ede72a",
        "cursor": {
          "ref": "ad6bd1ea-86b9-4b9a-b4bc-b3c8bfd36f9d",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1c0f0d26-94a3-402f-b227-0871924925c5"
        },
        "item": {
          "id": "13495aba-f4fd-4cea-8066-0857f1ede72a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "11f92c60-5da1-465c-85ae-1b287adc602a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fcbdf6-02e7-4a7d-a738-60debf9aa4ad",
        "cursor": {
          "ref": "1f45c1b9-78cd-42c5-bd1c-a6c870d89bb9",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2aee2074-8897-4661-be43-5af40cd998cb"
        },
        "item": {
          "id": "66fcbdf6-02e7-4a7d-a738-60debf9aa4ad",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "49ef9c38-2e16-497e-8e97-9f5c951ef8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b6e992-80bc-4c15-a53a-ea5fc141a5d5",
        "cursor": {
          "ref": "3ff7c533-4a8c-4d04-95e3-f7561df7c388",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "be4cd331-d77c-4710-96ab-8cba1da2c54d"
        },
        "item": {
          "id": "d5b6e992-80bc-4c15-a53a-ea5fc141a5d5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "74341233-886e-4b9f-a313-eec6b2da889f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8a5957-9ddb-4c43-b325-38c12771c16c",
        "cursor": {
          "ref": "dcb89941-8e60-454c-af91-b4d624f775af",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "977c5f40-2a66-4be3-9274-9145436047aa"
        },
        "item": {
          "id": "1d8a5957-9ddb-4c43-b325-38c12771c16c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5f5218a5-762b-4d54-aa09-79cc23d43a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eda9c90-3455-4451-9ab7-8e06a0557d92",
        "cursor": {
          "ref": "92e42548-5f54-4732-ac02-234745723a4f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "81134936-31ff-48de-a5c3-7835d61fd9da"
        },
        "item": {
          "id": "0eda9c90-3455-4451-9ab7-8e06a0557d92",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d0a79b9f-4862-4393-bf60-2520b8b8d732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e368daf-d7c7-42c3-a507-502c7eb5f649",
        "cursor": {
          "ref": "a347d573-7025-47fd-96bb-570065e8192c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "afbc7507-312e-419e-bb57-536e448f665e"
        },
        "item": {
          "id": "1e368daf-d7c7-42c3-a507-502c7eb5f649",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f6823e1f-050a-4365-a9da-a5664620b3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecff2ae4-da79-4767-946f-55d945459316",
        "cursor": {
          "ref": "fd12a3a0-4fdd-4880-868f-033c13c02a5f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1ef89be5-016d-45da-b966-29f76407c71a"
        },
        "item": {
          "id": "ecff2ae4-da79-4767-946f-55d945459316",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bf6a28ce-1ac0-42da-8a35-4ef7ea3f68a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64f3d9b-dc9a-425a-a8f0-2f5cb9c5ef73",
        "cursor": {
          "ref": "94e46b44-773a-4b22-83da-cfc936c436c0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "760d7387-e50b-4a99-9e09-dfddb0014b5a"
        },
        "item": {
          "id": "f64f3d9b-dc9a-425a-a8f0-2f5cb9c5ef73",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a2fab807-2781-4d75-b1f8-581b8fb2036f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7071777d-bf11-4fb6-857e-0ed4bd4fa8dd",
        "cursor": {
          "ref": "16cce3d7-fccd-4eb4-a811-08f3c99c3f0b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "935d8249-430d-4bf0-9cf5-843829b2b53b"
        },
        "item": {
          "id": "7071777d-bf11-4fb6-857e-0ed4bd4fa8dd",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "84178018-c9d3-4c84-86b3-70d9aee0ed5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7537fd05-15a2-4054-801c-1d0d32f01217",
        "cursor": {
          "ref": "17479df1-e421-4917-b880-c9e8554081d5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6cd3cd21-b86e-4f84-834d-bf9d3308f8b5"
        },
        "item": {
          "id": "7537fd05-15a2-4054-801c-1d0d32f01217",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d13cee77-40ca-4c5f-a251-d4fcbb3c2512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebc4f71-c67b-421d-a595-e448e2aa8418",
        "cursor": {
          "ref": "623793b7-dbce-4888-9627-37cc23ff138d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1ffbf02a-44a6-45af-a9e6-3d4c9c06f336"
        },
        "item": {
          "id": "3ebc4f71-c67b-421d-a595-e448e2aa8418",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0e208058-d902-4953-b296-6d308aae4f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c4aa07-a84f-442d-aa77-9cda42793dc1",
        "cursor": {
          "ref": "dc5c4a85-56d0-4383-85de-b400b05ce75f",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a7b6daad-d9af-4566-9cc0-b7cd3a2a349f"
        },
        "item": {
          "id": "32c4aa07-a84f-442d-aa77-9cda42793dc1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "88fc1421-8b6e-4b22-9132-f3f752529754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f723e53c-7b8a-43d0-9b43-1c127b4792f8",
        "cursor": {
          "ref": "7dae8ed5-fd4b-41cd-930c-0b0911b8ff6b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9025ad71-f6f7-430c-86eb-f149e42afed9"
        },
        "item": {
          "id": "f723e53c-7b8a-43d0-9b43-1c127b4792f8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "94f5b355-49d8-4ca9-8124-d06f81a39edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca19f67-5ab0-44be-b0c3-d8d7aeb1213b",
        "cursor": {
          "ref": "ed059a31-114e-4d3a-8ecc-5106f7ac60f7",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "06c374d0-874f-4d69-bf4f-9fff826ea90f"
        },
        "item": {
          "id": "6ca19f67-5ab0-44be-b0c3-d8d7aeb1213b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "62cb4371-f57a-4c76-8517-2e81b439e43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5412d2f-fcc2-4d9f-9ee7-176356209030",
        "cursor": {
          "ref": "35d77619-4ccb-43ca-8242-d44e492b41a2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5084ab5b-227a-43a2-9c1a-bcb5efc96368"
        },
        "item": {
          "id": "f5412d2f-fcc2-4d9f-9ee7-176356209030",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6f65eb16-0a75-4d0e-8989-eba68e7fab29",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "d924de24-6cac-48d0-9e9f-f5fbc5bec191",
        "cursor": {
          "ref": "2d3efbc2-e9b2-4217-8542-63bbfe265b53",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5fa01875-4cb3-4a1b-920a-a28ea4a853fe"
        },
        "item": {
          "id": "d924de24-6cac-48d0-9e9f-f5fbc5bec191",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "594a2c27-b0df-4493-8c15-65debb1699de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44079b2f-5297-4876-b0e0-c09513636216",
        "cursor": {
          "ref": "0aa2c0cd-3f70-4181-89b4-16ee2a20bbc3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "191a776e-9995-43c6-8d4d-5237b31bc10b"
        },
        "item": {
          "id": "44079b2f-5297-4876-b0e0-c09513636216",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d152b234-7160-4bbe-9d89-8a3a7feb5206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae3cd4b-d579-4f7e-ba94-c4f34d1597fc",
        "cursor": {
          "ref": "84864c5a-c600-4cfe-a9db-0a21251521fc",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "42aef8f8-ddd3-4534-9681-b32ac2e30e21"
        },
        "item": {
          "id": "3ae3cd4b-d579-4f7e-ba94-c4f34d1597fc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "38ba2cc5-3389-4fc5-9b85-2c53059c1b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38a79f8-5337-4334-99e9-ebd841e27c24",
        "cursor": {
          "ref": "9179a457-339e-4bcb-83ea-391653395c49",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9090c74f-2b14-47f3-934c-d9df7fdc7cd5"
        },
        "item": {
          "id": "d38a79f8-5337-4334-99e9-ebd841e27c24",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7f7e72cf-a29b-4e33-b331-f7b9c9ff32bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d37432-afb1-451b-b741-a3f9be4dfe96",
        "cursor": {
          "ref": "bf5e421b-3eaf-4827-b0a9-251114786e0b",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c24eded6-3fa3-496e-944a-d4acda52147d"
        },
        "item": {
          "id": "b2d37432-afb1-451b-b741-a3f9be4dfe96",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bab79ca9-dc19-49cf-abe4-fd4eacde0e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62fc970-ad67-48f9-9eec-109639ad9d2e",
        "cursor": {
          "ref": "4477adda-9695-4ae3-891d-a6bd9b5af6c8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a1c0fdaf-f531-45f2-babe-dbe5f400d18c"
        },
        "item": {
          "id": "d62fc970-ad67-48f9-9eec-109639ad9d2e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "40f1220f-d849-4037-8a50-12e8b7c046f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9638702-e8f6-4bc9-99a0-fadaec656c7d",
        "cursor": {
          "ref": "c60342d5-8c4c-47a0-a7e1-b209e8f61711",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "36004c10-e5b4-4353-9111-896c27fe2911"
        },
        "item": {
          "id": "a9638702-e8f6-4bc9-99a0-fadaec656c7d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "da7de9f4-454e-4972-b005-4cb7ad5231d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8fa9d3f-ea8b-478a-821b-1668a2b3a92d",
        "cursor": {
          "ref": "db887311-5ee8-4b41-98e6-14abb4ae89bf",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "236840df-effb-47a7-8cb4-9b6c66803a4d"
        },
        "item": {
          "id": "f8fa9d3f-ea8b-478a-821b-1668a2b3a92d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ecf170cb-08ab-43f9-821a-b685c3196254",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "4cfecce0-489e-4bd2-8fa7-fc8d4a3d410b",
        "cursor": {
          "ref": "f7558629-00f2-4a73-99be-3c72d77e90de",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ac41234e-1988-4503-a020-f3593877f360"
        },
        "item": {
          "id": "4cfecce0-489e-4bd2-8fa7-fc8d4a3d410b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7bd8b0e3-5bd1-44d5-9408-3d787fb0d245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaebfe3-547e-4250-ae53-7cd3a17e632b",
        "cursor": {
          "ref": "d3a011e5-0416-420b-8b66-d736653b2c84",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c35e34df-1b65-42cb-b1a1-0a6b31a6aa51"
        },
        "item": {
          "id": "abaebfe3-547e-4250-ae53-7cd3a17e632b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "563da042-4317-45d5-ad52-8011074b9549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8646882a-fc43-4150-bb92-e9c8a25e1aa2",
        "cursor": {
          "ref": "260151fa-d533-44f0-9d4d-38420f8e2c9c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "aa107e86-7095-49cd-a0fa-0b8bad9ed856"
        },
        "item": {
          "id": "8646882a-fc43-4150-bb92-e9c8a25e1aa2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c7cb9195-036b-48d2-8a4d-a016e7f89f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b85fa1-4315-429d-982b-54cf8d8733bf",
        "cursor": {
          "ref": "75a82b71-2f6c-4030-87ad-1ab1c50c2b20",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "247e5755-d714-4e0b-9891-24f8bdb4c0f4"
        },
        "item": {
          "id": "05b85fa1-4315-429d-982b-54cf8d8733bf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "12ad03ff-4347-4716-b7a0-86e060a2a42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e942fc-1146-4a13-b56a-24c958e6795f",
        "cursor": {
          "ref": "afeedeed-3fba-48cb-acb8-7568065c50b6",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a5c74724-5b30-46a8-aadd-db3a88a61d17"
        },
        "item": {
          "id": "11e942fc-1146-4a13-b56a-24c958e6795f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "91c1e314-e670-4c96-b855-99c502022d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad79b805-00b2-488e-ab1a-5368cae40322",
        "cursor": {
          "ref": "712de786-c1b1-4d27-a1c6-34926b629705",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d1f42987-5698-4914-aa17-9e43c920bce7"
        },
        "item": {
          "id": "ad79b805-00b2-488e-ab1a-5368cae40322",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7490679c-bcd8-4316-9417-bc3100d408c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa2d8b6-d8d0-4661-82a4-580454492dfc",
        "cursor": {
          "ref": "34eb7465-30f1-4f16-9689-3235df339417",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c6f9cad7-8eee-4715-a7d6-bb49030de1eb"
        },
        "item": {
          "id": "5fa2d8b6-d8d0-4661-82a4-580454492dfc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "64666f7e-6c16-42c8-9d0a-92f68606c943",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "e8dfa895-e378-4599-8ae9-78bbfabedb42",
        "cursor": {
          "ref": "da8dc5be-6458-4772-87df-10ea0faf7a63",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "40bc94a9-57f6-4665-b3e8-69f82558578d"
        },
        "item": {
          "id": "e8dfa895-e378-4599-8ae9-78bbfabedb42",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e431c4cf-e351-4789-86db-abb639651dba",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "3404b6ad-82c4-47d5-b044-d7d90d7d6576",
        "cursor": {
          "ref": "2a077ba0-07cb-4a0f-8ca3-61bd9ecb2d4d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1d0eacd9-b202-48b1-a942-cbae2cc77586"
        },
        "item": {
          "id": "3404b6ad-82c4-47d5-b044-d7d90d7d6576",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "857a88d7-be7c-445b-acfc-1a8c8c910609",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "c2f23824-acee-418a-8581-9f155a61116d",
        "cursor": {
          "ref": "fdbb89f8-f5e9-4517-8265-7944a8000067",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "545d6d28-57cf-4463-96a8-391266b32107"
        },
        "item": {
          "id": "c2f23824-acee-418a-8581-9f155a61116d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cc40771c-3364-4fc9-b831-f8886723a29d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "39df725d-103b-4bbf-9ef7-91a46fb1b0c4",
        "cursor": {
          "ref": "ef273b6c-0346-4e6d-b0ad-06afb2fb97ee",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3776ac5b-cc88-46e9-b753-00ab516c8747"
        },
        "item": {
          "id": "39df725d-103b-4bbf-9ef7-91a46fb1b0c4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0ca63d46-a301-4d4b-b895-bb988cbd89ae",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "704a1338-a7e5-400b-917d-d3e24c081b19",
        "cursor": {
          "ref": "56f407a1-7df4-4248-af17-32de6278d72e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e322b139-d362-4615-88b3-83b8072ea843"
        },
        "item": {
          "id": "704a1338-a7e5-400b-917d-d3e24c081b19",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b2f119ba-209a-43fe-9595-9d91d8831afc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "35b6c24f-1ec9-45cc-91da-235ca6840a2f",
        "cursor": {
          "ref": "176d0725-ea1c-4116-8e49-82082524ec02",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b7481e9e-f2ed-4525-b613-692fcd0628e5"
        },
        "item": {
          "id": "35b6c24f-1ec9-45cc-91da-235ca6840a2f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "35249bbd-f173-42a1-9e93-69fcda294354",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3008d241-cb02-4ed4-b3b1-9f4de2ba506f",
        "cursor": {
          "ref": "e05e706c-66f4-4a6d-a829-49e6522e6808",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c752b346-5638-4cf2-9448-b67502028227"
        },
        "item": {
          "id": "3008d241-cb02-4ed4-b3b1-9f4de2ba506f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "eb3befb2-de70-436b-a9d5-aab58a4f320c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bea1619-b751-4b44-83d8-429b80cb53b8",
        "cursor": {
          "ref": "c6ccdb99-a1bd-4edd-aaec-d92d3acf39da",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "02f67ab9-e649-4b8a-9c67-3202141709f7"
        },
        "item": {
          "id": "0bea1619-b751-4b44-83d8-429b80cb53b8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "51280f38-9567-4729-bb20-db183fab90f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c905cea-309f-4604-a0da-5f635a6fb737",
        "cursor": {
          "ref": "643501b2-c593-4200-b6d8-3becc7fa2334",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "56a913aa-9778-46ee-93b0-84fd054f0b7e"
        },
        "item": {
          "id": "4c905cea-309f-4604-a0da-5f635a6fb737",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "19b33acc-c20b-45f2-9a1f-b946024f57eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d914e92f-9910-4cab-9b93-d4525b80b694",
        "cursor": {
          "ref": "7f7f2aad-07dc-4963-b4a4-40b6e98bf5da",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9347303e-5382-4b66-8e1b-32fed3c86757"
        },
        "item": {
          "id": "d914e92f-9910-4cab-9b93-d4525b80b694",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6ca584e0-745d-4985-852f-26c22f2df236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e697205-d7f6-470e-80f4-862ddeda1ebd",
        "cursor": {
          "ref": "bd0b274c-db4b-466b-adb3-a5efb4223bf4",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "259e0ba8-0122-4954-b9bd-3940bd408afa"
        },
        "item": {
          "id": "8e697205-d7f6-470e-80f4-862ddeda1ebd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7f506322-051d-4eeb-a478-a3fb68127346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd1ae45-e944-4924-b3e2-64b567de3dd8",
        "cursor": {
          "ref": "705464ca-b397-400e-a552-ad53ad1aa5ac",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "87e403ec-2783-4ee7-909b-bfa0c2280d34"
        },
        "item": {
          "id": "8cd1ae45-e944-4924-b3e2-64b567de3dd8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f118e5fc-637c-4675-b71d-52f8da020949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215fcb0b-0682-48cf-b1e3-9937b31345a3",
        "cursor": {
          "ref": "cae5ba31-10e2-484b-a890-fc8734f34779",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8ffbfb45-8da0-48c2-818b-eab892dc38d3"
        },
        "item": {
          "id": "215fcb0b-0682-48cf-b1e3-9937b31345a3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f2b187f9-ce5c-4e73-bc6f-aefead55a46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180d450c-9a13-4524-9866-1173047fb3ef",
        "cursor": {
          "ref": "63d90e9d-1021-4989-93fb-8cf9c06d1c78",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e49dd6aa-a589-4ec4-87c4-3b7649520d95"
        },
        "item": {
          "id": "180d450c-9a13-4524-9866-1173047fb3ef",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ddb1bc63-39d6-484f-84c2-094c2cfb6ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a033dd9-6480-48e1-a491-a4baa903fd0a",
        "cursor": {
          "ref": "59c4fb3f-68b7-43b4-8cdd-58c13c581f01",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "186a392c-c47e-4a7a-8ddf-c9b18e580e69"
        },
        "item": {
          "id": "6a033dd9-6480-48e1-a491-a4baa903fd0a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1e6e1244-1067-4d2c-a23c-a19516ef77ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6dcc76a-5e86-4329-a2dc-1f0e1f634abc",
        "cursor": {
          "ref": "45b22f12-20dd-4b70-a5d3-634084c0ba3c",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1eaaae7c-fec9-457c-b741-175a10391d81"
        },
        "item": {
          "id": "c6dcc76a-5e86-4329-a2dc-1f0e1f634abc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "111f1d9d-5265-4370-be14-ddcf416fb34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d946a9d-ef56-41fe-9c31-8f0ce4094b6d",
        "cursor": {
          "ref": "5bf70630-8e78-48c2-9517-bac61ee541f7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "14a78475-9da0-4f25-8b68-2c20bb346d2c"
        },
        "item": {
          "id": "7d946a9d-ef56-41fe-9c31-8f0ce4094b6d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4aa126a2-637c-4ef0-973c-83b6f443a2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48264106-fbea-4745-8fe7-9cedd13e2811",
        "cursor": {
          "ref": "3ac41c9a-bd2c-4c8b-9eb2-7fcf3c671371",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "29979b1f-1e1d-4f26-8f9e-d4e12d0d6175"
        },
        "item": {
          "id": "48264106-fbea-4745-8fe7-9cedd13e2811",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "53a9d6ac-bfcb-423e-b186-113986066b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0b3fb8-3d09-4bc5-bf05-5efac52a7f81",
        "cursor": {
          "ref": "86586b39-8cd8-4123-8c9c-67afacc9d264",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4dbef09d-0fd2-43a3-a964-bd573988c723"
        },
        "item": {
          "id": "7a0b3fb8-3d09-4bc5-bf05-5efac52a7f81",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3591ca91-88e5-47a9-94a5-f1da7326c24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c4f2bf-74b1-4558-accb-b25f7cc0bc06",
        "cursor": {
          "ref": "23faf03a-6bab-440c-a75f-c3fcbd89572e",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7d17a4fd-9843-47fd-921f-b0777f8ff704"
        },
        "item": {
          "id": "86c4f2bf-74b1-4558-accb-b25f7cc0bc06",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0498ab14-8a2e-45e1-855a-e6afa8ce3a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6657f3b8-9141-4157-aa9b-f583869b05b1",
        "cursor": {
          "ref": "7306611a-c93e-488a-9b5b-843f44bd76cb",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b7713590-67f5-47c3-8bf1-e84e6eea6c54"
        },
        "item": {
          "id": "6657f3b8-9141-4157-aa9b-f583869b05b1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6369fa91-fdaf-41f0-9a41-ac21e5ab50c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add8b367-ce25-49d8-8767-1a03c6f2772f",
        "cursor": {
          "ref": "83784b69-e07f-4955-8f66-1861551d13c6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7cf3cb68-13f5-4325-a807-c5e3f1cc312a"
        },
        "item": {
          "id": "add8b367-ce25-49d8-8767-1a03c6f2772f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fdc7e720-bce6-4f7b-80cf-1f1935ac64a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d55249-6ccf-4c5a-8d39-fef13f37fc5b",
        "cursor": {
          "ref": "f9351693-b623-43c5-a5ed-82889ffeeec5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d0e2b61a-e6cc-42b8-84cd-4a5adc90418e"
        },
        "item": {
          "id": "f7d55249-6ccf-4c5a-8d39-fef13f37fc5b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "43288aac-491a-47c5-834b-4114547a7f36",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "3e38937b-e334-4a20-9787-530fb4da6814",
        "cursor": {
          "ref": "375e78f8-288e-41e4-b35d-4133fe213f75",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b5e3a587-9118-4886-ae86-1e8da08b27f1"
        },
        "item": {
          "id": "3e38937b-e334-4a20-9787-530fb4da6814",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5b64c64c-95d3-468d-80c2-64200e17d26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7a5c36-3db7-46d5-95ea-7855aa64c7b4",
        "cursor": {
          "ref": "1f903a23-c3bf-4174-9cff-4db8bdbb02e4",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2c6a5182-c848-4fdb-867b-56a24cba4f2f"
        },
        "item": {
          "id": "8e7a5c36-3db7-46d5-95ea-7855aa64c7b4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c50766ab-3d42-4eaa-bbe4-44f5097bb97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b6c76e-c72c-4bed-80ea-66cbff44d45e",
        "cursor": {
          "ref": "cb45f91a-401f-48f1-84bc-dbbb4ae0027b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d21bcc40-3b00-4fd5-a8a1-eacad224de3f"
        },
        "item": {
          "id": "25b6c76e-c72c-4bed-80ea-66cbff44d45e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0535657c-26f3-4212-8380-5ffe9d1bea58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4273bd6-c5fd-4a23-9432-8bbfe762dc4d",
        "cursor": {
          "ref": "4fd0144a-de3e-4bb8-8694-d3a9b77dce25",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "34653102-fc7b-4c8a-9b61-44c369918c56"
        },
        "item": {
          "id": "f4273bd6-c5fd-4a23-9432-8bbfe762dc4d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4bb99372-b8dc-4ffa-b576-ea26d4afd295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc15954-c8eb-4e19-aa6b-e3ee87b5a7f8",
        "cursor": {
          "ref": "0b7865be-84ca-412d-8d84-668a92ce6309",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2dd43260-6dbb-4f73-bf3d-ece2dbe859d5"
        },
        "item": {
          "id": "ecc15954-c8eb-4e19-aa6b-e3ee87b5a7f8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cc6be7b5-63df-4e87-a37f-3ef707216d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f157fc4a-ac2b-40bc-a5d4-73828b3b5d2b",
        "cursor": {
          "ref": "3cdff6ef-df5f-476a-a397-e025671f3bc2",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "54e8229f-163a-48db-bf1c-5031687ee4ba"
        },
        "item": {
          "id": "f157fc4a-ac2b-40bc-a5d4-73828b3b5d2b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b4eebc47-d2a6-41d2-8ef7-0278dc419f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b961100b-a9fc-4521-b345-2b069425f109",
        "cursor": {
          "ref": "3c628f07-5953-4edc-88f8-bb53dd040127",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9396e333-646e-4505-914c-8c9b94b9819e"
        },
        "item": {
          "id": "b961100b-a9fc-4521-b345-2b069425f109",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b9976447-0722-4aaa-81a9-84a2d2435d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c82e08-2365-4de6-a483-2209d004774d",
        "cursor": {
          "ref": "d8bc2187-a0fd-413b-890c-b26851bdc93c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5707d6f2-1058-4970-a4cf-498dcbdee02d"
        },
        "item": {
          "id": "80c82e08-2365-4de6-a483-2209d004774d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3422ab66-9ee7-434e-b3bc-74d2ec43905b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f11b96-2e27-482f-be03-c45af3d9e666",
        "cursor": {
          "ref": "73a965de-b883-42e3-a0fc-346252134097",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "16c089e0-882a-4f0e-ad45-3c8fee71fd4d"
        },
        "item": {
          "id": "07f11b96-2e27-482f-be03-c45af3d9e666",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d7a4c6e7-36ad-486a-b07d-90b1d19b7407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909b428a-53e0-4c69-9063-568ffbdfe8c5",
        "cursor": {
          "ref": "3d3263c2-7252-4f4d-9cbf-a47ecca3dc55",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a872d390-7ad4-4b9f-bb6a-de009065b129"
        },
        "item": {
          "id": "909b428a-53e0-4c69-9063-568ffbdfe8c5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "80562db5-f8f1-41c9-bfd4-69eaf0fcbf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e403abf1-fcf7-451b-93c1-277254b00ad0",
        "cursor": {
          "ref": "e5ad0ce3-b04c-499b-b3cb-25760ac85d3f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f8c864c0-d95d-42a8-a997-9a093605f87e"
        },
        "item": {
          "id": "e403abf1-fcf7-451b-93c1-277254b00ad0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b82c3664-1366-4c06-9f47-172d6f3dda6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b2d1bd-f711-4529-a5c8-f5a1ba769430",
        "cursor": {
          "ref": "de17573c-2b92-4a92-9bb6-4fd6d171f005",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8e4570c0-7ebf-4dfa-9b0d-f296250e3e25"
        },
        "item": {
          "id": "c0b2d1bd-f711-4529-a5c8-f5a1ba769430",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6f2ba20d-1020-470a-8ead-ad82b0094b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2abc89b-1527-4bb9-acdd-ecb62ba74f13",
        "cursor": {
          "ref": "6a8f5b24-6d18-408f-8994-b26f3c9cb3d5",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ef698b8a-a63c-467e-b9dc-7ad31699c33a"
        },
        "item": {
          "id": "b2abc89b-1527-4bb9-acdd-ecb62ba74f13",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "da94ac14-4e50-4b2c-a7be-9e498445b383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778b4375-5493-4d88-8789-ad2cffee48b8",
        "cursor": {
          "ref": "c1eb33b1-c9c3-4ed8-93e9-839698d94dbc",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "30dc1c2a-f74c-4a9f-9e25-6c9b36798d0b"
        },
        "item": {
          "id": "778b4375-5493-4d88-8789-ad2cffee48b8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d24c05fa-ba1b-4a5c-bf31-8bfa23742ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e2a49b-d5cb-4cbe-bf31-cbe9cd469f73",
        "cursor": {
          "ref": "689c3c36-c5fc-48c3-a69d-79b2b3d1de36",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d986372d-5c47-4e26-8f7d-627afaabf8fe"
        },
        "item": {
          "id": "47e2a49b-d5cb-4cbe-bf31-cbe9cd469f73",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "11cebfde-17da-40e5-ad4b-8478b475f9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae66f62a-d0f2-440e-a3c5-6b9b2752432e",
        "cursor": {
          "ref": "188887e9-4a39-4055-b3ca-23c60f428761",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2b281593-27f0-4be9-a77f-c41d3ce5323b"
        },
        "item": {
          "id": "ae66f62a-d0f2-440e-a3c5-6b9b2752432e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "aa19a613-e052-4b0f-8ae7-07791ab2c4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d6ec80-fae5-47cb-b3c9-2c2a655f43c0",
        "cursor": {
          "ref": "561857df-e94a-4f19-882a-d928569fb7c1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d5995ef8-efde-4b5c-b50e-346fabb9e22b"
        },
        "item": {
          "id": "18d6ec80-fae5-47cb-b3c9-2c2a655f43c0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3ddd6c3b-6313-44cf-82b3-0214531cb341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863b87c6-ee8e-4eca-8f38-15f17f34380a",
        "cursor": {
          "ref": "dd50f7d0-56e1-4347-aa9a-f95ed80a7cc8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6f344922-92af-4dee-9379-6ae6c3d35897"
        },
        "item": {
          "id": "863b87c6-ee8e-4eca-8f38-15f17f34380a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d41623dc-e07c-4755-8e31-e7ee09626d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a47559d-2f75-4988-a4fb-2c268d7cafe9",
        "cursor": {
          "ref": "67bbe813-611e-4e57-8b18-25c9e80d8b5a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fa5931fa-a8e6-40c5-84ad-28ed5518612c"
        },
        "item": {
          "id": "3a47559d-2f75-4988-a4fb-2c268d7cafe9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "888f370f-35a8-4ea6-a6c2-f617a0cd21f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fef16bd-36a7-4245-a91b-d6971091f759",
        "cursor": {
          "ref": "dfe5e95f-0d78-47fc-a6a8-ca02a49af004",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0fbf303d-56f5-49a1-83fc-02eb0284f393"
        },
        "item": {
          "id": "0fef16bd-36a7-4245-a91b-d6971091f759",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fc05b7d5-0804-465d-aa0d-691f2f3421cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7a9c43-6659-43e8-8033-46c98b3959f4",
        "cursor": {
          "ref": "419d58b3-3d91-413c-8246-74e0c26208dd",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "af8a0e20-55a8-4f27-b0e6-d311a8a0578c"
        },
        "item": {
          "id": "fc7a9c43-6659-43e8-8033-46c98b3959f4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "14b9f2c5-2fa8-4d6b-ae0a-3d0282a88c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122640bc-bf1f-44ec-a1e3-7d6fbb3f2c48",
        "cursor": {
          "ref": "2adfcdf1-d53d-4f32-86fa-55d375bc4128",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4c445f0e-0985-4304-90ab-9f8de4d4f0e0"
        },
        "item": {
          "id": "122640bc-bf1f-44ec-a1e3-7d6fbb3f2c48",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "49401d60-b2f6-4b48-80bc-c28011bf2416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f136dd13-1a1a-446b-9dd3-fb128302b052",
        "cursor": {
          "ref": "386b6ac4-a247-467f-82ae-b0aaec71fcb7",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b504cfe8-b1f8-4c01-9378-57a5747dcb88"
        },
        "item": {
          "id": "f136dd13-1a1a-446b-9dd3-fb128302b052",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f89ab96e-4ec0-41be-99e3-bd62fec6ab5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b86e92-76b3-49e5-8af1-985759adff2c",
        "cursor": {
          "ref": "f3e9cf82-b94f-453f-a6ab-3ffd240a87ef",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "133849b9-856c-4359-ad04-476cba4bc2cd"
        },
        "item": {
          "id": "b6b86e92-76b3-49e5-8af1-985759adff2c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ef6c34ed-756c-4481-9935-8d0ce54fad2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2114258c-06bd-4085-ada4-5854485243ab",
        "cursor": {
          "ref": "af331f53-012b-4934-addb-bf8d7b883d77",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f4402b2b-72e0-44da-abd0-c3ecc1da4285"
        },
        "item": {
          "id": "2114258c-06bd-4085-ada4-5854485243ab",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6e542578-3e25-4a83-8973-ecc4f00b6987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cdc145-9e3a-4367-9d3f-98ad8f13b14c",
        "cursor": {
          "ref": "d1989c5a-88e3-4e65-a025-586e7cf5e044",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6ad4199e-b900-4a0b-bcf5-6f30ad344db6"
        },
        "item": {
          "id": "56cdc145-9e3a-4367-9d3f-98ad8f13b14c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e98c3135-ea34-4fbc-ba30-1f1db14e0884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e7cb32-0812-46de-a0eb-fd7bb1553034",
        "cursor": {
          "ref": "7e27c9bc-87f5-424c-baf7-70d4c3795586",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "31c080d4-a77a-40a9-b178-7e2b59e2966d"
        },
        "item": {
          "id": "d2e7cb32-0812-46de-a0eb-fd7bb1553034",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7a8b0d6b-e629-4c24-882d-418042ee9fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a7f54a-f61b-4e05-855e-51b95b065776",
        "cursor": {
          "ref": "b747853e-b655-4843-96ce-b0120b5274ce",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "90fc1911-11c0-4307-916b-25e2bd816abc"
        },
        "item": {
          "id": "77a7f54a-f61b-4e05-855e-51b95b065776",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dad99fe9-8b25-41ef-87a8-6072ace8ec85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072ea788-5e6b-4fd4-be2d-75aee85f1b7c",
        "cursor": {
          "ref": "c06df955-c129-480b-9c36-5345f86e25f7",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bd9b0103-aab1-4887-b6e4-a3b1364aedbb"
        },
        "item": {
          "id": "072ea788-5e6b-4fd4-be2d-75aee85f1b7c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "54a80b61-3fdb-4249-a79e-37a5f1f71a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8a3fd3-cfae-428c-b659-0bbb2e45282e",
        "cursor": {
          "ref": "92692ce5-cfb6-438a-af0a-7319fab1c323",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6eec15ba-1798-46f6-bc24-e084206004c9"
        },
        "item": {
          "id": "7a8a3fd3-cfae-428c-b659-0bbb2e45282e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ec295083-e05d-44d1-b3d4-f63a14877e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a19c460-0e1d-4ba7-8449-5c9e7acdd52d",
        "cursor": {
          "ref": "efd4512e-77da-4ce2-9b26-c87ab29767bd",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "67801468-e21e-42f0-86b7-1023bc41ed7e"
        },
        "item": {
          "id": "9a19c460-0e1d-4ba7-8449-5c9e7acdd52d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c71991e5-df6e-4ec2-81ad-ee0f1afaba52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baafec9-04c9-45da-b625-c768b9fb724e",
        "cursor": {
          "ref": "1e0412d4-0080-4bfb-8fd4-9a4ad2f4c0a5",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fe633866-2a9a-4fdd-8cdf-d560a86cb9c8"
        },
        "item": {
          "id": "6baafec9-04c9-45da-b625-c768b9fb724e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f292f835-f3d0-4382-8397-b02d0c5e3ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7599373f-0913-47e8-850c-1135096f0cab",
        "cursor": {
          "ref": "83e80837-4e81-40d6-9330-00aeec579f08",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "84b9a8d1-47c7-40fa-ba28-5fccc316230a"
        },
        "item": {
          "id": "7599373f-0913-47e8-850c-1135096f0cab",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c03316fd-7512-44e4-ac71-043e227e84ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a1808d-f516-4182-9490-b2e85bad5031",
        "cursor": {
          "ref": "46a052eb-999c-437a-b804-ebb3ae8d5703",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8c638ab5-7332-47dd-9e28-3734cf4bebc0"
        },
        "item": {
          "id": "f6a1808d-f516-4182-9490-b2e85bad5031",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e2a5faac-79df-462f-844b-33c9aa59eaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f9d237-e2b2-463f-9923-89aa5cd5f286",
        "cursor": {
          "ref": "3827377f-6b9e-47f2-9370-a4c9c0068b9a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6613ff78-e6b3-4676-8ac8-8b6fae86ec59"
        },
        "item": {
          "id": "a7f9d237-e2b2-463f-9923-89aa5cd5f286",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3ef93fc2-9b1a-4225-8bf1-11b87b1b4cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec72fb7-dde3-4bcf-832b-de354c5f0780",
        "cursor": {
          "ref": "43c21355-e006-4ad5-baa2-0fb44c0a640f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ce4346cb-fc15-4ecc-aafe-948e5d611642"
        },
        "item": {
          "id": "cec72fb7-dde3-4bcf-832b-de354c5f0780",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5f796f84-770e-49bd-88b1-8c7b0f67bdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6f4ba8-ad9f-4257-8801-e246fac534a6",
        "cursor": {
          "ref": "ee2afa0a-5436-4290-9b5c-df285f9fc85c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "20f1f0ff-e281-4929-b378-a2b8a2d4f90d"
        },
        "item": {
          "id": "7f6f4ba8-ad9f-4257-8801-e246fac534a6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6cdd49c7-1756-400b-89d0-cb4fe8889e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08d1481-765f-4c83-8bf3-6c0c37b9aae3",
        "cursor": {
          "ref": "11f137e8-0f2b-4906-b94f-7bc5bbbe6464",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0452231d-0192-4ee8-a68d-07b1075b3223"
        },
        "item": {
          "id": "f08d1481-765f-4c83-8bf3-6c0c37b9aae3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2db8be56-dd6d-4c97-a498-7357176d7a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e92fb18-5176-42bb-835b-65fad3438543",
        "cursor": {
          "ref": "5f07ac51-38b6-4768-ae41-6bff1d78e3cd",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7948655e-f391-4231-b656-632a10aec0c6"
        },
        "item": {
          "id": "3e92fb18-5176-42bb-835b-65fad3438543",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "70c72526-e37a-4e91-8a24-62aba83bd601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e01f42-5572-45ac-ba51-2fdc976d5e27",
        "cursor": {
          "ref": "7cce5ff2-1a10-4082-890b-c18455113e50",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "750917b5-5300-4103-8782-dc0dfbfaad5b"
        },
        "item": {
          "id": "36e01f42-5572-45ac-ba51-2fdc976d5e27",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "55828f28-3369-48c9-a863-525114180c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0457a7-91ed-4037-8455-7339008e7373",
        "cursor": {
          "ref": "d0c2a490-c3eb-4149-bc26-53087f89a0db",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0d36b3eb-5429-4656-840f-86bc0c5e6e37"
        },
        "item": {
          "id": "fc0457a7-91ed-4037-8455-7339008e7373",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bbeba140-488f-4bee-a1c7-d7f352fbe5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d81531-9ecd-40f4-b388-ed4020e819d1",
        "cursor": {
          "ref": "1fc1f43c-6ab7-440b-a2c4-949f897347d0",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "af71d868-47ee-4316-b993-044ff84dd7db"
        },
        "item": {
          "id": "70d81531-9ecd-40f4-b388-ed4020e819d1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "15b3153c-c03b-4b8d-b437-67f479bcb7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee97d075-2f45-46f6-85a6-b46191d9b993",
        "cursor": {
          "ref": "b0ff99d3-6016-4c65-8cc4-27adf0f64f99",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9ec0c535-ffb3-4aae-ae3e-58e99873691a"
        },
        "item": {
          "id": "ee97d075-2f45-46f6-85a6-b46191d9b993",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c8ae9fdb-9593-4282-a1a3-eda3067b8750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5687e3a3-af6a-4d4c-88db-af2e78641c69",
        "cursor": {
          "ref": "6ade1eda-2664-4c4d-984a-7deea940799e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6e7d2509-276a-4726-803a-7440463da833"
        },
        "item": {
          "id": "5687e3a3-af6a-4d4c-88db-af2e78641c69",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b93cca93-dfa7-490d-b94f-02c666d7c86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54ce199-d2b6-4681-8fa6-1af8ff5c558e",
        "cursor": {
          "ref": "0ed95b0c-63f2-4c07-8491-c6690a726a06",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c1580a07-5b7c-4bf5-a380-5b481a802651"
        },
        "item": {
          "id": "c54ce199-d2b6-4681-8fa6-1af8ff5c558e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e046c85b-fcbc-44d7-80b6-b6af39862345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ae30ec-8ab1-496b-9761-0164a250149e",
        "cursor": {
          "ref": "f2e680b8-5811-42d0-b793-c51f289a36d2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a2cc9eb4-082e-4535-b1cc-cb98500ca9b1"
        },
        "item": {
          "id": "09ae30ec-8ab1-496b-9761-0164a250149e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bb6a5764-7aba-404a-be79-c054c5ffcd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06007863-c688-4ad7-ba70-b26c1c0dfb01",
        "cursor": {
          "ref": "7548acfe-e8bc-4920-96fc-c5b3e4e8e11c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4f3767c6-0db4-4d34-af3b-68e65794229a"
        },
        "item": {
          "id": "06007863-c688-4ad7-ba70-b26c1c0dfb01",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9abca9ef-fd9c-409b-b98f-b2b75e1df443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f9fa3e-aac4-4695-a163-26a4ef766c1f",
        "cursor": {
          "ref": "d7774117-5a39-4f1a-968f-6a1f9c935f45",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "deda9769-1de8-46a8-b775-d948186382cf"
        },
        "item": {
          "id": "46f9fa3e-aac4-4695-a163-26a4ef766c1f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "831c6b7f-d7c3-499c-9d8c-e493db0fbb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5a2345-6b4f-42fb-a497-12f5dbd03c99",
        "cursor": {
          "ref": "f5eb3d7e-91e3-4982-bc1a-b1554c105ba1",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "94cd6e7f-e7ee-4bb1-a28e-b27741ad17e6"
        },
        "item": {
          "id": "7e5a2345-6b4f-42fb-a497-12f5dbd03c99",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5e0aeabd-91e8-4b1b-902b-2dd83d075f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8a8d34-466a-42a7-b09a-068ddcac100e",
        "cursor": {
          "ref": "80c078c3-9766-4735-96d2-69b6d88bb107",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b3081a45-4048-4933-af37-7506bf67e4d2"
        },
        "item": {
          "id": "6e8a8d34-466a-42a7-b09a-068ddcac100e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1e25ae5a-9283-413c-9081-cccc47b8bf20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e7290a-5f4a-4519-8162-c9b67babef3a",
        "cursor": {
          "ref": "b9059830-66f3-49be-a44e-f638a9ccf7e1",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c386a262-202b-4e33-8f82-e4d5f453729a"
        },
        "item": {
          "id": "05e7290a-5f4a-4519-8162-c9b67babef3a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bb283615-92cd-464a-b993-08aa6aae431d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa5ace8-9b40-4ac5-8a6a-da7425170085",
        "cursor": {
          "ref": "6d3fbdd6-12b4-44d5-8d66-4288d54dc13e",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9738fa11-ab8a-4505-b644-2f65f479514d"
        },
        "item": {
          "id": "faa5ace8-9b40-4ac5-8a6a-da7425170085",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e530b8db-285b-4421-87a8-c1d5e9d903d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3741a940-38dc-4936-9397-0f3c91cd3e98",
        "cursor": {
          "ref": "e19fd4d4-8ec4-4e26-99b8-388c637c42cc",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3ca020aa-751a-4f4f-ba46-ed7cc0fd981a"
        },
        "item": {
          "id": "3741a940-38dc-4936-9397-0f3c91cd3e98",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6cd72c48-2dc6-4be3-a74b-8352cff3ab71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2e36bc-9e5e-4414-b655-2d58b2affeca",
        "cursor": {
          "ref": "b395eb2b-0ea3-4c6c-966b-0443ab2528bb",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4be20ed4-738a-46c4-8332-da5ae922cad2"
        },
        "item": {
          "id": "ea2e36bc-9e5e-4414-b655-2d58b2affeca",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6e832598-87cd-43ae-ada1-0e0373b9546a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5749499-5bfa-4079-bd60-856f333fdee3",
        "cursor": {
          "ref": "1fc82d7a-93c6-4a93-a458-86481ec2abc2",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "44691099-46a8-4fca-8558-2a7e1ef90d69"
        },
        "item": {
          "id": "a5749499-5bfa-4079-bd60-856f333fdee3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fd83be9b-d5fa-4d03-b183-012e7ea04707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d44b0e-a3ee-484c-80ae-138bef286d5c",
        "cursor": {
          "ref": "53294b32-36d5-4a60-9ab1-f246632eb7b6",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "880706ed-fa7d-45d8-ba87-94abfd2d1891"
        },
        "item": {
          "id": "04d44b0e-a3ee-484c-80ae-138bef286d5c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "aed8301e-2d9b-4fd7-952e-3101260248a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9439edb-b7e2-480f-90f5-bfacc88785e2",
        "cursor": {
          "ref": "2ed5fd66-c33a-4dc4-832f-a144975bceed",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "49e08f6c-8699-448f-beb2-c9234b586ec1"
        },
        "item": {
          "id": "a9439edb-b7e2-480f-90f5-bfacc88785e2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "81580ff2-b732-4adb-a95c-5919cafecd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf12cd7-2472-4a3e-b8cb-402eeb3e1b20",
        "cursor": {
          "ref": "7936b2f4-9cb8-41e7-9760-b38f859fd574",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "93b60bcf-38ad-4335-8d8c-ae6261be7b79"
        },
        "item": {
          "id": "7bf12cd7-2472-4a3e-b8cb-402eeb3e1b20",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "23602775-0b3d-42af-86f8-340cb0aeae1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b26fe4-9487-4c14-ad56-08d18c2dcb3b",
        "cursor": {
          "ref": "9256fc84-1c40-40a0-9921-dd1818ffc979",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "119c5275-44c0-4dfc-a51f-29080a616697"
        },
        "item": {
          "id": "91b26fe4-9487-4c14-ad56-08d18c2dcb3b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "346577d4-4a89-4263-8493-40d4ab183b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2acd4f9-41ea-4fbc-9958-241966315d4f",
        "cursor": {
          "ref": "f106bb9f-7a0b-495c-85ff-a721e9f614df",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "696f4989-5946-45b1-9148-d077b73dc815"
        },
        "item": {
          "id": "b2acd4f9-41ea-4fbc-9958-241966315d4f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2d72b123-2747-472d-a8c6-38c9f643615d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a520e9-c956-4611-8b50-10224f09edc9",
        "cursor": {
          "ref": "255b70af-f57b-45ca-a706-75fbd600067c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "32ebd019-c22f-42c8-8e87-48672d3ef8e0"
        },
        "item": {
          "id": "53a520e9-c956-4611-8b50-10224f09edc9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "94a3068c-13f8-4ce7-b4c7-5d9dd20ce0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1929f7c-1ad5-4c3b-a5db-164ab25ffc8e",
        "cursor": {
          "ref": "c86e8708-7ef5-4a62-a49a-a504af3a66b8",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "618f538c-8582-4884-8c60-8990b7f33ef6"
        },
        "item": {
          "id": "d1929f7c-1ad5-4c3b-a5db-164ab25ffc8e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f3c568da-b910-44d6-8a32-74601f7d9061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780deedb-7645-4bb7-8d16-133252d0ba7c",
        "cursor": {
          "ref": "1f730b2a-df94-43a3-b764-7319c22db8a5",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ff5cc875-b6d8-46d4-93fe-3ec9c3afdb6e"
        },
        "item": {
          "id": "780deedb-7645-4bb7-8d16-133252d0ba7c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "023d1bca-cfbc-4dc7-9afd-4d4583499d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4dd070-b908-499f-a2d9-62857ed8f00b",
        "cursor": {
          "ref": "8f7d631c-ed36-46fb-9757-6cedf85fd664",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d64ac0a8-5e31-47c4-86a7-3866b4213193"
        },
        "item": {
          "id": "0d4dd070-b908-499f-a2d9-62857ed8f00b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a5f815d7-bec4-43a0-b448-45684f51cb2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c762e3-3f02-47b0-9744-1d07a7c9a7d8",
        "cursor": {
          "ref": "ee3e4f57-7e33-42c5-95ee-7857dbd3ddba",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "eb857bb4-6626-44d2-b69a-aa22b24e2684"
        },
        "item": {
          "id": "d1c762e3-3f02-47b0-9744-1d07a7c9a7d8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1782b7a0-3fde-4c15-8a91-c096fbe9a679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb2d3ed-7779-4424-8096-e33b8a098def",
        "cursor": {
          "ref": "17f64b45-9626-4085-86d9-ee7f31a73c00",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "682ea421-064f-441c-b597-7ed4256772d0"
        },
        "item": {
          "id": "ccb2d3ed-7779-4424-8096-e33b8a098def",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6fe239c7-6659-4807-8b54-610266d7067e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dba97f8-2ff6-4f17-85a7-d8bf9f0e5696",
        "cursor": {
          "ref": "5b2dd372-03aa-4fab-902b-e3b6ae28470e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "101ec9db-129d-4b60-b2cd-8d90983c2185"
        },
        "item": {
          "id": "4dba97f8-2ff6-4f17-85a7-d8bf9f0e5696",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ab7e4582-f3a6-4d62-8ac9-6e9a6b8ec09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220395d8-37c8-46a1-9de9-ba9fbb1ad297",
        "cursor": {
          "ref": "5f5bb4bd-e770-4638-8196-11f50fca1141",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "aa01d7f2-6ae0-4ac1-bf54-36cf04d66d6f"
        },
        "item": {
          "id": "220395d8-37c8-46a1-9de9-ba9fbb1ad297",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "83c30e9e-bb39-4dfc-9ba6-04841cda9ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf18e7d-5110-4321-ad15-3747787d1bac",
        "cursor": {
          "ref": "5ad72680-6254-4b0b-89cd-2f4db2fc4057",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "00e47c2b-b3ea-45be-9261-54bccad51aa7"
        },
        "item": {
          "id": "6cf18e7d-5110-4321-ad15-3747787d1bac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "57f6f21c-449e-43e6-a99e-496e9895d938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab504c27-bb7a-420d-a155-af2023adcb5b",
        "cursor": {
          "ref": "9552e767-ff5b-4c0d-b8bd-f0ddae1a7c34",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "58c56bd4-8bc2-4c14-899f-71791e10e37d"
        },
        "item": {
          "id": "ab504c27-bb7a-420d-a155-af2023adcb5b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "744ff193-59c6-4459-9b30-b970f10b0e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7350c4-2252-419b-983d-e6d3d788a2dc",
        "cursor": {
          "ref": "70362d3c-d1e1-4a51-9f3e-4313780344c7",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6fb9e25c-d689-455d-8c94-f65bf6ba3cc4"
        },
        "item": {
          "id": "0a7350c4-2252-419b-983d-e6d3d788a2dc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "361f07a9-c7b9-4cb7-9f09-b07f9f83d727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f460078-5142-483c-815e-f82bab7a3ffb",
        "cursor": {
          "ref": "d6d6bf8c-ec59-40c1-aa3a-99eb5d9d3dd3",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "81a41c9e-4ca4-4f2b-aba5-e9e427479b9d"
        },
        "item": {
          "id": "3f460078-5142-483c-815e-f82bab7a3ffb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8d1aab00-ae2b-4fa4-a859-52716ee96d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ab9cbf-ab05-4ba6-9ed3-fd6c8160a2f4",
        "cursor": {
          "ref": "1c2f7f34-f9b9-4cf0-b8b4-42ab94747fda",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "623ce7ee-5901-48db-afe2-858a43c5f0cd"
        },
        "item": {
          "id": "b1ab9cbf-ab05-4ba6-9ed3-fd6c8160a2f4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2eed722d-d7b3-4237-b24c-b21cb054b2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ff4ba8-c400-4590-988a-507825b10819",
        "cursor": {
          "ref": "81506f0e-5eb7-4d24-9d8e-cdeafafa6c80",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2758d782-1c2b-43ce-b996-80f70e6aab9b"
        },
        "item": {
          "id": "55ff4ba8-c400-4590-988a-507825b10819",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "efbfe273-5b5a-4269-a0b9-f08187e44667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83286deb-142d-4d43-a0c5-4d76d98bd834",
        "cursor": {
          "ref": "9c3015dc-1d87-464e-b58a-32a55289eb96",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5ffb6200-7076-485e-ab4d-a34278ab308b"
        },
        "item": {
          "id": "83286deb-142d-4d43-a0c5-4d76d98bd834",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "75beef24-f2ec-4c0d-975f-860487cfdd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da4d0c5-71f0-410c-b6a3-f5ee11b1bd54",
        "cursor": {
          "ref": "f24ce07e-a15c-4b04-b367-aec64fe4637e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1abd6696-4a21-4c1f-b864-5aaa44813a89"
        },
        "item": {
          "id": "9da4d0c5-71f0-410c-b6a3-f5ee11b1bd54",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3d8c7796-e7d0-4d13-b595-fec926ed4e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8efab1aa-9c59-4d91-95a4-5a3362092d1a",
        "cursor": {
          "ref": "9ec0a7f8-e624-49d2-847e-e50d9959e3c9",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ab6632c2-54a1-4110-8d47-2e48f32e2944"
        },
        "item": {
          "id": "8efab1aa-9c59-4d91-95a4-5a3362092d1a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "40413856-0d34-4cd9-88c0-fbe37d2b77df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7316131-ee0f-42f3-ab8b-1e4ccc807b6c",
        "cursor": {
          "ref": "00f16cd1-a1d2-4768-a50b-a49e3cade0a2",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "33e74f25-d9e6-48d6-a4cc-8b991a660486"
        },
        "item": {
          "id": "e7316131-ee0f-42f3-ab8b-1e4ccc807b6c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cbed1ed7-724a-4b77-bc80-9c4371e57204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3c25f5-4d3e-4dde-9392-3e63da93c8f5",
        "cursor": {
          "ref": "bdb88b70-c3fb-4d19-879e-2edbbffe0fec",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e3a0da35-4f9b-4e0d-a4cb-b01e265e467c"
        },
        "item": {
          "id": "4d3c25f5-4d3e-4dde-9392-3e63da93c8f5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6bd6e773-5953-4b48-bcfb-bdf4447d352a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61330d8-9635-4c04-a4e5-43ce3a57a40e",
        "cursor": {
          "ref": "c1287872-2cb6-49d4-8bdf-6ebe2884de3a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0d8e92de-c4de-42df-a461-69a091d5535e"
        },
        "item": {
          "id": "d61330d8-9635-4c04-a4e5-43ce3a57a40e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d6179336-b374-4c24-ae96-99c7db942f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fa62c6-dacc-4bfb-bec4-4e108f2ecf32",
        "cursor": {
          "ref": "b10ed0bb-3f01-4a62-9ce7-99a9396a26d9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ac8174d3-d8a2-4866-b844-62b9ce34a24f"
        },
        "item": {
          "id": "e2fa62c6-dacc-4bfb-bec4-4e108f2ecf32",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fed652bd-a8b6-4997-b207-5ac00ea6a6ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a38c4f-f255-43ac-9084-92a5fdaffdca",
        "cursor": {
          "ref": "ff00c603-18c5-4f2d-a1ba-5e475158c631",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9551f318-21bf-4833-81e9-8ecca97d51f4"
        },
        "item": {
          "id": "30a38c4f-f255-43ac-9084-92a5fdaffdca",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3eee4d43-b348-4672-919d-17b22ff4c22b",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fe28bf-d4f9-4a28-b760-8d6eb8372419",
        "cursor": {
          "ref": "27188a6f-14ca-4be7-bf19-bc7060e3677d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b92de70d-9c58-4124-a8cc-b9ff7a29d943"
        },
        "item": {
          "id": "d4fe28bf-d4f9-4a28-b760-8d6eb8372419",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d2c0899f-c314-493e-9713-0f4c3c38a0a7",
          "status": "OK",
          "code": 200,
          "responseTime": 2533,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d33f8a6-f8fe-499c-8c35-b7c58c38fb66",
        "cursor": {
          "ref": "db10d06d-33f8-4ee4-9c9c-913100386771",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9d5d86ca-b572-4b10-904e-92b180022726"
        },
        "item": {
          "id": "2d33f8a6-f8fe-499c-8c35-b7c58c38fb66",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cbabdf06-0950-4f13-b1fc-31e9e97c84f7",
          "status": "OK",
          "code": 200,
          "responseTime": 2508,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c38210b-56f9-4070-831f-ff478dd32087",
        "cursor": {
          "ref": "0a1d8f6d-4998-486a-8e65-b4fe1dd50747",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5e41ad32-23ed-4ac5-bbe1-d3d933702d6e"
        },
        "item": {
          "id": "2c38210b-56f9-4070-831f-ff478dd32087",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "19382dbc-7926-449c-a129-455c29a4e093",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c38210b-56f9-4070-831f-ff478dd32087",
        "cursor": {
          "ref": "0a1d8f6d-4998-486a-8e65-b4fe1dd50747",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5e41ad32-23ed-4ac5-bbe1-d3d933702d6e"
        },
        "item": {
          "id": "2c38210b-56f9-4070-831f-ff478dd32087",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "19382dbc-7926-449c-a129-455c29a4e093",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120dc634-14f7-4fcc-ae91-23d72d5b8e41",
        "cursor": {
          "ref": "5ffd7720-97c3-44af-bc17-0f3f5bc43a68",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d1060157-2149-46c8-83ef-fb365db7895e"
        },
        "item": {
          "id": "120dc634-14f7-4fcc-ae91-23d72d5b8e41",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5f07593d-2c63-4d69-bc67-463dfd8a2bef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47ad08a-82c0-4f0c-93f3-5f9deaba2548",
        "cursor": {
          "ref": "59646aef-faac-43db-bccd-0de51b6401d9",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "90a4a567-1b40-4ca1-9fc7-e2ccb38cb4d7"
        },
        "item": {
          "id": "d47ad08a-82c0-4f0c-93f3-5f9deaba2548",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4e5d180a-42a3-48d4-842a-f1e3ff5b2e8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}