{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d2fd3be3-e663-4785-9fd7-5889b05d8739",
        "name": "Clear Cache",
        "item": [
          {
            "id": "f01d38cd-19b2-4f5f-a3c6-49e222cdf0bb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5c25e52-873d-42da-9a21-e0683d812e02",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b3a9194a-72ca-4a6c-b512-c1fc931bacc6"
                }
              }
            ]
          },
          {
            "id": "8ee9f4df-5af7-41fc-9fe0-3b576ef8cdf6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7aa98f65-37a9-4d36-8483-0011d9684bc0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "81d64efb-032a-4e84-af3e-685dc3297c8d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e2f5dbf1-14e1-466f-a869-0d87b07c5c0c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "477c75c0-eba7-4639-aab1-a6fbaa0e556f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "541bc878-1abd-491c-8343-ae3a92e9d0b3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ae31dfa-ed40-4d95-a301-6221b0db9fef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ea7587f-f86c-4b08-9264-ddf21ced5763"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16b4fa4d-078a-4a65-8732-a59c7228c280",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c918c39-9812-4d87-8f42-f9f843bdf45b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5bf4df2b-4bba-4d03-a0f4-a0dd8f87cad7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c47c04ba-f4da-44e0-a1e6-10fd8651a676"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "019dbb90-4e64-49b5-86d1-4a2f9019c3f9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8190f564-7930-4d83-808b-fa08011122b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64ff11f4-dd45-4e50-8551-88cbecc06426",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54c85c3b-3490-4acd-87e3-3c53c6d9d02a"
            }
          }
        ]
      },
      {
        "id": "5c05aa65-4c30-4e3e-bff7-61df37cbc48c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4369f897-209d-41dd-8dd7-99b8e02a585d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a18dc3dc-292d-4a66-b3b0-ac54b9b73aec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "500e8ef9-b8e4-4691-aa25-afe2ff97a75f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938cc08b-a99d-421e-90d6-37b0c17599a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c9cba90-3046-42e7-b0aa-98ee720160e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f2ed98-8f91-4d39-a1aa-3785419c9097",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933ce269-5c53-463f-a7f6-d5657fc30c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6feb35b5-dbc4-418a-aa0a-67716531e222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fbd0df-927e-437c-9471-8dea93ea9cda",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29102c89-6ddc-493c-950d-06f9dd95e292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21a106eb-a6c4-4aec-8304-7dde274bf327"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "314ac4e5-5aa8-4770-986f-89fc392aad1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e186c695-91a5-47b7-957f-19b6d6089e03",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287b3796-7483-4cbd-9095-3e9ad9c9e95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abd94f26-cc20-48f0-8f7e-a31a5a3431d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bf0ce6-241b-4bed-b348-003afc52144f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd26dca2-1410-4085-af9b-982e59ec0932"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6bcac1fb-93cf-4b4e-a9f1-6590149f80a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96ee643b-38e2-4079-b2f1-2a7bad5a83bc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8f9d287-e2ec-44f5-aac2-de5880a731a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "58960688-32e6-46f5-a928-d6d6971f11b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b2542cd-a738-456c-b6d2-d31638c4f0c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3beb479e-d3d2-4e2e-a803-82e7804161d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90e6d64b-d494-497b-b23a-870990de3f55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "434752a4-73cc-4a16-8f21-f669dc20e034"
            }
          }
        ]
      },
      {
        "id": "d4066e75-d575-4801-b1ce-ac130ec2d487",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3e0d24cb-474d-4b02-a705-37eac0a2916c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77998d93-32ce-4d47-81f4-11bba063546c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "89239024-420c-4a6b-9eb7-f216d8daa3cb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c5bc5c-db0a-470e-b28c-ea103a6b241c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a0b230-5e2e-4670-a645-ce9e86e82f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220ba3d7-fe51-4ab8-8907-8fb17e7803a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88c92fe9-f7b3-4c52-a9bc-f056c9368d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f29860-5ee4-4602-a6f1-a4a3e0148c08",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e16b47-3790-4117-a831-7bddf39ff156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f55e46-1388-476a-acb4-5b14b2ab0ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f110bb8-906f-47a6-a4be-3a79c47d1a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62ef0833-9a90-47b7-a6ec-c10a92053170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6803cc-d88b-4c7c-a3dd-f00451ef1f5d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d90215-fb23-4720-a9eb-b4a1615e77a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a947a0-4160-4af0-a679-312706c34cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2cce0e-3a1a-43e0-a112-b64c5c1f586d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5d177c2-dd6c-4e24-887d-85d69fb3ac74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3a31fb-5c46-4a8a-98b2-3a0003e2867a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28df5742-9ef4-4640-bc2d-358cd48d5bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93fed75-6342-4f19-8cc2-75c0209c2a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dd1b1a-fee2-46ca-becd-cab07f985e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9787a8e-af28-44f5-b758-925d82866050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd18a7c-4419-443b-ac37-0ab0d936ca22",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a5fe10-98c4-49da-b79d-b12e9d8fc820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73481425-4f47-467e-b800-d96fd11a56ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafe0135-cd6b-4e3d-a8c7-d8faaa518496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ac124ed-751c-4f73-ab4e-c61f7fe47bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02bdee9-1ee5-40ab-970b-ce0908c3b201",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc22c3a4-0aec-4150-b743-824dbc12d697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5277d33a-6967-4667-acb6-3ef5e665382c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591d18bc-44ae-44a8-ae35-01cad3643515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "066f7d5b-43e2-4188-9087-6211ed858872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c900457f-41df-4bde-a643-ca89481a744e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87580c3e-1dde-440c-800a-d00877754ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06624b75-48f0-450f-ab94-353c9d7df5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077d2ce4-a7ad-4068-a413-bf140603550c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ede3dcf-fd1c-43d3-9f0c-f0475639c72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a7692b-e909-4d31-9e4d-a23f9af30857",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6d4937-6350-46cf-b5ef-fc3c3e20f2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d925bd4b-0836-46da-9bdf-e198938f8d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cb9b35-2b04-4f21-9358-ff0bb1965347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b122e8f6-607b-4b85-9f32-6deaf6d405c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f110594-8a06-47e8-ac04-ed61bdf0f221",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4629ed76-7edf-453e-b97b-e04ad30cc1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f033f980-bea9-40d8-9268-f75503689374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97354cf4-4653-4329-a959-72ea5d9ecc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31a67586-a560-4429-b978-f8034311fb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e3c60f-541e-4d9b-8f2e-3259ceff04ea",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd01197-ef94-4610-9c87-481880eb05f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b23d24-783c-480b-bfac-243b55527109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35f15dd-eacd-435c-9d43-0a98ea886284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69523efc-3919-4ffc-bee9-bea5a3b1ed4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2392e5d-3dd6-4eb0-abbf-c2685e5ce6d0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f168a9e-b706-43e7-95e3-954d951a0179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf67745-866d-431b-803d-801536977c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79ec54e-54fa-4357-92e6-3eb00f102f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afa296b4-697a-4ae8-ac68-46dc928b8884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb79a15-0c56-41ee-8195-d6cffc0b7c94",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a225fdf0-d590-40a9-bcc6-dd990a1d0da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ded844-8069-42d7-a16e-5648941b6fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de2770d-c380-446d-91cd-50f2d9b0b975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e92ac5d-5c74-4a18-9674-7bd7a4019046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454bf233-4194-4429-b2c4-9fe83afe88eb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc63cb29-e251-4ff5-89f3-33bebdee2a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f17f3e-3960-4d0a-ae1b-2549284b71b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0052d1e9-3cd6-4a32-837e-70ca96666a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39a85e15-e933-41ba-8605-816ca047e395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9ad350-b7b1-4c43-9c26-cb8f98bc840d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761a7e85-d953-4468-9d5e-fe8ea77acf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6622e90d-c5d0-4b8f-b35a-39a55d670e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d3818c-ca7b-49e5-b16c-e90306faa8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2544d2c-539b-481b-8903-aa14251e5888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1f2bf1-0e4c-4b96-8d2b-f8c0bd73a64a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f98ad7e-a548-484c-b7b0-442dc38cc43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8f9d8a-2fea-498d-a841-5f9245679df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d4e155-0285-4b8a-9f71-96b2851b2f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa18a6d1-a40b-4c3a-b111-bdb4146d9760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c52d50b-81a3-48c0-b670-1f6d81b55879",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d2c344-eae1-4fea-b7bd-1eeb8e8e3692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1584164-88bf-4f3b-a8e8-a58b2211af1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd9a7bd-cb03-4b82-b01a-d2c741f33182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "831c00e4-5627-40ad-9f19-b947f5da1b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22049cbb-f86a-4a60-b1f3-766c247f73f6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31d1dfc-5cd3-40b4-a903-3438f0447a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e7fe9d-7edb-42c9-b4bf-db3fcf2cd202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b31c532-3e91-4bb2-b2c9-a850c86c38c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a4f9d58-6e03-4f74-9b37-6abe40ce9bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc2b7b7-4467-48a9-8812-cf7f2b91b922",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae9a07e-f1bc-4992-b711-e77f71abb247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e7afa7-99eb-4f39-b5b2-f2e2f66ac87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f8b576-d5f1-4c11-af2a-0cbbab3948bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2b188a-037d-41fc-a3ad-4e6e0ca931a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d829b01-7cde-4962-92fd-19648487ebeb",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea6db5b-e875-4e45-86a8-385abbaa2386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd853219-21b8-4610-b2b1-f3ef6fa57cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e814ac-e1c1-4e11-9d18-7a07854eb17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "086e7d2e-db0d-45f5-832d-b8e46fc01659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9be57f-9d4c-4d83-8832-102f0676e4ad",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317b6eea-13a2-4d5e-b256-6708ec88cee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7139a42d-1ac4-43cf-99f9-8c2ae3b0983d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111702ba-a3e0-437c-96f8-b8f6ff12a1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af4d2519-fb73-4240-b595-ab3b199ce00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb326705-7bee-4529-ae96-48ca0c4593e0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb98382-0328-4d3d-ab8d-ef5492aee46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b90f912-e929-4018-a16c-a47318f421bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a57ef2e-0171-4781-9952-6274983b6b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ace3cf-80ed-4911-8332-0538e22d607e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fed1b1e-dfae-4b40-88df-5daeb9545343",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3964b0-4455-4989-b9f4-8e6ac9871816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb885e2-d285-45de-b4d6-4502a131e8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a119d7a9-3fb6-4e92-b913-e8aebb84fd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f93de447-eded-4228-a2b4-ab44a1ac5a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5249c4b-7afe-4928-84dc-46a55fdc9cf4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518a9e94-ae58-4cb9-9843-9f1d06019fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74f40aa-e6b0-436d-a88d-cfc1a8a533fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae12920c-4437-4907-8077-2d486b8a9c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3ebad3-b78d-46db-a51c-80cd0064080d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b551f7-dab4-426c-8cb9-61ae715f1e0e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb65125-4c42-4d5c-9bc0-06742dbf2da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f87eeb3-cdda-4701-a137-bc2537f8e5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84dbe86b-28c6-46d8-ae39-f734608b1bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "10331803-2119-4d36-ae38-8b01d2b0830e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5762872-1084-41c8-a068-310f2d150b3b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e176918-55ec-43e8-b6eb-7dbc6ce6faaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33321b7-471c-4aad-9af3-e79c2ea11dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5477afa1-c4b7-49fa-ac22-cbecca99a6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a55163e-f8ed-4eae-afb9-2acdc01dfbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85421275-bae9-488c-9eb3-8d4768b5eec0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55791ef0-4c85-4c62-bd66-0ccf7a5176df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1640383c-763a-4f69-b337-426bbd11d97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed65ae19-fe1c-4154-aa64-c8b582654acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8f944f-0aa1-4c7a-a428-1a700490684f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b08559-1fc3-4c6b-ae57-c72c2b218a97",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2471ad3-5078-4ba5-bc28-ac368bbb90f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd84cd58-5597-4b6d-af6e-9872ce9fe34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc638cd-0467-4ea7-8551-f2cf6b470d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa235b6-0a8e-4488-bdc7-12117c84d343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5553bf-cf93-4e6a-894e-de21cf084364",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf94742a-2f0a-4b57-9737-fb880500030c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e25df62-6bac-4ccd-9d39-bbf9ee1da567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f90573-c970-4a86-af84-5e58c746a7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc7fc6b-8c18-408c-8dbc-4a19adc2835e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f259fd68-3350-4d3a-8e6b-90ed18fc4c85",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caea8dcb-7cf3-44db-ae50-007d96485a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7caa32-d61a-4dd8-80c0-fb9a14197763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c371f45a-6b3e-466d-a1e0-6c15209e6ba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "267aa38b-dab0-45f2-83ff-00abebf233b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387ec1ba-83be-4db7-a80f-af8bf0127c40",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa75831-f76d-42f9-8c88-168bb11e13ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338978ca-1552-4ed3-95bb-8e9ca22a1b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11f1d93-46f7-42d8-b409-fc226cf51917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e71e663-f2b1-4d18-95ab-dc09d0110cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b89e683-835e-4fb9-b985-9336823fcace",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df7712c-9631-4be7-aa70-d070f5528d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd5c799d-312a-426a-a816-ace1afc56980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e2fb82-2f25-4ece-95cd-4e955c490e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0822bf7c-f2e3-47e0-aa67-8065dabbd507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5640ae-e5e8-4ae9-a349-8df90627ae93",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9a88c7-781e-404b-b4d3-20d76e63eacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75020634-eb62-408e-aea9-af80d48f9607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfa2ae6-7fe3-443f-bd5b-15260f80495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88527bca-f223-476f-821a-49848e36f76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c616ec-e0de-447a-837d-d6713922efc5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06965a2-e122-4143-81b5-5ccedd1378ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9753e77d-6ecf-4132-8337-ac6548385128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12853f6-1107-46db-97d8-140a1e1fea40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82cead29-6185-4476-ba39-d3f9298fc936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb35b1f2-0f5d-424a-84b8-ec0224b18353",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236ee493-9bba-4e36-8ba3-b3a703309637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad03f7c-839b-45e2-94ce-38d2aae71fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e39a9c1-6e27-4b1e-b50d-e0f4b3d96def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9c92e0-8774-410f-87ba-670bfe729b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97085079-b4cd-428a-b88e-d8e6f92808a9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cd216a-6fdb-4642-bb47-53a060133a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b635e938-29dd-4e75-8242-a6485727d052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0441b7d-9452-4cc5-81ab-14b1ba083819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "910b73c2-2a33-44c0-a404-26d6d4a2fbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4fe8de-4a25-4612-9fa2-a8ba17b4fd78",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45af989a-36df-44eb-a84c-383ccc464796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41fdd656-f2be-47b5-bb9e-2b76598b3c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7df921-0a72-48ba-ba0f-2e51c0c68286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcbbf1d2-d4ac-4352-bcce-bc526a04b8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec09c6f-366c-4876-9e90-fa3dc4da57c6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5da56f5-c579-4cc1-82ab-841b5fd99299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a84fa6-613f-417f-98d5-8855c4a96cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e151ef-86a2-4b45-8887-f98d362d19a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32ce1687-3d62-4443-9b78-51c15ace3603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a2a2ab-a76a-4146-84e0-9919138c50bd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887c5576-898f-4f31-86a0-3be7b9722c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f25466-22e1-4a1a-82a1-95fd265ea445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b239a23f-ec2e-477e-be1d-23ec624dfae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5f5d04-552c-442e-a977-4add7c6d5a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe5909f-b3f3-470a-a562-3d09907d0e25",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8b73db-dae6-44c9-a63b-0ba2573d6ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f608fc8-06cf-4061-96a1-58f1ea385778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4998ef93-b275-48f9-b7d1-5c612336f0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1438a5d2-490c-4003-a78d-d5e5d14913f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46080686-36f4-40c5-a7fe-b7c7e4d58c32",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3caf840-ca13-4821-a3d8-7be4c6fc2dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9a303d-04a8-4b30-8965-597525da92f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd3fb59-e067-4574-9344-5fcf0d19166c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d822e58c-36bc-43d2-b218-b12cf7914467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2944b346-6249-4e18-9681-0149a76d2af9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37e8445-1eee-4580-84c1-e9c1fa58e517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47eac277-e629-43a3-8844-02989f2f82b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1f1e17-4108-4d93-9794-79bd367b0a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "caa42a8e-9ab9-4ad9-8221-1045032c182b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db525940-f70a-4b85-adb8-786fccae70b8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6509ce5c-559b-4285-bdc3-514b0439b845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb4eb8b-1849-4a42-bae0-753b02a19336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8304a41b-2888-4298-9147-f7ba49ba74b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf8997d-990c-4748-a724-4cc47cc5a97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c74524-4d2b-4d47-a31b-02a8a96d7e52",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a160172-20d8-49e4-881d-26a8f19fd594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb19182-eab0-447e-bf42-f41e4c0720db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dac121-1880-44dc-b745-5f951bf058c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "79d2abcb-7fd3-48a3-9bcb-11e122a6c234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dde8811-cacb-47e7-9f51-90944e570b26",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba46e212-b494-4527-8512-8150111c03b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7daaa4f-122d-43ba-8ad1-033d7b571d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdc27fc-3916-476a-8321-316b1dbf01a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f53fa6-6161-4904-bcb8-b7aaf344c0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a557e08e-991d-4003-ae97-c6c902075634",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae49e51f-f790-4b75-b5e0-b466eed0d41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46784d0-0a69-4f40-becd-3cf7f8d726f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92c3b1f-e608-431d-b7c7-38ba9eb97998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "872e282c-9165-4872-a821-19dbb21b1aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358c3d53-a809-451a-89e0-29acbebdf960",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dc1bd5-5f96-457b-b075-27d412681470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b0e056-20e1-4304-a062-42fd53e43970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4263ce86-11a1-4235-abc3-e75f103942dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb400c17-5039-461c-80e0-3e2ddc7cef91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591e8d01-8c86-4471-b23f-27d6d9709cb3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1358e7-f8a1-4bb6-bc96-9376df4b0d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826cba51-1444-427d-9651-182032e27716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e2ab2d-801d-4dd5-8387-3ec38027d1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a89648f3-a3de-4a37-8b08-3903a4707040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8297975b-a34c-43f8-bf8b-24562f288042",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97769b29-6680-4b62-a3eb-3354ec825169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fecdcfd-ca45-4633-b4b7-fb8351b7d0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6894b07b-730f-4d81-ab54-7aa6f6fd97e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c031fb10-1afa-48e1-adac-cc79109efff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d6f3c9-0259-4b5b-b696-2eae8da84a85",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6aae78-cb13-41d9-8738-bdfc9b7a1355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d177f3-11b2-46a2-8699-38575e1fbe5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b671862-71a9-4e97-9090-70349a4261e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a2a1fb7-a280-4e70-bfef-dd8cb28391e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8614df7-386e-4299-afdf-38d4b70a32e0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db05a6d1-0071-46f0-85c2-4e97f0c98d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6857bf3-b37d-4456-81f8-67f817c1acc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad41c88c-d596-4046-b28a-e71ca6fff028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8bb1fc-8de8-4a82-800a-a90d6e449858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c71842-382d-4529-a0be-88bfd43581c3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7a62ee-8afd-494b-a1a5-d4931fbb1b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e5dc38-68d3-4956-970d-477f97e98de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed512d12-5136-494f-9483-54b06fef1a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "457428cf-dcd4-4109-9618-542b5ab21175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b1dc1a-6683-4786-aad7-63caf37d96e7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5817b5fa-d0ad-422e-bb6e-7277f87d9636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c303403a-89ef-47a2-afcd-cc92a3ec4320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9b5777-9d24-4c7f-af70-36affaeb0cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f423984-55c9-4a6a-9722-ede77879ac15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b060b5-6caf-4661-8970-34c3515cc21c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7f196c-2192-4eaf-a30b-bd6276b245cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e0935a-b2dd-4965-ba89-8ab6413a371e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5385adae-87e8-4a09-8232-e0d66f104848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a73e470-ae9e-4094-82a1-5f879cbdba85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cd1fc5-34c5-4b71-ac7c-ab2ea697d4be",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a944b1-efb6-404e-9be9-9a65dedb5dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b420fd3b-193f-4ac7-a66d-760ff35fbde7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08327114-0154-4b88-ab76-60239fce135a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d02efde0-669b-4590-934c-a6de004bf92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58157f8e-11dd-4437-aeda-8ba70c3f389c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38cb1e5-7d77-4862-bc40-8668d005274c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c452d5c-d7f8-4cf0-b8ef-1f1788f4f16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a7d289-cc5f-4cdc-9273-986ecca59bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8b5c43-0318-46fb-9896-3db45ba9baf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fbf944-2edd-4a7d-a8d0-dbd00f5026a4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24aa2ec5-0b86-4f90-aa41-63830e0bf846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97af67f3-6df8-40b5-904d-73ce738b9f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa29b6c3-fe47-4b22-b919-9c0a369ce9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "671da585-ee94-4794-8ea0-a93553ffc57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4c16d7-fe1c-4228-b41e-30e8fba09561",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb581a6b-c432-4aaa-8157-6d58fd044e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0444c9-d36b-4c38-a627-b4911a19c9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea5b846-767b-4ee9-b4d5-8ac51835b14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "31584efa-a95b-40e3-999d-4c0128381c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f58680-c57b-4987-b23f-65210dc2481b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22bde5d-9ac7-4834-8ea9-cd10680af26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e48d3b-0cf6-47de-bfeb-8497409009e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a1a4ac-5e86-4fbb-b6b5-4af4c5fd921b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3db92b88-4afc-47f5-9d80-69ec4a426d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df5fd02-f4e9-43ed-93f2-71b0d9090523",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c538b3f4-000f-4089-b44c-a59ff60115e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f783db49-3a1a-4fae-9233-e50ebc3206f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfcd60e-333f-4ee4-a823-f70c1a39ff71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa58ca52-b7cf-404c-9a0e-b6a37bd47679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71d482d-944f-4e0d-b269-660d0aed9f3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f417a8-c443-4bd2-8285-3612541784b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce419f3-c45d-49c0-a5ea-13bd16cb9209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2d6db1-83d7-4949-898a-74162f5fb014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f28c2fa-4f49-47b9-872c-8fcb8360ba23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66a20a2-33d1-4242-a443-367e3f83f495",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be10bcab-20ae-404c-ba99-d45a3081147e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3980e097-f55e-405c-bf77-f6d9ec435f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e26b340-8c5f-423f-910e-554d6bc71aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b65e6f3-24a6-40a4-af1e-0f9297d69eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4997f56e-4a7c-4206-a727-a61f277254b2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c1ca06-058d-466d-9e19-0b76bbe6eaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4527f3f1-84dc-4cb3-a226-c67904566be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e3ac73-2465-4bc2-8111-194ee6032562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d94cae-7c37-4e72-8bbe-0062ac90b737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e433ad-b0ad-4c68-aadd-9d9a85139af8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a1eaf3-62ea-45ec-86c4-0249df548065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf24222e-f9d4-46f9-bf55-ef724a70f433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252261ce-99bf-4b25-91d1-50a67aa928e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5cb1f6-1a62-4c97-9d53-9659702a62df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfcf9fc-b6af-4d48-8ff1-add2a510d191",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8534ec79-a7a0-4227-ad2d-e03d26983380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271250a5-cbf8-465a-b0ae-84ef1666f8a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1f2251-1de2-4f4e-afe8-671e88383df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cba9905-beec-4289-aa1b-9bc56094a048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e216cf76-41f1-41c3-bac7-9ce89ccea583",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e343dd-6bce-4257-b68c-7eb4c5df94c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab3b831-7c56-4023-b069-8bbffbea48f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7814fd88-2929-40f5-9038-2aeaf8f4a4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f33f8973-fa92-4bc3-88ba-c2beee415d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80eed6d3-1300-412c-8e9b-38d2b9b1214d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c45ac6-4a5b-43f4-b06b-eb2f1e6f02cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7361ca-dade-4504-bbfc-8401e60e2c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f80af7-5d39-48c9-b7ca-9b53e07c4c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1144be11-613a-4bc0-8fad-d65edfc5adc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0ea4a9-d061-4a4e-beac-bcf57dd47877",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4aafad-b14c-4bd7-ab97-efff536cfbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155553d1-d88e-4e27-8f8c-c95d855b9cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1518e3-a249-4c34-a1e5-ab15cc7839f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26199505-5757-4c92-bc90-6afa67b93114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763ccb59-748c-4ab2-ac0f-51fa7ecea1a7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da832a8b-673e-435e-91bb-314577a9b794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5e2a89-1d76-444b-b394-579f1aef24bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a60847-1750-47e4-a6a9-ee89f4607d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e49604e-06b1-4905-a7d8-b2c49d03bcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba75552c-0d5f-438d-aca3-f2d0b3cc28a7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4a1922-9294-4a24-b3db-a19e728ecdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e688694-7522-4860-8dbd-edf6ee224a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eda9194-6994-470e-970d-79a5b516bc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9486696e-e946-426a-a8c3-44bec2371eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b0b45e-a1de-40e5-83c9-4a7c924793de",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580cf89f-970d-4582-a6df-478c3059194c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68929a51-14d4-46f2-a54f-74f160d89045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071b7dc8-b5c4-41e8-8943-596948140ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb37a8d-13fb-40b6-8a02-3f904dff34c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5b52dd-40b2-466a-b05f-691354e25a15",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0385ad-1569-409c-b78e-c7a86209dc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d46e19cf-f6b8-47cf-adc4-1ba9e4e2f09b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a7fb94-ac81-459f-b46c-a43a581383a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ef660b-1a31-459f-b2cd-2fd2cf53e301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697a08d1-e22d-4d6d-baaf-18f050a5dc67",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ecb419-c47c-4eeb-b151-d4dcf2f6c13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ed3c42-ca81-48b7-9a8b-35cb3bd505aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f906158d-0033-4806-81c3-85ef559f59fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc5991f-229b-4ac1-aa34-92a8c62db6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5857f6-ac1f-40bc-999f-551fd3a36388",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5e41d8-f2d2-4e54-9b25-5bc10095f84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f908a9-fce6-4556-990e-f8bd9779867c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81465a5d-c8fa-473f-adce-fa8514a01860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72fe66ee-1ed1-4b47-aa85-0792da21d093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e238c752-2628-43a2-bd46-a38143bd3eae",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67016e2-79ee-4667-8dda-c5d181c21cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef114d4-fcf5-4b3c-96e0-419a1f7d3f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865b1a20-ad35-47b7-96dd-9d64cbc49e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55e90468-c142-49bf-9b37-02a2dee5a6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fdf059-dfd8-4871-ae74-28bb436b6da9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d6a457-8baf-4ead-9509-4db96214fcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb11115e-1fe4-4f4f-a5ae-840d4bca6db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab006d6b-7ede-495a-9607-98d635a03776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c317bb4d-9d31-4497-9c58-b0a92020e523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6731c4-e4d7-42ad-8928-b5e12950ceed",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53bdceb-aeca-4e8d-8873-8562c95573a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20489e2-ff02-40a4-82b5-6a4ac21847f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8134058e-842b-4fb6-9dbf-3a9247de51a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3075b861-b700-4139-8d14-ba0c6ffeb49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac61f1d-8c02-4ad1-b22f-93496e17ac69",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34247c3d-6078-48ba-9c74-28ee8c15202c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56384c3-abbb-4c89-88f7-4f5e55670fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bfb0e6f-4195-41f0-aec5-5ac0e5ac354d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8df266f-cab5-4a65-bc49-31bee69d1b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad2eb6e-e832-49a2-ac17-015bf521a11b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb23e5b-87e5-452d-96c2-648c626345eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba3ce39-51de-457e-8c7b-f90472e3f22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04537128-6c3e-4e32-9306-1f8c9941846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24849f5a-ec77-4996-a4f3-fab83ec0e3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498645cc-5268-4c93-9fc5-31f309ad51ba",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30a1f6e-0750-4e54-a92d-cb5e6bf02e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d661734-78e6-4e8b-b30b-7e028ce637df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347d7a69-8e46-413e-b643-7a11c863604c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60349c88-f961-47f9-b3e9-9d2e46dbbad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d99ade0b-fbbf-432a-beca-5276f77d7bd6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a62743-cb30-40e5-9ca5-c287d33a735f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c17fb4-e687-4898-8ac6-f19d592b9da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26ea3e8-6f07-441f-bf97-79832080cbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "685269f6-22cb-4633-90b7-d9d47436c1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc8a35b-f638-470d-8452-1bff5e64d419",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a200f59-6595-473e-98d3-a5b19fc0d231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33a4553-b734-4b85-a579-fbf8b493a864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8889e0d9-f99a-4478-a6ab-58bbd5a2be8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f39d35c-acbd-4753-9eca-779d64dea220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afca3df-b4d4-4442-b9e2-8e04829046f6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7e8203-e38b-4b52-84d6-f07fef7918fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fdfaa0a-22f2-460c-84f3-28f1bd13d7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84df1ae6-ca4c-4785-8c86-4869bf024fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8411326c-c831-43ea-b7c2-39a782410825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41b5d00-b3c8-4e72-b1f9-e1b859288020",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9bf7da-dd7b-45aa-adf2-3230fd026252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370d0d65-b17a-4a2b-8916-5d140a1adc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7179034c-36ea-4f55-8eed-3468505b755a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ba87e2-2c55-4b84-9d68-29df7ee21cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc179e5-f0d5-49d2-9680-97214f878a0c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237c72df-27db-4fac-9a49-de6b19cdb781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043ecdf6-f4fb-4f43-8c00-6671d0939274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae24500-559f-4fc0-9580-0618a7d5fd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf80bba7-3b2c-4a3c-be92-630c1aa12163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a916d33-5a5f-410d-9381-4ce73847f233",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f5fab8-3803-422b-a4b9-0e26dcbe8f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1d0943-bed3-498a-8d7f-04feec44c5c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cff9ea-1e77-4da0-bc35-7f7b76c56969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7317c52f-d7d7-4d81-b9b9-86c1481fff87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf97a02-b284-444b-a8ab-62f79c687605",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb9f76b-7d2d-4239-a8c7-fd415f839e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe901af-3619-4a02-b56d-76000e57b3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e2be2c-d1bd-4ad3-822f-d59ed81e784e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de65c499-17db-4e43-81aa-7f1fa80eb16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d90371-9416-4562-89f3-5bf70e4a4255",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8a2d47-8d59-499d-9350-8ff81748cfd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5616441c-ffcb-4ca5-8f3a-89e569beeda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b616dc-40b5-4ab9-bbe8-e38971be8861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddc67c9-b2aa-43ae-a48a-d5649541349b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a0c7a7-6c5d-4a9d-828d-4ffc6c70993e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fcf977-d975-44b9-bdb7-529dab8a2a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59822bdf-71c5-432c-aec4-26f38695ae28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5bbbd3-6d9b-4b5e-8916-ee544b7a76b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "820696e1-30ca-4262-879b-f468b34fe5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1677914a-b4d3-4beb-931d-a904dddca19e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85061fb8-aa49-45a7-b0d1-16b93cc5b587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41af295-fed7-444c-9ea7-aadffb5e2709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a3c2d1-0714-4fca-83ce-decf4809358e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b439ac8-2370-4533-affd-04e10db87c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdeb3e1-b973-4556-927f-12f791dad697",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95571d85-cb6b-472e-9773-2ea4583e0182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b33e7f-0477-4b6d-ae6b-9afbc02b2165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da364db-3e24-4008-8ae3-7bf8da9bee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b31b3b44-5ef2-451a-a5f4-4e26d25df653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd223780-501d-4c93-922a-db64b7a0458f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10ce1e8-e231-4a08-878d-ab2fccf9aea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3dcccc-5d73-4b0b-908f-973d407dedf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce0c0cb-5308-4a56-87af-2573d04da7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3d98b3-108c-40b9-a2bf-fd9bc898c040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc3f385-62f6-4bdc-9316-e78625fb08e8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7af4a5c-9f33-4a21-99e3-f427f9ae354c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "01db6b74-9a10-436f-8ca8-98fbb6b8b99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3b0fcf-f637-493b-926d-79cef0f0b5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17151644-4c06-41d5-acea-b1b42f4d78cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a862d23-82e0-467a-a28e-296f92869632",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a869e73-7ff0-4bb1-a939-fcf9e2dcdd7f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a5e1c3-8120-4026-86c0-4a7cd7e28173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9629d638-2ce2-4e27-b56c-87f691bad0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ac9653-fb55-4757-8da7-37480fa4774e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24f433d4-c787-4629-b228-5f5856b17bba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4d305b3-5f51-4bd3-ab41-bdab348515a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf7f0673-7f80-49d0-aa3f-27ac49ff64de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "298be052-5feb-4ebf-aad0-674b33ae19c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc0dc65b-0102-4bdd-b101-067eb8e23072"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "809a90fc-f5d5-44e5-9daf-77a7a88b63c8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2655b5ff-59fa-4dba-af60-2d6d1c6a5042"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b7ed3e6-7719-4aef-b1b2-28661e162153",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "670a0b62-976c-4b26-af56-f4eb56b774e8"
                }
              }
            ]
          },
          {
            "id": "e0aa07be-9ffc-49a5-98d7-1204b2e13929",
            "name": "Positive Testing",
            "item": [
              {
                "id": "248c05f9-3073-4d5f-a507-495147dd727b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e59544c6-0d4e-488e-9977-bb2fa93b0e81",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b1401d-09da-492f-b13c-9b76d583e371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c7996313-c0a0-443d-9bd1-21117f7041d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72366bc6-9c23-4f5a-ba6d-654b582a342b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b19f9ac-c271-4909-9337-011793cf50ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d4e66d0-b754-4128-b26d-8ceeb78acaea",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e353abf2-d3a3-43f4-af12-b12c98bd80ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8739dca3-a0dd-4e7c-9267-93f07fe65191"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07f5c2d1-3445-4f57-8aae-c662afd7010b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c41d7521-5eb5-4e3f-bb00-3ad9244f3bad"
                    }
                  }
                ]
              },
              {
                "id": "e59d5688-290a-4778-90f1-6a2083b56dba",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30409a19-f958-430e-93fd-032667396472",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8adcb5e6-362a-4c33-ae27-c714c4faf355"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ac9f4b8-d431-456c-a2bc-d384b09f9684",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a8544e8f-c75c-4ed1-b2d1-0e49ff195c26"
                    }
                  }
                ]
              },
              {
                "id": "03b07ec8-d2ba-4732-ac3e-514fff273089",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b41cca10-5c78-485a-a02d-07623ff1a95c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0dc766ec-efc1-45cb-ac88-eb1407a95d53"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "492beab2-e8d9-426a-a1bc-47de72926667",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2fe861b0-3266-41da-92e1-63487986c384"
                    }
                  }
                ]
              },
              {
                "id": "212b5da2-a6d7-4a1e-bd70-f78d48d1cf57",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e64c4a5d-e1eb-43ff-b26a-c7cf754809b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6f9a31f-87de-4622-af43-3fbaa6960ce2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8680f545-0538-4431-b260-f8c05e5a7f3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0569aa68-e390-4588-983f-c76010630e51"
                    }
                  }
                ]
              },
              {
                "id": "d0e4ca39-11a2-482a-b985-2af70c389dee",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa91e9e4-d7be-44e1-a697-25fc34163db2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6eb1016e-de79-4c95-9c3e-393d10d8f2ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52ffbaf7-5801-4d55-8322-657cb8badb85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8385c016-56ae-497f-b4c4-ac21048f23a6"
                    }
                  }
                ]
              },
              {
                "id": "041bfca2-784e-45d3-bf06-203d4e48b79e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbe6be60-75db-4ec2-aa92-55044743f8dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f19604b-2b1f-4561-8a93-a66d715e1ea3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef833b55-ca30-45be-adfc-2c91b1132583",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c583083c-72bf-4ec9-ab96-5c67e1031487"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c04ad285-870d-489b-90e3-ab6bf5d4af43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f375680f-81da-4272-bbb0-d02a63967be2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5d9a52d4-3e37-4aea-919a-1d2a14bde5cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4f1c60e-5aa9-43a4-a1f6-8764849159d6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d633364-83f3-45c6-9622-2eff1bc2c052",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0905fe46-01ad-4013-949f-4f4c1a75808b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a67565d3-63ac-4c1f-af0d-9baf09a645ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56237237-bdcd-402c-b2f2-ea8895d40be5"
            }
          }
        ]
      },
      {
        "id": "78631c30-ac03-4aa5-8924-10179f4a3b8c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6037be99-cf77-43bc-bbf6-eb4f3ab3a506",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3b6efdf9-9fd7-40b9-af23-f9cd43ecae51",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ab04380b-bb72-4e20-a083-8ba6a9dbd126",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fb3e4c-013f-44ef-8454-1bdbfb5f45e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401ccee6-ed1e-479e-9c51-bb1cd485cbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38201b11-87db-4ac8-a75b-fb01a537ff11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c85abecd-97a4-40df-9686-64f637507f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8624df1-7ac5-4709-bd08-8466b5e8e4f1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de8bbf6-0c35-49eb-a61b-eb547d4aaad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6dd329-1465-40fa-85d0-91fe5fe02fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3719c818-4e36-4f5c-870d-15c43c875b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "88575daf-a72f-4b3a-b7da-713a14425114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b015f9e-233f-4f83-84bb-647efa56033a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f738b5-5ec5-415f-b2ae-b842e7c17c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eaa8c26-467e-48c9-9584-36e2f8b56cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97b100d-0a03-4734-9c69-477b93f81f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c61eff27-256d-4035-8a51-af4495c7c18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67931e02-cc0f-4740-a3d7-d6c75b984db2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446ed5fd-4415-4c45-88e6-b1da5d2f8125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8359ef4f-5c2f-495d-9b1d-728ae3b9d047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cbe841-2800-42b4-af8a-42bf1c271a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5413b1-10cf-47d3-8764-b1ef758b4dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556cc3c0-227d-47c3-b865-ae2fac552b1e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9072ebc4-f21a-474b-9fc5-209027b962e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291270c8-e067-46a2-9da3-1de544b1493f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1743065e-f41f-446c-977d-233038b17848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "566d7f88-ea2e-42f4-aab6-9d1039f707d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1552260-6ebe-4b6a-9f2d-3f496f532842",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdcd3ff-2eee-4af2-9181-62cb00a3af66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea48f375-c6f2-4c92-b8bf-800d55ff3658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83dacf1-edbf-4a1f-8c15-7b82ac7018a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a79659b-52f3-40ce-9432-de9a5b0b3c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb9efc7-df49-4220-983f-e8ef2d555631",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c75c395-374c-4182-902d-0baa3b74b024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b13d1cf-99c2-4ee6-b55d-38b933291df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d34a1f-40f0-4c5c-9a7f-1fc69ae5e451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "294af49b-47b1-40c4-83df-400a8556713f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bfe64e-5dae-4ad6-8f80-c0da10b92b0e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d63d84-046a-4b12-869e-ae24694fda79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a1a51b-d024-4e4e-b42c-f738f0a94bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21db2f70-b60c-4075-b962-7267809849ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a9638c-ef65-4761-a5d6-0c16dc716fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3309e2a-abc0-423c-933d-943e1b6b6c51",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc58a319-12bd-4a69-bedd-e0385924656b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e5190f-9eca-465f-ab11-87b475d2b18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096d0b86-2c71-40a4-a05c-9c906226ee9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4b2116-edf1-4a5f-aa95-9576f9b17474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160b5f41-b5ea-4e67-a9f7-c8561d4fa4b6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab7d125-42f3-4441-b262-7a9c6258ae81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a228097-7b95-4fb3-9ac6-c91333213425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6ed5ed-2c0c-4a15-88b0-1400f353396b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1a34da-10c7-4c7a-b91e-190f858d69c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd90c0b1-75a8-4c58-881f-e5a94a6b28e3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee29ccc-90ca-495e-b348-cce63232fcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b4ff6d-b828-40e3-b52f-64e5cd803291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a45cec6-3e7b-495d-948e-54a4a7ec46b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5906f6c6-5c34-4b70-9a15-ff85d377a01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fecf04-e902-4908-98df-50efd6e2000d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd4d8c2-90e9-4942-9d49-bb87dfec9697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ef71d9-b093-49e0-9097-e72228cda6ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558f4527-c583-4af3-8223-56fd36c3914c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b715e4f3-5730-43a2-8957-10d8477ba40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f0030d-7b65-4a8a-9acf-27250e856d8b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9baffd9c-75b6-44c5-bb53-70feb8314a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f747e2-1b9a-4d0c-a459-0708b17a1b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c515a7ea-4a7d-4bfc-a09e-5a8f454416b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f619fa1e-6eb4-4c65-807a-1dc423efdbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528c5736-3b03-4a0c-b41d-eb411de149ea",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecff66bc-dfb2-43d9-bb3a-f788c5e5e211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad7a8bb-b756-4b16-b2d6-94564c888de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f6f525-8cf2-44b2-b00c-ec019591354c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "94bd5d64-1e2a-4644-a729-92910ef76137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c8ce94-e6ea-4a8d-8534-287589768c8a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae293a23-3b0b-40c3-a270-0ab9e48a255a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc67da95-9545-4399-9ef1-af1794cbc6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193dfac3-f2b6-46fc-847a-4913624ee1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7977bd3c-3bcc-4e46-b67b-b40e7987a71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5054d827-46b6-4334-ac57-3bb58b5ba650",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629f2428-3d77-428e-b4ee-68ac3e681c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c50bc18-2133-4e5b-a1b9-88a84575faac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4182b2a9-5e9a-4c7b-9f44-54fe64ba55b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "df06564d-968d-4315-8dbe-1a7f5d03cbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82eba52-7dae-4b76-9279-94ec0121799e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0e47eb-cd97-4e55-830b-4e16da95e44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f2fe24-418c-490e-9e50-9869b70a2d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e78e2b-ddfc-4f6d-ba30-185f5b6a2405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec8634a-682f-4765-aa03-9754e5d08169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c491894-5314-4485-8d76-9a13d732be5d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262c4e90-f652-4e10-b113-81ef3da3a7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cc4dd1-7cfb-4472-807a-eff2e535cfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7142a9ec-e7b1-4f30-98db-e1d5cfcfeb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74fd977-1ff4-4511-9c86-038b87afa8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd145e72-ec7e-431f-bff1-842f45b146b0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad42954-20b4-4251-ab70-0244eb7ff518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cbb118-a70c-4702-a367-2e4e791732d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247d2ef3-6057-4a37-bd4a-549cdd5172fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e41c5dd8-6971-44d7-82c5-e3437f1008dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a11368-9ebf-4e5a-a194-9cf060907e93",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139fa7e8-d9e0-4a01-99fb-feecf423c836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59146fde-9d31-46f5-8af8-8d01548991cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd0b24f-bf0a-4840-a3a0-299e7fe04295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "826e6885-56d1-4a0a-87f5-b12cc8de6224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317c986e-785a-4fb1-8079-d5a14fc2fe52",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cc281e-f818-4911-b6e5-f46c80e20222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6214d926-ffce-4fe5-8b31-e2fa64b29e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa67831-2713-45ac-b882-7dd62e1f4aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "353a76dd-e3e2-4b87-92d5-7ed57cad48e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f72a73b-6595-4d5c-85f5-895c4a5e12ad",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643cb790-ba1c-4bb2-af25-4c58909d5b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03255e3-65fd-499f-8179-b78457815a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07709147-8cc4-4fa9-be46-65b9f64e8ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1803c83c-e8a3-44de-982b-319825d0fe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f607e9a6-734b-41ac-aca8-29ad3aa4a299",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47c2b40-12d9-430a-8f0d-b631a4419818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9233cac1-62a4-49f2-aba7-08420f454a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c586e8-afc8-4af5-b257-d6a3a33358f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d33441c2-43f9-42f6-97bf-e4a3cec1a156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfe0464-e32d-4a20-b734-255eb8aceb7e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0986f47-046b-4bef-9450-995622844651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebdf31d-ee01-4763-bd0d-3b258f9ead54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab4b3f2-29f0-4e49-aba6-e8a061ef3e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb073d00-9571-469e-89ba-8713012a68bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bf4b49-da43-4b28-94c7-123a6175148a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d792354-d31a-49db-9f52-42518c7f37d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa0ea45c-192c-44b8-b267-7d2ca008adb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5fb99e-c730-4064-8109-32b1f6cfc94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bdd1d1-903f-4ab1-aa2e-1e0aff090cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753defb7-1c52-400f-bd90-66559474e86d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d5a0d0-afcf-4124-81a4-97755d852e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7556e201-7432-4170-8545-9d683187b5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791bed0d-264a-4c2d-aa3a-aae87b70b017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7d2b9c-5403-4ce8-bcc0-330f786ff01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e133da38-9335-4d84-9e21-e8779da57308",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5d9905-762e-42d8-b625-272bfec09b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490c80c2-9de6-40bc-8302-e0104f1a1a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4381586b-331a-40e4-950c-f1fd9f9df4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7d3061-dadb-4438-abd0-a7d0e957a8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780a3153-9983-4a93-890d-7d14b1ceae9c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c15ca2-0450-42d3-8e44-bd3873d64ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c125cd-6d63-4923-a0c6-5f6215064c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687306d1-7369-4a6f-92b1-8fb9f3548272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ff8887-0bfc-45ec-a01c-c1676c0f89ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf74c01-f584-40f7-9a4e-8d3731e2c68f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102f8d2a-ffc1-4c2c-9571-65c60a307acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b1c9599-94c2-44b2-a29b-4a4348eb4a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f647ce-c5b2-4ddd-8d33-5ea9df0f5819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d792fad-5b50-4a57-8ec8-b189f43c00a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bb2c17-06c3-42e5-9650-d96e649d20d6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4ab25d-1e8c-40f2-aff9-461f15f67f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54db07ed-aeac-4301-b1f8-8263e011dffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b985b3-2750-421e-8b83-15b864e0d40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa1a985-6d2f-4f67-bf1c-c2272abd6861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784276ad-0bc0-4fcd-a1e0-ad5bee1f0b39",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532b64d6-d352-4e1a-b9ed-96781b0e969e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04af7130-d757-4485-95e7-37dc7b2703f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b2d64f-7f41-4c07-99e7-b2b74487509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0207956-67c6-4160-8320-6481f21ca6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d5fa64-fc6c-4f9c-bc2e-0a20d01e4e62",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dff240e-89ba-416b-a01d-3d736a773486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11496d4b-f947-4a22-8e26-700adc95a794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1d116e-eaf3-47c7-b83c-4d4195a45ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a609cd3-e3e0-4fc1-b265-bf7b75a431a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89376372-3d9b-45fb-a5ee-d1f3564de8c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6014de8c-0142-4e8b-a00f-7d258e119952",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158ed81b-bd6c-4491-9207-dd93dce9b584",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0767c08f-73b0-43d2-934a-e4e08a769c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e9989e-63a7-4ec3-9424-7658473e14dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7d86e5fc-332c-4f0b-9dd8-fc298b19b14d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a2044eb-d8f4-48f6-a178-3f8ebcb194db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67b56dfa-9a59-4402-affe-911402c7e8aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c77c9503-94e8-4594-98b1-c18b5158803d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfc4fa70-442b-4922-88c5-702c9c69f250"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7742ef9-6593-43ba-89b4-88ea5d0700b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e291cc2f-6a85-4254-8743-5eb8051a81d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d82cbefb-7dd7-4bb0-ae54-e4760c6df8b2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd69ae35-e770-49fd-bdab-63147fc2fc24"
            }
          }
        ]
      },
      {
        "id": "c0231f10-7daa-4d4f-b53a-5760b2813418",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ea0dc7c0-cac2-4727-9354-3bf1ca180259",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59e44211-f10e-4a01-84d2-a6cf33fc3816",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa98aece-30c1-4536-9023-4c1c70bea8b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecbd5bd-0ba3-4615-8566-6e1307d18712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69fa360-73ae-48be-bd96-94a8cdfe3fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ed7d39-ac40-4677-936e-7ea7c56c5ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d095e5-8152-4555-9d71-dcce002d1465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6528b823-aea1-48a9-97e2-07e191058e6f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb11427-c8b5-4271-9527-05bfff1cd470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15855ebc-ea01-4750-8b57-156f2d853e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7188ebf5-f7b4-483d-bb1d-8989eef92e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3de6a91-ddb9-401f-9ed2-92202ba3096b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b26b41-ead2-4532-88ea-d70a97213f1e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddeaea80-7b20-4a4d-85d2-264c26f5a936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4615102e-b52c-47c0-9818-a6040e515032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a35fe2-029c-4623-9e89-eefb1e720929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c91f6f-7827-413e-908e-1ff2f173a9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d5f7ea-876c-4309-a67e-22e8d593e1e8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce44c62e-f960-46a0-b998-3ea021c31eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade2bcbf-abbc-4e95-9090-f24e0a8b9f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cc7be6-9a16-43ef-a466-3cded5d10c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02224a00-ccb7-4fc6-86a2-d34564684970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b61b68c-e0c5-404c-ae37-28162e3402fc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50a0512-2273-43d8-8950-718f4f5f167f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f595d3-d946-40af-b3cb-da8f3a1d3e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314f42b3-62f5-4bbf-a3c5-600f212ce994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28d8251d-1aa8-4760-a6b7-925acde43ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa27eab-ccbe-4664-a91f-656d949b34ec",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae76f217-5e80-4fa9-b83c-d67629e8a8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51667153-e771-4b7e-ad23-296a9a191107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9345ddf-21ae-4519-83a2-12281dca50fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e17f54-338f-4dbf-b5fd-fc5b04454eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640b5cd2-3363-4573-b274-1360dad3a440",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316626c6-fb19-4cac-9b76-1e862b5b95cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62205911-7f44-405f-a35b-d573d662b86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7635a9-c4cc-4243-a525-bce88ad1342d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "47fd6afb-7b8c-46b9-8325-50c96289df9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e25cdb2-9edc-4459-9f6f-95105ef4fb3a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96387ef-d222-4522-9243-4f369bd45c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2681549d-8ae1-4190-89c9-bdd7daae2432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c08e2a2-4316-42ff-b78c-c3507f4b9c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "779f8d0b-b79e-4956-8b56-5bbc8e9da85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6295a40-891c-4e87-976a-9cf27c60bc9b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4deebb6-0a93-48f9-921a-6d0f0b35cab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4501d2dd-a832-43b9-b18e-09e184878c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0935205b-fc09-47fe-8790-34c68c258e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1176bb-f88d-442f-b92b-bd77978bd42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1e25e3-8523-4583-a15c-939a6b73f18f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bce4a5d-5b78-4aba-8eb3-08d7d4e8394e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabf9e46-085a-4faa-8cad-6c33e90ce83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a188c190-2469-41f3-99b1-fae4b27a7e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f707f66c-69dc-434f-bce4-fa0b814f40b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7449b796-3b1f-4218-87dd-a8586adf745d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0f2333-e55c-4239-8b07-e4ac86a79769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b21b876-b5d0-4095-a9a6-555eaea51bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b797292b-793d-46f0-93b7-22e531fce86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "412a9c3d-b487-4e5c-a4dc-e2e15dd1e74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94259704-7be4-4620-8998-9181fd31826b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc675e6b-a02a-4027-b69c-f448639306b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc0ee20-973e-4abb-b440-350b4e8956cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0cc39f-f365-4a81-8c90-f87dd7f25f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "378a9b7a-86e1-4015-ad02-deba4e8aac66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06460539-715d-494f-a1e0-83bbbb56be80",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1e6176-c365-4089-a0cd-0f9baf9cb32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbe1203-0b26-47af-b4a6-24bb14bbcdd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1400593-7680-4da2-808a-fcaaee0ef8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfb4982-63be-4975-bc75-901e048126d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e606d5a8-c085-4b06-abc7-906b0e4b69f1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02c972c-22b5-4804-9252-95adff0de748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5eb9ac3-1c7a-4b51-8ed1-0a43a7f8e389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9183cbe2-ae59-4a02-991b-d6ad6313d46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b151f43c-df9c-4716-86ad-72acee41e089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdad7565-92ed-448e-882c-faa64ef44ac7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34378099-48cf-4092-9e35-5edc0aa5b8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044a5d30-8cc8-43d1-a2f8-fc19a064b647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62bdf87-6ad7-47bd-af92-d8a3f56085dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdd3707-4bfa-4ebe-927f-04751ffc8322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df39d9b-f613-4d6c-b499-70988230aca6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dfd582-d41f-4997-958c-e7943a094c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c42d2b-1a0a-42a4-b2bc-784028167c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff30cce-1464-4b72-97a0-7291782a41dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdf2cc7-e5bd-4e09-b9fd-2199b97f7c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7d23f7-711f-4ee3-9419-6cf92c319908",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c556d6-e874-466a-aaae-e2f260df046b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17794883-9199-49f0-b3b7-1a0257c2967a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f7eba8-245a-454c-a0e1-9cd30d111797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "74534481-65bf-49f7-a5cf-ab857f56586c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502fc65c-b8ac-4342-8c18-5c251a5c016f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5307af7f-4dde-4081-9e22-497296c15e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c9bab7-4d12-4042-8c15-bd6007c72e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b51c97-9ac4-4ebf-ae89-c6092110be7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "764934a2-3bdd-486c-a961-0e81e298ee7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7101f6-cf55-4ad4-8b9d-7d0b2bf5fcb8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5025c06c-3f69-45a4-8ec1-503b090cc98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af9ba3e-ff79-4346-b1f0-578a89a816a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba972960-3749-4ae8-8cfc-a4708535c1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56944552-e3b7-4870-b5b4-d1c3d648669f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e372e4d0-790b-4d48-9314-9383e26c4397",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3660dd75-1d48-4fd3-bba8-5aa7cb61d142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca7a17c-d240-4864-8e8e-6641c171910a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab64a477-fd43-4a26-8d4e-f5efb73566f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f28e1bf-6d1e-4d75-a3b9-22a7eb0c4323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7154662-d114-48ea-bf5b-258f2d3f3284",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d537871-c884-45bb-860f-d5835e48ddcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17074e9d-4509-414d-9681-598d9e50718d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504d13b9-ba71-41ad-8d49-c53cb20eddd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d4ab1d-d0b6-4f2d-8d87-809503babd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995be116-8824-474c-ad62-09dc8bd57b42",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9938a605-3bbd-47a5-ac0e-d02b2e86037e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37ddb45-45be-4c40-8d43-e2735aa5d21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7af706-9534-43de-9502-81263941ba84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09f8744c-9e08-48f2-ac50-df277b47b744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08926e32-7946-4d9d-b328-aac5e46ada3c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed43d8e4-3553-4897-bf23-9462b6f48d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef2c7a6-7723-4a06-ae52-09eaee9f0dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68134083-7d38-4bd9-af79-ead64d22744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05c878b-0808-4a9b-be2c-4197bb0940ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540437db-3130-4954-ba7a-0a211008ccf3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac1fd88-4c8e-403b-b495-c8eee6c5aee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966f81c7-213a-4535-86e3-c8a73521bdf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5589ba-3287-4fe4-b914-b27cb259b4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85420148-2d00-4b73-bd24-f2210900375e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb9daae-ae13-43e7-858e-da08d3f58f2e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b292ef-a81a-4e0c-9e1c-deeab67e7fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12471fc1-329b-4132-954a-351acf03ec30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929f0e02-61e6-47a8-bc97-ec79cf86ccfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "423c1fa5-067b-41e8-b1db-212201b1ae0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08b4761-11f5-4221-8252-96e23837d08f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7894061a-25f1-4004-a90e-64cd1e21447a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1713156-9129-4287-a234-9a75262f75d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36a2492-0893-45e6-b6c8-17c8c9676e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef35f228-828b-4195-a734-eab1afc569c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4320dc-a540-4d54-b9d5-c1adc3f7f48e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119b66c2-c11e-4996-bcca-eddd839a840b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46534b56-9337-41c1-afc1-6025a3e40bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5763e26b-57b9-465c-b17f-cfc1a25ff9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7600ac4-d806-46b9-9fce-beed24dfd930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a605f897-c324-4c32-816f-5f3c10ef3ccf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c88281-fc29-47bb-a2ce-ab841a88333d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7bdd96-422d-471e-b6a1-56f5478bcd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baccf75f-4df0-4299-929f-ea7e05e6e005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ab3404-81ad-4c01-938e-09651dbffe96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afa6eb3-46b9-4f70-b991-00e81ee2ea7f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1aa9dd-e536-457c-860d-cb297b9dbd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87a14db-90b2-4a88-a378-5b67d58eb944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f73983-f1d4-47dc-8b9f-761a4fd42d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cf5e65-1637-4570-b897-97029175e189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697b56cf-da69-46ff-abb0-a2afcf7a7fb8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5bf2a6-8d58-4d00-a966-ea7c7b9e16e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce05388-2f1e-4eef-9316-9cee7f1a3d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041bdf8d-8c70-47db-b449-e416bd1f137c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cfc3a5-6136-46db-8b84-860c5ede87d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25462da5-8515-4b46-901f-2854ed530414",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db728648-e0bc-4d88-a7b9-5b66823fafed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c654d4-6810-4d69-af48-46cdc9dba857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575d03da-74fa-4f02-a06c-442f90eca23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1497f4d9-0325-4b10-ae06-941967563cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35c4951-04dd-4791-85c8-e60ff47e3b8f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41521cb-40ef-4c2e-98ff-086ee865e745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8151ed1c-f8fd-4aca-a113-1b7879a34d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726108cf-7505-48d1-9177-47fd594ed718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cca144a-b164-4586-a003-203fa67d3a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c330c2-e9fe-48c9-8c78-46fc0acdf101",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fa289c-0f83-49e9-b713-696ebfd08d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e5bbc1-d0f8-4574-9b93-84b1f386e2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d43ff82-3a76-4579-a08e-889efd76c639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eec9995-a402-4de2-8d98-6b9430d0aae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d7c8bb-8a38-43bd-aa4d-364910d5f271",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb11820-d7e7-420c-91ff-ea1923fb5abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2df4411-5c8a-4942-99d4-c5437f5d4851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa23f02-ee91-41d2-a96d-95198b8317b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e4be98-513b-4a41-a23a-3391c3b9da14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c263f8-2537-49e8-a770-8f1578dc454d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514d541c-3407-4982-9b83-c3dc3672a061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c7acec-5b09-463f-b145-684efdcf818d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f3ab67-1321-49ee-8267-c1c71c47a247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f817c3d-ed5d-4bb8-9d9f-b3bf6e62323e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa67b5e-f2b0-4fb9-b285-a29d82c46266",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800035ad-8e21-4b50-97b5-7c2d09b4de2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6421a95-85e1-47e1-a434-bedf37cdd97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4913c52b-920f-4128-8d84-423e32144fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70bc75e2-fe75-46e0-b510-a476207f4da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93c63a1-710f-4e01-b7bc-a28f61b866e4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6914c9-2335-4819-b076-108b35797bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3939b795-ee5f-4092-bd25-88bbc63f62e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6b4a2b-be9d-42ca-97d1-6023df5e9bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdadfe1-527f-4e18-b295-9bc81fa0f53b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6954aad2-883a-4658-be2f-607d9d7d38a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a80c92c-df49-4a0d-9def-ef9b858b406a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf40953-e339-43aa-8ff4-2dc420de2853",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5510b539-2043-4988-a695-6cd721d1ab7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22fa6cc-9f20-4579-8425-cf70d829310b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52ea78cf-8951-443d-8ad9-2796d51f9e76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e7b7f6d-7344-4613-990a-d8ebcc9a8efe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de2f56e7-4dfe-4b3d-ac5d-5180c5e8172b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfb28f80-fd8f-40b6-a5dc-de29d69cf9f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f5d2819-d4f7-4c61-9974-e6480ed0bed8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c19b1c11-7ef0-4a7a-b66c-82bd4dea1071",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67741358-6c4d-4d46-900a-f12ec54d443d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a9c1e01-a6d5-4333-ab5b-04252325edb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8005bd2e-c5d1-4876-ba12-1f52811a5f4b"
            }
          }
        ]
      },
      {
        "id": "1231631c-390a-4b3d-90b8-2da3c37ed978",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "de612795-57d0-4194-81b2-e12d360087d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "376d82e0-1e12-4b94-889f-deb6755524b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cdd376b3-a74e-48af-8bff-31bf4922238a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756ccff4-885d-47b9-b143-d5a82b6c200c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a618ab85-1e71-447e-a97f-90be7c7e8cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2c3b51-064f-4f70-89f2-133d41896391",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73a3099-3745-4e92-9e97-1430a5cfa7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be634a1-2339-45eb-82e3-10ada7f33e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148654b3-702d-49b0-a9b5-d96eed088e24",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9cb209-694f-454a-bfad-446ce02f14a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d1d1c1-e56a-4f20-b8f0-8594dfc3dec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360d817e-b99a-48a9-8c5e-2ab6967487ae",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f8c38d-33d5-4cd8-b155-54a9aa8e268f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096e53d6-0be4-421b-8e22-da60177f6cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040e4190-c9dc-4282-afd7-754c8cfd3ab9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1b839a-6c9d-443f-ad7c-ad5c3ea7f9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc1526b-0178-4d9c-9867-60c18d0fb28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ea8647-d764-4589-8abe-a6c6f74ec830",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2758960c-ad68-4ad0-9834-2234960f7f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b26021e-d9a4-4771-af7d-9221338568f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24db7621-32df-43df-b2f2-cbf6fc5836ab",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37f9a70-d8d4-4916-b168-6c62d4f04386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600f0cda-46c5-4b0e-9355-4e68f6708365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fc0d33-c765-46de-8506-95e77d09d7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f77283-4433-4f2a-afaa-dd01d1b9dcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810dac8e-130d-4e4a-a96d-c8a2b164c897",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cfbab3-53eb-47b9-8b8d-78a476671261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "456779bc-e3ca-4fb7-94e0-634953b85e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de99ee0c-179f-4aae-8a94-ad10b9517752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bb7ffc-9715-4208-a3b9-2d6594ca5a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea55701-7f2a-4a4a-8128-c0baa028c8d3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbb29e4-4669-4b5a-b8b4-7d53f98c1441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b60232ec-d4fe-4c0e-9983-4bf68e2b979a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d99a70-a184-4612-a077-5ed7efe5147c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9447f2-7736-4095-a340-9a1c1c630ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f2f9f7-39ae-4008-ae56-b4ed498b427f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bb7809-0ba0-4685-b8d7-c2633c312d41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ec03386-3cbf-4b59-a156-8ed4a4ec6071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024e21bd-cc66-4716-af80-2dfd014dc3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9b4497-cc9b-4c61-9dbc-eaddae95b8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd484b76-99d2-4938-bfef-7416c47acffb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb0c086-a38c-459a-909c-425a30f0884d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4909ba-4b8a-4e8e-9f7c-2c7a98b9cb4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6d9085-2f0e-43eb-b0d4-8f5cefebc1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31cf6a24-007c-4f12-a185-388b3ea27a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd4893d-19dd-45e2-9e2e-060733cf4cc5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32c5d53-0340-4191-988c-19e31d7a0389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26689e64-6604-4e13-ab12-0eefe0c76e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6f2e24-63ed-43e3-9f18-81fe57fea42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71074ed-e03b-4191-b39d-459c576a85a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942e0f89-c676-4e3f-b0d7-7e604b89419c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b480621f-de51-478d-b023-13f7b82ddbf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e85203-d4f0-48c2-b821-98655fda64d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80612ab5-c22a-4c31-8771-d03cb119da94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f70962-5cc7-4179-85f3-f4eb2a8e433e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da389e8-35e0-4323-a9f4-f229f09185a1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2423284a-7184-448d-aaaf-6d7876aa6c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e2512b9-6de7-4ac4-98e7-2cf1736ed0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7673a16b-1d03-455b-80be-202c0b892d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5bc88d-2ac6-4168-b61f-779876e5c241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a584229-af1d-4204-a12e-b489666cb27a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aee165e-6f68-4c07-a201-8c1c8017b5c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74425041-09f3-45f5-9e71-82ff3d4238fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bbabf1-adeb-4335-bb5a-45b5c06805fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0528ef23-d1d3-4505-98e8-f9da68b03c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df02ceb1-f3bf-4aee-8855-35a1bf6b6afa",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a2a05b-f64d-4dcd-bbb6-191bee604c7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b6312cf-f8c7-49d8-a5a1-95547b1af309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9a0abd-6bcc-4164-844f-e165c4d39f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255f4333-9d0b-4a89-850b-2732a84c8aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c028e9-fb12-40a6-9ba8-7b0d29ead534",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a7e0bc-244b-4204-9d61-21cc113e4f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b85b4479-2f2f-4565-9024-7d5642a2eb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bad312-4133-488a-bf73-bb070643d9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cd71f4-2f18-467e-9b87-1f4b305a8c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb53b9f5-9009-4de5-8b1f-fb07b7be9265",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8815c5-de06-4278-9427-95053549ef1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa885c9-cf2d-41bd-a2d4-22ffd3da97d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2540455a-c350-4621-8b83-bf41933f192a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8df1c7-ec39-44eb-8307-8001b42d3263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a848852d-5c3a-4f50-9d85-f585bd52a684",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c94055-8654-42da-9169-f5a4c1573b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5dd893-c942-4e03-925d-c326264b0b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef8abdc-e3e7-4001-9d02-97f26f58f2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1fd13d-be4a-4460-abbf-14a029a9c3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc0a802-43d2-43aa-a994-afe05e5539ce",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d3539c-5542-4dff-9eaf-2b0abce2ee73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b3c688-6a50-4955-87d9-ad6d496236a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f148676-f5a5-41f8-82be-60df13dbbb25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da89e44-250c-4a38-ba20-8071e0ce1cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a26b2c0-d964-41d8-b2ff-01db0ec45717",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32998948-a86c-43fc-b403-5a72a191a630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5596940a-9a6d-4a2c-a50b-e7ed438905bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ce948a-bd3e-4b77-996c-6b54d742e3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1421c5-bbc3-4b4a-8198-1782460024d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad34430-e108-497f-9afd-b1845638efd9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2840758-20d9-4257-bc7b-13640085beec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10212f79-3072-43e9-b0e1-09c6c8c1aa8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4bf585-a719-4a2b-88a1-5cde2ff841b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3233ee-3cc9-4b47-96e9-253f7a9a4f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fedb4b-340d-46ac-a40f-f4ded3dec968",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29629e51-5ae5-4a28-997e-f5e86b011611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4d6287-6523-42ed-ab33-26283c6537cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e596def9-977b-4c37-966c-f982ae328c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6115c03-d16e-4dbd-8daa-1d1654dfc1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f325a6e0-c0b4-42a5-87e0-4efd6329c81e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6e51bc-8397-4e7c-9809-8c72187b5f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "620680a0-19e1-4b0a-8eba-12ef2b20cb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778c052d-fbef-4257-aa6a-8f4cff8d9fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59ccb32-788d-4259-94bb-4308461619b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef4982d-ec8d-4e59-b829-23b9db6c68b3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8ebc04-5700-4160-86ce-e32b3c3858ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3994220d-c5a6-40ba-88e1-f913777f7078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86bc88c-c869-467a-93d6-6087b8a91513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e28b5bc-2651-4be3-b1c9-2d0a3120e18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b1b63c-c3fd-4fc3-af69-de2f2d0410df",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bc995d-a91a-442e-bd2f-e8bafefdaff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e463faa-ffd4-45bd-a369-3ee48f97d645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fb73aa-cf91-4177-85b8-50712d3ab7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b44caab-3b96-4074-b58f-4782a2e4372d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16b680a-43dd-4452-bc1a-e7efb73f5de0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7690c7c1-91e6-4691-a522-f8ec0be9a991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15070c83-10c9-4b71-ae55-db60737d7f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83836a84-afd8-4894-a579-ffe02d8b9654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b068823-f113-4697-b05e-113b15b8efd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed9f1c9-8ab1-44e3-9fd4-090c7af40620",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43de30c-b058-4c99-9785-02d4c0924227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e78d1ac-492f-4a0e-af0b-3a350cb84b58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a933539e-4f21-454d-b50e-8fadd9f26ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e5f271-495f-4a13-b386-0db6409068ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681647f3-192f-42ff-8b9e-22c0d50e5e18",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ec3ab4-5556-4d33-b27a-7aa82698609d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca84ca2-8a80-4b3d-9f5f-7f98447860b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeebc4c-1f26-46c8-8ea7-91eef82c9b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134c01d2-1646-41af-8b26-c760c34f1b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852b2c1e-172c-467e-bcfa-f1270067dbdc",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c663383d-f208-4d74-87da-7719dbbbe15d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "217d9e79-72d8-4bb8-b8a7-63365aa876f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4cf959-825d-4844-b54d-7e62eb045e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ac3a12-4e24-4c40-bca5-0b047e463bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3582b14d-9779-4449-9f3d-e4abe1a7fe00",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a270ea41-e211-473b-8975-a303a1dae235",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "064d4b73-9840-47f3-9a93-173504687f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e416f2fa-adbd-4742-8a99-03aebe8f03c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2de656-24fd-499c-aa60-5b990adfb5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e621e434-9812-4dab-b880-a7985c333406",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba0b7d1-5edd-44a1-8a68-02ad8d3a63b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07ca2e10-d6ba-43cf-94fb-19b90eacbd50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76371a9d-5992-437b-b1ef-4b04cdafbfe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613a95fa-87af-4925-aa50-adc181ea64eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a791d7e-bb1e-4590-8fae-220685f971de",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f586f5b-6ad9-4b51-abd8-277d6b681b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e89d12-b604-48bf-ba37-4bf8ca5f8c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed86468d-c307-4362-bd3d-139aa450ebfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f871406-8c31-40db-8044-eb6a6a396336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a881ce-019b-406f-99a8-fd09782b64d8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc29583-417b-408d-b66d-98e545a0dc31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9163e33d-50e9-4799-8c92-e905f5fde30e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88685d02-cf79-4826-bf2e-afb4bf115690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfe1298-6abf-4544-9aaf-ce75e9ce50e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a873baf-962b-4c3f-8e15-1c9dcd30d5bf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac454b51-e02c-43ec-bfdd-74ce801b57a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "053e29db-4e7d-454d-9d00-3c65fc80dffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1151bd-3c43-4409-b86b-b20d036804ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bd40ab-01c3-4381-a0b7-83e404d44fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30d8056-c040-4dea-8108-81f6e0dddffe",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4ee451-3b35-4121-ae08-56ed38811e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9904bde2-b4b4-4fa2-81c0-07a33653e766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dc16a5-7816-498f-90e8-120be696836c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f85a384-cc1b-4679-bb9e-5bd373ef7c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192ae0e2-da2e-4f69-ae78-87f85f8c4f92",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b307c5-e6b7-4149-aa81-56a91c2220d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5dab4f-b980-469b-b1cc-0d6b2c13d447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb7be84-7b31-4de7-8003-b9c55caa6c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7b7e0a-60cf-4a75-a3d3-9fefe2b75362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0e0f47-8aef-41f3-b774-eb9fa7899836",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9490478-c22f-4979-b100-0a3c1213fb3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4808c798-7a09-443b-988f-45482ca4ab39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbcd41e-38ea-41c2-9d17-d652d0ea2b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe49bdd-6530-41fd-a61c-ca37466eb923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cf6cb0-3aea-465e-ac76-dd7edbb8d9f7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b27cd4-e642-4685-ab74-d397893389b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ebd2b2-1066-401e-a00a-729a44ed160d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd54f4ed-7941-42d5-a97d-a7fd0f19c420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d07139-d757-4ff0-bdfa-cf97513c48e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93d01ee-ba0c-45c7-a0e2-2b92f8bdc88f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618e2122-aa38-4f79-a903-5b8594158ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0ad5e9-3753-46d0-a368-37df3a08dc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cc13fe-3524-4aab-ac46-e6cf5564249c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36172aa1-e96a-4519-8540-043274846bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97f3f29-eff3-4708-8a9d-219e5cbc0686",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08aa5e1a-f583-4a76-8d18-15e10561eeb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529c2d29-0cad-4064-944f-a8a2f94e9f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f92ce8-3c03-49d1-a4a3-68740cdb7ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd88ea1-f0bb-4034-870f-776bb649f495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da37bee9-c716-4b4e-b5b1-b5a72a90a88b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbc55fb-a4ff-4cde-96bd-c89c0010487a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3071f87a-ec90-4dd3-b228-15e2048da623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1f0573-4c55-4455-9847-0f794c5fe8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465f8556-10f7-4524-a621-05ec53d1ec5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0f542b-3ea8-42cc-b069-5cb88372be1c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb531a00-1500-4bbd-adf6-2089e1ca891d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed064a46-ff5b-4cc2-8cb4-8dd649e50e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16984d6d-3329-4edc-97a9-9062f6e66c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5802cb6-f85f-422b-bf78-9b033599eb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d3e8cf-fdfa-4711-9994-1f74a85ac33a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9609fc96-bd62-45d9-b050-a545740dd8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddfb832-0635-454a-bd54-232f8f2b53f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a8fcfd-cd35-45f9-9361-a3128aec8bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0402ab7b-9df7-41a7-b5e1-f63bad0386c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016d3067-d6d8-4df7-9e9e-9a27dd9b680c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc4cccc-ccca-41a4-bc91-79271d09e07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bace510-334e-4e16-92d4-5b3e02ad4bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c677d3a-f629-4a43-9408-d9b67859ac16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a6f370-cf17-454b-9b3e-4c39c64c3d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e6848c-c002-48a0-8c64-6bbd79b9624c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca87c606-5b7f-416a-9aef-717b5031b460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ee8ce9-f135-4bab-bdf1-0bb0254f3c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f126f84-70d5-4749-ae0c-5667a02e6ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15b711c-f8af-42f5-8c5d-8a8b27705e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa06dde-99d2-425d-9b61-5621f104c24b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc235c6-b6d0-4a29-82e3-e84cfbe2aeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7a63ee-7b0b-408e-8849-59aac25b8fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cba36bc-758f-4825-b1d8-c022b9ac40fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b31475-41f0-4efc-b8cc-3e46d59ebe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa3bb6c-89b2-4a8e-bc83-f3153962f858",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0265e53b-e69f-4c54-9fdd-ba2e2e1864f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a2bc82-6661-4b1a-950d-287ccd870748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d95cbd-ffb1-4bc2-b044-59c6380c8afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0381f574-1cf2-40cb-a77c-cb0b94488b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b75b22-b1e7-48ba-910f-446688c310eb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa58d2fd-c005-4bbe-9ead-1dfd5c234bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec4049dc-c544-4e65-be57-016234493d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aeba111-3bfe-4447-9290-b9989d47ec95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a6e3d3-3bdd-4843-8da6-b5b31ee3ad3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0120f484-1e73-4ad3-a297-7062b99740ec",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9403768-09f4-4d10-969c-075013bae801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a15ebb6-7686-421e-aca4-f8764d1d7478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19032b2-de77-4c60-bb8a-4c632b49f1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3912c8e1-1c7e-4cfd-a289-7579f28df28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0b4f5b-1cbb-450d-b004-ac7c16f23ff0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53931cbc-12b7-41c8-a108-a30152cbb90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a631fbc2-1c74-4048-b60e-c98e9913f4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e020c3fc-0d27-4473-afd5-73e6bfb091ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668392ec-e54c-4e1a-b786-b4da1af14995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aee61c5-f9a9-49d7-b220-cae812aae075",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191220be-92fd-4342-a8c3-7de59618a1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd05956b-933e-4f74-a683-136cc4ced9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88fa9d2-0b02-4b3b-8f8c-d3404a05147c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62308f3-eae7-428f-8528-ba9a76b1a2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b40e29-a2f4-4949-9fc8-4ff1d84b1512",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91cb77a-de94-45ba-93e0-887dee6531af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b718a97-ea14-4edb-98c3-797a853a2ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57288a54-8ea3-4393-8555-47d4e6ef64ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2e1c78-f301-4682-8d79-76610d0432b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced709d9-b47b-47cc-93f2-d40ab2f7c120",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18785f32-8aec-4fa7-a5fb-31c150f57691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98edcea-a537-4209-951a-8544ecab8883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fbf391-645a-4496-b84c-8dfb3df3eb40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1223a7cc-eb36-4352-bacf-9f8c9e6eed86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60c70b9-9b8f-48d8-bfc1-e35c3dec673c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab042f6-9ef4-4844-b381-d149430163a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040b94e6-dcae-494b-b8a7-61d3d84d09ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea96e53-c0e1-4498-b0e7-a09cc29d9cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba87c000-d6df-4246-b0a1-b9c086888995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19e760e-91f6-4769-ae5f-4f1a0a8edd54",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6422e61b-6d27-4639-b47a-fb86b9be1934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb17929-c388-4fb6-9f85-7b477fe3f56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61940178-a358-4c7f-bc88-98b22d014b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ee2ed5-46fc-4fb1-84e0-eb111dfe4833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7430974-a3b1-4b09-9335-05cb2e4087f7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546d2a6b-45a3-47e6-b185-8b62c96d0dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3b7c0f-dcd7-4813-a18b-370de24d0d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "135ff7bb-777a-4d87-aa8e-7fff5b7656f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5453ccf7-d43d-4aa0-89a1-dede5a5d9c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b4801f-c305-4556-b6cb-7cc17b65f8db",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f56a5d-c1bf-4e9b-a2e2-8d07e0c9f82a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29cf924-9d0d-4197-8ed3-a9e874b65e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14f1e20-4c53-4676-8eb9-3269ed224782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cccd3fb-b103-4a06-9b00-c3da19ad6dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19e2eba-db8f-4956-9a9e-3cecbdadef64",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32043706-ad5e-41e1-9f81-0a80ceda64b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935c1192-a7c9-4a1e-8d92-caeec6c05097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beef6f8c-acc0-48c7-a34a-0965751cf069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0869b604-f7f0-4c4f-8a84-95d95b7baf61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53405d9-ab5c-4995-972a-5c7ce19a0363",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce9a094-2c89-4eca-b2e1-d076c44aaf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcd2ad4-1bf7-44f2-9065-68c03e6e913e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7bb5d1-2d07-40ba-b74d-6b592e9d9748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c73416-c240-4bfb-a31b-6295ecfccd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd4f680-e5c2-4377-913d-155552e99346",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89b4982-6939-4b0d-ac8b-031319f53696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867c618d-0d9e-46fe-a8fd-e3e869f95934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a65bdd-be78-44cf-97f8-2bda6fd5263c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25ab505-ecf8-4c1c-b68b-58fdeb7d9cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db98a47-3298-47d1-8159-997385a12ad1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8847cd86-86e6-42ab-a440-4770ac5fc4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab02085-c29f-483a-a8cb-044ec2f7868b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab405b7-2d9c-49c6-83d1-6a7aa2871bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e608215-38e5-4734-a88c-6bc5644956f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d82702-be50-46ba-a2ee-7de6200db3bc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089f7394-7659-436f-aca0-0f9a0cc481b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce4f6c1-1533-44c7-92d7-a8a4762358e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0551e97-d712-440c-b35b-9d2d230aa02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b386509a-635e-4a61-901f-bbc8303d554b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e5e76e-b256-4220-b2c8-100e40475695",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6369c0-8503-4e17-b777-80974cc65895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff5b139-94b9-4fb6-b7b6-1c39193fc379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6fbea7-2278-48f5-b579-21c8a696663b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3b2b61-82a4-4da9-902d-385f13808fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0ca98e-fb04-4c91-b218-cc9155d189d8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a8c1a3-32b6-40d2-8bed-7cd4d8a2c008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ef84875-c62f-421b-9027-ca1c877aae6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b60124e-8e23-4acd-a22f-367f368562b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532da7e6-af62-4a42-8cc3-b8ca4e8241c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a474d40f-1a21-4e28-92b7-6f48ce9f8952",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2a42b1-a5f7-4265-93f5-60045dceb1a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e23085f-c04c-42f0-bf45-09cbb7723167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42e50f0-8146-4cab-8a2d-f900f98ba84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5222fd-8dd3-4e05-8427-f6a664216f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ac8051-7d59-468c-862a-27baae4eb960",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e8b2de-1eea-4f30-806e-70d64a488f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc4bbc3-2a17-482c-93c4-064d7c9c534e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1941850-ced5-40f8-a123-d51048843461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c243c1-5ef9-4050-ad6f-1393073c2445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9623c082-ea64-4dea-96f1-6fdf157aa4b6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a8372e-cbba-4b8c-87b0-bf17fed0631b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a5f808-c249-4ca3-b8cc-450458fb7df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8247eb0-f246-4344-ae63-6cfc9d3b6e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b3a1b4-4787-44b0-994b-b0caf950bd3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187e4b74-4fda-4c60-bb3e-6ab6e659e473",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87a892a-2b9e-431e-9d3c-fe8f0b0f4cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0747b19-cd77-446e-876c-68c9d9c1fccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa7450e-03f5-40e5-aaed-263b220aa0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dc05cf-c1c1-4dce-b9c1-9dac00150ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd639e18-6a47-45cd-bde9-98c3d6f2dcb8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f4a3f0-1efd-4536-b073-f042c118588d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "326bbe64-66ec-4728-b388-bad58374676e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee172f4-ac96-42db-9be9-66e1be006af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a81651f-dc47-4c0f-bce6-7620fd2c4b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271c354c-37ce-4a3f-b38c-64ed81703cb8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3403c5f8-7b64-4c7b-9351-308988848927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd725ca-237f-4dc8-91d7-f42e3c7dd7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd47050-7295-4684-bab7-3df267ebf428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90440e53-79fd-4d47-a582-3e9af4f3d31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5f92da-b887-499c-a0a2-057e593ebceb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a1a480-ba4a-4a3a-8eb8-dfeac616470c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332c1342-ff74-41f4-82a9-0cf769564f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e084f28d-c542-49e3-a60a-38da32b2ff09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0333bb-07da-471b-93c9-49d6793a0ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad393516-d86a-4420-b275-9e0d17062624",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c059ee8e-7b20-4c51-9589-85ed3f58e570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f87d0b1-0338-4f7b-ad41-d57d312dffa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c6080f-9f01-4ec0-b019-9cfedb022be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1590a971-9262-455d-8225-c8135655e343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e09941-c81c-4e1f-9894-ff4671c4e7a6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4299484-f7c6-48af-984f-bbc12ffa6ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b4c8413-d062-468f-9bf7-d2387cc2b308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3f510b-15e5-4e3e-8c41-07ad0d067821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9239ef-dbca-41db-a71f-5c9202bb54f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd939612-12f0-450c-a03c-66ff51472397",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4583f9f9-5f30-40ba-b3b5-f5dd87f83212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f38d494-2b1c-4297-bee7-17e19d039e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3efcd7-ef84-45ba-9007-7331091e1586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66847fac-03a0-432e-a2b8-5e3c8b151c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d057f04a-7900-491f-9b04-b470e8eb0358",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1332aed1-2e3c-4929-b5ec-7eaa866be174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a9f538d-8d25-43c0-989f-8f18b45562a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4734a4a-4943-4ad2-8b98-7e561b80fb54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e343982-8ded-46c9-b89e-38475fb161cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04424353-2b7e-4b3a-907e-abe262531710",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7b8b1c-e8b8-4826-ab36-c908fa301d59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42df0983-94ac-420b-ad0d-b18220a00824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71890bbb-3528-445b-9f79-1171dbb2d98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3096348e-69ec-46af-9ff2-a86e2549c642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b64fb6-32a3-4fa1-9b65-8cbcb53f8f87",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3500940e-b18a-40f0-a1a4-5f9f3392dc1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dcdc1b2-65cc-43ee-8f50-372e4b11675c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d75d22-600a-437a-af3b-2fac17d50965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06b811fd-b07a-4477-b4ec-95b34060fdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b2aa27-61f3-41e0-91ee-6f57c8224f47",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b373886-9085-479a-b8b7-41a1e9baddad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "866650bf-7b0e-49e4-b53d-115af0889ade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "068a373a-b332-42ae-9041-934aa13b697b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac78386-af15-4255-b73e-89988d8990a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63795322-4d4f-4d65-aac5-efe50160b67d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aadfd88-e1e9-4f3b-aa3a-cbf8eb2ca4f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15da169e-af90-4701-8e8e-1601cc4a0f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996ebfc0-383a-45af-814e-35af72ae10fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78b60aa-c8c5-41c5-a240-c8330610329b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4ed931-f4ce-4a1d-9b6b-b4555bde1c90",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9766ee-74c7-4d41-9020-c1a68b29b984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad127f4c-8393-4711-a82e-0c7f7baa44fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc01b6d6-b774-4010-872c-6618facbee31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0372c473-8d0e-49d0-951c-57f02c4ebaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57c59de-ba56-426c-b9c6-bffb41b7b9fa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b094c2e-8809-48c1-88e4-5e31701cf175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42030cc-d16e-4415-b1ed-50098f0b0de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4f74c5-ee10-4f52-8c13-f1d1baddbf69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d90922-72e2-4b28-be2e-be6672f914b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9e9001-ce43-4f62-9eb5-4eedf46b0559",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa25cd3-1eb5-4617-a042-e2a88f4fe1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "789177e4-c88e-46eb-85a5-1b6a46b601d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db911523-b77a-4dfb-a656-a4a64d2705df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a343d169-3acc-4687-b2de-336fecc8be7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b29e05-8344-428c-87f0-e097edf350cd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0aac6c-a43f-48ec-81e0-d4a3e4f3104a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2baeab20-4689-4704-83b9-df554e3397e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3629b3d0-8aaa-4389-96e5-0a4af5e50bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aab5fd2-e44f-415b-b5f3-abc999f81abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5a728e-9db0-4ec9-92f9-17812dbc4f14",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211dd3b2-270f-4363-8feb-81e108a91780",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61b7adf4-65d4-455a-b40d-f46e55541bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9c678a-293e-4c03-85fa-0bb142bb39d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59835ab3-be38-422c-bbf6-ac445517806b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281bc4d7-8ffd-42d2-9ac7-11ec0e34ae51",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2364b301-d209-497a-a6e8-605a4750d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba909847-7e5a-4095-902f-e49d32d87cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f58905-83b1-4c0b-9d84-538a5c216278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870c0cc6-01ea-48c2-94a7-6ef600f0888f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3af3dd-1eeb-457c-8726-a31d13c7fdae",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323b5582-f716-4041-afe0-1a02e89d9f57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42bda2bd-0f25-4ef9-b50c-0505335bc7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93de70c8-31b6-453c-9ccd-2f182f459682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa39560-1871-4295-bb21-afc7d12c2e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea984723-7c6b-400e-8348-6c1af3cb6ede",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bd63c1-3517-45c9-971a-ea951c467bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e526fe-1a49-49bb-a2be-22936b2dcc86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ac5238-b46d-4e35-bf5d-daf0ca40cdd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989d0132-4af6-49cc-86fc-78ba84dc5cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013e609f-ef9f-4567-9778-1efef7daadbd",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa590ba-7558-4985-8daa-35a03a83cc56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f3467b-870d-43f6-9b8d-e323078a291c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4ac009-1d86-44ff-9f02-cc843b6f4f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e73be1-512c-4752-842e-7ff465ef0dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55beb421-c218-4712-b465-a81bf4ece845",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb32633-c6d1-49dd-aa9d-e37bc4d584c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e885bbc-72b7-4dc4-b873-bac2a95ca3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773aa6fb-4395-4632-bcac-4b4cdf9304ff",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25302b35-ce2d-413a-a7c1-733fd5afad71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f65f842-3ad1-4d4d-b594-b9ece4f402d2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fffd99-b004-44d4-b2d4-755daf780195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "735ba780-0b07-46e3-9c92-bf0daa804095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d27e565-cf9e-4a58-84c4-8cd7dcaa6cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c03816-f3d1-47cf-a830-08fdd520236f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc762fa-6694-40a4-ae97-6a0940a52e3b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8092bad3-5321-4ffe-b1e5-76a46abe8a58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5208f2b4-6274-4942-af40-2dd299433b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42de4e79-c458-4681-8d35-623ec61a16d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5b6375-a84c-495c-b5be-0a192d9dc571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c3bd23-29b7-4066-a7de-9f7897108c97",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09985d4-d228-410d-92f2-e52bb4f4e9c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ee9d4b-0f41-4aba-be3e-1f4f5a20b353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a41da66-4ceb-4623-9b0e-831439f131e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf8071d-1b4b-47f5-bc63-17737a8f8c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7b62b1-2319-46cb-a5c9-1c1bd88b9c8d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af96f1e-9832-4c34-8645-4d975b009aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea119c72-8fe7-4e63-9f2e-d734f4233a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257a9aa3-754e-4944-9907-14cc472aba06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c41a7b-ed7e-43a5-a517-91c6dab411c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d36b38-29d1-4e91-b4b1-c231c2d6af43",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd495815-c99c-4891-8a19-24aefdac5d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d58c9ec-71d9-4e15-ba3a-3021a0dc41d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a482d33-a31d-44f9-be33-80a60120cd8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254a3d28-9862-4ede-804d-7828eae0e69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3950b5b-1f1b-4594-a0cc-4dc996a23e8e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6027b37-e8db-412b-96cc-e18f6014c510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7861a783-d6be-4331-befb-136d289bf33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13d73e8-47c5-4476-b55a-69d3c5287db9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ce026d-6f2c-4833-8a86-749e911b9cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ef2440-dc0e-4842-8955-19f75694972b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2260867c-21cd-46ee-ace1-ee838088c458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6b29b55-ca77-4861-8bbb-b91266b72378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8286a721-6479-4c91-9668-4a917fc54b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96cab02-740b-401d-8d9d-bf1223e7a879"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ea82c61-b5e6-4782-97a2-6146fbd6d5b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2edcb8b4-a87c-4b15-9b78-72599caa2953"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad5faf0f-ce26-41f8-9738-1b46b782b145",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d6d93cf-1be7-46dc-b999-0846f9b96096"
                    }
                  }
                ]
              },
              {
                "id": "03350ec3-7f79-47ab-a130-9b1e55b4f833",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0bf849ff-a52a-4a37-9206-60b27244f22f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0737532c-87de-4a4e-b20d-8dc9b6b31f80",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d020dbbe-c930-4fb4-9a16-6a8a0ea50d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf05cb5-4a9c-4dac-936a-d75382b4e4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bdb3076-a771-4b3b-8440-d0547a6bb516"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8177efb5-4147-486e-a027-038202d2953b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b8967a3-d2e5-47d3-90f8-bc6a35c6aace"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3beddc94-cd3b-4f22-82cf-365a1cad134c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04a33362-83e4-42ad-9b44-f0dcb8b3f924"
                    }
                  }
                ]
              },
              {
                "id": "6eccecf2-7add-4cb3-9713-d5096074e3ed",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d8587064-8fde-4344-91f3-7958d65cc36c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735385ad-e1f7-488c-9f4e-ace163f89471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fcc845f6-202f-4c0a-b78b-a094ba686ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b40888-780d-417d-a7b8-1d79c327ef10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02691573-89d2-4b4a-81b1-512286731342"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1876989a-d81a-47ca-b59e-b297536f9247",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15939e30-da59-4be2-9d20-909be2350d15",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8df37ced-d852-4e01-9c8c-1fe2e695fbe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "603c4ddd-a2e3-4080-aa1f-53ae221af2aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1476959-0224-4a76-91bb-64b24ad5908b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6396ca4-1000-4680-9a78-e13916ff33a2"
                    }
                  }
                ]
              },
              {
                "id": "ad5a164c-a98b-4882-9823-15dd31c1d537",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c00b26a-e75b-4cdc-8896-29859bd3f1d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6472ebca-6ad7-4185-aba4-2468aa4f4ea0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c211ba83-a97c-435b-9cd6-8de8ee1f9505",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eca25afe-b4f6-44bf-b5e2-3674585120cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f043a57e-66eb-477d-bf16-967529083e6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7118fcdb-09d9-4e97-8c00-a7274c4eba2a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50390b40-2026-4fd4-a408-fbe76856f338",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4daccb53-e9c7-47a5-bf79-6f6c70e05ad3"
            }
          }
        ]
      },
      {
        "id": "3390a5df-1389-4fae-963f-f40139e1fa13",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1b3b6fd1-fff6-4da0-ab5e-f098f4bb8085",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36576c06-de78-426d-a55e-26218cfd7ae1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "afc85ea4-4609-4fb5-b5eb-204a3de9d5dc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05e75c2-f97c-4075-a2f6-ccf1b7064256",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b1a21084-134e-465d-98c9-5fb00a5124be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78db8e8e-8c74-4651-a947-7641e97da232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4abbb860-fdbe-4675-9f70-97893f7ee2a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6d065e5-5af5-4872-9bb2-f5a6e18709d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6739ff3-fa57-4157-b346-af50964e9626"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b94279f6-9e37-48a2-a1fd-548c9bec78a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d09c055-8d9e-46fb-a167-aa6de72f97be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f246b5d6-41bc-4aed-a37f-2c068e69ba38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a8bd32d1-4b85-4d88-83d0-7082b7ee1acd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb069aad-78ed-4b9f-88d6-0c0e615bf115",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e194ad42-1eaf-4104-acd2-a6a60d584591"
            }
          }
        ]
      },
      {
        "id": "187ea953-a57f-4b40-8371-0ba4d371a5bb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "72e6d9da-638c-4ca5-9e65-b5baa9206cdc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "beaebbba-f785-4f5d-b6a3-1552072e0391",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e2aedfa-1cbe-414c-b26c-d71d69d381c7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efddeeb3-bfb5-4b6b-a776-80fb0b82f692",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d985d83-a07b-469a-8316-26ecd8fccd4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655f15a2-389f-4811-9c33-bddae2b943d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "308c9b70-55c2-40d9-a324-92d7c1d844b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bd6dc1a-dd2c-4dab-945b-203cdd68e86a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f5a37b8-cc6d-414b-b52f-82669c92e611"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "055fa3ad-fde3-4320-afa6-f3eb3324c2a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35a1cc8f-e6ef-4a67-ae59-c81560664136"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c89721a5-0e39-4fce-8019-2309e5da46b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9503947b-e725-49cc-81f3-6839d90f26be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "813e8d99-6fd6-4849-937c-8fd2788bc7f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c7af890-5593-4e19-a72f-d0b7e827d544"
            }
          }
        ]
      },
      {
        "id": "f6e18139-e23d-4dc7-8074-51949d9668ab",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "239948f1-3b40-4221-91a0-dba704ca45ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9466f62f-60b8-42c1-8cd4-477cc835d772",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5594fc8-9d51-4be8-886e-c378086823c3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cff623-1974-49bb-8c2d-007b6b0d5f60",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47ade7c8-4018-4964-adff-095b5d89b175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57afede7-73ec-42cd-bfff-219f079f8669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39ee89d0-9278-4048-8cc2-a6e34f2b76b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77f2b095-55df-46a5-95ab-94f2546df714",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f5ee1f6-85b8-4650-82f9-4fc69888ee38"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "566bcca8-b0fa-4172-834c-237dfbfc8b7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b09ed82-7c57-46eb-a110-5324efe5fd47"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da7fe6d7-2026-436b-95cb-74516c1b7257",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "527a48c4-f8a2-4a37-b201-8aa1a5a82c11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21586af6-afe6-49b9-bce7-35b525b9d2a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be22b2c2-7305-4be6-8de7-26ed4cf81497"
            }
          }
        ]
      },
      {
        "id": "ceecb12a-8a50-4c87-98ca-993b20e88a65",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afe7f94c-a510-48cb-9109-029031b6418e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "195e3097-7c16-420f-a7d2-2eec76baaa95",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "89cfe231-2028-4ded-b654-e22353a6ede7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d294ee45-7baa-4aed-9e9f-7c561f1ecab5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c015d043-30f6-418b-8637-fe04c21b7f58",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 89.62105263157893,
      "responseMin": 9,
      "responseMax": 5081,
      "responseSd": 448.02968680494945,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710981330536,
      "completed": 1710981365398
    },
    "executions": [
      {
        "id": "f01d38cd-19b2-4f5f-a3c6-49e222cdf0bb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0ff13875-3030-4d2a-8d18-3bf665ecca5b",
          "httpRequestId": "f1aa527e-8a1c-48ff-a773-ef4409ea3032"
        },
        "item": {
          "id": "f01d38cd-19b2-4f5f-a3c6-49e222cdf0bb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a9e49def-0f5c-46a8-a0a2-5873f3a0a32a",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "8ee9f4df-5af7-41fc-9fe0-3b576ef8cdf6",
        "cursor": {
          "ref": "3eae108c-2d9a-44cf-8c3e-8511d800bf82",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "96d1e199-f0b5-436c-a15a-c785ff9c8eaa"
        },
        "item": {
          "id": "8ee9f4df-5af7-41fc-9fe0-3b576ef8cdf6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4ddbbaba-0593-47bb-9bf2-7da053fc2fe8",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "541bc878-1abd-491c-8343-ae3a92e9d0b3",
        "cursor": {
          "ref": "c45212b6-eab5-4fb2-9690-3136b29f7f1d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b7a46c9e-f0eb-49f7-bf9a-5829c18164f4"
        },
        "item": {
          "id": "541bc878-1abd-491c-8343-ae3a92e9d0b3",
          "name": "did_json"
        },
        "response": {
          "id": "045c4280-de63-49d3-acd1-0858b01c73b4",
          "status": "OK",
          "code": 200,
          "responseTime": 176,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500e8ef9-b8e4-4691-aa25-afe2ff97a75f",
        "cursor": {
          "ref": "2ef3c26b-bc2d-40b0-b740-ddb4e77a787d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1965419f-55ef-4415-8e21-ce1f9c52589f"
        },
        "item": {
          "id": "500e8ef9-b8e4-4691-aa25-afe2ff97a75f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6e803534-7c09-455d-96c9-618221f8cbb2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 373,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500e8ef9-b8e4-4691-aa25-afe2ff97a75f",
        "cursor": {
          "ref": "2ef3c26b-bc2d-40b0-b740-ddb4e77a787d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1965419f-55ef-4415-8e21-ce1f9c52589f"
        },
        "item": {
          "id": "500e8ef9-b8e4-4691-aa25-afe2ff97a75f",
          "name": "did:invalid"
        },
        "response": {
          "id": "6e803534-7c09-455d-96c9-618221f8cbb2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 373,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f2ed98-8f91-4d39-a1aa-3785419c9097",
        "cursor": {
          "ref": "cf0589b6-4134-4d4a-bfdd-aed89c7d0e56",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "44f84dfb-3ddb-4d69-8a9f-9aad79f33261"
        },
        "item": {
          "id": "e2f2ed98-8f91-4d39-a1aa-3785419c9097",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "adba7316-115c-4155-b2f6-0472bbfc3218",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fbd0df-927e-437c-9471-8dea93ea9cda",
        "cursor": {
          "ref": "5ce9501e-cccd-4166-b96c-f559f4effa52",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e256113e-2499-4aeb-9486-0d4837cb9933"
        },
        "item": {
          "id": "35fbd0df-927e-437c-9471-8dea93ea9cda",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e92dba2f-e160-4bcb-bbcc-cadba689360f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e186c695-91a5-47b7-957f-19b6d6089e03",
        "cursor": {
          "ref": "fa18e2cc-308a-4555-b26b-8a08d31b86e7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6f4465d5-f980-4b2e-a409-d05d07efc73a"
        },
        "item": {
          "id": "e186c695-91a5-47b7-957f-19b6d6089e03",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "93c40099-9fac-4f72-af42-e84fb3f9cf82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ee643b-38e2-4079-b2f1-2a7bad5a83bc",
        "cursor": {
          "ref": "69b1a443-0935-476d-8cee-eda3c5254f17",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "defbe629-4ca6-46f6-a305-a67eca95fb82"
        },
        "item": {
          "id": "96ee643b-38e2-4079-b2f1-2a7bad5a83bc",
          "name": "identifiers"
        },
        "response": {
          "id": "1feca0a5-df45-41b5-b343-fcc6eef3facd",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89239024-420c-4a6b-9eb7-f216d8daa3cb",
        "cursor": {
          "ref": "62e0e24e-89d8-4745-a160-143331e11714",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4f8ada19-636e-45dd-a3fd-a8305f8c68f4"
        },
        "item": {
          "id": "89239024-420c-4a6b-9eb7-f216d8daa3cb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c043ecd1-4a35-4f23-846d-cb37d3e108a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f29860-5ee4-4602-a6f1-a4a3e0148c08",
        "cursor": {
          "ref": "0e68a6c4-5f0b-4b71-bfbf-71e152cc859b",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fa5e906e-4783-4505-870f-1c8b27bbd127"
        },
        "item": {
          "id": "e7f29860-5ee4-4602-a6f1-a4a3e0148c08",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c9eb87dc-a601-4d16-ad8f-63c05549e6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6803cc-d88b-4c7c-a3dd-f00451ef1f5d",
        "cursor": {
          "ref": "72d0187b-b84e-4777-976a-e96964a0a0b1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "49cf6105-0b88-4986-8155-fec20efcd2a5"
        },
        "item": {
          "id": "5e6803cc-d88b-4c7c-a3dd-f00451ef1f5d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f48b8d53-769f-41ef-90c4-5c13be73a850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3a31fb-5c46-4a8a-98b2-3a0003e2867a",
        "cursor": {
          "ref": "8249ced6-6ad5-4d21-970f-ec6ce2b26028",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "0b790d43-ae77-4206-9bab-ceb72132ae4c"
        },
        "item": {
          "id": "ad3a31fb-5c46-4a8a-98b2-3a0003e2867a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "44bfec2d-332f-49ec-b88e-adc2b5d203a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd18a7c-4419-443b-ac37-0ab0d936ca22",
        "cursor": {
          "ref": "613f5f59-e0fe-4b0a-9069-ea2c471059a7",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0421249a-1559-493c-bc83-55b4d5eb8cdf"
        },
        "item": {
          "id": "0fd18a7c-4419-443b-ac37-0ab0d936ca22",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6603779c-fcfe-4e2b-a1a4-6f01f08da7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02bdee9-1ee5-40ab-970b-ce0908c3b201",
        "cursor": {
          "ref": "db5aace2-e4bf-4dcb-86ae-6beabc83e04f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a8cb6745-e98d-4f2e-8f7c-955405d0b601"
        },
        "item": {
          "id": "e02bdee9-1ee5-40ab-970b-ce0908c3b201",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5341d319-3a67-4b75-976f-3e667a5b6e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c900457f-41df-4bde-a643-ca89481a744e",
        "cursor": {
          "ref": "00bd826b-d8b3-4225-b6fe-fabbfd45d727",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6fad1b87-3b4e-4e50-badd-1608c08f0936"
        },
        "item": {
          "id": "c900457f-41df-4bde-a643-ca89481a744e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "450d452f-47ea-45a6-a9e2-9da832b88fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a7692b-e909-4d31-9e4d-a23f9af30857",
        "cursor": {
          "ref": "bf3a0a92-a6c9-44d6-ae62-52f77b1fa64e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "15850d81-d40a-4658-8d98-34abc41509bb"
        },
        "item": {
          "id": "39a7692b-e909-4d31-9e4d-a23f9af30857",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3e7837a6-f1c8-4fc9-bd3c-d83c966862e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f110594-8a06-47e8-ac04-ed61bdf0f221",
        "cursor": {
          "ref": "3a2f9aab-ca18-40f1-95b0-553feba77b56",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "171f18ad-8c82-4cc3-8565-8eeeb9af0294"
        },
        "item": {
          "id": "3f110594-8a06-47e8-ac04-ed61bdf0f221",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "22c3ac56-0dc5-4cc6-8c4a-56e7f961099b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e3c60f-541e-4d9b-8f2e-3259ceff04ea",
        "cursor": {
          "ref": "bf27270f-3e2a-4a7d-966a-8111cf1dd95b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c9f0084d-c647-4e5c-9532-fbfffa93cb5e"
        },
        "item": {
          "id": "c7e3c60f-541e-4d9b-8f2e-3259ceff04ea",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4fe11b97-2e66-4e48-833f-9d3080226c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2392e5d-3dd6-4eb0-abbf-c2685e5ce6d0",
        "cursor": {
          "ref": "589234ac-2507-4713-8084-6ddb171da808",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "79b1cbde-5969-4bc1-b37c-76db1fa2954d"
        },
        "item": {
          "id": "e2392e5d-3dd6-4eb0-abbf-c2685e5ce6d0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2f4587a1-98cd-4911-ab8b-d81c1e396b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb79a15-0c56-41ee-8195-d6cffc0b7c94",
        "cursor": {
          "ref": "f00a9e2e-4144-4892-9bd5-2640a790dbf9",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b0718294-c042-4d4f-af0a-cf65502f7b6c"
        },
        "item": {
          "id": "bcb79a15-0c56-41ee-8195-d6cffc0b7c94",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "69c19509-b7ea-40b9-af5b-745929f01ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454bf233-4194-4429-b2c4-9fe83afe88eb",
        "cursor": {
          "ref": "673cf5e9-d521-4956-ae71-0f2ec915e7f4",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "31954e0d-0c4c-4c17-a2aa-b1d1d769f9cf"
        },
        "item": {
          "id": "454bf233-4194-4429-b2c4-9fe83afe88eb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "defb073e-4daf-4f11-bb51-0136c43040f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9ad350-b7b1-4c43-9c26-cb8f98bc840d",
        "cursor": {
          "ref": "70108e61-af8f-48cf-9d8e-be39801c8b44",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "520f6a7d-35d4-4038-b999-6aead256437e"
        },
        "item": {
          "id": "da9ad350-b7b1-4c43-9c26-cb8f98bc840d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7086bc3e-3f64-4a6b-bb4c-05c510aa8b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1f2bf1-0e4c-4b96-8d2b-f8c0bd73a64a",
        "cursor": {
          "ref": "fe00df28-6f51-4573-9ff9-bca18625ac0a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "28e68ad8-b9a2-4155-8094-5256572d8ec9"
        },
        "item": {
          "id": "bc1f2bf1-0e4c-4b96-8d2b-f8c0bd73a64a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2cedf0c5-23e8-48e9-bbe0-81804a1c205b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c52d50b-81a3-48c0-b670-1f6d81b55879",
        "cursor": {
          "ref": "12d75128-c5d5-4f34-a1b9-1295da28403d",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "170a2a80-619a-4651-80c4-803c9eb614ac"
        },
        "item": {
          "id": "6c52d50b-81a3-48c0-b670-1f6d81b55879",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c8ecef75-64df-42b6-9015-b68f70efc9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22049cbb-f86a-4a60-b1f3-766c247f73f6",
        "cursor": {
          "ref": "40796970-c5c1-47a8-8796-3dce60388a29",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9304bed9-a9c0-4ecf-97d3-c03b6e0a7aed"
        },
        "item": {
          "id": "22049cbb-f86a-4a60-b1f3-766c247f73f6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "77f9a308-ba4c-4d9f-a1c7-e489525ccf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc2b7b7-4467-48a9-8812-cf7f2b91b922",
        "cursor": {
          "ref": "990492f3-a06f-44a2-b2a4-f064f786a1aa",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a021228c-beee-42ed-9782-859dd24cbc4a"
        },
        "item": {
          "id": "bcc2b7b7-4467-48a9-8812-cf7f2b91b922",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "887c22dc-680e-440e-acc1-0e5660b03642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d829b01-7cde-4962-92fd-19648487ebeb",
        "cursor": {
          "ref": "8bf01b3c-4bcb-44b0-9cdc-267d11f20d92",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6afce297-35b5-4f45-b096-cbdb3122a627"
        },
        "item": {
          "id": "4d829b01-7cde-4962-92fd-19648487ebeb",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "154d3bd7-26b0-4cc6-b939-2c0c5dfb16b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9be57f-9d4c-4d83-8832-102f0676e4ad",
        "cursor": {
          "ref": "e256feaa-decb-41bc-a914-6ddd594d6630",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "476ac2a6-78f1-4180-9d4f-d8967016249e"
        },
        "item": {
          "id": "9f9be57f-9d4c-4d83-8832-102f0676e4ad",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3be86ff5-6f75-4654-b0f4-9ff87a298f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb326705-7bee-4529-ae96-48ca0c4593e0",
        "cursor": {
          "ref": "52962e35-7189-4646-8b37-e5277fe70499",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d6e60a26-91f7-4f6e-974c-6b13e16270a6"
        },
        "item": {
          "id": "cb326705-7bee-4529-ae96-48ca0c4593e0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8b03b5a1-9541-4132-b8c0-5ccb521ee34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fed1b1e-dfae-4b40-88df-5daeb9545343",
        "cursor": {
          "ref": "107109f7-6083-4e70-9b70-82848e495066",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "75dcd911-fd3c-421e-9491-a34772c6d4ba"
        },
        "item": {
          "id": "8fed1b1e-dfae-4b40-88df-5daeb9545343",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "48840607-a7aa-495f-b4a6-e22ad8110a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5249c4b-7afe-4928-84dc-46a55fdc9cf4",
        "cursor": {
          "ref": "ad503e37-7ab9-4570-9dea-79afb64effa5",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e4875a3d-a952-4584-9f0f-8467c070fd6d"
        },
        "item": {
          "id": "f5249c4b-7afe-4928-84dc-46a55fdc9cf4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "680126ed-f721-48ed-bdaf-30c48139eea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b551f7-dab4-426c-8cb9-61ae715f1e0e",
        "cursor": {
          "ref": "2fc3a0dc-83c1-4019-a48e-67049cfcea02",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9d97364c-dcdf-4452-87d9-8c3fc72d45e1"
        },
        "item": {
          "id": "c6b551f7-dab4-426c-8cb9-61ae715f1e0e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4f384c2c-79a3-418f-bd2a-f84c2f942922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5762872-1084-41c8-a068-310f2d150b3b",
        "cursor": {
          "ref": "5c9cb31d-205e-413b-bd90-399668d0d691",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "426aac9d-7761-43fe-841c-e599aa15fa53"
        },
        "item": {
          "id": "a5762872-1084-41c8-a068-310f2d150b3b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "693fc098-e229-465e-88ef-1d6023406e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85421275-bae9-488c-9eb3-8d4768b5eec0",
        "cursor": {
          "ref": "ad7f7acf-ca63-42d5-aa41-ace67bc38dc0",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1f8fb6e0-b0db-4ac5-88e3-0af93293274a"
        },
        "item": {
          "id": "85421275-bae9-488c-9eb3-8d4768b5eec0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9441c585-3398-49a8-9e57-f7f5e1b42f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b08559-1fc3-4c6b-ae57-c72c2b218a97",
        "cursor": {
          "ref": "17d7effa-77b7-45c2-b0ee-71c849478f48",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a89827bb-ab96-4ddb-81de-d7c50ea1ecc8"
        },
        "item": {
          "id": "38b08559-1fc3-4c6b-ae57-c72c2b218a97",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7ad2fd88-ee63-4f62-bf58-95c4d7475537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5553bf-cf93-4e6a-894e-de21cf084364",
        "cursor": {
          "ref": "054d1b7b-b6c8-4c85-8163-2a00ac664863",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3f3638b1-a53c-4109-a950-6b6e9b5a5154"
        },
        "item": {
          "id": "5d5553bf-cf93-4e6a-894e-de21cf084364",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5f5f3f0c-facf-44dd-9269-7ce97ed4b779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f259fd68-3350-4d3a-8e6b-90ed18fc4c85",
        "cursor": {
          "ref": "7b556bc5-8913-4ffc-ba22-616c29a0b294",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "92378f1a-a4db-4c4b-9040-a0ea984c30da"
        },
        "item": {
          "id": "f259fd68-3350-4d3a-8e6b-90ed18fc4c85",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "420d7d8c-ceae-4dd2-a915-e13afb0ecb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387ec1ba-83be-4db7-a80f-af8bf0127c40",
        "cursor": {
          "ref": "a04f12db-6805-4d97-8aa9-9ba16729ee92",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fd990de9-723f-499f-a46a-99fd3a1e9e77"
        },
        "item": {
          "id": "387ec1ba-83be-4db7-a80f-af8bf0127c40",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c709a58a-3db6-4ee6-9b4f-3ecee7cb8323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b89e683-835e-4fb9-b985-9336823fcace",
        "cursor": {
          "ref": "a27edc4d-d67a-4b82-a673-d97894539688",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d2992f3d-6524-48c6-8b48-b5ae2a8d3a74"
        },
        "item": {
          "id": "9b89e683-835e-4fb9-b985-9336823fcace",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dacc86cc-e1eb-4682-9b8c-8c08de066804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5640ae-e5e8-4ae9-a349-8df90627ae93",
        "cursor": {
          "ref": "4a3bbb93-cc50-4503-8597-48d7ea9624d7",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6b0dd215-a36b-4b93-8176-1cb0c525fd1c"
        },
        "item": {
          "id": "fe5640ae-e5e8-4ae9-a349-8df90627ae93",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ba912854-5c48-42be-a765-aefb986cf39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c616ec-e0de-447a-837d-d6713922efc5",
        "cursor": {
          "ref": "f76a95cc-d2b9-47d8-9ad5-e2dc18a7a57b",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "16780baa-c3ea-4aa6-b22b-689d9cda2db4"
        },
        "item": {
          "id": "50c616ec-e0de-447a-837d-d6713922efc5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "30b25cbd-cd31-4cdb-a068-f331c31d44fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb35b1f2-0f5d-424a-84b8-ec0224b18353",
        "cursor": {
          "ref": "d0f5c906-e66c-4650-8b9b-7b3adef081ff",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a687a58f-e9ae-4cbc-ac29-a17c300360d3"
        },
        "item": {
          "id": "bb35b1f2-0f5d-424a-84b8-ec0224b18353",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5726fd69-cd50-471a-b61c-52b3d66da3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97085079-b4cd-428a-b88e-d8e6f92808a9",
        "cursor": {
          "ref": "8f2341b2-8447-4e34-a381-b339fd8a1b17",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "63eb7924-805c-41a0-be99-1c3283ba9057"
        },
        "item": {
          "id": "97085079-b4cd-428a-b88e-d8e6f92808a9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b23e7222-f59d-41e9-89e7-b6988653e98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4fe8de-4a25-4612-9fa2-a8ba17b4fd78",
        "cursor": {
          "ref": "caeaf3df-2682-4fbb-8ae6-b1faab5fa4f8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e2af1765-a904-49a1-937b-bdd68ac568d3"
        },
        "item": {
          "id": "9a4fe8de-4a25-4612-9fa2-a8ba17b4fd78",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "34581d4c-29fc-4cc6-9f37-40603de3a212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec09c6f-366c-4876-9e90-fa3dc4da57c6",
        "cursor": {
          "ref": "ff9ed0ac-8519-40d3-84e9-23a83099bd1a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ddb71540-6d84-43f5-b838-0e1fc26c550f"
        },
        "item": {
          "id": "2ec09c6f-366c-4876-9e90-fa3dc4da57c6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "40a5c525-0789-46da-9b24-7d36308f9773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a2a2ab-a76a-4146-84e0-9919138c50bd",
        "cursor": {
          "ref": "990c3a9c-ba2d-4584-aa15-026b139b5ff7",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bde62ee5-d44b-4fb7-a11c-74bb5cdd6d07"
        },
        "item": {
          "id": "21a2a2ab-a76a-4146-84e0-9919138c50bd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a03686cc-ce95-4f1d-9b7c-d24e802cd701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe5909f-b3f3-470a-a562-3d09907d0e25",
        "cursor": {
          "ref": "ab416287-edcb-4a78-b70e-e2cbd776c36e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "835cfc78-c855-4268-b5d8-7a71d47dd9ba"
        },
        "item": {
          "id": "cfe5909f-b3f3-470a-a562-3d09907d0e25",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "281b8978-dfbd-43ed-af3c-c9e15d776e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46080686-36f4-40c5-a7fe-b7c7e4d58c32",
        "cursor": {
          "ref": "cb38c95f-a07e-4699-8822-2ef02bcbe0ba",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "caf30e76-7701-419a-81a8-0b6561200ed7"
        },
        "item": {
          "id": "46080686-36f4-40c5-a7fe-b7c7e4d58c32",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "15a6d168-95ce-400f-b86f-f7d1b40b6a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2944b346-6249-4e18-9681-0149a76d2af9",
        "cursor": {
          "ref": "affec750-9a6b-49f5-9c40-b3c6ccb8fe4b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "022e4acf-909e-43f0-b39d-0652da0b5ccf"
        },
        "item": {
          "id": "2944b346-6249-4e18-9681-0149a76d2af9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "79100cdf-5a89-4e5b-aa80-f67e43f5077d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db525940-f70a-4b85-adb8-786fccae70b8",
        "cursor": {
          "ref": "fde5a43c-24dd-4f51-9c2b-977b7d690451",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0edbe7e4-2712-4c3f-9418-1accac315813"
        },
        "item": {
          "id": "db525940-f70a-4b85-adb8-786fccae70b8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b27a0014-845d-4860-8bf9-19b11358b6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c74524-4d2b-4d47-a31b-02a8a96d7e52",
        "cursor": {
          "ref": "0b2bb902-5948-400e-9733-07ece543d499",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "46181531-d6c6-463d-aead-b09ca343915e"
        },
        "item": {
          "id": "12c74524-4d2b-4d47-a31b-02a8a96d7e52",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "00b64dce-8b76-4d28-add0-b324d97936bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dde8811-cacb-47e7-9f51-90944e570b26",
        "cursor": {
          "ref": "641f09af-c550-40be-abf1-db7020191a54",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6fef77fb-b3ea-40d7-8fde-2bde0f1bf23a"
        },
        "item": {
          "id": "2dde8811-cacb-47e7-9f51-90944e570b26",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d0c06f47-7104-4649-ab64-5ab8f74609fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a557e08e-991d-4003-ae97-c6c902075634",
        "cursor": {
          "ref": "a1c56488-8c11-4c41-ab44-7063027c9c86",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bb4e12bc-d6cf-4d89-b3fd-7152a835de5f"
        },
        "item": {
          "id": "a557e08e-991d-4003-ae97-c6c902075634",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1f383121-f6d9-4674-99cc-00e09e9a11dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358c3d53-a809-451a-89e0-29acbebdf960",
        "cursor": {
          "ref": "89ce42be-e5cc-4dff-9f97-48d06ca5500f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e57fb424-06e5-462c-bcc5-d34c4a99a488"
        },
        "item": {
          "id": "358c3d53-a809-451a-89e0-29acbebdf960",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "137eadbd-43d8-410d-a3f4-b279b501b692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591e8d01-8c86-4471-b23f-27d6d9709cb3",
        "cursor": {
          "ref": "a6508c59-339c-444f-987b-7bb0aa2d6684",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "837143ad-4960-407b-a600-6b50cae55975"
        },
        "item": {
          "id": "591e8d01-8c86-4471-b23f-27d6d9709cb3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7ca43cf7-3a70-4eb0-91fb-66e3189f1d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8297975b-a34c-43f8-bf8b-24562f288042",
        "cursor": {
          "ref": "fc876e0c-f4a7-4de0-bce6-a557154172a9",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0ac09cb4-05d0-458f-9cf8-74d02ab540c8"
        },
        "item": {
          "id": "8297975b-a34c-43f8-bf8b-24562f288042",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ebf06f21-0574-4275-a74a-78df0839e71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d6f3c9-0259-4b5b-b696-2eae8da84a85",
        "cursor": {
          "ref": "1e7d9d46-17db-481f-b772-6f1cadb61252",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a9e92800-08d4-4bbb-a04d-0e61d5eb7dab"
        },
        "item": {
          "id": "82d6f3c9-0259-4b5b-b696-2eae8da84a85",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5b9c07af-d5ec-4e17-ab55-bea8c68f3858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8614df7-386e-4299-afdf-38d4b70a32e0",
        "cursor": {
          "ref": "48f9088b-47d2-4ee2-bbe8-c15612e1d704",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f59d5d4b-33ac-4c43-ab63-cf475cf55292"
        },
        "item": {
          "id": "c8614df7-386e-4299-afdf-38d4b70a32e0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "59759305-baf5-4ecc-aa31-f25d58d413a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c71842-382d-4529-a0be-88bfd43581c3",
        "cursor": {
          "ref": "5897512a-d6d3-4bd5-bcf8-528ff5a60294",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "32a73283-1fe9-4632-93f0-1139d67c853c"
        },
        "item": {
          "id": "30c71842-382d-4529-a0be-88bfd43581c3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1e176e73-8590-44aa-a42f-80e0d128b9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b1dc1a-6683-4786-aad7-63caf37d96e7",
        "cursor": {
          "ref": "e6898da1-3b54-470c-8c33-f699216caf75",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f30a5fab-336b-4fc5-aac7-3aeac83e91f6"
        },
        "item": {
          "id": "26b1dc1a-6683-4786-aad7-63caf37d96e7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "810b89e2-25ca-4908-86c7-85162bb2b5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b060b5-6caf-4661-8970-34c3515cc21c",
        "cursor": {
          "ref": "21b4ec6c-eeb2-48d3-ad6e-f384b7ed474c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c08edf60-4c42-4b48-a9e6-8752cee0f7b8"
        },
        "item": {
          "id": "51b060b5-6caf-4661-8970-34c3515cc21c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9dd8a46a-ae28-4a9f-9b7d-875bb88a9a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cd1fc5-34c5-4b71-ac7c-ab2ea697d4be",
        "cursor": {
          "ref": "d667596b-fe48-4b6e-966d-c8a673ee781c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "56b711be-1755-493f-afb4-01b7bf0cc605"
        },
        "item": {
          "id": "26cd1fc5-34c5-4b71-ac7c-ab2ea697d4be",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1146a96a-f827-43e0-958e-b7407af05691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58157f8e-11dd-4437-aeda-8ba70c3f389c",
        "cursor": {
          "ref": "ce446c78-a892-4229-9e9b-f08a967e1ced",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f868e668-3dc2-4cb8-8f7b-30b1f08e8cd8"
        },
        "item": {
          "id": "58157f8e-11dd-4437-aeda-8ba70c3f389c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a1e2cd4a-78e5-49b8-a24b-d57a3b2f433b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fbf944-2edd-4a7d-a8d0-dbd00f5026a4",
        "cursor": {
          "ref": "a1943fea-5c4b-46d1-85ec-cd462e63e311",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b841bfe9-8c60-4294-bb48-737a80ad91f2"
        },
        "item": {
          "id": "e5fbf944-2edd-4a7d-a8d0-dbd00f5026a4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ce5a1dc0-5078-487a-94b4-59071df6794a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4c16d7-fe1c-4228-b41e-30e8fba09561",
        "cursor": {
          "ref": "0909336a-23c5-4b25-bf50-936875f1c71c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4d302386-ed8d-4f80-8a47-5ede7346dd90"
        },
        "item": {
          "id": "ec4c16d7-fe1c-4228-b41e-30e8fba09561",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "35f864a7-a5ab-449b-b64e-29aaec89e75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f58680-c57b-4987-b23f-65210dc2481b",
        "cursor": {
          "ref": "6ab85568-5d8e-4bf5-98a3-bff01858698a",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fd09c1ca-1562-4282-96e3-8d3fe630bbf1"
        },
        "item": {
          "id": "b4f58680-c57b-4987-b23f-65210dc2481b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b8a5f3e2-9289-4ac6-a9fb-9acba23bdf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df5fd02-f4e9-43ed-93f2-71b0d9090523",
        "cursor": {
          "ref": "c2539229-ceb6-48cc-8366-1a429474155c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6708ec23-f32a-42da-9181-0c8170783dfc"
        },
        "item": {
          "id": "3df5fd02-f4e9-43ed-93f2-71b0d9090523",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "512c32a0-7fcb-41ac-b0ce-1ec86fdd3c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71d482d-944f-4e0d-b269-660d0aed9f3c",
        "cursor": {
          "ref": "33f82b14-26b0-4bd3-80fc-a22c57803fab",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b0ae48e4-61ed-4b40-87b4-3db6ea91fa54"
        },
        "item": {
          "id": "a71d482d-944f-4e0d-b269-660d0aed9f3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c5662ac4-ea27-4ff6-afe9-7fc3413bd2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66a20a2-33d1-4242-a443-367e3f83f495",
        "cursor": {
          "ref": "d552b09a-0efb-4707-a790-51f3baf71a3a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5645e515-4b4e-4acc-89cc-74b207ce2e54"
        },
        "item": {
          "id": "e66a20a2-33d1-4242-a443-367e3f83f495",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0174490b-40d7-46e0-8b59-f9d2c8e43f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4997f56e-4a7c-4206-a727-a61f277254b2",
        "cursor": {
          "ref": "d772b167-875e-46bf-8eac-aea70be415fc",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b7e98848-d943-4965-9e67-99ee0694a66f"
        },
        "item": {
          "id": "4997f56e-4a7c-4206-a727-a61f277254b2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9923495f-f975-455f-8ca3-7f660df93875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e433ad-b0ad-4c68-aadd-9d9a85139af8",
        "cursor": {
          "ref": "a73f79ad-8469-43eb-9446-a0bbff7ff55d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f58ce9d2-ee5e-4c36-a61e-55af3699c55b"
        },
        "item": {
          "id": "94e433ad-b0ad-4c68-aadd-9d9a85139af8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "87ac68d1-2881-467b-ac1a-ba8444d6853f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfcf9fc-b6af-4d48-8ff1-add2a510d191",
        "cursor": {
          "ref": "ebb4b474-6aed-44b7-a5fe-6bc3271c45a9",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a2e9f2e7-f141-497a-b761-c43a68404912"
        },
        "item": {
          "id": "bbfcf9fc-b6af-4d48-8ff1-add2a510d191",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "285d8cd4-1939-4093-a425-ae53f95afdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e216cf76-41f1-41c3-bac7-9ce89ccea583",
        "cursor": {
          "ref": "449c7b48-a8a2-4d8c-b4f4-8a74269bed4c",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1b2cd984-b0f1-45c7-bf98-54fa2e682405"
        },
        "item": {
          "id": "e216cf76-41f1-41c3-bac7-9ce89ccea583",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ead4af20-3c06-413e-a8bb-f4ff0909d16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80eed6d3-1300-412c-8e9b-38d2b9b1214d",
        "cursor": {
          "ref": "b92ece7c-44a3-4b1d-9a4d-a8e712a7117f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9bc69b3c-6700-4544-bc0d-f0cb445df5b3"
        },
        "item": {
          "id": "80eed6d3-1300-412c-8e9b-38d2b9b1214d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6c8fa48c-fae8-4bf7-bcaf-7408533bc74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0ea4a9-d061-4a4e-beac-bcf57dd47877",
        "cursor": {
          "ref": "af3a0b25-f30a-442d-bd37-08baee1f8038",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5feb0b8a-5a68-475f-a789-3dd0cebc0b3a"
        },
        "item": {
          "id": "ee0ea4a9-d061-4a4e-beac-bcf57dd47877",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6d1223e7-843a-4432-b908-21b9f94bc0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763ccb59-748c-4ab2-ac0f-51fa7ecea1a7",
        "cursor": {
          "ref": "1d62ec41-8178-492d-b02c-08ff2a21ab03",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e969693d-9434-4e31-8ae0-54f07a1d2d2d"
        },
        "item": {
          "id": "763ccb59-748c-4ab2-ac0f-51fa7ecea1a7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7e4101e3-0390-4ca3-9572-bf14b82cf251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba75552c-0d5f-438d-aca3-f2d0b3cc28a7",
        "cursor": {
          "ref": "1df93f8b-d31b-44bb-9a90-85fb51bdf759",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "84f0ac6c-8e2b-4e45-a11e-f400acbd3be6"
        },
        "item": {
          "id": "ba75552c-0d5f-438d-aca3-f2d0b3cc28a7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "42a810a7-182f-4da8-9173-273600295132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b0b45e-a1de-40e5-83c9-4a7c924793de",
        "cursor": {
          "ref": "fa0f29ee-ccb9-49e7-9f0a-8a0de0ca0fa4",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6f52b267-eeea-4da6-87ca-7dc0ba735d6d"
        },
        "item": {
          "id": "c6b0b45e-a1de-40e5-83c9-4a7c924793de",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "48553349-d7a2-4cbd-9f9c-b152b30c1a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5b52dd-40b2-466a-b05f-691354e25a15",
        "cursor": {
          "ref": "62630287-8f97-4b68-b456-7e675bef070e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "20c4ee95-8ecc-4279-aeaf-26cc5a37a8e1"
        },
        "item": {
          "id": "cb5b52dd-40b2-466a-b05f-691354e25a15",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1ba25488-c95a-4a00-8593-4b7a69689f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697a08d1-e22d-4d6d-baaf-18f050a5dc67",
        "cursor": {
          "ref": "c0ab3eaf-3fba-4bd8-bc79-7e84230ddd48",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "016cfbd7-8a63-4113-bf7c-a3cad4bf5b88"
        },
        "item": {
          "id": "697a08d1-e22d-4d6d-baaf-18f050a5dc67",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "889e31d6-16bd-48d3-b05e-817f157e2de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5857f6-ac1f-40bc-999f-551fd3a36388",
        "cursor": {
          "ref": "2942e29d-d211-4e3f-98b5-c6bf419c7f86",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "492182f2-00e2-4a5c-98a3-ce56756d3877"
        },
        "item": {
          "id": "6c5857f6-ac1f-40bc-999f-551fd3a36388",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "89612599-689e-4899-ad43-408bceabcd2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e238c752-2628-43a2-bd46-a38143bd3eae",
        "cursor": {
          "ref": "0b09fc9a-210a-4da2-9a77-a7fa61306017",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c76c8337-a031-4146-84b6-d797fb92ab67"
        },
        "item": {
          "id": "e238c752-2628-43a2-bd46-a38143bd3eae",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "20bf1ce3-df07-4ec9-94fc-1272c5786b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fdf059-dfd8-4871-ae74-28bb436b6da9",
        "cursor": {
          "ref": "6e6e7616-5f60-4a68-a10b-e89dfe94c197",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "add45b2d-c93f-4a37-9726-e7c59d418427"
        },
        "item": {
          "id": "10fdf059-dfd8-4871-ae74-28bb436b6da9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c786c996-1dbb-48bb-8e05-30db87a83974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6731c4-e4d7-42ad-8928-b5e12950ceed",
        "cursor": {
          "ref": "4a1d0f44-4d0d-4200-948e-c07f7d5568ad",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "862123b1-ee35-4201-98f7-201dcb848877"
        },
        "item": {
          "id": "9c6731c4-e4d7-42ad-8928-b5e12950ceed",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f81b02ab-1b4f-449c-afa7-00fdbff27fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac61f1d-8c02-4ad1-b22f-93496e17ac69",
        "cursor": {
          "ref": "1a729542-ff84-4ea6-b0ca-a1dcc3c9c4c1",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b4eb6932-60b1-4e5a-b45f-6034eea2f8a1"
        },
        "item": {
          "id": "4ac61f1d-8c02-4ad1-b22f-93496e17ac69",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dcb9c1d1-0484-4657-baba-c10c5bb2acc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad2eb6e-e832-49a2-ac17-015bf521a11b",
        "cursor": {
          "ref": "e3c49ed1-6be0-4088-a092-b610215f4d27",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8a99e32f-cf91-4875-9a25-e3c66680373c"
        },
        "item": {
          "id": "9ad2eb6e-e832-49a2-ac17-015bf521a11b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8606dced-8859-4f4d-8996-73aa58460fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498645cc-5268-4c93-9fc5-31f309ad51ba",
        "cursor": {
          "ref": "a09f95f7-0777-40bc-ae49-e4af42dd7d0e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c84a4593-0efb-467e-949c-10a78956fcca"
        },
        "item": {
          "id": "498645cc-5268-4c93-9fc5-31f309ad51ba",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b7ea61dd-8200-4fa0-977a-16f21286db31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d99ade0b-fbbf-432a-beca-5276f77d7bd6",
        "cursor": {
          "ref": "9fe09eb9-b675-4a7f-999d-d794b7781e20",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "99f6254f-e879-476b-8e08-805a9cd06160"
        },
        "item": {
          "id": "d99ade0b-fbbf-432a-beca-5276f77d7bd6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "87144659-44f4-4651-bf6c-23f4291dd498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc8a35b-f638-470d-8452-1bff5e64d419",
        "cursor": {
          "ref": "2baab303-0605-4a52-bb4e-c9ddacca125e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7c988318-a731-40a2-a77d-f7549055c9b5"
        },
        "item": {
          "id": "fbc8a35b-f638-470d-8452-1bff5e64d419",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "db02ec16-94f5-44b9-b63e-4c7809b6cc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afca3df-b4d4-4442-b9e2-8e04829046f6",
        "cursor": {
          "ref": "eab053e5-a4e8-4098-a872-7b3f859ed7f2",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5a6e6800-6b62-4842-8d28-7431159fc6b6"
        },
        "item": {
          "id": "4afca3df-b4d4-4442-b9e2-8e04829046f6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "477789a3-47fe-41ec-9bb7-1f5054afb0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41b5d00-b3c8-4e72-b1f9-e1b859288020",
        "cursor": {
          "ref": "ef918338-390b-43ca-bb10-240258bafe3d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "62477631-8521-41f4-bd3e-d8e9b3043e2f"
        },
        "item": {
          "id": "f41b5d00-b3c8-4e72-b1f9-e1b859288020",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "73a265c8-e96a-4db0-9c8d-ce693aa44cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc179e5-f0d5-49d2-9680-97214f878a0c",
        "cursor": {
          "ref": "30b59cdc-b30c-424a-8579-fba485164207",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "35eb4076-2c8e-4ebf-85c5-f8b3957b63fe"
        },
        "item": {
          "id": "bcc179e5-f0d5-49d2-9680-97214f878a0c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "403371b9-0b21-437a-9d72-a91f0bc2b0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a916d33-5a5f-410d-9381-4ce73847f233",
        "cursor": {
          "ref": "1aa64466-0d42-4f85-8766-c7cea7f41940",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3056c259-58ca-4ce7-8669-a4f8652b8069"
        },
        "item": {
          "id": "6a916d33-5a5f-410d-9381-4ce73847f233",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1af6dc5a-8144-449c-80c0-1ace49dc0717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf97a02-b284-444b-a8ab-62f79c687605",
        "cursor": {
          "ref": "1d15f8d3-ebac-4d4c-8c21-dab59bce9d0f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2dd318df-759e-4e6b-af03-130c47ec5344"
        },
        "item": {
          "id": "0bf97a02-b284-444b-a8ab-62f79c687605",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e0ff2d45-ea16-4431-9eae-317c19f0e2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d90371-9416-4562-89f3-5bf70e4a4255",
        "cursor": {
          "ref": "e61f4d7a-e086-4d19-a034-6e1c0883302c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a2e98691-5c37-4cff-aabf-7535bb00ac47"
        },
        "item": {
          "id": "e1d90371-9416-4562-89f3-5bf70e4a4255",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c2acbfb2-274e-4147-a327-c774c3efe232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a0c7a7-6c5d-4a9d-828d-4ffc6c70993e",
        "cursor": {
          "ref": "de69515d-f4fd-4d26-8522-3362e00f1b5e",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d9c1fb44-132f-4626-9420-dbbfe2e8a6df"
        },
        "item": {
          "id": "73a0c7a7-6c5d-4a9d-828d-4ffc6c70993e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2ac14000-fbb8-4e7d-a288-8cf06119e708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1677914a-b4d3-4beb-931d-a904dddca19e",
        "cursor": {
          "ref": "ad6fbfe0-2106-4a0a-a129-f0547aa1709c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f0e4fae1-71cd-44e1-b7ee-d28e7b4bac84"
        },
        "item": {
          "id": "1677914a-b4d3-4beb-931d-a904dddca19e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ba5bbfb1-2fb5-4a1e-b307-3b734c1c7ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdeb3e1-b973-4556-927f-12f791dad697",
        "cursor": {
          "ref": "395abbda-15d1-427c-b6e2-bb9c60f85d4b",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fd49410b-09ec-48a6-98e2-1d6c2557cf25"
        },
        "item": {
          "id": "3fdeb3e1-b973-4556-927f-12f791dad697",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "afcd825b-3017-4c43-9710-9275e720fa22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd223780-501d-4c93-922a-db64b7a0458f",
        "cursor": {
          "ref": "5b62ab8f-0feb-44bc-a8db-e538c95bac24",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d197e68f-3c51-41f4-b27d-c2268c703a51"
        },
        "item": {
          "id": "dd223780-501d-4c93-922a-db64b7a0458f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "47eeb1bb-a691-496b-b26c-c2abc89b7bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc3f385-62f6-4bdc-9316-e78625fb08e8",
        "cursor": {
          "ref": "9931790e-fb65-476a-a57c-ca61e25f76ac",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5d6c570f-894d-4926-88cd-f2b2800c39a4"
        },
        "item": {
          "id": "0fc3f385-62f6-4bdc-9316-e78625fb08e8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3dbfeba5-80c5-45a5-a75b-bb76a6525599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a869e73-7ff0-4bb1-a939-fcf9e2dcdd7f",
        "cursor": {
          "ref": "a52b3a76-7a00-4733-8c4c-dec6b6031d07",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "386dfc55-a619-4bf4-9415-ffd6f60d8b7b"
        },
        "item": {
          "id": "7a869e73-7ff0-4bb1-a939-fcf9e2dcdd7f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dc7c0b70-036c-46c6-9788-e8041be822b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59544c6-0d4e-488e-9977-bb2fa93b0e81",
        "cursor": {
          "ref": "d729de2c-05d0-4be7-8fd4-a56f2f7fad30",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "74503257-14de-49fb-9346-287629c5eb17"
        },
        "item": {
          "id": "e59544c6-0d4e-488e-9977-bb2fa93b0e81",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e98b4326-383b-4ac0-94f0-34250eada168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5d4e66d0-b754-4128-b26d-8ceeb78acaea",
        "cursor": {
          "ref": "2c826400-e439-475a-b088-bbde68a30857",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "196fb9d3-416d-4c24-89c9-f6579189c9c5"
        },
        "item": {
          "id": "5d4e66d0-b754-4128-b26d-8ceeb78acaea",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8226c351-5638-4f69-8155-4ff8c504503c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e59d5688-290a-4778-90f1-6a2083b56dba",
        "cursor": {
          "ref": "7fe1078a-6e29-4ebf-ae6e-6950265755e8",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "88ab5a8e-3e2f-4fad-9a64-99d9f195258a"
        },
        "item": {
          "id": "e59d5688-290a-4778-90f1-6a2083b56dba",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fee7e06a-d162-417f-8f6b-0c8bf2eb42d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "03b07ec8-d2ba-4732-ac3e-514fff273089",
        "cursor": {
          "ref": "87f1b8b9-aa68-4041-843f-43bcba5294f2",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ca76efb7-7f6f-4e7f-a12f-4d7b3c685869"
        },
        "item": {
          "id": "03b07ec8-d2ba-4732-ac3e-514fff273089",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "eb02a39f-6038-4191-a8a2-31fcb8f7c94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "212b5da2-a6d7-4a1e-bd70-f78d48d1cf57",
        "cursor": {
          "ref": "29399aa7-d8ad-49d4-8bec-9ca3a1d36bb2",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3d63d314-0be2-45cb-a03b-03a481e86138"
        },
        "item": {
          "id": "212b5da2-a6d7-4a1e-bd70-f78d48d1cf57",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ba7ab500-48a4-4cc2-a3df-1458b0c90499",
          "status": "Created",
          "code": 201,
          "responseTime": 4672,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e4ca39-11a2-482a-b985-2af70c389dee",
        "cursor": {
          "ref": "baab415e-7be5-4106-a692-3d55b3cda025",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6bcd1805-0831-4807-b5dc-0d1c66161d4c"
        },
        "item": {
          "id": "d0e4ca39-11a2-482a-b985-2af70c389dee",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "eab2e92e-726c-4d8d-9de8-a2cee58498ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "041bfca2-784e-45d3-bf06-203d4e48b79e",
        "cursor": {
          "ref": "5e88943d-2db4-4889-b22f-a347158cf041",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "732f043d-e99f-41f4-a035-6a84e4842814"
        },
        "item": {
          "id": "041bfca2-784e-45d3-bf06-203d4e48b79e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "20cc6588-cfd5-44df-b289-f4282138b05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ab04380b-bb72-4e20-a083-8ba6a9dbd126",
        "cursor": {
          "ref": "dbd142f6-3565-4c6f-9ab9-7c1e861b6ccf",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c23d593b-1d6e-4fea-b7ce-37a6f755e72d"
        },
        "item": {
          "id": "ab04380b-bb72-4e20-a083-8ba6a9dbd126",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1f4eefa7-6278-4204-9583-e62a494b2002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8624df1-7ac5-4709-bd08-8466b5e8e4f1",
        "cursor": {
          "ref": "b4ae8168-df0e-423f-b154-6f812e7d1ff2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "80b883ef-8ec3-4c1c-bb9a-575fbc5def56"
        },
        "item": {
          "id": "f8624df1-7ac5-4709-bd08-8466b5e8e4f1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2506495f-465c-43a8-95c1-1709d9d4eaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b015f9e-233f-4f83-84bb-647efa56033a",
        "cursor": {
          "ref": "40f95c46-b290-4f3f-b919-d2a9ce2a0836",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6f0952c8-682c-48cf-a49a-09c60b166268"
        },
        "item": {
          "id": "6b015f9e-233f-4f83-84bb-647efa56033a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "27240e75-2bbf-497e-ba93-e3b584259cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67931e02-cc0f-4740-a3d7-d6c75b984db2",
        "cursor": {
          "ref": "685f97cc-c1d4-4434-844a-183df36ab98b",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "74dc5199-417d-48eb-8d50-62c5554f4173"
        },
        "item": {
          "id": "67931e02-cc0f-4740-a3d7-d6c75b984db2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "97ba7f07-07ac-45fd-8a89-2071b9384608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556cc3c0-227d-47c3-b865-ae2fac552b1e",
        "cursor": {
          "ref": "ede3c173-e195-4723-8ed2-446db290c0ba",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0cc54a4b-2090-4d58-9519-453dc41986d9"
        },
        "item": {
          "id": "556cc3c0-227d-47c3-b865-ae2fac552b1e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d6a524cb-d01b-43c0-89f5-342e12ccb8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1552260-6ebe-4b6a-9f2d-3f496f532842",
        "cursor": {
          "ref": "c9a90a68-9905-41f5-a565-e33b27525085",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "82540fda-827e-4f72-a53a-c4e2107da885"
        },
        "item": {
          "id": "a1552260-6ebe-4b6a-9f2d-3f496f532842",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a6971de6-1389-4630-bf47-371b4e25f5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb9efc7-df49-4220-983f-e8ef2d555631",
        "cursor": {
          "ref": "cd364252-8a5c-43cb-a3de-b77e5829d15c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f1559a3a-c000-437c-bd0a-25e44d048429"
        },
        "item": {
          "id": "abb9efc7-df49-4220-983f-e8ef2d555631",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bd8b245d-b1f9-4c44-a348-7d585cbe0b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bfe64e-5dae-4ad6-8f80-c0da10b92b0e",
        "cursor": {
          "ref": "16fc804e-6f7b-4544-bc5b-e9fa2d18c4d4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fbab4281-d340-4113-8d4b-d2cc6d24908b"
        },
        "item": {
          "id": "04bfe64e-5dae-4ad6-8f80-c0da10b92b0e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "68d23b23-0168-4123-a8a7-471aaaa97ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3309e2a-abc0-423c-933d-943e1b6b6c51",
        "cursor": {
          "ref": "7f76e95a-562b-4d28-a654-0e5c8130ce70",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "39c21f84-ff33-4bc4-b63e-ef417c6a49d2"
        },
        "item": {
          "id": "f3309e2a-abc0-423c-933d-943e1b6b6c51",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d289441f-b735-44f8-839b-afbd61db4e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160b5f41-b5ea-4e67-a9f7-c8561d4fa4b6",
        "cursor": {
          "ref": "a4af45f9-085a-43d0-b269-28cad22ab2bf",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fb4d7e9a-f0b3-4170-9496-e58f1610899b"
        },
        "item": {
          "id": "160b5f41-b5ea-4e67-a9f7-c8561d4fa4b6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6064a53d-9ca4-40f5-8721-586701184e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd90c0b1-75a8-4c58-881f-e5a94a6b28e3",
        "cursor": {
          "ref": "3d6a6956-544b-465b-ae3c-a9e3fc7ff730",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fdf7b0c0-ca11-46f9-a235-eb1208d42a6e"
        },
        "item": {
          "id": "cd90c0b1-75a8-4c58-881f-e5a94a6b28e3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "44c950d2-9062-440b-8d8e-be6a6f7b5694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fecf04-e902-4908-98df-50efd6e2000d",
        "cursor": {
          "ref": "d20dda42-83bd-4d52-8aeb-0b471ab69cd5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6eb3dcd7-8365-45be-8267-031e511f408e"
        },
        "item": {
          "id": "79fecf04-e902-4908-98df-50efd6e2000d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "148987aa-7cd3-4535-a8d8-8752e3d33dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f0030d-7b65-4a8a-9acf-27250e856d8b",
        "cursor": {
          "ref": "06c7f2d3-8632-4914-a5e5-bf284a0045d9",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bc732496-43ad-4198-ab83-a4ab61cacb99"
        },
        "item": {
          "id": "b7f0030d-7b65-4a8a-9acf-27250e856d8b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c446cff8-89bb-466d-b441-02083b6be485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528c5736-3b03-4a0c-b41d-eb411de149ea",
        "cursor": {
          "ref": "13e6044a-78a8-42ae-ab3d-4d6a55e4a840",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "041c4191-e035-4862-9814-ca088c0334e9"
        },
        "item": {
          "id": "528c5736-3b03-4a0c-b41d-eb411de149ea",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6ab82c04-0230-4daf-a803-f9abcad704e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c8ce94-e6ea-4a8d-8534-287589768c8a",
        "cursor": {
          "ref": "865a86fc-ec6e-4a3c-823d-01f818e29ebb",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c7ff7eaf-3b08-4953-bb31-20e220aa948c"
        },
        "item": {
          "id": "79c8ce94-e6ea-4a8d-8534-287589768c8a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "719a5f2b-db00-4ca2-adc6-0a589897bfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5054d827-46b6-4334-ac57-3bb58b5ba650",
        "cursor": {
          "ref": "eecba631-fd5b-4be1-8e2a-203eb90454fc",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d66b0930-8632-4b16-a6c2-67a1d3751fa6"
        },
        "item": {
          "id": "5054d827-46b6-4334-ac57-3bb58b5ba650",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "76a2378d-6e45-43f8-b835-bec1e8fa1a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82eba52-7dae-4b76-9279-94ec0121799e",
        "cursor": {
          "ref": "de54f7d6-6993-4c6f-9066-ace0a7b0ae83",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "31fd1acf-a050-484c-8ed3-9d258cdbe0a5"
        },
        "item": {
          "id": "b82eba52-7dae-4b76-9279-94ec0121799e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "00782862-30c1-4f1f-820c-1863e19a155d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "6c491894-5314-4485-8d76-9a13d732be5d",
        "cursor": {
          "ref": "2aa02c63-627a-4489-824b-fc71413848c2",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4cef6ee4-89ad-41c2-9322-b35b626676f0"
        },
        "item": {
          "id": "6c491894-5314-4485-8d76-9a13d732be5d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5ff9f15d-51b3-4a7f-88c1-d23867e48a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd145e72-ec7e-431f-bff1-842f45b146b0",
        "cursor": {
          "ref": "4a5d8618-05b3-4576-bc56-687b7a89ac0c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2c903fd8-83fe-4176-8e06-df3541271a14"
        },
        "item": {
          "id": "fd145e72-ec7e-431f-bff1-842f45b146b0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "11543686-5d85-4eff-a3a0-758507920d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a11368-9ebf-4e5a-a194-9cf060907e93",
        "cursor": {
          "ref": "04a6fff0-b4b1-4e0b-9310-b09f99f09eb6",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1a2030d7-2c19-4699-997f-3b3fd5f822d5"
        },
        "item": {
          "id": "07a11368-9ebf-4e5a-a194-9cf060907e93",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d911937d-d35c-4a71-82a2-5b3831f6746b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317c986e-785a-4fb1-8079-d5a14fc2fe52",
        "cursor": {
          "ref": "15b1c2d1-a888-4771-a15d-1a6a59a77864",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ea239a7f-4e42-4c0a-9d4a-3818d6da550e"
        },
        "item": {
          "id": "317c986e-785a-4fb1-8079-d5a14fc2fe52",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "515f7a85-cb19-426c-9868-6f855cb10ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f72a73b-6595-4d5c-85f5-895c4a5e12ad",
        "cursor": {
          "ref": "58519897-e795-4d2c-8c1b-4836319e02e7",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0bb1b425-39dd-4824-918b-fc2600efd398"
        },
        "item": {
          "id": "8f72a73b-6595-4d5c-85f5-895c4a5e12ad",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fb95ba34-5272-42a4-81c5-b80126a89ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f607e9a6-734b-41ac-aca8-29ad3aa4a299",
        "cursor": {
          "ref": "2c7ed39c-5521-41ca-ba1e-74c481015c84",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "22a8353d-d5c2-4a1f-8991-6e521cd4821b"
        },
        "item": {
          "id": "f607e9a6-734b-41ac-aca8-29ad3aa4a299",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "089f527d-9826-43ba-982b-e4e460b38514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfe0464-e32d-4a20-b734-255eb8aceb7e",
        "cursor": {
          "ref": "7407fc85-b883-49df-b0d7-2204d7a69b94",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ce1f1f00-0871-4219-be0e-7a85a1dd9571"
        },
        "item": {
          "id": "ccfe0464-e32d-4a20-b734-255eb8aceb7e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0ea01dc0-2bbc-46e0-802b-b33651149cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bf4b49-da43-4b28-94c7-123a6175148a",
        "cursor": {
          "ref": "415bd5f2-7fbe-413a-914f-81fc7288c01d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0503f9c2-6a6f-4d24-b9dc-0da17e817b19"
        },
        "item": {
          "id": "65bf4b49-da43-4b28-94c7-123a6175148a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "35cc2cc3-a800-44e9-b079-75d932b5ad12",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "753defb7-1c52-400f-bd90-66559474e86d",
        "cursor": {
          "ref": "dcf219f6-333a-4f8a-97a4-de8d204768ab",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "27ec6265-0486-400c-a562-6b98b3f44209"
        },
        "item": {
          "id": "753defb7-1c52-400f-bd90-66559474e86d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a24589aa-fc51-46e6-be3c-636896e7cdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e133da38-9335-4d84-9e21-e8779da57308",
        "cursor": {
          "ref": "daf05350-957a-4c4c-983a-c96a4177dcac",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2e0b54b2-6292-4c01-8a69-309f3ec3d092"
        },
        "item": {
          "id": "e133da38-9335-4d84-9e21-e8779da57308",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "542de372-9b06-41b1-910b-f9c044571c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780a3153-9983-4a93-890d-7d14b1ceae9c",
        "cursor": {
          "ref": "72c2d2b0-9af6-45e5-92b6-a774ac177714",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "da7d2c15-379d-487b-b9db-70deebaab04e"
        },
        "item": {
          "id": "780a3153-9983-4a93-890d-7d14b1ceae9c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b63c12c2-3b2f-4469-81ba-402056d11217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf74c01-f584-40f7-9a4e-8d3731e2c68f",
        "cursor": {
          "ref": "1f5b5968-ed76-4b42-9334-407ea256c8fe",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dc338e22-20ec-4e51-868c-34bfa09b7db4"
        },
        "item": {
          "id": "7bf74c01-f584-40f7-9a4e-8d3731e2c68f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e0515c9a-1110-4fc5-be85-385016b478fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bb2c17-06c3-42e5-9650-d96e649d20d6",
        "cursor": {
          "ref": "b7e25211-7826-4fd7-b2ea-3bfa4d99de40",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "57277ce5-49b9-4ee9-835a-4eaaa5b44ee9"
        },
        "item": {
          "id": "50bb2c17-06c3-42e5-9650-d96e649d20d6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7bdae32f-027a-4fad-b364-844a41870d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784276ad-0bc0-4fcd-a1e0-ad5bee1f0b39",
        "cursor": {
          "ref": "575d867e-08b4-4edb-a40b-977f23f6ce6f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "fe77dfd9-7e9f-4ca2-b3e8-fe05cf1d5e2b"
        },
        "item": {
          "id": "784276ad-0bc0-4fcd-a1e0-ad5bee1f0b39",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1f7f94b2-369b-4a2e-92ad-9d790a6e399d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d5fa64-fc6c-4f9c-bc2e-0a20d01e4e62",
        "cursor": {
          "ref": "50f1cad3-4270-4432-bde3-2bccabba0396",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3b9e159e-9070-465e-8bde-a11aecbc5fe7"
        },
        "item": {
          "id": "22d5fa64-fc6c-4f9c-bc2e-0a20d01e4e62",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "86619a88-b56c-4ada-9ad7-91a0e256d9da",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 122,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "6014de8c-0142-4e8b-a00f-7d258e119952",
        "cursor": {
          "ref": "003aa430-6de2-4cc0-923c-8fbe40c343fb",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f9ef90fb-c3c3-423d-ad7d-874388ffe434"
        },
        "item": {
          "id": "6014de8c-0142-4e8b-a00f-7d258e119952",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e6cd5af4-bbee-41f6-8edb-c31a2b8e500f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa98aece-30c1-4536-9023-4c1c70bea8b3",
        "cursor": {
          "ref": "32eca9dd-220b-408d-8671-5ec58438d4c7",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d4047ae9-3b8d-4418-b6c7-257939e0dcc8"
        },
        "item": {
          "id": "fa98aece-30c1-4536-9023-4c1c70bea8b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c307ef7d-67e2-40e2-9864-d8c4a38d9435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6528b823-aea1-48a9-97e2-07e191058e6f",
        "cursor": {
          "ref": "5517e25e-4ec4-4b0a-916f-df5d9d0b2b16",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2c7e9b13-5aab-48f2-bf29-60e9040f44d7"
        },
        "item": {
          "id": "6528b823-aea1-48a9-97e2-07e191058e6f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d340be6b-b1f0-45c5-a20e-856a8658a793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b26b41-ead2-4532-88ea-d70a97213f1e",
        "cursor": {
          "ref": "18249bef-92f3-4680-ba75-ee4279a3e157",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ac02825a-91c1-47d1-910f-2fc3834093ff"
        },
        "item": {
          "id": "d5b26b41-ead2-4532-88ea-d70a97213f1e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "303e48ed-5f1b-4430-bdc4-a32e5358e16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d5f7ea-876c-4309-a67e-22e8d593e1e8",
        "cursor": {
          "ref": "9acce0b2-4208-4d68-b496-6e8f4900cabb",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f0905da8-d17a-4e1b-b0af-428deefb03ad"
        },
        "item": {
          "id": "a9d5f7ea-876c-4309-a67e-22e8d593e1e8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e4a5e965-6ee8-46d6-9a5c-1e9c436569b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b61b68c-e0c5-404c-ae37-28162e3402fc",
        "cursor": {
          "ref": "68e739ad-32e3-4f5c-bfee-01539fc8165c",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "472c8e6f-a3e1-45d0-bb41-5c80d31ea665"
        },
        "item": {
          "id": "2b61b68c-e0c5-404c-ae37-28162e3402fc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "285dd60f-df20-4666-ba8e-f645456eb94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa27eab-ccbe-4664-a91f-656d949b34ec",
        "cursor": {
          "ref": "d17f0551-64ed-45a1-84f6-2e1bb5305d57",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d494a8fd-1c8d-47fd-b0d5-94dae6a73abf"
        },
        "item": {
          "id": "3fa27eab-ccbe-4664-a91f-656d949b34ec",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b076b1bd-dd18-4d3b-9997-7a70d948699b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640b5cd2-3363-4573-b274-1360dad3a440",
        "cursor": {
          "ref": "77aa0620-554c-4fa3-97da-7fd43c76255e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "966bc066-b89a-47e2-8c3a-bfa5907625b7"
        },
        "item": {
          "id": "640b5cd2-3363-4573-b274-1360dad3a440",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a008df52-0ee3-4137-9e6a-6839b82e07f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e25cdb2-9edc-4459-9f6f-95105ef4fb3a",
        "cursor": {
          "ref": "66e4ca53-d424-4a98-824b-07a5904af3e4",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "37985c1a-a8e6-4c70-bd3f-4e1348b5a6ed"
        },
        "item": {
          "id": "1e25cdb2-9edc-4459-9f6f-95105ef4fb3a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "81d4dbbc-5074-40b7-98da-bfa2663e51f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6295a40-891c-4e87-976a-9cf27c60bc9b",
        "cursor": {
          "ref": "0abdfdac-c117-4ad9-9b48-f495a4779747",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f61607a6-6b39-419d-a801-9283a47dd9ab"
        },
        "item": {
          "id": "c6295a40-891c-4e87-976a-9cf27c60bc9b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ec7d63e3-2824-4cd3-91ba-298dc2d64c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1e25e3-8523-4583-a15c-939a6b73f18f",
        "cursor": {
          "ref": "1b59b2a1-8b22-4ab8-bc67-5a74546620d3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ee89de65-127d-4674-8d15-39bd9defb5ac"
        },
        "item": {
          "id": "ad1e25e3-8523-4583-a15c-939a6b73f18f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c77892d1-0264-46ca-9857-2dfcc89f0e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7449b796-3b1f-4218-87dd-a8586adf745d",
        "cursor": {
          "ref": "5bf9ba6f-123a-4e2c-9f51-5c3bde943b9d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2d2f5b4a-6101-4dc9-b549-334cfdff8fc9"
        },
        "item": {
          "id": "7449b796-3b1f-4218-87dd-a8586adf745d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "04df432d-eb7c-415f-a261-651c45a6db33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94259704-7be4-4620-8998-9181fd31826b",
        "cursor": {
          "ref": "d834e51b-b2b3-42ba-92fe-1cb82a3a3177",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b7df3eb2-ad96-49d7-b0a7-d1f5bd577a4a"
        },
        "item": {
          "id": "94259704-7be4-4620-8998-9181fd31826b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "40d32a75-ba22-4c84-8902-b7e88032ae86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06460539-715d-494f-a1e0-83bbbb56be80",
        "cursor": {
          "ref": "c763e987-1418-4f04-b687-26ed97072b08",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e17051df-51e8-4b98-af7d-f31688e9c8f6"
        },
        "item": {
          "id": "06460539-715d-494f-a1e0-83bbbb56be80",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2ba02529-43b7-43f6-91db-61bd2c1aa116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e606d5a8-c085-4b06-abc7-906b0e4b69f1",
        "cursor": {
          "ref": "a31da252-c859-4d40-8191-2fa73422b374",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d6c8cfe1-1193-4716-a863-0b047b8a57ab"
        },
        "item": {
          "id": "e606d5a8-c085-4b06-abc7-906b0e4b69f1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4fb129b1-1644-4b7d-8ec4-8b605b7fc6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdad7565-92ed-448e-882c-faa64ef44ac7",
        "cursor": {
          "ref": "bb2292c9-c371-4a89-a33d-17d0917a068b",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9712e345-6b8b-4e2b-b509-ea4c72311c73"
        },
        "item": {
          "id": "fdad7565-92ed-448e-882c-faa64ef44ac7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "297b97f6-15f9-4596-beee-3fd29feb5cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df39d9b-f613-4d6c-b499-70988230aca6",
        "cursor": {
          "ref": "1a7e4e58-5133-4cbf-8d3b-ad3019e0f4e6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9daca1a4-06aa-48ad-b909-6a802ef9a34e"
        },
        "item": {
          "id": "2df39d9b-f613-4d6c-b499-70988230aca6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "62819949-72e7-4930-b9a2-221c8f095a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7d23f7-711f-4ee3-9419-6cf92c319908",
        "cursor": {
          "ref": "bf118db9-aac9-4552-80b6-4aeb13d4d4a4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c18ea5d9-b293-4e78-b775-b1cc3ad57c2b"
        },
        "item": {
          "id": "2e7d23f7-711f-4ee3-9419-6cf92c319908",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "573ea720-1328-46bc-8a99-b27b37d0b0b3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "502fc65c-b8ac-4342-8c18-5c251a5c016f",
        "cursor": {
          "ref": "14c316fb-aaf9-494c-b4b5-165c81fe06a4",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bf3d2dbf-2c64-40ce-b08d-85d2cc73dc0c"
        },
        "item": {
          "id": "502fc65c-b8ac-4342-8c18-5c251a5c016f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "134b0db5-9012-4ae8-8632-dd9195a855a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7101f6-cf55-4ad4-8b9d-7d0b2bf5fcb8",
        "cursor": {
          "ref": "258a5895-e6e0-48c0-acbf-9c2253133915",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "18d3c2fa-8389-4bb7-af77-3960e5b1c998"
        },
        "item": {
          "id": "bb7101f6-cf55-4ad4-8b9d-7d0b2bf5fcb8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5f894a76-fc54-471b-9adc-e0db292db594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e372e4d0-790b-4d48-9314-9383e26c4397",
        "cursor": {
          "ref": "baa92d31-9376-4249-b39d-1018c018c2b2",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f51098d8-5b40-4a1b-9e55-71bf974d63b2"
        },
        "item": {
          "id": "e372e4d0-790b-4d48-9314-9383e26c4397",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8a6f6c1c-6040-4055-9f61-725d310c187e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7154662-d114-48ea-bf5b-258f2d3f3284",
        "cursor": {
          "ref": "16c0cdd1-f035-480d-80a3-fc43332d7cb9",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "08ac6b02-e56c-4a60-b791-c0b33fd17c6b"
        },
        "item": {
          "id": "b7154662-d114-48ea-bf5b-258f2d3f3284",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "709ba81f-85e2-4974-a307-4755f4627834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995be116-8824-474c-ad62-09dc8bd57b42",
        "cursor": {
          "ref": "d9dd8aa1-ce70-4bd0-88f4-98599cd57135",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "065e7f9a-f813-4fa6-a4a1-9b5589f60dc5"
        },
        "item": {
          "id": "995be116-8824-474c-ad62-09dc8bd57b42",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "92a27f57-de32-48f2-86c5-e58053b35c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08926e32-7946-4d9d-b328-aac5e46ada3c",
        "cursor": {
          "ref": "7505e728-b4fc-41ba-b10a-19935ed957fa",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0c73b431-61ca-4701-b7b4-c346d488c549"
        },
        "item": {
          "id": "08926e32-7946-4d9d-b328-aac5e46ada3c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2906bd2a-4670-4c87-80c8-9b0772353a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540437db-3130-4954-ba7a-0a211008ccf3",
        "cursor": {
          "ref": "cc665a64-ea78-4aee-82ce-f16430111944",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "78c03fdb-cb37-4bd3-8576-521ab32808e7"
        },
        "item": {
          "id": "540437db-3130-4954-ba7a-0a211008ccf3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8d261985-cc40-4bce-a3d9-87f2c7ad3567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb9daae-ae13-43e7-858e-da08d3f58f2e",
        "cursor": {
          "ref": "0928d14b-714e-48a9-b3be-8f2bf8c289bf",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b51a30f7-54fd-4233-b3fb-404581be2cee"
        },
        "item": {
          "id": "beb9daae-ae13-43e7-858e-da08d3f58f2e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "358536ab-8d3b-408b-93dd-b71c7fc8976c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "d08b4761-11f5-4221-8252-96e23837d08f",
        "cursor": {
          "ref": "b5e3584a-a52c-4843-ae69-946255974282",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "30e00f22-f7e8-41f3-8f0c-9cfa25b9b4df"
        },
        "item": {
          "id": "d08b4761-11f5-4221-8252-96e23837d08f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fb4cc283-f0d8-4daf-ba29-f15a63fc1899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4320dc-a540-4d54-b9d5-c1adc3f7f48e",
        "cursor": {
          "ref": "6eda9aea-d526-4c9f-b79f-734057f08ce6",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c53d0515-4831-42f4-adc6-08b8fafdf4f7"
        },
        "item": {
          "id": "2d4320dc-a540-4d54-b9d5-c1adc3f7f48e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "016e2a44-8fc5-4d86-a753-33ca2b02484a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a605f897-c324-4c32-816f-5f3c10ef3ccf",
        "cursor": {
          "ref": "47c9e575-3f91-4c11-8a1b-d0dd859b6345",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ee8e3d65-90c8-426f-ada8-f2aaf0371e57"
        },
        "item": {
          "id": "a605f897-c324-4c32-816f-5f3c10ef3ccf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5376e701-72a4-4082-83c8-61e3a23c8b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afa6eb3-46b9-4f70-b991-00e81ee2ea7f",
        "cursor": {
          "ref": "89fba4c3-70ac-4df1-b3a0-b453a62478b8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d1c75248-b83e-44d7-b4b5-51f048281d67"
        },
        "item": {
          "id": "6afa6eb3-46b9-4f70-b991-00e81ee2ea7f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "77c7e23b-9d38-4c21-b20c-412d07f2fb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697b56cf-da69-46ff-abb0-a2afcf7a7fb8",
        "cursor": {
          "ref": "0af4c6e7-4019-4c09-a4f0-681028593505",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c4c6df59-60f1-4b5d-bc8d-3bca0b61fc8e"
        },
        "item": {
          "id": "697b56cf-da69-46ff-abb0-a2afcf7a7fb8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0fe68135-71e2-46ef-9606-4d9c2f44d3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25462da5-8515-4b46-901f-2854ed530414",
        "cursor": {
          "ref": "2db0f7fa-529e-4680-9db4-388bc1b3a813",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c0b8aea7-305e-4242-aed5-1b4899649984"
        },
        "item": {
          "id": "25462da5-8515-4b46-901f-2854ed530414",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a57b9d23-63a3-4d7e-b905-77dc6bbf19dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35c4951-04dd-4791-85c8-e60ff47e3b8f",
        "cursor": {
          "ref": "eb011593-6376-482b-a471-a38255d9b909",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1d5010e4-9a76-4527-b099-5701ff72e9b4"
        },
        "item": {
          "id": "e35c4951-04dd-4791-85c8-e60ff47e3b8f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ec37c43c-9b86-4ec7-bce8-aa2d3677c15f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "c2c330c2-e9fe-48c9-8c78-46fc0acdf101",
        "cursor": {
          "ref": "c86c5119-1755-4b23-b612-01f79ace6179",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "46a99315-99ae-4c37-af6a-059675724513"
        },
        "item": {
          "id": "c2c330c2-e9fe-48c9-8c78-46fc0acdf101",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "89466ded-76c7-4b41-8cd1-1535b333d644",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "b1d7c8bb-8a38-43bd-aa4d-364910d5f271",
        "cursor": {
          "ref": "781dcf4c-cda2-49b3-a85e-02299a2bdfcb",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "45a3aaef-361e-4c4b-9c6e-f9ce48b6457d"
        },
        "item": {
          "id": "b1d7c8bb-8a38-43bd-aa4d-364910d5f271",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9294e656-20a9-4527-8232-baa9f83a7473",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 55,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "71c263f8-2537-49e8-a770-8f1578dc454d",
        "cursor": {
          "ref": "265fb926-e921-4e0a-9e0e-44e4b55c613a",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a2260838-a9de-48e5-8a25-0efb2b70b955"
        },
        "item": {
          "id": "71c263f8-2537-49e8-a770-8f1578dc454d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cb129f1a-4529-40cc-9ce7-9c6373cb9d0d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "cfa67b5e-f2b0-4fb9-b285-a29d82c46266",
        "cursor": {
          "ref": "e1beb276-b9ef-41fd-aaed-fded29fc2ff9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "418b7eae-9f56-4e8a-b251-b9710880106e"
        },
        "item": {
          "id": "cfa67b5e-f2b0-4fb9-b285-a29d82c46266",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b70063ce-616e-4fae-8e5f-536bb61165c3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "f93c63a1-710f-4e01-b7bc-a28f61b866e4",
        "cursor": {
          "ref": "2fc686df-d59a-44bb-a0b8-9dd7b7d181b2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e590e83e-062c-4dc2-88d7-96720dff5e7a"
        },
        "item": {
          "id": "f93c63a1-710f-4e01-b7bc-a28f61b866e4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "05d3722f-d39f-402d-83cf-010d664bc08d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "7a80c92c-df49-4a0d-9def-ef9b858b406a",
        "cursor": {
          "ref": "7f95bc80-f6e2-4833-9850-442eb74f89e2",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "66943453-2dce-4e0b-aae5-9530c61daffa"
        },
        "item": {
          "id": "7a80c92c-df49-4a0d-9def-ef9b858b406a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2c0ae02d-cf31-44cb-a74a-fd158e97d484",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd376b3-a74e-48af-8bff-31bf4922238a",
        "cursor": {
          "ref": "6629b0a5-3925-4297-8193-1746638cf458",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bf18213f-fc16-40af-b352-6fb06bbe0a90"
        },
        "item": {
          "id": "cdd376b3-a74e-48af-8bff-31bf4922238a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3f302323-5b6a-4bd7-a6a0-96cb83823325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2c3b51-064f-4f70-89f2-133d41896391",
        "cursor": {
          "ref": "13f4c92e-6581-4bd9-8eac-130115a175e7",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a60b635d-1706-4175-8da1-e1fde0dd7be8"
        },
        "item": {
          "id": "5f2c3b51-064f-4f70-89f2-133d41896391",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4c7d944d-b394-4ab5-b330-0ececd350464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148654b3-702d-49b0-a9b5-d96eed088e24",
        "cursor": {
          "ref": "4f3adeb8-5f70-440a-95e2-c651c937c6fc",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "683ef722-0f26-4aaf-8a56-527bf6dfee9c"
        },
        "item": {
          "id": "148654b3-702d-49b0-a9b5-d96eed088e24",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d00d541f-9187-4172-b2c8-ba327a86beb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360d817e-b99a-48a9-8c5e-2ab6967487ae",
        "cursor": {
          "ref": "90f1dd2b-445d-4da6-a36d-a4cc3d708e1e",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "398bfac5-b829-4d96-82b6-30692e092305"
        },
        "item": {
          "id": "360d817e-b99a-48a9-8c5e-2ab6967487ae",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fd9d3e79-1c91-4124-affb-c14bb42f7c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040e4190-c9dc-4282-afd7-754c8cfd3ab9",
        "cursor": {
          "ref": "ae0ca635-72b8-4bfa-903c-7bbd74f1c3b6",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2229cd0a-e6d1-4f22-94a4-0b54c3d659c9"
        },
        "item": {
          "id": "040e4190-c9dc-4282-afd7-754c8cfd3ab9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7e79ae9e-29d6-4f9d-9e93-092874ff40ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ea8647-d764-4589-8abe-a6c6f74ec830",
        "cursor": {
          "ref": "d24cea6e-858b-4dec-9a1e-884952185270",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "03f2583f-5ba8-4bbf-8f90-c10de49852f2"
        },
        "item": {
          "id": "31ea8647-d764-4589-8abe-a6c6f74ec830",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7cc60ed9-3edf-460b-9a50-6a37518c1d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24db7621-32df-43df-b2f2-cbf6fc5836ab",
        "cursor": {
          "ref": "c69bcdb8-b3b1-464c-a250-266a5da1cd71",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "356e8dc5-b811-4735-8975-d52f9b5c99b8"
        },
        "item": {
          "id": "24db7621-32df-43df-b2f2-cbf6fc5836ab",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b6fbefa2-7c66-40c0-99b8-a6efa577e28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810dac8e-130d-4e4a-a96d-c8a2b164c897",
        "cursor": {
          "ref": "848f5518-cf59-4104-9552-556ac2f35dd8",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c98e6967-0dfd-4e6b-9961-e54d757d9292"
        },
        "item": {
          "id": "810dac8e-130d-4e4a-a96d-c8a2b164c897",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a03aba5c-ce91-41f3-84e8-5285b0ce3a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea55701-7f2a-4a4a-8128-c0baa028c8d3",
        "cursor": {
          "ref": "c3d24c2e-534b-45cf-9c4a-7212ec86b7a4",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7e51b9ef-b020-4269-9847-4d26a03cdbba"
        },
        "item": {
          "id": "aea55701-7f2a-4a4a-8128-c0baa028c8d3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cd12abec-ba41-4e39-9444-e61a128afcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f2f9f7-39ae-4008-ae56-b4ed498b427f",
        "cursor": {
          "ref": "881d0a9e-345a-489f-aae3-52f559bd5e08",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0db8fa8c-75aa-481b-be23-9a7416911b0c"
        },
        "item": {
          "id": "41f2f9f7-39ae-4008-ae56-b4ed498b427f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d38942a0-f343-4d27-8dd7-4d812f1d3129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd484b76-99d2-4938-bfef-7416c47acffb",
        "cursor": {
          "ref": "06882960-bba4-4a84-8bb8-8c6a6e6a3909",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e597f674-f9f8-4a88-bb79-998b41fd6866"
        },
        "item": {
          "id": "bd484b76-99d2-4938-bfef-7416c47acffb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8179f894-03a6-4b30-bb5f-b8b2a81f6a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd4893d-19dd-45e2-9e2e-060733cf4cc5",
        "cursor": {
          "ref": "422ae61c-7b6d-477f-9778-50aba4b0f2b6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c44d9fa2-3f63-4b60-8ec6-5ea2faf16104"
        },
        "item": {
          "id": "1fd4893d-19dd-45e2-9e2e-060733cf4cc5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5d5305a9-1d11-4f01-ae96-2f7afe41f13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942e0f89-c676-4e3f-b0d7-7e604b89419c",
        "cursor": {
          "ref": "acf5490e-7aaa-4937-8258-409e8e306d11",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "dba6a623-d867-403f-aaf0-f2336c664a0e"
        },
        "item": {
          "id": "942e0f89-c676-4e3f-b0d7-7e604b89419c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ebec69e5-9d1c-43df-aba1-ed49cfb05ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da389e8-35e0-4323-a9f4-f229f09185a1",
        "cursor": {
          "ref": "db9098ed-b0ca-484a-b101-2633655d6608",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "19d20a0d-62ba-4f37-9081-3f6b86218438"
        },
        "item": {
          "id": "4da389e8-35e0-4323-a9f4-f229f09185a1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f3e0a4c1-077f-47cd-a978-f45310099f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a584229-af1d-4204-a12e-b489666cb27a",
        "cursor": {
          "ref": "7eb7bba5-718a-472e-935f-f1fd1d633c20",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "06339816-6761-43ef-97f7-0a13664bada0"
        },
        "item": {
          "id": "6a584229-af1d-4204-a12e-b489666cb27a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2dfc4724-21d3-4998-9366-4ba993a3c92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df02ceb1-f3bf-4aee-8855-35a1bf6b6afa",
        "cursor": {
          "ref": "d8204388-1b97-4744-8b42-ef53fde1d875",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d5ceb65f-1158-427a-b9cb-ca16c4e60778"
        },
        "item": {
          "id": "df02ceb1-f3bf-4aee-8855-35a1bf6b6afa",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "94512556-3e40-48fc-9a00-f0bea432bafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c028e9-fb12-40a6-9ba8-7b0d29ead534",
        "cursor": {
          "ref": "fbd08b11-99d7-4a01-af5b-c43fe8e5f0d8",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1acf58df-b496-44f6-b4b6-5ee626e33031"
        },
        "item": {
          "id": "04c028e9-fb12-40a6-9ba8-7b0d29ead534",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c59879bb-7dfb-45f0-8b3a-0efbf811a235",
          "status": "OK",
          "code": 200,
          "responseTime": 225,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "cb53b9f5-9009-4de5-8b1f-fb07b7be9265",
        "cursor": {
          "ref": "2304f89e-8088-4d6c-9969-c82d0970f003",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b02b6f0e-cd08-478b-a6dc-c2a346691225"
        },
        "item": {
          "id": "cb53b9f5-9009-4de5-8b1f-fb07b7be9265",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6a770120-958b-450a-a0c1-ca648d00cbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a848852d-5c3a-4f50-9d85-f585bd52a684",
        "cursor": {
          "ref": "f41bd631-747e-4a20-ae4a-e612bfbf6cae",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0ba63652-6071-4702-85b2-83f1ac316fe4"
        },
        "item": {
          "id": "a848852d-5c3a-4f50-9d85-f585bd52a684",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d81123dd-6f18-4354-896b-8c3bc6ec59b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc0a802-43d2-43aa-a994-afe05e5539ce",
        "cursor": {
          "ref": "f2e6b9cc-a913-41cc-9b8d-02af275828e6",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7f02ba8b-215c-4096-bf88-4b73751debda"
        },
        "item": {
          "id": "2dc0a802-43d2-43aa-a994-afe05e5539ce",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4f1e79f0-5114-4452-bee7-d2e6226566f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a26b2c0-d964-41d8-b2ff-01db0ec45717",
        "cursor": {
          "ref": "4b0112e3-4b24-4883-acbf-2185a6a5f6dc",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c470c080-2767-4395-8b54-50baddc04b2d"
        },
        "item": {
          "id": "6a26b2c0-d964-41d8-b2ff-01db0ec45717",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "9c837806-7098-4fe0-a06e-02be811b580a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad34430-e108-497f-9afd-b1845638efd9",
        "cursor": {
          "ref": "2c8860e1-6614-45cc-a8c9-7ff0afec3c9d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ca7752e6-2fed-4d43-8b98-c503bab47421"
        },
        "item": {
          "id": "0ad34430-e108-497f-9afd-b1845638efd9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4c56958f-49aa-46b1-ad11-57db15d0e29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fedb4b-340d-46ac-a40f-f4ded3dec968",
        "cursor": {
          "ref": "bbdb289f-a1b9-43e7-82c5-c04e68b6c7b1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d9a966e6-d68d-4600-b10d-bd51f7870dd6"
        },
        "item": {
          "id": "92fedb4b-340d-46ac-a40f-f4ded3dec968",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f593f368-c671-4ac7-862d-111d54391f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f325a6e0-c0b4-42a5-87e0-4efd6329c81e",
        "cursor": {
          "ref": "026dace9-a7cf-40f8-9b15-169494fba085",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "709e1368-8c2f-4d9d-9f45-81664950edcd"
        },
        "item": {
          "id": "f325a6e0-c0b4-42a5-87e0-4efd6329c81e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "96c31e0b-e9e1-441d-b1ca-7f32659b2f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef4982d-ec8d-4e59-b829-23b9db6c68b3",
        "cursor": {
          "ref": "6a2f621a-16e4-421b-a413-7ad0da81aa15",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b39e080f-ab6b-4ae2-8b84-37ece22fa431"
        },
        "item": {
          "id": "1ef4982d-ec8d-4e59-b829-23b9db6c68b3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "44bc1d3f-c6f8-4015-a7d4-d96b23ed1a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b1b63c-c3fd-4fc3-af69-de2f2d0410df",
        "cursor": {
          "ref": "a04fbdfc-99b9-41c3-b805-f09632b3a80e",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b3831cf1-eeda-4d9d-84f2-927bfe9430a2"
        },
        "item": {
          "id": "49b1b63c-c3fd-4fc3-af69-de2f2d0410df",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "de8a035f-0852-4c5f-868c-dff83d7d820c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16b680a-43dd-4452-bc1a-e7efb73f5de0",
        "cursor": {
          "ref": "c9ec3ee2-9872-40ba-b0aa-d7bd7150cf91",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ee6c0a4b-a6b5-4abc-b28b-76b52075afa6"
        },
        "item": {
          "id": "f16b680a-43dd-4452-bc1a-e7efb73f5de0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "25cdd049-9746-4606-a23c-95bdb02e7e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed9f1c9-8ab1-44e3-9fd4-090c7af40620",
        "cursor": {
          "ref": "725ca601-32a5-47e4-8df4-d69e6363cce7",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5273f1c7-cf73-44da-876f-b42e73ab5bd2"
        },
        "item": {
          "id": "2ed9f1c9-8ab1-44e3-9fd4-090c7af40620",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f14c6f7b-d2bc-4cfc-840c-bb2fc0df538a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681647f3-192f-42ff-8b9e-22c0d50e5e18",
        "cursor": {
          "ref": "7b6bec4c-b86e-431b-a6fb-c1ae2b291fe1",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1203d495-ebea-4b01-844a-a297dc744872"
        },
        "item": {
          "id": "681647f3-192f-42ff-8b9e-22c0d50e5e18",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fc2be937-51bb-41a1-a420-687936fdc70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852b2c1e-172c-467e-bcfa-f1270067dbdc",
        "cursor": {
          "ref": "2614902f-2f2f-46c2-a31d-b9216637487b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0345682f-51c3-4b9b-af98-8fbc7d4e97e3"
        },
        "item": {
          "id": "852b2c1e-172c-467e-bcfa-f1270067dbdc",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f298756c-3fa5-4ab2-91b0-91ad1cfbdd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3582b14d-9779-4449-9f3d-e4abe1a7fe00",
        "cursor": {
          "ref": "a6964c6b-b779-457a-b1b5-139fcbe4039a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "15001d34-935d-47c7-981d-e2cd655a6c25"
        },
        "item": {
          "id": "3582b14d-9779-4449-9f3d-e4abe1a7fe00",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "83a7728e-4748-4f0e-b35a-094eba7fae48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e621e434-9812-4dab-b880-a7985c333406",
        "cursor": {
          "ref": "04e53799-30a6-4f51-8026-edd4328feb9d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e4245d22-9c2c-4f29-ace5-14f2c16d0aad"
        },
        "item": {
          "id": "e621e434-9812-4dab-b880-a7985c333406",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3bc538da-7fea-4630-98a1-0b8ae87097cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a791d7e-bb1e-4590-8fae-220685f971de",
        "cursor": {
          "ref": "8d4055f7-a5e2-41a9-b60c-29e35b4849cf",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8cb6870a-805e-408a-8fdc-44df86b58766"
        },
        "item": {
          "id": "7a791d7e-bb1e-4590-8fae-220685f971de",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "16d0b9d9-6e8f-4c60-8563-2334ee6af988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a881ce-019b-406f-99a8-fd09782b64d8",
        "cursor": {
          "ref": "63b81358-ec20-41eb-bffc-dfbe54a90420",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c3ef0de2-6357-492b-b2f5-e6f3cadc3f36"
        },
        "item": {
          "id": "17a881ce-019b-406f-99a8-fd09782b64d8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dd6f54b8-800b-4a9e-a202-8a8b9fae6d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a873baf-962b-4c3f-8e15-1c9dcd30d5bf",
        "cursor": {
          "ref": "b3973a03-c6c9-4f36-bb7d-0696a06b158a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dde9fd3d-f743-4cfa-a796-4fceb4efa4e8"
        },
        "item": {
          "id": "3a873baf-962b-4c3f-8e15-1c9dcd30d5bf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0f5e2e66-6253-4aca-8d44-4decf700521b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30d8056-c040-4dea-8108-81f6e0dddffe",
        "cursor": {
          "ref": "a7eea3da-bfba-4340-a541-d4b29bdf5c17",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "66b92a41-25a9-470b-9992-f3c476893388"
        },
        "item": {
          "id": "f30d8056-c040-4dea-8108-81f6e0dddffe",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "620293e2-7f4e-44a6-9406-849f5d8ac9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192ae0e2-da2e-4f69-ae78-87f85f8c4f92",
        "cursor": {
          "ref": "e7a1a04f-39d6-4444-ac49-dc9b941c1d2b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3b3c4d49-f0f3-467d-8c93-2e55aa9cd574"
        },
        "item": {
          "id": "192ae0e2-da2e-4f69-ae78-87f85f8c4f92",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7c798bc7-131e-4f0d-9fe4-feaba84d8544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0e0f47-8aef-41f3-b774-eb9fa7899836",
        "cursor": {
          "ref": "d3054869-77f4-4854-b684-8bcb7e2cabbc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "054d5a48-381c-4e86-81b0-a4d1e80adb49"
        },
        "item": {
          "id": "ad0e0f47-8aef-41f3-b774-eb9fa7899836",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "43fa2388-9d7c-4182-8dec-54297a791e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cf6cb0-3aea-465e-ac76-dd7edbb8d9f7",
        "cursor": {
          "ref": "fa929de4-82b7-4646-877c-db862ea8d2f9",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "452555bd-449f-4d53-8a97-c3b0f3fb6650"
        },
        "item": {
          "id": "e8cf6cb0-3aea-465e-ac76-dd7edbb8d9f7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3f0d7642-7e27-4d8a-a9fd-f7a91ec3d5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93d01ee-ba0c-45c7-a0e2-2b92f8bdc88f",
        "cursor": {
          "ref": "eed3b4e0-a8ec-4aae-a994-2256ccaa08f5",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "80c5b5f8-5b58-486d-98af-3845538d7ac4"
        },
        "item": {
          "id": "d93d01ee-ba0c-45c7-a0e2-2b92f8bdc88f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0f1206ac-2e2d-467c-8386-9db7c8251d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97f3f29-eff3-4708-8a9d-219e5cbc0686",
        "cursor": {
          "ref": "55e42fa0-1bab-47bc-af14-4353ae031c33",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "93569baa-8328-4069-9a90-aafe1ddc671d"
        },
        "item": {
          "id": "a97f3f29-eff3-4708-8a9d-219e5cbc0686",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3c03dc09-84a2-4c2d-97de-72c026ecf56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da37bee9-c716-4b4e-b5b1-b5a72a90a88b",
        "cursor": {
          "ref": "5fe9e376-5732-4866-b51d-481f9e0b7458",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fee73f13-0ac1-415d-bfb1-a2492312dab0"
        },
        "item": {
          "id": "da37bee9-c716-4b4e-b5b1-b5a72a90a88b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a344e8ad-d442-419c-ad1c-eb3d12a7c052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0f542b-3ea8-42cc-b069-5cb88372be1c",
        "cursor": {
          "ref": "a554ea7f-5154-4e07-8b03-b6bc5cdb6b25",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b0b6afe2-2971-42ae-a129-e881d7d71aa6"
        },
        "item": {
          "id": "6c0f542b-3ea8-42cc-b069-5cb88372be1c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2f3d12b0-566a-4d48-a259-e17ee4cae3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d3e8cf-fdfa-4711-9994-1f74a85ac33a",
        "cursor": {
          "ref": "432c6843-6c3b-4785-aad9-a3bb02dac4d5",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ab31f58f-1e00-4ea5-b2d5-08a33a06fd12"
        },
        "item": {
          "id": "e5d3e8cf-fdfa-4711-9994-1f74a85ac33a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "458e35c2-2788-4de4-80d6-fbf4f57e61aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016d3067-d6d8-4df7-9e9e-9a27dd9b680c",
        "cursor": {
          "ref": "ca454e1a-5b33-43c6-8e1f-cd249f42c921",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4cc2cd99-e5d0-41dc-8a3c-58adcdd1f622"
        },
        "item": {
          "id": "016d3067-d6d8-4df7-9e9e-9a27dd9b680c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b7ea6508-a6cb-4112-b6f0-743d506700c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e6848c-c002-48a0-8c64-6bbd79b9624c",
        "cursor": {
          "ref": "990d5dc2-4b3c-4c4d-b1fb-5f2f4d51f08c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "359dba64-86cf-490c-bba6-c617f6148c71"
        },
        "item": {
          "id": "45e6848c-c002-48a0-8c64-6bbd79b9624c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "923399de-a2e7-4bd0-b502-d2982137627e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa06dde-99d2-425d-9b61-5621f104c24b",
        "cursor": {
          "ref": "2e02a275-10b6-4c13-a119-d2911c3cc863",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2c6b4c63-d287-477e-b8ef-3247bcc6f25d"
        },
        "item": {
          "id": "ffa06dde-99d2-425d-9b61-5621f104c24b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "366116a0-7718-420d-8289-8cb0a7fd3b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa3bb6c-89b2-4a8e-bc83-f3153962f858",
        "cursor": {
          "ref": "9ffbf719-4440-4f96-bacb-763e7dc3c2d1",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "89f709d8-6e91-4ecc-b98f-2819778f9c94"
        },
        "item": {
          "id": "7fa3bb6c-89b2-4a8e-bc83-f3153962f858",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d0eac40c-3369-4517-86a3-6df5591c7796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b75b22-b1e7-48ba-910f-446688c310eb",
        "cursor": {
          "ref": "af192f66-29c8-4e8d-8adb-eb2fb6859ae5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1b623ef0-eb72-45d2-a718-8d2e9ddbaefc"
        },
        "item": {
          "id": "c0b75b22-b1e7-48ba-910f-446688c310eb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7be86ea4-3f5b-4616-9488-e342e418495c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0120f484-1e73-4ad3-a297-7062b99740ec",
        "cursor": {
          "ref": "540c18f0-6b5a-4d6b-a636-0266023632c4",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f38c8243-c0e4-437b-81b5-7aadc5354696"
        },
        "item": {
          "id": "0120f484-1e73-4ad3-a297-7062b99740ec",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e2da1867-6c04-4d3a-9e88-0e8d6e61e923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0b4f5b-1cbb-450d-b004-ac7c16f23ff0",
        "cursor": {
          "ref": "a210c835-d86f-406c-ad65-ed4094d877bc",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cdd5d779-c26f-486c-92b0-b527d822435f"
        },
        "item": {
          "id": "cc0b4f5b-1cbb-450d-b004-ac7c16f23ff0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "400ec86a-b44c-4837-8637-01ee52c58db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aee61c5-f9a9-49d7-b220-cae812aae075",
        "cursor": {
          "ref": "20cd9c80-7a70-427c-956c-5893e84465d5",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "db89cbfb-cd0e-412d-be53-2b7941cdff9f"
        },
        "item": {
          "id": "3aee61c5-f9a9-49d7-b220-cae812aae075",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ae66f07f-777e-4abc-a427-216fefc8a523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b40e29-a2f4-4949-9fc8-4ff1d84b1512",
        "cursor": {
          "ref": "b739e56a-a871-45f3-8b6f-39b84a700824",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "066b77f1-2908-40b9-a19a-9d6e971f4a70"
        },
        "item": {
          "id": "f4b40e29-a2f4-4949-9fc8-4ff1d84b1512",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6ecac839-bd67-43ba-9673-c4623ff69135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced709d9-b47b-47cc-93f2-d40ab2f7c120",
        "cursor": {
          "ref": "3bdfeeaf-c2ae-4711-b090-b18c336e9f6a",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c2601930-6560-4ffd-9924-25ea1822bee1"
        },
        "item": {
          "id": "ced709d9-b47b-47cc-93f2-d40ab2f7c120",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "27443d1b-5530-49ce-96cf-a16cc4fb1105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60c70b9-9b8f-48d8-bfc1-e35c3dec673c",
        "cursor": {
          "ref": "d03ff8bb-bce5-4c07-b416-2f3aa002bb57",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c51edf85-4035-48d9-be9a-54117fbdb0f5"
        },
        "item": {
          "id": "a60c70b9-9b8f-48d8-bfc1-e35c3dec673c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4c3e6f09-9942-436c-b7bc-2d9e3d2a0bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19e760e-91f6-4769-ae5f-4f1a0a8edd54",
        "cursor": {
          "ref": "a80fcde5-a97b-49fb-897a-86c2a15b9190",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "81b173cb-206f-426f-9c93-9a7f442d0f86"
        },
        "item": {
          "id": "a19e760e-91f6-4769-ae5f-4f1a0a8edd54",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d2f1e3bc-77c8-4d23-8323-725e75077073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7430974-a3b1-4b09-9335-05cb2e4087f7",
        "cursor": {
          "ref": "e6b79645-c537-4963-9259-38b55afa4331",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6937333f-0c8a-4288-b1e5-27ac10b5a68f"
        },
        "item": {
          "id": "d7430974-a3b1-4b09-9335-05cb2e4087f7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "89b37a5e-ed35-473b-9a7a-6a74de22c2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b4801f-c305-4556-b6cb-7cc17b65f8db",
        "cursor": {
          "ref": "4d830663-a634-4c02-96b7-9897ca199cac",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "734113ee-6d53-4c3e-9113-32c6a132ed49"
        },
        "item": {
          "id": "25b4801f-c305-4556-b6cb-7cc17b65f8db",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fa7e1c96-9bf4-4608-a517-08b73a05fd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19e2eba-db8f-4956-9a9e-3cecbdadef64",
        "cursor": {
          "ref": "eed838b1-7048-4692-9262-3fbe02c0a626",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d6c39a0f-7110-45cd-bea9-67dd3fe42cac"
        },
        "item": {
          "id": "d19e2eba-db8f-4956-9a9e-3cecbdadef64",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "872c6e91-6fc2-4799-aefa-b3f154365bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53405d9-ab5c-4995-972a-5c7ce19a0363",
        "cursor": {
          "ref": "c75d4497-da6d-4ac7-8308-3fbb7d2bea6e",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "62787cea-349e-4826-a856-3194ff467c88"
        },
        "item": {
          "id": "b53405d9-ab5c-4995-972a-5c7ce19a0363",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8a32dd39-afac-4981-b290-6684468c6f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd4f680-e5c2-4377-913d-155552e99346",
        "cursor": {
          "ref": "43857ec4-934c-4330-912c-f44c873a626e",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a7dc8966-2e35-494a-a68c-e77fb6a5bf49"
        },
        "item": {
          "id": "5fd4f680-e5c2-4377-913d-155552e99346",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0da0a6cb-1495-45e0-bc1f-cc8b45c6d75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db98a47-3298-47d1-8159-997385a12ad1",
        "cursor": {
          "ref": "6e333e1f-ac21-4474-bd03-04281e195853",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "69f1b026-c60e-4fbb-a0ae-852a8e965068"
        },
        "item": {
          "id": "4db98a47-3298-47d1-8159-997385a12ad1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "85cae954-0bdb-42aa-a393-9204a8e1c618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d82702-be50-46ba-a2ee-7de6200db3bc",
        "cursor": {
          "ref": "9817bc88-397c-4a65-970b-af8219359697",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c2d0509e-c826-4736-ab41-26fa9d4fcca5"
        },
        "item": {
          "id": "00d82702-be50-46ba-a2ee-7de6200db3bc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c8845a60-bd08-4afa-9120-eda847a4f53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e5e76e-b256-4220-b2c8-100e40475695",
        "cursor": {
          "ref": "90e38770-c95b-4432-9678-ae670c8048d2",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "47a08fc6-4548-47dc-b519-8c8189697e21"
        },
        "item": {
          "id": "c2e5e76e-b256-4220-b2c8-100e40475695",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c1c4076b-699b-4e74-a299-6b7e3bce4473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0ca98e-fb04-4c91-b218-cc9155d189d8",
        "cursor": {
          "ref": "fd354351-c809-4667-abb5-628f083d1da7",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ebe6fec4-93bf-4d9a-9172-18111b84f8a3"
        },
        "item": {
          "id": "dd0ca98e-fb04-4c91-b218-cc9155d189d8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7f842e60-6474-4cc7-b8d8-fe7da109e00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a474d40f-1a21-4e28-92b7-6f48ce9f8952",
        "cursor": {
          "ref": "3fcb4d8b-120d-48ab-8964-c205284e1cc3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f47c8313-ce0b-4ed3-88a8-73e59b3e3668"
        },
        "item": {
          "id": "a474d40f-1a21-4e28-92b7-6f48ce9f8952",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5edc6805-1266-426b-beec-44a994855328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ac8051-7d59-468c-862a-27baae4eb960",
        "cursor": {
          "ref": "7ec55d4b-40a5-41ee-a17b-eb2c31d75dd9",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "41fb9ab1-d370-4534-ac99-a668a150775b"
        },
        "item": {
          "id": "e8ac8051-7d59-468c-862a-27baae4eb960",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cfbc2166-aa42-4818-9265-bb972b77b70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9623c082-ea64-4dea-96f1-6fdf157aa4b6",
        "cursor": {
          "ref": "5c18f33d-6b14-4abb-806e-10e4b9a22a16",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "27653c61-e6b0-4889-be8d-d508b41c0243"
        },
        "item": {
          "id": "9623c082-ea64-4dea-96f1-6fdf157aa4b6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "40cc5772-b557-4178-aaeb-ca5cc7f2d496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187e4b74-4fda-4c60-bb3e-6ab6e659e473",
        "cursor": {
          "ref": "328c1500-41a1-4cc3-9d14-095a3ed3cb77",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e800d652-c860-4981-8fc6-624057f5bd9e"
        },
        "item": {
          "id": "187e4b74-4fda-4c60-bb3e-6ab6e659e473",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "db1292a2-f2ee-47cd-9b07-ea549bf31113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd639e18-6a47-45cd-bde9-98c3d6f2dcb8",
        "cursor": {
          "ref": "01ec8c5a-3b66-43ce-aa3f-75d8404625b9",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "319606af-b7e2-46b3-8923-bfa9731d71be"
        },
        "item": {
          "id": "fd639e18-6a47-45cd-bde9-98c3d6f2dcb8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5726bc65-864e-4d71-8f03-80b677a6d908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271c354c-37ce-4a3f-b38c-64ed81703cb8",
        "cursor": {
          "ref": "44cc92fb-ad73-45ab-b932-6c35e6a25f0c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a9ead53a-64e0-45bc-aff2-fe4762e53374"
        },
        "item": {
          "id": "271c354c-37ce-4a3f-b38c-64ed81703cb8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "646dd9e6-453e-4596-a01b-9063d9e7c836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5f92da-b887-499c-a0a2-057e593ebceb",
        "cursor": {
          "ref": "4b31e53d-fbe2-4d0d-86b8-0e68b14f7609",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "923bb965-97d6-4a4f-91d0-0ddecc31c914"
        },
        "item": {
          "id": "7e5f92da-b887-499c-a0a2-057e593ebceb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a4b0ba06-e673-4ecd-ae57-a8c04a21e01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad393516-d86a-4420-b275-9e0d17062624",
        "cursor": {
          "ref": "fa9ce8d6-5cab-4fa8-b8a7-0bdb9915f45a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b12c8182-5cd3-4d6b-a0c5-be09783205b4"
        },
        "item": {
          "id": "ad393516-d86a-4420-b275-9e0d17062624",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5ab298c7-5c76-489b-beae-947e341089d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e09941-c81c-4e1f-9894-ff4671c4e7a6",
        "cursor": {
          "ref": "676d88ba-e726-48a6-9ac2-8c6f3b450371",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ab38ab40-7a69-4694-88ac-b2864dfc2531"
        },
        "item": {
          "id": "11e09941-c81c-4e1f-9894-ff4671c4e7a6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fb73265c-466c-4db0-8c69-dd364d7144be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd939612-12f0-450c-a03c-66ff51472397",
        "cursor": {
          "ref": "a1389b71-a99f-435e-b4be-5b52bd491368",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "33785ba3-8396-4a24-97f7-ce29659ba500"
        },
        "item": {
          "id": "cd939612-12f0-450c-a03c-66ff51472397",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "de594756-58a8-44cf-b3fa-36f5709c3528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d057f04a-7900-491f-9b04-b470e8eb0358",
        "cursor": {
          "ref": "c809a9dc-478d-41f5-bb3f-d2ffef4e3fac",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5d9f0d5b-321f-4ddf-b243-023acf6d2a03"
        },
        "item": {
          "id": "d057f04a-7900-491f-9b04-b470e8eb0358",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0df213da-6353-4eb8-aa70-e3da07d97053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04424353-2b7e-4b3a-907e-abe262531710",
        "cursor": {
          "ref": "1dcda42a-cb6d-4490-95ac-14eaaf266ba1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fe65ebbe-9bac-4bb0-b122-494c1e88186b"
        },
        "item": {
          "id": "04424353-2b7e-4b3a-907e-abe262531710",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "078b4c1e-c209-4893-963f-b44a367f4a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b64fb6-32a3-4fa1-9b65-8cbcb53f8f87",
        "cursor": {
          "ref": "d4eee0ae-1558-4301-b156-cdf087863415",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b84b23b7-087b-42c0-a12d-655fe9e092e8"
        },
        "item": {
          "id": "d3b64fb6-32a3-4fa1-9b65-8cbcb53f8f87",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a9fb1a58-b858-4b56-a21b-3740d8a734a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b2aa27-61f3-41e0-91ee-6f57c8224f47",
        "cursor": {
          "ref": "66db1576-f699-46e7-8e44-8fbfbd2da37c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "82c3035d-8533-4cc4-b3ce-2f10601a69f1"
        },
        "item": {
          "id": "f1b2aa27-61f3-41e0-91ee-6f57c8224f47",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "78c15d8a-ec60-4800-94cd-ebd76bbb4f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63795322-4d4f-4d65-aac5-efe50160b67d",
        "cursor": {
          "ref": "a895b33b-6b14-45d5-981c-6be58af19094",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3571203b-9ea7-4a09-8155-7dbd1ed0ebc9"
        },
        "item": {
          "id": "63795322-4d4f-4d65-aac5-efe50160b67d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3cbe22ce-2a24-4772-8911-765e3147a9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4ed931-f4ce-4a1d-9b6b-b4555bde1c90",
        "cursor": {
          "ref": "5bb76941-a7e1-4e1e-a3c8-ff5ecff4486f",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "637987e9-84de-402e-9272-585deac585fe"
        },
        "item": {
          "id": "9c4ed931-f4ce-4a1d-9b6b-b4555bde1c90",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "63949000-f263-4650-b1e2-f5f3072b73f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57c59de-ba56-426c-b9c6-bffb41b7b9fa",
        "cursor": {
          "ref": "62281c20-49db-48b4-8c45-fcff6ad115d6",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ff261195-beab-4f71-ab2b-ce62b0ed66a3"
        },
        "item": {
          "id": "d57c59de-ba56-426c-b9c6-bffb41b7b9fa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "56fb3900-d32b-455d-b5f7-62ab75eab7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9e9001-ce43-4f62-9eb5-4eedf46b0559",
        "cursor": {
          "ref": "bda56cc4-d312-4177-b631-2c209569a169",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ec8df2df-f436-46b7-9063-2ced41831357"
        },
        "item": {
          "id": "7f9e9001-ce43-4f62-9eb5-4eedf46b0559",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "68d75ce4-2282-41bf-aa41-2a50c3ea2aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b29e05-8344-428c-87f0-e097edf350cd",
        "cursor": {
          "ref": "ab18e5b7-20cf-487e-b3d2-145e1d9de6c3",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "971efa3c-cc98-4e6d-8169-f493a9a80d79"
        },
        "item": {
          "id": "62b29e05-8344-428c-87f0-e097edf350cd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "414de9ec-3c0f-473a-83de-caea6790da68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5a728e-9db0-4ec9-92f9-17812dbc4f14",
        "cursor": {
          "ref": "c865a054-23fa-413b-b432-7bd8700a70d9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "27d73d60-bad3-4787-af27-b4208ea26766"
        },
        "item": {
          "id": "bd5a728e-9db0-4ec9-92f9-17812dbc4f14",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "73aed944-5f75-4264-a027-89cfc3c1f6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281bc4d7-8ffd-42d2-9ac7-11ec0e34ae51",
        "cursor": {
          "ref": "04ff6b12-c8f2-4666-b18e-19d99d979d2e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4ad39914-adb8-42d0-b1cd-1b4c776b184a"
        },
        "item": {
          "id": "281bc4d7-8ffd-42d2-9ac7-11ec0e34ae51",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9538df22-b5f9-48f0-91fb-d329480558b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3af3dd-1eeb-457c-8726-a31d13c7fdae",
        "cursor": {
          "ref": "7775fb5b-5f07-4154-a5fd-d62850de9597",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "693bb642-7396-4276-b4a4-dc3f73cd2a73"
        },
        "item": {
          "id": "7e3af3dd-1eeb-457c-8726-a31d13c7fdae",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d0a502c6-b08b-4b88-960a-c875b9793bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea984723-7c6b-400e-8348-6c1af3cb6ede",
        "cursor": {
          "ref": "71242ba5-298d-4d0a-9acd-bff66bffd99c",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f526227a-8cb1-467c-b2e8-2dd354613194"
        },
        "item": {
          "id": "ea984723-7c6b-400e-8348-6c1af3cb6ede",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bc20460a-5098-447d-b25b-f7d1934debaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013e609f-ef9f-4567-9778-1efef7daadbd",
        "cursor": {
          "ref": "f6688774-05d9-42ae-a301-698750b1eee4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "058849ca-e4f5-4394-ba95-c70ddb69f6f6"
        },
        "item": {
          "id": "013e609f-ef9f-4567-9778-1efef7daadbd",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dd22f3af-47b9-4355-b7a2-0a2b0d0d52c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55beb421-c218-4712-b465-a81bf4ece845",
        "cursor": {
          "ref": "d3f7ff9b-d08a-4741-9f8b-e01828996954",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "333cc772-6621-4ee2-ae5c-e5455bf9bd16"
        },
        "item": {
          "id": "55beb421-c218-4712-b465-a81bf4ece845",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fd0cf637-2814-4671-9b18-efce8737022f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f65f842-3ad1-4d4d-b594-b9ece4f402d2",
        "cursor": {
          "ref": "3c6ce9f4-c47e-485b-b00f-8cc428ced96b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4c84d814-16d2-46c5-9304-45591b4275a3"
        },
        "item": {
          "id": "0f65f842-3ad1-4d4d-b594-b9ece4f402d2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0808f0b0-ccf8-465c-8fce-1dc19e922d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc762fa-6694-40a4-ae97-6a0940a52e3b",
        "cursor": {
          "ref": "e725c601-3bd4-428e-b8cf-fd3862de2f44",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b8115353-d56b-40e4-9f44-ef6f5bbdad98"
        },
        "item": {
          "id": "4fc762fa-6694-40a4-ae97-6a0940a52e3b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d2a79bb5-e6bb-4758-9cb0-9f479a997774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c3bd23-29b7-4066-a7de-9f7897108c97",
        "cursor": {
          "ref": "4df1c964-01ae-4986-8681-823835a626ce",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a8a2acaa-3d2a-4c77-a778-9bd35cbe199a"
        },
        "item": {
          "id": "e5c3bd23-29b7-4066-a7de-9f7897108c97",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "94b96313-53a1-434b-a6ec-ca04d8cf540b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7b62b1-2319-46cb-a5c9-1c1bd88b9c8d",
        "cursor": {
          "ref": "06e35e65-8790-4226-893d-cc8a6718c6c0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c3a89a52-820b-4557-81ad-4f866ddbf4e1"
        },
        "item": {
          "id": "bd7b62b1-2319-46cb-a5c9-1c1bd88b9c8d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d31889da-f4dc-40e9-8b61-a9abbf3ef039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d36b38-29d1-4e91-b4b1-c231c2d6af43",
        "cursor": {
          "ref": "e25fe561-1dc5-43ec-96a5-40c4042c6793",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b923b15d-929a-42aa-b353-9f387a7cfa44"
        },
        "item": {
          "id": "82d36b38-29d1-4e91-b4b1-c231c2d6af43",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "aa7a9f5e-b70c-4736-a56c-4b55dba2ae1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3950b5b-1f1b-4594-a0cc-4dc996a23e8e",
        "cursor": {
          "ref": "2fa364a7-cfc0-4dc5-9ecb-20841789744a",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2fad131a-35e2-42f5-94f5-d74d44f828db"
        },
        "item": {
          "id": "d3950b5b-1f1b-4594-a0cc-4dc996a23e8e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "884c8960-deb7-4a5a-b109-ec974f029146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ef2440-dc0e-4842-8955-19f75694972b",
        "cursor": {
          "ref": "c7e7f1af-f04c-4749-a785-0b17a20bacb2",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "28a43c8d-7633-4a5d-addb-a7057b070846"
        },
        "item": {
          "id": "81ef2440-dc0e-4842-8955-19f75694972b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "28a6b2b0-6ad3-4a9e-9ecf-44fc2d8af6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf849ff-a52a-4a37-9206-60b27244f22f",
        "cursor": {
          "ref": "f1ef0951-0cc8-418d-bb0a-7277f6caca81",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b85a69bc-d734-446f-a54e-3b04f2726d46"
        },
        "item": {
          "id": "0bf849ff-a52a-4a37-9206-60b27244f22f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "25f0d8a2-022a-45aa-ba3b-1f0d22e73038",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8587064-8fde-4344-91f3-7958d65cc36c",
        "cursor": {
          "ref": "02d70754-04ff-4ac8-962d-e01cde080565",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2dfe0438-7fca-4485-9e13-775e18cc5066"
        },
        "item": {
          "id": "d8587064-8fde-4344-91f3-7958d65cc36c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "43a86943-f8b8-4f85-ba07-2c27a76195a0",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "15939e30-da59-4be2-9d20-909be2350d15",
        "cursor": {
          "ref": "a7d119c0-48c9-48fc-b8fe-2241c58a652d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4f09f934-8023-484a-a211-c6044d5411c5"
        },
        "item": {
          "id": "15939e30-da59-4be2-9d20-909be2350d15",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8e8b2bc8-a0e4-4f5d-a139-41cfade5ce7c",
          "status": "OK",
          "code": 200,
          "responseTime": 5081,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5a164c-a98b-4882-9823-15dd31c1d537",
        "cursor": {
          "ref": "09bbb69a-2a37-46ba-899f-3b1e4738c846",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e26873a1-2426-4d72-a21e-0379d2694cef"
        },
        "item": {
          "id": "ad5a164c-a98b-4882-9823-15dd31c1d537",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e400db05-09cf-450d-a06d-a1f793772396",
          "status": "OK",
          "code": 200,
          "responseTime": 3024,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc85ea4-4609-4fb5-b5eb-204a3de9d5dc",
        "cursor": {
          "ref": "2fb8fee1-41d7-47f3-886c-d0475ad981a2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6558881c-7741-424a-9eb7-9ced82ddb723"
        },
        "item": {
          "id": "afc85ea4-4609-4fb5-b5eb-204a3de9d5dc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "59679788-d827-4d11-958a-e210c3fb392f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc85ea4-4609-4fb5-b5eb-204a3de9d5dc",
        "cursor": {
          "ref": "2fb8fee1-41d7-47f3-886c-d0475ad981a2",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6558881c-7741-424a-9eb7-9ced82ddb723"
        },
        "item": {
          "id": "afc85ea4-4609-4fb5-b5eb-204a3de9d5dc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "59679788-d827-4d11-958a-e210c3fb392f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2aedfa-1cbe-414c-b26c-d71d69d381c7",
        "cursor": {
          "ref": "8bef1baf-9e23-405b-ab1d-f5068376e2b0",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6b9acf5d-17d5-49d6-baa2-d3b76c66c5bf"
        },
        "item": {
          "id": "2e2aedfa-1cbe-414c-b26c-d71d69d381c7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "455b54bb-66b4-4f29-a70b-541c3d28cce5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5594fc8-9d51-4be8-886e-c378086823c3",
        "cursor": {
          "ref": "83c8372b-b8b9-45b7-9038-65fd65edce09",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "78f9cfe8-6ca4-4f36-8bce-13140cee1f1e"
        },
        "item": {
          "id": "c5594fc8-9d51-4be8-886e-c378086823c3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5c22301e-ec03-4388-a6b7-4ac16b290642",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}