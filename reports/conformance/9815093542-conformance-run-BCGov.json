{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b23ffd31-24ad-4034-acfd-c688555a810a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0f2e3a8e-ca3a-4fc7-8a7f-6ef19f80352c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0c1edbf3-7829-4a85-b828-191afa90b872",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a1172dcb-3c66-42aa-8dae-06da2bcb5d70"
                }
              }
            ]
          },
          {
            "id": "da2a4150-7a1d-45e9-9b0a-99c0a9990971",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "780db43f-b8fd-49f9-8f1f-b151ba868f33",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3f9b97e6-08f5-49f1-ac50-e6eb9ca715f0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0b43d135-1d13-4705-962a-ef3f9325c1d9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "10398655-c88f-498d-9610-69f371adfec4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eae1d189-4278-4dc8-911b-e5ff6e371314",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "baccd728-d5bf-419b-ad4e-c56f1fc6a79a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64955b73-d965-414c-9572-e3d208ff117d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ebd05c7-57b3-4c7e-9dd9-2a58971936e9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44053f61-0286-4c63-bc1c-d8007fb62058"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b2e64a53-60f7-4318-86fb-7658e856083e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "092d1442-51de-4384-81f4-88ccf78a2d73"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ceaeaa5-6075-43d3-853f-7c3b7bc24d41",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "30ca1447-7ca0-4045-91cc-aec558120c60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6df9c7f-c263-47dc-aaef-971f897e8e69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6d96e53-b2a2-4268-8cba-72f42c130c63"
            }
          }
        ]
      },
      {
        "id": "c27fa1ca-c2f0-4d16-9aa5-9766bf6e9050",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9ea25b1b-55a3-41d1-9d6e-aece43e2f9a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63efdb21-9911-4dbc-b2f7-8fc924b2549b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa352456-a0ba-47f1-9b70-e046653c9143",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66f32b3-1ac8-4d8a-b42d-b25a1639726c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcc02a23-f455-465d-a177-e4c8b241c717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be52631-711b-46b4-9308-ed6bead95fb1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a184cfa0-9b97-400a-9dd6-570cd4d706ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a69e002-79e1-4408-a415-630b83432dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad80ecdb-983d-4982-aad0-54808b89c147",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dd85e8-ab83-455b-acdc-a3e31458fe43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ced11dec-3e14-41d2-a9e5-e4577176991c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58391f92-9b07-4937-b007-03e5251bdaf5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "950adb14-2112-44a3-8f08-ea8b84609af1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cebcf26-cef5-4634-a4fb-6ef3502fe88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "937ff665-157a-4f1e-b464-1050911f330c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efc9e81-d165-4624-a826-0832db9a20ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978bd33c-149d-4629-a428-f4a3cf0e985d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "84f94c6d-10ce-45f1-9fe1-62a57d0c7169",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2df46216-19bf-4663-90de-6ebc2df1c48a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8aa95856-6310-4130-92e3-208139da73f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6626f3d5-71b8-49cf-91ad-cfd49e296d5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7152410-8b04-4fe8-9bba-c9fd93c70551",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3c06c770-e7ce-4520-991b-6863dcdcdab7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "808db144-e7d2-4fb8-8d22-420a50362f79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e20943c-ab35-47aa-be97-99f9b6fc0c5c"
            }
          }
        ]
      },
      {
        "id": "bcdb7056-7a28-472b-9263-69ef4a820a4f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f4bb3aa4-001d-4456-b6b8-cfcd7a5829b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c37b8d4f-d803-4578-ada6-4be4ae26e6ef",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "389a8983-7e08-47e4-b250-d159fec77ea0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181b8ca8-b4fd-4a9f-b7d8-8d9c6fa04385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9056f4da-86e7-4e60-963c-5e78d9b66d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b167cb-d2ea-4bcb-ba72-e58fd24f668f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78279ce6-b5bf-4451-b6fd-15830c6c9e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3f504c-e1ec-45f8-9307-a24d211a5789",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfe3810-576f-4285-ae42-bcca7354c689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7ced6f-69ca-4829-917a-a0b14f74659f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad8d383-fe11-4b86-b073-fedfabccddb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7073175b-6ff0-4a12-97b9-57e2767f838c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bc9268-b17a-4f8a-a2d8-986eb4dbe296",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5714ef0a-fe7e-46b6-8f88-8e352236aa9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c8105a-8e1b-4ac9-95c7-79e1af97e4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5201d8eb-0d5e-4d75-94ff-3bdc2a516f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d3adfbd-3a31-40f4-bf2e-3973e173f463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db22b270-c2e0-47f0-ad4a-44e454140f3c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da25f15a-46a7-427d-847f-9a2f75e5efef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91de07ad-7e71-4f30-a998-60c16d9aec1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec99895-f4f2-4f34-8f25-834351633992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18ebbd4d-76ee-4f89-b686-dd44f845cb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e75f9d-a740-483c-9963-377b8f40c98b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48d21db-aa25-43fd-a8eb-955f8b7ad4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0273765c-1e8a-4e15-863e-29ea17e75335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30cb1d4-7d70-4764-8151-abdef54ba343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9574dbc-a7e7-4644-acdd-68fc1f58a44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ba2241-33fd-49a3-88b1-45c154592b2b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d92748f-5b4a-4aaf-a7ef-f07eb2408aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9ac02b-a3d5-45fc-89c3-83d993f12b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b4a6dc-4b61-43a7-84eb-828abef4b722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc9d0292-1637-4699-aeb5-fb84e6ca7f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233077a3-77c9-4539-b09a-57520eb4d595",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a60db1f-9893-47a7-8351-bd29c2444b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37810dc-b32c-418a-a566-5605283fdd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3237ccc9-3093-49d7-890a-76874940b8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9ed7502-e02c-43a1-8c68-54b7b2b997c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e655ad17-8f8f-4718-8c78-6d9ee04b7ce1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "543c7e4d-22f9-43ed-81a1-81b343791630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261a6622-65d8-4ae6-b2c9-de565130203c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cdb2ca-9d03-45c6-a85a-fb79924cf8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a08f7f5-ed85-4e80-b45b-7f6e0967d8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89711e8-e8ba-4ca0-a90a-0fd77c3c8acb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0988650-5f12-4b9c-ab72-8ca481e8cea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c60f95-1508-4fbe-962b-4829e6d9777a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8f6e89-7ed2-4d0b-9d01-f24d83d4635c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43653594-ac24-4de4-b63e-cae9bb30c917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657f18a4-ee99-4bb2-83e4-58a06e973db6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295f785d-6a87-4898-bf57-9ab724ef7076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c241ebc-373e-4ddf-b373-84a0f48359b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bfc415-898e-4945-b386-1bb4493fda5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "395b3b46-47a0-40bf-93d0-c4cb9969cddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd23018-4bc6-4313-9d9b-050821d22815",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741a5415-b87c-416c-9c88-d34a522642ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455fcdb9-ff62-4e8f-bb94-3b36d44362b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a481b25f-e955-4fdd-a16c-2d8b7a769671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2bff112-86ac-4ee5-b7fb-9ccac8c5aa2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f1367a-9204-4fd7-8098-93b5307dc99e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa75b68e-8c60-46e0-915f-567297da2b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d43d38-663f-437c-bf26-5e3d38bf147d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf6db92-f6dd-4bfd-9bb6-c7e987301705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "531213d9-3fda-48d4-9030-2b311785553a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926b566c-3c43-4c4a-8bf2-7afd901b2d7d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10747000-50a8-4c3e-8bb5-44089c3bd27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea5a11d-45d9-435d-b998-24bd57527a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8143dad4-4339-4f65-9cbc-201a46dd98e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16b3548b-ab12-4efb-8d61-069558643e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebd930c-405d-43a1-901a-264cf2eb2028",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355ad667-18ec-4bf8-baaf-46cb13c9150a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17808c86-dd3e-4d3a-9b9e-91af05b1ae4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9301198f-9b31-46f4-a3a8-b7634c65015b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c51096e-ce53-40dd-bbe9-4a340afbbc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc124ba6-8730-45e4-9f44-1094a5a7b84e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbad5fd5-56ab-4603-8b2f-456aabfb4862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51cd1c7-0b72-40b8-a7c9-0c5507142c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09062d9b-0caf-43c1-a7f2-028a35f03644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd8c46b2-1a28-4f34-be77-4874f4c64bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17da0d4f-7619-4208-8aa4-3ea37e882f78",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c1f52d-c2da-42a1-8d51-0349dad399c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c03654-0729-4ac0-86de-c3e9e863fd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2470e8a-beb9-48a1-a2c9-1106f220ba08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccbc9076-7fc5-4e3d-bf7b-b6177d0f9cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c55ddc-2c24-4c91-a8a5-bfaf516ac24d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f7ff43-60e7-421a-aee0-85222f461b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc37be4-609a-4019-aece-ff8b78d6333f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1344d6a9-fe5b-4f08-b9e7-9cfc1cd38383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "585762ad-3cd3-448e-be0f-80036a60c5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662d11fd-b54f-46b5-a552-038f4e45b34f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36027237-119e-4141-ad9d-5588c5613c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aee8e3e-ec48-4fbc-806a-eae727c7f58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ed4c5f-a1bf-4071-9d09-f97f8a4f425e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d76189f-1201-4b41-8b3b-e0c96b9f686b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ab5726-ab9f-4974-be2f-8abd5a6f3663",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d4c0e4-9ad8-4680-8337-b8996a8ba7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d39cb2-add5-4c23-b713-c2e9610c3f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f26bc8-9c60-4948-815a-65363fcaa0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b3753b-3ad7-4534-ba7e-b482a36c16b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd2fafa-b7af-4332-ba49-ac83053b96d4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3a9bcf-4a87-4002-8709-89bcf272386f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3aea08b-98c7-41fa-8f67-d22c297e4178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b4973a-6f5e-4bc4-be2f-92bd74c24f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbecfba-6d20-4c4d-a7cb-043ec07f2e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dd084e-bd24-47b3-962b-a22e0742b908",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785f1330-f6d6-4020-8ea3-56739fb647bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fa39b2-f9ca-467a-94c8-0eea2ba3a207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ec4dbd-7268-4c7d-a520-3495934845f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfd03a6-8bff-49bf-9063-2a70773939b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebea4cad-169f-4499-9df1-e72e2b2c95ad",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1003cbf6-9b14-40c4-b910-9a1941ee24a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0f45f1-2f01-4ae0-942b-24b113f5e992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f596829-c8c8-4561-9bac-4d9dd5e7757c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "072e581b-05e4-4110-8c6b-8af0be423e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bef6ad3-79f8-4d93-a42a-55d3abe152c6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77df148-f889-49aa-a7a0-f4df97a32fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b728c0-eee9-403c-af3b-775d35e29931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45cfac4-22a8-4a73-a12d-676a13602516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "819f1bc2-6097-4560-96fb-c3affafde6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c690ce07-621a-4b17-8cbe-c49f4d10c35c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82376c28-d06b-4b53-947b-d7e45fb996cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e3210c-6913-47e6-9e6c-3f0c26a3a0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899e289b-2a49-4902-95de-f5a1482dd70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "121a8ae3-90d2-4040-a091-59da2ab0fbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e1ba8c-cfef-4edd-ade1-5ad2fe7fe972",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a704148-40e7-4744-a46e-41c6e7a1ff60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903ff6b2-a4f1-4aeb-a9c3-56311d4987eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed52172-fca7-4346-adcd-e2fd59e34899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "420979eb-9a39-44aa-be80-a884f0ec9ee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309ae996-fa0d-4e66-915f-f97117768f16",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1662ab2-dbe0-4444-b355-ec02c1a3d964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed99895d-0e0b-46b6-829e-700c23f45e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6ddeb1-c5ab-48da-9501-1a2f236be74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c2cf03-cfd6-4c29-a080-6efd8544cec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2315c044-b684-4888-8664-0b7e75224b33",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c006a50e-50ca-4985-b08e-ec9c90f52a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d19014b-4519-49c5-be86-2b5d84fb3922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9f6a99-786c-4e50-b5a1-cf90e2b757a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50218212-9f23-4ccf-8e50-233ce7d073ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f8b5eb-5e4c-456c-af07-d892aee82fd9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67648826-d431-4aeb-b243-1d6e1926511d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a1a0ec-6b91-4b2c-b1e0-66174446d79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c050f0-d8ae-4298-a0c3-7c1e94ebe1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4899098e-5751-4864-97b9-e0869338605c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74303288-3d9a-4a0b-8cd5-d8087fe26476",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669857ed-2514-4aec-b283-a1466dbf8a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6f39460-0c56-49e3-8015-bfe6ecdc64e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a744732-a842-42ee-aa23-44c014165d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a27ea5e6-11a3-44c2-9405-3d1240762f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd947a20-181d-4a79-bc59-f0f5bdc7b2be",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3077a6-9ba3-49dc-b8bd-478f4bc98bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c3c312-44cf-4563-8fe4-68b80c3fc858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957da009-0e1d-4e38-b325-2ca58603c31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3931596-a75a-4fdc-b57f-1dc5ff7614c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9963b74a-ef87-4a7d-8c1e-5373260a8a17",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bb81b6-342e-4dff-90dd-730feffe5cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9afbf42-73c6-44ac-b353-c0a1a84fdecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e1e715-3749-439a-bc92-29bfc775f13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1272aede-90ca-4f60-a08b-359aea1e3704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef80b5f-32eb-4105-a1a9-58edb92b6593",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fa9e8e-b062-44ef-bdd9-3bea4cbac2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c7d454-ef46-4ccd-b65f-6f2a1ae58c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666e992b-d494-402e-a45f-1d12b2c98955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d49e8b8-960f-4eb2-8590-d856f2132cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a09748-7b32-4226-af15-f0d196254e03",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619b6feb-8b75-430d-9883-7a0c6f45f5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcaf1881-9cf9-4de0-878a-568145e657d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802f8164-148f-4c36-b226-8108ffa11123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2a8ef7-8186-470f-b552-c97fa8b7f45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63812e48-85d4-430a-bae0-a867c66f4691",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a6ea2e-74a4-43dc-a626-03bb52a6deb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44239f7-e1c5-4e93-b95f-f1596c8af9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4479a8-563b-408f-96e5-fb681d04c668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92eb055c-9edc-43f6-a7f0-b826043bd045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f15e7e-bfe7-4f2f-86f9-5e8c6708c2e6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6d6e62-d04e-4843-a3ac-1bbffb676120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b53abf-7e0e-4b27-8068-2aa5a841c81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c9808a-8aae-4fb5-be91-0f8d3d08a38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9efbbf24-3c87-4a03-8b3c-d7fa5cfeb7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f17b8a-c53e-4eba-9f5e-65720e067ad5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae56aa9-725b-4f0d-94ac-05c484320cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ba7d5e4-1fe1-458b-9031-7cae27011e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d29150-5087-45ae-bfc8-a4180dff3431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb663009-9102-4f99-87ed-3115e538bf4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555ada36-66ad-4435-b552-91d51c544605",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d6a1de-17dd-461a-ba19-d50427b1680b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f685c6ca-409c-4a84-84b8-03dd6876de43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d6299a-bd8c-41f6-a7d4-b248d9cf96c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4095331-5cd2-4b8b-91b6-de79bdca2811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61a8bdb-2856-445c-b00f-17f16767ce34",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c0121b-2130-4a70-8967-7fca45873980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa35ed3-30c5-4008-8818-6752f285658a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617d6354-a273-4de1-b32d-3202d23acd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5800ed-bf23-40a6-86cd-9fafa7841fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3eec85-43b1-41ad-b988-6eeda0c995d9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4875503f-99d5-4fc0-b19e-693af7d3e15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2efa971-d208-4cde-8e4a-896a2d7f9f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6eb504-0f57-4d57-833d-4ee34b6ae28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "88d72cdc-96a4-433f-8dd0-88fdfecf8f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc1b422-6118-498c-b82c-33fd5616c978",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9394b05-73ab-4c3c-9803-c9b1d128e51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eed395c-0e56-46c0-bfdf-3d12fefa57ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fb3567-34b0-4657-92b9-56886c99fd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d71a147-99e5-4abf-bda0-2b722c56064a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9ac6f9-78ab-4581-8955-1446a8f51039",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1676a0-c76f-4992-bbae-183a52659717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa867bdd-d2c4-472a-b1a5-622d13e8eece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef33e85-8e36-4e71-9831-a69d4963fd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d19f558-fd1d-48fb-9480-ae833e42204b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78380abb-0d51-4c8c-854e-1586a922d09a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77390dd4-ae23-4f9f-b637-49574a5cf0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6422db1-ce73-4c00-96a2-fb5e1cf5ef42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f60600e-579b-4271-b06c-c9940eb54784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "70dd5d58-95df-468f-9357-f57f60ed454d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c039cad8-0219-4ca1-b310-7c178f3aefd3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c682e87c-09e1-484c-b481-d9b267defc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba63f00-80c5-4106-828f-0dec07a4469b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af74366b-3c6f-44e9-b629-32924136da35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a57215ab-3234-4ea2-8bab-e62e38ff2a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4659899b-34f2-4719-8417-ccb25f2a883b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448038cb-bc24-4846-917e-abe10708176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e969737c-bd2b-4eb4-ab6d-14a0a18db10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5287f3da-536d-4ccb-bd4e-ed25d77bf05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f7fe289-8a28-4d63-bbc9-1cca1b0d6db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfe89c2-7167-47e1-8604-fb797d26caa6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a93b67-4bad-41d8-a287-5c47d7538bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea9d847-502d-44a8-934e-91d413ef5f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1614c4bf-6935-4aab-8f21-2508b5666c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e9aa5d-994d-4480-b896-079b10f401e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c529b1f-0843-48a7-b5c4-cbb4f42664b7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40fb61a-64f6-4135-8ac4-10ecd2485c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10012596-c132-4d73-986d-0e05b686ec3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc158086-b105-43bc-8afa-f6bd17378836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "458a4c7a-1404-4ef8-b08c-e659c9ed3967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b79a8e-3ef2-48d6-a0b9-200a0c7cad82",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f963c26-5aa7-4f1c-a87a-b456c37a4745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c772a659-7c57-4e24-b65f-7c07ce3e8667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd436c0-2c91-4751-857c-025a7611ace4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a48d2363-af46-4f3c-a24f-f49d9e7c1053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6a5212-c258-4258-a24a-334ef5bbfcad",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9990ef-c5f6-42a9-bff8-6ca076615081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9a0ce5-1322-4948-ab77-b8cde4dbe818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923604d1-d086-42d5-a274-afcebb1c7115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c13eddc7-51e7-4cb1-97be-35efe4ac012c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d717f5d-0a0b-486b-9775-de5d7bf9443e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b780a40d-8a30-46d1-ab19-98c0fb4be6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4198a1ed-0824-4c62-a4a3-45c0536bfd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc682397-bae2-4198-bb46-a187bc904b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd487447-ec9b-4f13-8e9c-6b8831aa6945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0c6b7e-f07e-4357-bb64-d34f9be2b3e2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c9738d-a917-4fd2-8867-12e8154dfc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16bd581-8b5d-4a3c-8c7f-388c161d5d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fbf521-b78a-404f-bc1c-426424b4c931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ade8896-581a-4152-a604-7135476b7ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348e4680-6af5-43c4-ade3-2376775b4a19",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa77467-88c4-46a7-bfc2-15d53ad6b187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9808b2-58f4-4c88-bd69-96ce37562f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e3f828-1906-4d68-b49e-5286ec252935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc465d2-30d5-47f0-8d37-ed8940dbce52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "700f79b5-c495-4e16-a833-e329d17d97ab",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906239b4-0b8e-4e55-af61-cf0b7abb13de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea2e925-7843-43a6-8d34-aa7acce8b8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9944977d-9b22-45cf-9a6d-260b8f65c1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "628f390a-defd-4809-b270-15d2e52cba51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b632fd6-aa25-495f-b3ed-ea559080255d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da2e487-05a1-457d-a2a0-56a6caebf510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13a8a18-82eb-4413-8925-e174751ff35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79815aa4-32e4-4e85-be68-452d9680f493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f455fa13-d515-4ad4-9b2b-48e86bc84237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db7fd60-05ba-49d3-aa67-8ef81c7fc6af",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f351fa-99bb-44bf-bb4e-229ce8dcb207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab112dd4-4fba-4254-8e14-bfee48b76a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf78bea9-9aec-4714-be86-db2f1d6f9f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc54308-5fe5-419c-8f62-c08e3e10f3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1c5997-f20c-4e2f-98e1-b3d61e50d7eb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d87270-db3d-4272-9c67-1dd25676c7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f7089a-9c75-4b20-b670-5c06730d8f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff2a0ba-6817-4f46-95b9-43b9c60be77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc71183d-07c0-402c-a66e-291971a7fc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c625bea-1702-4778-99ed-0038bc242e6a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb12072-bbec-4b7b-b214-beb2bd81a586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46f5eb6-7de8-4da1-9ebd-349d84dc11ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e66eec-587d-4666-9702-850e65cec4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e73a3963-dd91-49dd-96b3-cbe96e291cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd94d73-2ee3-4912-8858-92ed8ae0d475",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c78928-82e0-4d8e-a3c0-c6b76bfc3617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b49176-9cb6-4781-9330-f0ff142099f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50bfd7e-2e62-431f-9aa3-3c4e8c4e7b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1571f39e-193f-48f9-a4b5-8de35f054117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab98043-f68e-4d00-a61a-03fdac84e91d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327ae1fd-50d6-49ba-a3ed-39193d57ddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb10db94-1c33-4104-a7b2-fa6af11078ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4e10bf-0d18-48b0-aeaa-0ecc78fa3387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdba13d3-d5c5-4e87-b55b-c67c9fe8f090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3801b28-4fd2-424d-bb66-d12ce1dea26c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672fcad4-21e0-4e54-a468-a12a73f46e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ead756-6bb0-40a9-afbe-1f3dfc1df808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed82e173-231a-4e7d-91d1-7b0245e938a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5b7317-1e8c-443d-8e42-c604d44e7c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42d794a-d5e8-47b1-b57c-f0db120d625b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04445341-2501-4a0f-ab96-597669762115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7110c919-92ac-4304-b1e1-6f60e1a9c0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f58896-1cb3-43fd-97c2-2f287570b018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fd7e08-18fc-49c2-9c75-105429870958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58163821-f3e4-496d-a3cc-0946d00452e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe1b2fe-37cc-4a0d-92c1-febdde499846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5855f0b-e700-47fd-a1e5-cf26b1e3b079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394e4cd3-d120-4ac5-82a4-c2a9a38035a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "221c251a-ed59-45e5-8e65-cff7535c6cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe2185b-b994-4018-976f-9ace2837fe38",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557d6d61-0b5a-437d-8b4b-64c18faf0df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eee7bd5-98f2-4a0b-9d5b-e193faacfbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e13a436-5686-4c63-bf7e-18d4ad415aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "01ec4b2b-4e72-42cb-bc8f-611fd483b296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082175be-8dc8-442d-a502-c692c05757db",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08babe2-3ade-4034-92ca-093e5437f5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3eaf8ea-93d0-4f2a-bd43-a8fe038ce6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74faf29e-d890-4576-b5a8-1bc148ebd591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb46669-25da-40e7-a304-7c10f7acc9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adaddf93-ee87-4391-8945-b419371c868d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc828e0-c6e5-4074-80ae-b3eec855cb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47ae869-a4f2-45ec-b792-5dd5bcd13202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e839a873-2b5e-4aa5-bdf6-4e15d82a97aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b5b89f1-e8b3-47dd-b786-7adba6d1ef05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07abdeaa-dd96-4ad1-b421-ef5268508458",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b2cc2f-16c4-4347-a589-f044766502de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40cce9d-dfd3-41e7-93e5-e4d2cec616a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef7b1eb-f5d9-42d7-94fa-f20cc78c2a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "318c9376-0015-464a-b22a-f5a823489708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320138a6-c24b-4516-afb6-7d6bbf769764",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ff0351-4605-4e44-a563-fb11426747c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ebc9ae-7aa1-4baf-920e-edde587ea684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82637506-7c42-4438-ac9a-642950d76179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcc8d4d-9dd4-496a-8517-1a78f7abc695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e4835b-277b-4895-bbe4-9d1f8b881590",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fa0f40-164a-45e7-b6f8-07abaf0c693e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4344cce5-978f-47f1-8f7d-5cb66d3402bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe38419-8690-4e54-b2b0-573ef051f4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e047de67-ea95-45f5-945f-34efcbc59fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a8b408-6b39-4f1b-8302-84f8f5c667de",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf69b26-8d4a-4341-81ee-5e8580f11c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50649c20-ca36-4ab0-8157-5da1908b77ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271723d1-8c76-45de-85af-93ec42b1fa73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad88571b-0e3c-4ec7-b50d-b547fd207518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcd7d0c-ecf5-4b5a-9a4b-376ed53e6e07",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8c4893-d6c8-4bac-8900-330ad5ba9e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967ed6c8-1364-42c3-b125-55ece53cb0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4399478-4136-4acd-9e67-f4dbb5d99e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e64aeab-54bf-4978-a30b-0810180c684c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f0f273-ac7a-4246-8051-3866b12dbae6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa7d415-e105-4c89-995a-dca1580ce283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173251b0-001e-4bdc-a344-280c3924609e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ef593e-8efb-44be-a1ef-7a743b439c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a8e7fc-932c-429b-bf22-17f4b7cb1620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3b1e51-60b4-46d3-be26-a0f5ed4c938a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83829376-d6b6-4393-9dda-c20ff4789cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e66bd5-7d63-4be8-96e0-3ff71893fc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5309c67e-4309-4b5b-8e87-87be7d1c3c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0df44fd0-539b-4b2e-9b97-2b05316320b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0216b42f-daa3-42f2-9acf-d72599a966dd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251f502d-3895-472e-b028-d90b357896a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9fb257-f903-4308-a1b5-eb3e127f0293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae337e2-5096-46ac-bead-53c68fb8e2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b822dc1-07c1-40be-9423-192aac0e6506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2737ac-01a5-49ac-8215-a5286377c294",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb152593-7a5e-49be-ba45-1c8da4f66a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d68a892-05df-4d4c-8efa-3945919dceab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279b9cfc-314a-4e33-af84-0662c4712b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94ab5dff-e56f-4e5e-bc35-e83ad1890358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b9c17d-ba4f-490a-aed7-af5905ec6560",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c18a386-53c9-4275-b82c-7ed1d7eba224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70617371-41cd-485a-8b51-46f9b2e04c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bfe2da-402c-4332-a521-8e14cea90248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "679ca071-8841-495a-8be5-7dcca5f253a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9eafac8-989b-4968-8f75-85f7d7aac37b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9263304-f7cb-4fee-8f5f-d0ca2b90170a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b32b250-fb69-48e6-ba3a-d5e7348bddfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9acaf31b-509b-4198-9644-332e7939272a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "601ffd82-a6e6-416d-833c-01e7cec941c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796e35b3-1dc7-47d4-b92a-e898b9718b4d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28137e12-5237-4bfc-aabc-c0fc29267dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd44bc8d-78f8-467c-a1dd-5ba4482303cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a3a37d-d0ab-4f94-86d1-a022eccb4355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7d25600-72fe-40ac-8e1d-3c9cf5346404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a203a69b-8d88-47ab-a2eb-8373d3f51c50",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac535d39-e533-42d6-a263-a7fa22336dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a592c105-67cf-4745-a4d7-f87a4d31d54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fc5e3a-19a5-43c3-bf9f-d374c26d84ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99b5f973-7321-4e3d-a9d0-41254b0843d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b612903-00ee-4914-ad13-7e216f4889a1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3251b487-1731-419a-b14e-b60aaea02966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dd029a-60e0-48d6-bda3-dfa66cbd9397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5455552d-3886-49d4-993b-001c37b28899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68765f2d-7e67-49e8-8e2f-0c6db1e3e32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e3e7e8-0bc3-4d07-95ed-27f42c41e253",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a0246e-24d4-4c31-af60-80efb73d9187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafb4398-cd08-4331-a0e4-592c8b4517bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6000d104-2c3a-43c5-be74-22cb167204bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2d905e-de86-4f91-a99b-6b55def1bbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b195985f-72f6-4978-81f9-c2582d365c81",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0a009f-7b34-4edb-8b88-1b66e3c484d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e42385-d54b-42b1-937e-9126bd6254bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dea7d8-da30-490f-9cf4-8c845c9d95b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5908c5-b07e-4afa-8118-20412e0f3920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3265b7-13ca-4bc7-b522-60ec985000da",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f55227-f9f7-49bb-92fd-92a2049a0d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e8323f-9102-4c7e-9a5d-90ac5ae581e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c72f42-db82-4ede-9cef-9c16f0ae5a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b330f77a-d3d6-4b7b-beff-63090aa45456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8dc064-970d-400d-a6f4-9f653a102110",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3897433c-09c6-4c1e-8ff7-8b37d2395838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391d87d6-4c35-490f-b1c9-36f9e8d7d4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fc4862-1ec7-4e4c-a93f-efded7c8fa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2a6dae-fe40-4734-8860-d07338c9fa64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1b2691-9994-49ce-920c-024a1abe2ffe",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a5d217-3e43-4a35-9ff5-27fc42d24eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefce87f-37fd-4d3c-a191-b8f90b0e7ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0cab19-c2b3-48e6-aa29-45b3f81550a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5330ff4-89a3-4d4c-8c42-eb6109bfa021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fe79b7-9f07-463c-b250-91068e42e414",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0f260f-752d-428f-92a3-36648bc39e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a97e31-8288-430f-8007-17fad21bc8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccc216f-fb31-4e5e-a956-8c8bcfb5e03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0fad277-35cd-4372-a677-0a47dd26dae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4329128-b466-4b7a-8812-778b3dd94ec2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad2deb5-fd7b-494d-8477-351ec59f3531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020aa20a-0112-4e9d-8cd1-aec3efdde2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ec5b2f-b6aa-4511-96e6-791e8da01b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d73512-f7b7-4a1f-8934-998c5326d863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a81ccf3-4b87-4500-a033-c205259614ee",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9aa311d-9b25-46b9-8648-bbc8f09200cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "130341ed-0ee4-48bd-9a0a-e748fc6ff2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae72c35-f73c-46d1-8135-b7d4fe1a96ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b5f89e-f4a4-4ba9-965e-acbc6caddf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23de3f9f-a8be-4399-a838-3e085e375a91",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d519036-cc2a-435c-8831-d57407baadcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3dde15-3444-4c75-a970-951b97b9d870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55c7646-fddd-49e4-b940-9d911d9bbf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "91ef065c-4fc3-45b6-92a3-8fe400cd63d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6528ed8e-fa12-48f7-b0ee-6394e5b34951",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8fbf26-af20-49e0-8be3-5e00c3ac445c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a9e00e-9483-4292-8cc8-5b1cd52d9a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5090c65-d088-4dfe-8872-13d49cbddc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b75a9e7b-9849-497e-9a7f-0c93ab9b38ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a6976d-fefd-4f6f-8b63-8582a8958a9c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd790fe3-13c6-4e10-b355-39b4767ba1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c3c678-fdb9-4ffd-a235-0d65e102aa4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3453e97-8a80-48dc-a10d-123967981382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9c8f8d-c349-4867-ad35-7609bb3fa177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd69da71-1294-4ac3-9f35-100c7459e54f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2668af70-961d-4cc6-9275-96185e173621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c7fef2-1918-477d-9c8d-347ea102d391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaaf7af-a7f9-400d-bb52-8cc1f6ef5834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd4740c-9011-4e69-ac08-513506ee7808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ed7ec2-ce3d-40dc-a081-f7e0271c3304",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2e75c3-375c-4226-b6f9-d5749b378f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04c33e5-a548-44d5-aa60-02553d196a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527e5858-275b-41e5-a1ed-5697e58c3215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "82a3ff44-bbdb-4dcb-a032-3688662a8139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfcda51-b39b-4bd8-83a4-f04711ff333f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e40815e-e56b-48e7-ab84-20497542c705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "619c6fb0-0465-4f71-b237-e6b875fb4e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e261f5-3d97-42a7-a3cc-0c0e161abe2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "21413173-a84c-435d-bc74-cca1c7f647ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a92f8a5-05a4-45ca-b18c-6004dbe7b195",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a491a8cc-a7dc-40f9-b4bc-c5b9aa0f070c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d658a260-910e-4387-b15b-09b726bd8088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "375a78f0-4af4-4dd5-9944-c5bc17292437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1afa3d28-47a3-43aa-a6d6-1dfc0d0d798d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d196db63-d0b2-458a-82f8-d52b66ebfc2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2b882b8-15a9-4542-a2f1-8faca827ed7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1b996fe-f008-4a13-9ac3-fb1fd18b835f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce9608cd-8173-479e-93cd-516c0e42bdc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7320d1d8-2edb-4117-94c0-802d9badead6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce2848e5-61aa-4b9e-ac2e-c535ac6304fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5191ad9a-b909-477c-a283-072108cf72ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1db7e04-1e03-467b-ae07-f21011657c4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7443689b-98dd-429c-9ea8-e14b3f4f238c"
                }
              }
            ]
          },
          {
            "id": "85554214-d39e-4718-91d6-ea142fcb3efa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c25116f-2652-4b9d-a256-88ed01a41692",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "93562d73-813c-47c1-8dfa-8da266637f03",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe175a0-f0fc-4074-9253-674299fc738e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5e6eace8-7792-4371-a321-8ce0ce8c0ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0d2042-4613-47ca-9d32-855333b01fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee8a325-1ec3-4227-afec-4c0bd52ed298"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cc7085a9-263a-4b91-b1f4-87981183a2f2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87194d39-4d8e-484d-8379-b55e2bde824d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f173dd11-8416-44ca-94e1-25f5ec86ae99"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a4095c9-da5a-4242-be0f-2469d7945825",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "476c5998-7118-48c5-92e1-567e3e0fbc2e"
                    }
                  }
                ]
              },
              {
                "id": "b5df7e42-df61-4f9b-b5c8-24609b4fb6b3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1d611f4-2c58-4dc9-9979-ca7631893695",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fe17568-e587-4b12-a035-1018d2fad93c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de516146-9760-4b4a-8534-6a0720f7ba5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e4e4c85a-8e4b-472c-9933-2b47dc9ff402"
                    }
                  }
                ]
              },
              {
                "id": "0d24b7ca-5f37-49d2-a4ee-355e31e73d9f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50278fe3-2039-4a2f-aa2c-be207d394bc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "989ae8d5-2f15-4723-afc5-483977ae3010"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b4d5901-adf4-42ec-88af-9237572a5787",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "90661def-8d19-4f9c-8483-371f1a48e067"
                    }
                  }
                ]
              },
              {
                "id": "32213507-99cf-4119-a1a7-be4f43486c43",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f8058f6-948b-4dcd-bbe0-c0d03fa8a845",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd6169af-67d8-426e-8bab-867cbdb0c69e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccd6e0bb-ab6f-40f7-94ee-258edf777f76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ebdfb27b-b13f-4598-ba7b-371003099448"
                    }
                  }
                ]
              },
              {
                "id": "db566618-73f7-47dd-9530-4a757210e73d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbc306e4-359d-476b-b391-3d2c19321f69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "088cb580-8d9b-4e42-b534-e918ece49d41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0eca640e-19b1-40a6-8575-829d55be476b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f5395e12-ddf8-4921-85e6-c96643a782c8"
                    }
                  }
                ]
              },
              {
                "id": "314e9af8-1126-41ff-aa4d-099cbec2d6d5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e33641cd-5f17-4015-89f0-ac5453a2da06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae52511c-88b7-41a6-8d06-124f06e49bd2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e10d8cd-d928-4a46-9be2-6c43832e325b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba015c24-4a8d-4639-b238-1c0b3154031d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e77ad31d-4912-4083-8187-9d731a4e0b0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b8d7b2f-3dc9-45d9-8de6-fb466aed934c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7d30ce4d-54bd-4c93-92ee-2734122ef9ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "933b4e4e-e57d-4f3e-901f-6fbfba6ba4cd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2952493f-1d56-4ae6-98e1-f91e9bd3b03d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ee817a63-0193-4a29-b10f-3e2acee98e82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ddedc06a-0abe-4cd9-99e8-eec02ef6cb11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1446c84f-4271-4275-9c1c-416c7fd19f82"
            }
          }
        ]
      },
      {
        "id": "52fd4db8-d177-4a22-ac52-9a04989a194f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "09fd00d9-cfa0-4d7f-b6f6-fc21260743e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0095c968-8e96-4b39-a84f-ba6adea2d0fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6bdbd235-b47d-44e1-bc70-732eadf458a5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbaea9b-b833-41e1-a118-0efe60bfd359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8d3829-8702-4ade-bb43-a89c3589a539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523fa10a-60d7-4e5f-b7bc-6d5be5903524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "59fd4f08-ba2f-46fd-b627-abb0e157e917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915fb76f-6190-4b1c-93a9-6e8f11b77e24",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf8c276-8f36-446a-a5c0-62c8fa59d3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e7d892-c863-4f90-8c03-7430455be239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceeee61f-4e90-4b12-984c-37e6d8a20b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3a2e20-95cf-4710-a0dd-826e219fb0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbbfe12-1db6-4eb6-a204-e0d90ec28cc9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb05df9b-c9c7-4691-9938-7265d42c6826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1636af82-5898-426b-9a70-d20601f73309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12cef77-5969-43a1-855f-744a0dac1414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "917943cc-6f7e-41f0-af13-b93002688944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009d7a0d-fd69-470c-ad5b-2b87a7d059a3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddd6dca-5d3c-4ff3-b744-52cb7d9ffe39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d0c5e2-8ddd-4ddb-92c4-76bbd28e5864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ebb388-b04e-4d91-97dd-c1abea48e441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1fd3b3-224a-43e4-8d2a-5aaece024bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3d97d0-0d53-467c-9a53-34e5a985aa57",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f92e5d-f5c5-4859-bd23-9c7940af70c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e917969e-429f-401e-845e-7ddd1c523fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50aa5b68-13ac-4410-8c2a-cefdeb67f9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e196456-6e12-47fb-9372-fb2368b43a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fe16db-5998-4dc5-95a2-f5c63f210e1d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e60e60f-89b5-4fe7-9f92-4bff374eeb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5b784f-22c3-43e5-bdd0-066b7a918456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17054468-8d05-4e6c-9628-fe14b663d332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d743111c-f5ba-4e17-beee-319246cfadb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9bdfaa-3311-4961-87ef-f7c2874a6ec5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b6f658-f372-4d6d-bffd-7b9265eb20c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f5812b-af4f-410d-9034-4cbdf29e60ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a30ad09-aa86-478b-bed8-b762718352b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd7631c-83b7-4c27-b09d-d6ecffb61cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b00b379-09bd-4255-909c-5477a1716b88",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63af2e20-ab12-41e7-8577-f5ea011991cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedcc664-57c0-4f6b-bbb3-079ad11bfcda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a393d601-ba13-4a89-82ee-116f3699de5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32ebde17-eb64-40d2-b9d1-b6312f7df633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c173b2-fb5b-4ab4-98e2-d64aeb815276",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4a6ac5-d3bd-46bc-aba7-9e08eadda127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89def1f2-0675-4a11-9320-552343ed6a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d272f54-253f-4bad-a3ad-548b1a02b272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdc8c3c-c46b-439c-870e-3a84765f5395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cb6b5b-e97f-40c5-a2ee-5a972a31b8c4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df39fe9-3c32-4176-b14c-e93ade5ac2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b730eeb-ae65-4ce1-b5df-3ecb0cb0411d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b932945-de05-4696-964d-03c37ad4ef6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7cd1c74-cbf4-4466-83cf-81110a0a5dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a83a045-cc4e-4b14-b41e-ae2bb403a125",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c76dbbc-2332-4c15-8f72-4cd1aad6a7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f978a4f-4b88-4234-9545-34a5adb63a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea879c9-7dc6-474f-973a-1280a2259989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "055eedca-fa99-45fe-b0d1-96c2685bd82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78279b7c-ed5f-4e08-a1f0-31d2a083e489",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25cbce7-71af-44f0-a9fd-8a8a11b8d10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1b4784-f30b-4f5a-a985-974c6301ed83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f79cdd-c54e-4092-866b-07714cc68855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18c97157-8cf7-429a-8ac8-3fc2c01fb1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171ff897-a761-4004-8361-bf97e10a5dd0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90a3ba0-cbef-4f1a-b539-7fa27a8cf9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cdea1e-b431-4429-bbc9-eae020886d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc7da0f-4743-4b1b-86f5-79535edf0d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4959120e-199b-4d00-934c-1898e3cedf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d08571-25b7-4ec5-a916-0c2b0c1ee035",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d0e2d6-5805-4c50-9ad9-bbdb2faecf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0edc01-fccd-466b-8871-f46587b8a9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13eb4d3e-eda8-42b7-a467-2719d5fc77de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a46880de-72ce-495f-b3c9-bee22e43dcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeebc613-95da-4c03-afbc-b2079453269a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c00cf6b-953f-4d3f-8714-23703aa3c911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d2aa9d-e4cb-4c84-a10e-802377fc7025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97bc458-27a3-4442-bcac-c73c0eb686b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a58e54ff-e80f-45b6-ae70-380a96005661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54f12f9-a537-48d5-bb46-f723bd84c4f8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5210e42e-0ecb-45a1-9d19-23f7ce32cf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7c0e51-3600-4eee-bba2-115bdf9c343b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8916f50-b294-4884-b5e0-d6263aedfffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ada47617-a471-4cb0-947e-ecaa5b77ecbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec5b1b0-cd85-4e2e-872d-388474209f9b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dee278b-3cda-4501-9b47-00b6ababfd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988f9c53-68dd-4d5d-aec5-9a97a7162405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5dbec9-f820-4406-901f-5405044709de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff97a65-44ba-4e6d-8747-f75fe9341918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ac9862-d13f-4e54-92dc-bac74267ac86",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8628eded-5df6-4f4e-8084-ff13382fcbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b7d807-668f-4fdd-b5d0-294d383fefac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a034c69e-bde8-4431-b8ad-850a4f142d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c749f3-20b3-4a05-8124-c9057466a6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f157f6-bc17-426b-845c-5c6cd858216b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c0da00-9e46-4e35-a1f0-b4e77a6ea822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cc0699-1beb-4c91-8f48-084ce154d53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af628bb-82bd-4235-8444-0f8bae51f8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd11ed9-8c10-4f62-a884-ce7337578394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f09aa0-6a41-4f34-87fd-86f0723332a9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891b125a-fb7a-44d7-bd82-960c471cc735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35a15e8-979a-470b-a672-c499c69987db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde4688b-220b-4333-937d-c4c24e7e44e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84823906-9aa8-494c-9568-2bd79eb33075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf07737-326c-4572-ac3b-d31c946cf404",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0dbd66-38c4-46e9-9150-10041b5005c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24229651-1b2e-44c7-bf71-4fcd94ff2139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3ea536-fada-479b-9056-14634d1ef9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19d8c3e1-a195-48f2-8459-a7a00d675b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf2aadf-a2bc-4c97-b0bb-8bd3619e779e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1f32f3-60ef-44dc-ba03-ace0df3755b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fca5b59-dbdb-4fe4-8fbc-354ff61c0580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fc214e-634d-4cab-bfca-9f4edf11ed6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a107deaf-0377-4598-84fd-d350629b8a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82361cfd-ab89-4422-b901-b5f01fa4361b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c02842-54d7-41e7-a588-eef3dab09f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a39058-8671-47b6-a9c5-6e1bdb1bf651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a1675d-38b2-48a7-b334-509ac730b646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac354de-e9b1-49a9-9a03-3837d08ca457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67991b7-3ff1-4300-85c1-cae16b85ac06",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16eee4cc-b520-4342-bd72-d17e24f7cc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b468be17-132d-41e4-99d0-0edc38f0d26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d13f397-fe59-4955-b678-3638325bf5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47cc1b0-f7ee-4add-bbe0-d21d98710611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c3ce5b-f943-4868-8373-8eab8de3c1f0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d8a8ef-2e38-48f3-bca5-6b2c7dcea8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ceb00e-d69a-4d5d-a506-793d4f29c0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ec0490-3579-42e2-9b72-aac4749766fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "201166db-b20c-4603-8a91-5e4eb751d9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b02134-1034-4eca-8f82-f0f372c7e779",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9f5247-9e43-4448-9ae7-cf76e67de352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd99e4d9-f780-4791-87fa-b5f0270962e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173459b0-474a-4ece-97cb-adc9db4d7bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04c1bef9-6466-48f4-b7db-f813bba85e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a778abc4-e6f3-4da2-8e64-998c55861ae1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ebfb31-3ddd-413a-9325-bb83d04c55a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d41399a-77d6-48d2-a351-c0fd73622229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcef8d6-8deb-4c63-b864-ef6a7937453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e69cad3-d191-4eb0-831e-625bfc8e5bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3349617-dffd-4224-9e6b-e0166433c41e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc9f521-b875-42d3-a5b2-7bf870413719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07eeff76-3209-4d45-9848-0d341a2ea7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15ea81e-7e80-493d-ac24-ba97ec297aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c15f2f76-916b-49cd-ad02-900c9825286c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0675a791-e05f-4ea9-8624-c90a956d8ca0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2b2b9e-43c0-421a-8cc9-568e135d90c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bc077c-ba88-4a26-9b94-8507dab563ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d08c67-e79f-4e1e-9b16-1e818274faaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "883fb7be-57e3-4914-a46a-08a4f7b74b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed27d206-01bd-4ebe-bf18-9f93a04601b5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e8e22a-d7d5-42a5-8e4e-8406a8c839d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e5bb5e-6cf1-43c1-844a-13393a3bcbea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc75e83-3de5-4baf-bb0d-8fc0841d6b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f37420b-9fab-4dd4-baaf-7a74588fc9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5de47d1-b118-462d-ade4-f9fdc67fed3c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ddc63a-2446-43dc-81cd-4ee59243d9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ae63b7-7b26-4431-8274-cc693a22e188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9767b757-0630-4bab-b45b-f215b7b652ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7b65b6-1be6-4f23-bc0e-3ec08a9e4ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9dd301-43ac-45ae-b720-ed40a8e5a52a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf76025-1a18-4a4a-9d0a-4e18803c1e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01abebd-95ee-4046-8164-21353d6d8d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c0f64a-f080-42cd-8877-eb82f92a8ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd40e99-f522-4325-a5c4-9d96566339d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6031e6-1ba2-42f4-8172-9ffbd564b5eb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8616aa5-613a-4ce0-89d2-43c982a428bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9f640a-9348-4034-af91-d5a8575b3278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c38c91-c066-4196-8a34-dc969bf58070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d9153a-d967-44e4-bd53-b3ca6fddebbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcbfeaf-ce21-460e-a847-f03e509aa93e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ae0b84-8901-4474-a8ab-1d8f1d405e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e78eb068-a74d-44ca-a071-998063b28636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd44063-b21d-4877-b587-5d3b8613d291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b0f9b7-c52d-41e2-b3fe-622482ca935b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfe179a-7121-4197-be9c-1885a333996a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3ae68f-c86e-4b32-8e1f-c9028d79ad46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ad446a-aac0-445e-ab8d-b24d7c891519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e409f8d2-504f-4d39-88b9-8b5730929d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0d5eb2-8064-4457-a8c6-cfc52c9bffe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca5467a-83fa-4e22-bb98-75a92f2aa13c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1925c2b-6d80-4efd-8171-4ea1b2de124e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1825cf5a-44f6-4891-a599-72ef03da8927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0404bf-59a6-4480-b5b9-5bc76cd46544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "542e134e-a819-488d-b027-0319ab40d508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521ee471-6848-4aa5-804b-3a7517f235e3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be01e851-510c-49ee-bdb3-c4684ba8d647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1877a021-1a3e-4505-9e84-72fe3ef44ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6360428-d88d-4d44-8710-9b85440fe7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caad6e99-e576-4479-81af-649b268eea18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6311651-ba8f-4c7c-8502-42fc2cdccba1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0224b158-96b2-4036-8878-b8c2375fe65e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5ba5db-820d-452e-bbbf-d4d80f7c138d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d2aedcb7-b1ca-4913-992a-4ff6f9cd9dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad228e23-3729-4ced-a4d7-2d3f70b23d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a8f6dc0-7806-46c3-ad42-b8e031fcace0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bb0eca0-6635-49ac-acb1-d827655729ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "049e6c59-0f71-4d3d-b00a-d6b43c76ed0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3375c3a4-a56a-42e4-b12f-214a15a816ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9169eb77-f7d7-4353-bf83-eba3db44b628"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5344bea0-d2e6-431b-9d39-91544f9bae57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a31bb7d2-7773-4456-8a3c-dc568e876476"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fea5e348-13d3-477e-b317-220683274a9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2685f3c8-e8e2-460d-9dc0-aec9a49efb2b"
            }
          }
        ]
      },
      {
        "id": "4d46c0af-e057-46b3-b206-85135877d433",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7ee7006c-bd28-4a1b-9afe-379018ccc0ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87cb4eb7-1745-494e-816f-f9664d9d46fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce1dd350-5828-48f0-975a-e94b2d011d13",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed05a8ef-23d8-4ed0-bc47-d7cd2329126c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d59d09-c3ea-4052-938c-373d11e00025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29eda04a-966b-470d-9cd8-15f9e5d59240",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c32924-f53e-480f-a8e1-e2e23e630c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7485e326-4dde-4704-bc9d-b74c54ee7fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a0bfc6-2dc8-477e-8126-5374cd96af2a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1b457c-ff5d-4ac6-8404-48ec77a8f9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ab6d2e-3499-4bf9-90c6-6a0efa311f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0722e12-03fb-4b53-9228-00d8c10259ae",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62513a38-1ba2-41f4-9bae-afcb613113ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe2a819-89db-49bf-9dfa-27a5f3ee2672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c306320-482c-43ab-b277-a243d58514e5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263d06e3-3c8d-412f-a91f-01b7900397ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e3cb34-e4d2-45fd-a91e-893687e39ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edc5245-c952-4350-8184-51d0572b025d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fad25c6-7b5a-426c-bad9-377c9c309194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82ca420-e8c0-4b06-b125-c9c8828534f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc35412-eb43-443d-a8fc-565f5f0000ff",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9a8128-2fb6-40c6-96d9-55356cbcd468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271a7e67-7780-4175-9145-c86ff2517fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a00ebac-5d10-4239-8e32-e2cb97d7fb7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c09d7f7-1dec-4475-a5e3-487c6c3370d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450d83d5-4260-4810-a9ef-057e4efb42c2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde97c5d-2ef1-475e-8c06-293fc9602e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00fc9269-4b20-4b6d-adba-a0d737abe499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0152ddd-5781-44f0-bf7e-a615042ab8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da80a0ca-27ee-452c-920c-5d6314a58e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60509a92-d618-4935-bca5-26ab6570911e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514d6dfa-a33b-4f91-8691-1d9f1bee0151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8e2dd34-86bb-4ff3-8a59-d5b4b76ad26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b60446-04c6-4ea2-bd83-2d910162aba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb11ca3-ce0b-4301-ae65-d9d8c26fa9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a655f92-036b-4309-a58e-78668639dd25",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fd4519-d74f-42a1-8802-2340f75f62df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f57b31-040c-4925-9a2f-b978d7942235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53dd8f23-9b4f-45ec-b9b7-565a46544dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17654fc-44e3-41f0-a2f5-922683b625f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e744f83-7de9-409e-9ff6-abe85075dea1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83991651-53d4-43bf-8820-b18c7f077911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d74c1dc-d649-4adc-b256-929639192b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b8fb5d-e083-4440-8592-8bce24d073bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd820c60-ea09-4cbf-93b6-2387d8ad7440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e01dc8f-b540-4162-8f42-2b06b14b7e80",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f8525b-69d8-4193-92c5-59dbd6da224d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e075cf-b593-4b15-bb4d-83d3c2e0a9d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ebe220-7cd9-415c-8657-ffe27adfab1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c88e51e-9a70-4f10-8b1d-d5579e0709ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd05328-3d47-4283-a509-fb7496f0a726",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fb8a52-a774-497f-8e3c-2e6c0c6fc29b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f31bc97c-d551-4327-a92f-48856beca7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7ac2c1-b7a8-407b-b055-636ca3cd3e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fcca974-6597-4905-8ea3-09672453e5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0288c0e-54c5-412c-a35f-861ff2f06adb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bc5106-6fa4-45d0-a6c4-13a5744572b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0665b6a-b975-48d3-89df-f77a5e64a401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f218a50f-ee0f-4960-ab70-97fa66f8bd39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58ea5bf-d9f1-41a1-84f9-61e0e8186b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8457e2-0651-4f20-a3ca-a425f41489ed",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3589dd-f720-417b-9cfc-962744873e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a46b06fc-f113-4672-ba59-1e5e4093cb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec3ca7d-382b-4522-8374-36c5fa9b922c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e274df0d-3bb0-42b4-b2ad-a3d871ef1ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90da3cc-efa5-48a8-9f08-4d2f8d5ffa0b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1433cdf4-0d9b-4eb1-96f9-374eae048a6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67441e22-c2bd-478f-bd3a-635446eb60fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e92ab69-2761-4dff-a53e-fbda5357abed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0406c9-6d4f-469d-b9aa-cb238163c144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac31b5a-db1b-490f-98e6-3c5625fa1e42",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4278ee01-a8f9-4ab2-8d00-3ea032a1edf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2482bbb9-ba0f-47ab-963d-cac3b95120b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95288a23-221c-4240-984a-be2eb470bf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee31dd3-d95e-4cef-801c-92981c861d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cf4f55-9597-4b52-9e5a-eefbce8f496c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2618ce09-a967-4488-8c72-96d9dfde2895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34561c8-94e9-4375-8d41-b1f5e5c694fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "026f0bef-c7fb-4d36-bc9f-94a58254d9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d626b9d-93a7-464e-94fd-cf4bf44a7cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f487b7b-00c2-481c-bb74-5855e3fa71f0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb364cd-2577-4ff0-bcd0-c86ef19011ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f5a9b9-8feb-493c-9dc5-8bf0c5451349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69665d8-12f5-4b49-a525-3ac16b5dbf65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50bd7f7-9c16-4301-9b9c-42a4faa4659f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9f4639-a9d5-4f3e-8c4d-dec947c2b495",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0130a4f-3843-4d01-8de2-c495b67b28c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab232c53-ddfa-4b45-a3d5-3273bc891440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec5a485-5f01-4635-a540-6cd9d5954745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85086a84-e7d7-4dca-846a-93d4fbf0d0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ebfc41-8b39-4b90-8676-a79f6e2a24dc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0601453-08e9-4cb7-a6f6-620b76ffcebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f8fe16-3bd5-4931-8555-0616c2ce32e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d3ec2b-b8fd-4c85-b5a5-50c8666dda17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73563a86-db62-44fb-b7bc-e44ac1b16eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0f2334-bf76-4328-a001-aea67be77d87",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64a0a34-157b-4138-a62c-94463fb2b9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8730965-b51f-428e-8e70-6352d8ead119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747ca8b1-87dc-4f02-b59e-84175ff94466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df15fcff-05f5-46b5-b870-6e69512887e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e23348d-992f-4f1f-a364-bc764b0b94d3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5da66f-a0fa-4c7d-a00e-affd03d741c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3b3d65-8926-40e8-bcd7-d5b7e809a9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa971bb-1286-470c-a556-d16c88aa7682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3e3d69-7517-42b6-a9e2-3ea2ed32302f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c006708-b1d9-4f67-a9cc-79baadf665eb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccbf8cd-1c9b-4e1f-a320-4416d1f9ae95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea25b9c7-91fd-4e88-830c-00852baba890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d362af65-dece-43ab-96be-41d729c30bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9993fd7-9596-4926-9d63-f58a84097565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc06f82-efb8-4f1c-bf38-c7856c698352",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1650739-fb6f-464d-a976-c1c1d9ef9efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e03e360-3692-4634-9096-3c0595bbd090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e21fc7-8837-4318-9aae-0122019f77e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1b2cb6-d5cf-4681-bb5a-2f1356d47523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4e2516-3d92-4bd8-a7dd-2a0accf0adef",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6684d04b-8a22-47fa-984b-a184321701da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a37ea01d-71e9-424e-a871-05f457152d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d83f17-805d-4dab-9a71-a483ea70ef5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c067a906-ed8a-4541-aedb-d318a3e921a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4f5562-67e0-4156-8c9d-b2cf9ce75372",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea7932d-32e6-4819-8607-b4829bc63e2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "434b173b-d93c-4028-8669-036b8137372b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc716f7-e6d9-497a-97f5-313e8395bbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f345a5cd-dec1-4808-b088-6cbaffcbedf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ef01f1-3fad-4461-82ef-1ab16e4b5676",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719ae216-c423-4658-b64c-e8083831ddd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74019b6-337b-4121-b3d1-7da34902892a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adb0c26-dd34-4aa9-9d55-462d918f5b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292bd1e8-9f55-4393-9e66-cd90415eb795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e3a047-30d0-462a-924e-77f286209e5d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b70d3505-9132-41b7-9713-62c0b9e7215d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50dd814-e8bb-4314-a7e0-2c93e3903533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd9d02e-bb8d-4aad-95a2-b9f9ac73d1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db43554-991d-4cbb-982e-989ef2b79eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f6f665-52fc-4c1e-b1a3-2c56a820645b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e180de10-4aca-4453-8b95-5a88c82eafa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89318f8b-5914-4e58-b6e8-3dec205e7c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7859617-20ef-464e-80dc-5b92055032eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5ff09b-e3bb-44d8-b609-52fa623ac62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc13901c-4eb8-4ae2-b2e1-2a39c5e71f6d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b84a44-e834-4bd3-b86a-b5e0131ddf4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e55ed07-f1af-43ba-8c05-dae71299a0c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5176d841-77f2-40dd-8504-5b2841a28d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d12875-1194-4e84-9fb3-865f9a876461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10379cd4-e4ef-45b8-b0b9-718b1d5410e9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425d90fb-ae6c-4849-9b3f-25469c57fdd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddfd5547-4e39-47ee-865f-c43b7516050f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c1c3b6-5bcb-4cec-9ea2-d66499e9a31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88f8a74-7d0e-4eeb-9e47-617360929f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82fc2cd-8f97-4cdb-b429-42f1d0d33103",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6222e3-5ea3-46a8-aef9-f9cdc64bd4f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9299e173-010e-420a-8a2d-1732eeabf519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e7afad-7925-4c60-97e9-a5eaed464bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4680c404-52f7-4582-9f58-bd3186fa02d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9c4b23-bebb-481f-a1be-3286d504a62e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15851a62-fd47-48eb-ab8f-b50d9c3f6ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4facb293-8515-4bf2-a883-a72fff263d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ee1a57-8735-4e1c-b1db-a515744ff410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18f6f72-4385-4d6d-9bc3-81f5982eab80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896c78eb-2f98-4386-a300-f833ea59d0d4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62840fec-8293-41e1-834b-b41a411e0acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599e7fb5-8b26-419f-a398-3863108ed47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fcb535-fb41-4e44-b116-a6fc5626aa4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd475aee-613e-4c31-a704-88d67fb68f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3add1615-215e-490a-97c1-b0d0abb1c2a8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7797f1-efc4-46ae-8bba-ce675a55735b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f784db4-c198-4784-96c7-d5b6c37460de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7ec5bd-f825-4cbb-8aa0-bccaf8f66ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870ede93-3f79-473c-97f8-9b6aacc3482b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c87431-7611-4d60-8378-af21089b8c5a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7719816b-0de1-4d15-9cf7-2eb287e01385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920a13e7-ee2b-4e12-b9ba-d27941ee9bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eb619c-d3f7-47ab-b470-be40e4982084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2608ff-679c-4b53-9663-707e8ee75c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d43c36-646d-4375-97ed-6ba51c8b6433",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097817ab-8cfd-466e-abbc-12d8a34b01e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1caadf1e-c4e0-4591-8928-ce38472bc342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f204ee4-8a3d-4b75-ab87-5b8b08a3597d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db432d74-69e2-4ead-a989-3bd7e6180165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be6329f-fb88-4e9a-8eff-b195f0cff4ae",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440a6f3f-da9c-464c-8159-6acd8b4c59e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3efd33d2-335c-41d4-bc9e-8a06c2fc8032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3acd435-d438-4ca6-8f86-7050df8789f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c80a1c-e0db-48ac-88e4-2d56680f855a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a850b7a-f594-45b0-8bf7-02def1cc5103",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e03649-49fc-4277-b70c-57747da931ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceea6452-84d0-488b-aee7-9e4124b3bba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b300ecf6-e313-4d9f-9f55-283aafd4a34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6b5206-9332-41f9-868c-e796f5cc9a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f985181c-e272-4e42-9477-19ef00263d57",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d39ca2-25f0-4cf5-bbfa-4b5b93f1cece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3613ff-7037-4d26-b995-c49196cc0ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0180effe-e0c2-40f2-a3d2-4eda66cd0e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e8677bd-7689-412a-a05b-0995bc1e4c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d79c69-1777-43ea-95d5-dc1e5d67644a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84478a9e-ace8-4430-aefc-1eeebeb760aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4461ad0-2f3b-4b2d-a1a1-4d3cae79635e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed052eb-5d21-4b84-bc4f-0fe7cafcc962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7985c411-db68-4f3d-8b02-b0fd39de6333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27a34fb-28bb-4fc7-857d-4a796d5b7a45",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bf78da-feb6-465a-947b-b3a1e8cd5ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3596ab-da8d-498d-946d-3ffb5055e2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb1d761-fbca-4fce-b081-ec30a74a02be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2f842e-bbb3-43c0-9d93-3263f77bcd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795caab0-2684-4625-863a-a9318e86b159",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8277d1e1-a922-4d1b-ba2c-93cd73e88712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4716f3d-ad68-46bf-be96-35f282252a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d4a732-ddd2-4fc2-b65a-d9073c344014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6639cc1a-9e9c-4f4e-ba9f-fb162b59f1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8b7db8-d222-43c7-8e01-b174ff003ce4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88bc5aa-edb5-442f-bf40-ddaeeba17608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9866c1-e49d-418e-a086-95437b32c4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1e41a6-3025-4a59-a6a5-03db6f1ab8f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3449473f-91a0-4daa-9ea7-314a219cd5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555870cc-529e-4229-8fb4-b7484395faa9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9741e5b4-0f5f-4bbd-b1d2-4438f820a181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2367e1d-d7d7-4ef2-beb8-46b5d1bcbe53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f88d77-ea31-4b4f-8f7a-a07ca47e5e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3d8e8e-98f5-4548-a405-a90462f1ca6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdec85a-4c16-4386-a2e3-5678a9081e51",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d520e897-aee9-4b08-8107-292d3446f430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f0863e-42d4-4261-96d2-3644b79c2959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24eac069-0247-4d3f-9c15-d1909df6df3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a57f1f2-0a96-4c9d-94fc-bef817213d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ecc2cb-6973-4633-bd7d-1a2f99682d8c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0c7780-4994-4805-b69b-ed37581306db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c649e27-486d-4c81-8f9c-fb275e43721c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96f64d7-f5b1-4093-bfcf-266f4d3367fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbf3640-179c-49aa-96a1-4b651a78d19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad73ad8b-ffcc-4df7-842d-a6c2dcb56a6d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13a878c-2953-47e8-a09f-4099008fe4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd97ed54-1dba-48e3-8c61-88b3525a5447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69dc003-b1df-4ba1-bcda-b67ee95aba15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db355d3-9495-4d9d-b5ae-5e6236498cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fb6af9-6010-42ae-9a87-dad7cc2a0957",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c0da86-3bb8-4885-97b5-bc16b11f5342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cd490f-1cd0-4681-95ad-448951725974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075a40a8-d026-4adb-9f29-5c6e4024bb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3518ae-7fa9-46ae-a263-18259699d1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9939b50-6843-4406-a1e5-c4c10d2d4572",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28efbec5-7c68-4017-9d3b-03e8334f6579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ee19ec-f789-4107-8a53-3cade12ad46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99645254-7293-4056-a0a6-fb701748208c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd3f2ad-b08e-4741-81e3-5a7309c49a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fb8f15-2fcc-412e-b3ec-25c8ca3ae4d6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaeac41-2367-4966-894e-35966762c638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed69c069-6787-4954-9e34-703f55067068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e7b741-eca4-467f-ae17-74207fb57e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9436ad2-b0e9-47a1-b14d-43aa60bb1ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785a39c8-9a94-479b-8945-9266cf5f6ca7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ed8418-3e1b-4336-b7f3-25c3680fab36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4730129b-13c7-47b5-b610-9a62c69dd16a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424b559f-f53b-4631-a166-4909a3f220b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2295bc-f84d-4bc0-8d91-2b855551ea5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d046ad3c-3757-4a01-be90-aa487ae22c44",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bcc110-eef1-4f31-9e28-2db1fd9b6d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ffd716-14c9-4348-85b6-f98ef0d99174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f2314d-24f0-4c27-8cb5-7fc4a4be7aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffd72017-39de-4b87-8a3f-5a7c75f682a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca65d74e-137f-469b-9425-26f7593187bb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7797b9-c335-46cc-94e8-aa1f9f25c6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf64149-6107-4209-9305-42248d2dc3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb727f94-7be6-455d-9cd2-2ffd0de4933a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fd3b00-25fd-4539-88d7-0d4604cf0369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558683f4-62e1-4980-b3f1-33fd0434c71b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3645c7c-71f4-43c1-bee5-ed02cebded86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb248a09-755e-48b1-b2fe-b72293034780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8304d6-65c3-44b2-bc86-5a1911291668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28900608-e1f3-4bec-a655-626fcaeb6028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dac0e70-a3ea-4f60-aa6d-77ef172d6cf2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c2167d-7d6f-4266-9f03-33eef3c89a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d829f7-3781-44d8-bc39-8a0b18195e54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dce0dd6-43aa-4efd-8e26-d60851ee3031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1205d176-f803-4dd3-942d-ca480881d4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedc906e-a850-42e9-aab9-c8de831adc31",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50583e8a-ba18-40c1-b86d-f7e28e78986d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddd22c8-9d8c-4182-bf9a-ce1222b04f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b055751-68dc-48e5-953c-a1ab0eed0316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5aea62-8bb1-49c9-809a-6df7d44bc1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f49013-9f6a-457e-9dec-d9d01418bb33",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa19f21-5e19-4f3c-9b9f-227da3208642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79eaebae-ef21-4929-9d50-83ca183f3833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4b41df-db87-4c6e-a9ab-7cdb9acf0a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f774f05-53b2-49cd-b3f6-ce275ae107a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc3a706-568b-41df-aeba-48f56b1a5080",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe214ca6-3075-44cc-9616-3e15fcc74a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0b05cd-a8b7-447d-bbe1-7aa30d8e5948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424ccddc-8a6b-4c3f-aff9-6df25218570f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfef0bf-198a-4133-a660-7561cdf0cdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77eca2d-f473-472f-b690-8ed840d89e43",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec67674-cad4-4236-a03d-d8b49d68ddf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12c1321-5da7-47fb-b25b-8955ef32d282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd46093f-33bf-4c98-be1b-fa92e1458f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9993bcff-cf1e-42a6-a84e-08fe0445f6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de28413-52dd-4ac2-9f7d-c107ffeb4f26",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2405e6e1-fb6b-4049-8e3f-9689fa5e8096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0231fce-f6d8-47ef-acea-f3105fe12609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce472dae-27da-4675-b368-668825ae6f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4fbd10-e2df-43f4-82f4-7970f4bb0607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7181767-0403-4227-8fe6-09140fd7364e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236b2e13-0c86-4ad5-9079-f20b9ae0259e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc6f322-0e3a-4e29-a5a3-94af4a6c73db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ac0314-535f-431f-8f70-1fed4b0509ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d10719-601a-432d-8b30-f98eeb6b49a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bb759b-4370-4aab-b0db-d12efda43768",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fe8ca4-4922-4057-b783-dd87e015b769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754f556b-d21a-4be9-9870-e44fc1a584f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b9d208-5451-415a-9965-1b73c7603093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73924d8f-dce7-48fa-9c58-3d4f0956f945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6139a30a-a41b-43b6-8a92-895a80fdf2b7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d13f0f-ecc3-44a0-b00f-64bdb8c3cd25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "935bf3bb-bc98-48ab-946b-e538ee3f5176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde0a586-07ed-4dbc-9b2e-f700d9b118a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c002898-2035-4385-b26c-6a39f1ca7971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1db555-5225-4ad4-bae2-2776c7a75753",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be148f81-5f4d-415a-a326-a00bdf9eea44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a220aebe-aa0d-4641-bb02-db0be6afb17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6de66a-b072-44d8-9d82-51af22d11d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629451dd-cbac-44fb-afd4-ac2267c05548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef15e92e-11cc-4c74-98ed-d94e031da9eb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48114879-ced1-4653-8b44-0d318a1a1786",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2684c26d-3d78-4141-9c4a-800039b2ee37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e1723e-0ced-46af-afa5-283a81ac7fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9272e361-511e-4a5a-b47c-a229a0fc2af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be31eed-e282-42d6-9258-0d8d3301d445",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc32cc6-5b17-4af7-af45-e40df213d45d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7521d80b-c79a-4283-9537-4331d5788071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074865e9-ebee-4b55-8b85-906799921616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6890f5a-c92c-45c2-9036-04140d1646fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f053e9b-dd53-4c8a-bc19-1e7e8140c996",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0e2822-2b50-42a9-b3e2-9abe7ff4e364",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed484bb-2605-4559-a502-039fc68b0099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5434d710-047e-4933-83b5-76f559f08211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71262cc4-6292-4545-bdf1-2906652c7fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec00c22-0ab6-4ecb-afa4-cb8173f1b452",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc06b0e2-9f9e-4af8-8b51-ade2f3f9774c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81285eec-b606-4614-bdcb-e6b0c7d528fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86af6c37-6b8b-456c-ae31-9cb6126ede5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42db62f3-dabe-4655-976a-0e07ef0266f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8677c8d7-fa58-4374-a986-b346d7a47af6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79626a04-f6ae-4454-b9c4-58e31255d8f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bf74c6d-4407-47e6-a409-b1f42b7d67d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22996c81-d677-46ea-af55-5671723b1401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6652ae9b-f6f2-4ee9-b023-4aacb91a938a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bb4ef3-dc82-46ee-8bb8-506d2ee6a722",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7781d540-e6f7-4568-a4ec-0c715d1992ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d6ecfd6-b22d-4408-a17f-ec4637f574e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c610e339-aef6-44e6-afbb-f5b6733c2517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4337e15d-0d91-4876-85d7-230adf064965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9da9ad0-a45c-456d-8ce0-63cf28633a1d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c9947f-1c52-4e13-a095-c93cc6b9955e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d581c133-6551-4e71-96e4-986b5cbb18c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa5bd547-0ae1-4a57-8480-ec9a6329d13e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251db507-c2f4-4a58-a22e-435cdd17e888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2a7c14-9dff-4a0b-9829-a2436c72980e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24a0751-2e15-4589-b2fc-660bedc252d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2870509f-ae39-4af1-b9ad-1963dbc6eb04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df730a8-cb98-4af5-bfd1-84353e90e7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe776fd-7244-4a22-8e3b-c9e0bc9dcc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdda09af-5bed-4601-a0d8-fd77782f545d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bd0a5f-a47e-4817-9784-db8d6911ecdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "333bcc8e-96d8-41ca-8cc1-40676ffa5212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c05089e-1f10-4c1e-96f3-38fda6ca5364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c13a65-e7ca-4bff-a6f6-95ad1e93e6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3f495c-9eec-4dda-8fa0-9d3d3eb01614",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8182ba7a-b10d-423d-a8b2-c53a05db7663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5939463-d42f-44eb-983d-cf42fc0ef21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ff9fe3-98a7-4feb-9643-c7b21db433bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf97b70-0d54-453d-8b73-19cb3459659f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb19ad6-6ad5-4833-a103-7a3efce1301b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3566d535-7415-4b64-a22c-4597f9a438a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "823b4950-5284-4738-ba45-4f7957e58bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961ccbdf-0d6e-4214-bb3d-61207860c884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b93ed7d-7976-4413-83ee-057cdcc10a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1960abc7-37e7-4eaa-ae59-6c09cccbb39c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b138de-2ce6-44a9-9222-ca774dbb00db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2342b94-f0d0-42f1-9c32-83fb89229ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5507801d-1d1b-47d8-93b1-5c44eb390c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebc9bb5-0d68-438f-8996-585f83c98f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20dd738-46fa-45c5-8f2f-1f056161e0f1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cbfed5-9781-4c9f-a667-20a9d793f6e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df66d8d1-22d7-43c4-a76c-b7d07494887c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3685b6-cd5a-4ee3-8c72-89fc1d340f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f662ff-383c-4175-964f-9c37c377b500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ed0b8d-89a0-4943-aca8-93ebb88e2cc7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999efe34-99bd-408c-9142-a22503e698fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696eea4d-efdf-46ce-9c7d-01894d12eb25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca94b6e7-1277-4a61-b4ed-7a2a923c5bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38edfe4d-9a89-4e42-a0a7-b04f48071fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed92d2b-bb7c-4de7-976d-400a1a56ace9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9dc92c-54b8-48e4-b22b-31fad39611a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5e13c93-21eb-4ed8-aafa-542f6880fab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0229dd2-1dca-448d-b8d9-ff19ec69bd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a8f4dd-46f4-477c-968a-28613d8d97a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f311cf4b-815a-4326-a38c-7ef41b2b7864",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc96ab0b-9528-4626-b653-3b356aa839b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77aafb9-af18-4a38-92a8-e51c58107ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6fc695-4c7b-40da-bf91-fe8601bb505d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4ac51f-107f-4f94-b1c3-0007bb5612ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8f8675-ada3-4da0-827c-c7b015db3b5d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3854e4e9-3414-40bf-bd5a-a1749f948b19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "660357b3-3462-448c-8fe7-edc6f1034d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da29889-63db-4525-8970-8f36eed13a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0570eccf-4db1-419f-97d1-1584ff34a041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea47b037-f1dd-4f3e-b6e2-87cf634bd6b7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6e2b34-81c6-453f-b28b-bdc1ba800024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d45de19-424a-4049-bb9b-5e8e9f6f224d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6240ce7e-5ca7-4baf-ab24-7a5ad590bb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329718a8-7b53-4e61-a7ef-b500a381cc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4ab3cf-cbbc-46b8-a7aa-b841328c094d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b630649f-2701-44d7-afb3-1c2016d97919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944cbed5-2bd9-4e50-95b1-bc3f93c84f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620b1e54-d573-449e-acf6-d8f5ff72ba79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57f90f9-b990-4158-89e8-8e299980e5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c17efcc-b6d8-4191-977a-8f2321f92eca",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afd0b62-3400-491b-8d91-f78c197f3617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5e86d1-ccdc-4623-b04c-1e09110cc833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d48bc7e-8388-4225-aa5b-4f3c3f46abc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f774cb-5254-4754-bbeb-111f6c53d422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ba55de-00cd-4b51-9b47-ea01229747a1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001760a1-6806-4828-bf14-ca94c62b3704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ab0ee5-a957-4d66-b700-8a6ad7ae3f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb38f07f-fd57-4be8-8e94-6f279ee8bf57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1d393e-affc-4e70-94cc-23145882e9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df618e3b-dfc1-4650-8c10-071cbbf05ddf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfc4678-2cc7-41ae-9108-59601498ac33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0534708e-c8d8-4a75-89ab-62df3ca22af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b9edf9-6118-4d09-966d-932b8dbba16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f5ad0f-e325-49b8-bde6-d107141fb65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cafb2f3-317b-4689-b051-6ada944b73f9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a617645-c947-4e89-bcb7-031ae173c0af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b84bac19-a2ee-4c8e-93cf-2871eb47dce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604b015b-18f1-43db-9d5c-ce69fdfe6834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ccc7ad-f264-472d-831a-3c0de601b4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd7b5ca-3f88-4fe5-a31a-0369431680ed",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec02d786-ad35-49c3-b441-19e76e737f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bde4403-4e8a-4948-8e2e-655ef430e0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d359235-e9f0-4660-ab47-6048ebcda755",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4f8d11-2382-49db-8d8f-cf2b2d79bc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec15f2a-7a09-434c-9df9-db7c6fd58822",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb9ca8d-1605-473a-9303-25446ef52199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6fa443d-c50f-4eab-8856-e6fa748e7336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287e3a1b-6711-4d7b-b2a4-8db64e7ab6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94ef29b-cfdf-4167-a3e1-08edf4ac57bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f397d6-3899-43a3-97f0-787c40ee0ca0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb25696-d53e-445b-89e3-f04e90a0f834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e9b8999-28b6-45a8-ae4b-8efdc303f127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f496fee1-93b0-4d03-b163-76ee8b8ada1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1dd63f-6ba8-470c-8047-8211b448e30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d699501d-55be-47d5-85bb-b18845b2d589",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8bc3e3-f118-4af7-87d1-60408ab1f7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37de24a-05d7-44c5-b290-e69fc0b8c11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d8f8b5-b3d2-4e8b-9ce4-a7f2d8cfa0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d157f3b2-e278-4ddb-ac43-72b415f02210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5551da91-e72d-43fa-84b3-93e5b779d4f8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a493c78-1d43-4b4b-98ad-0e846d06b5ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe643aaf-a13e-4bfa-80fe-02ba175eaf3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45a4769-4a81-4378-bf00-0d158ecd4e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3669c269-62c5-45e0-aac2-e56b5fdf51ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210e2066-aa1b-479c-be3f-5f2c7c327538",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec768b5-52c7-4ece-a05f-82b000ddab9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d554ad-3e6f-40ad-a667-1ae4be00aeef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "276c7e73-3e02-4d59-a3d5-6a10b13e4bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b08043-0a45-416f-8ce0-fe1e6034dec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa57f92-3a99-4a11-bc5a-2370f47ba9ef",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee6529e-4504-4be5-ab84-6c99fc1255bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b427a295-f19d-40c5-a5a1-88c337e27f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e98dd2-066e-4279-8b84-757d2adda9ba",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c849fd61-915a-483a-af28-f32ce020c241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b63b09-eb73-4cb1-b596-05cb43e69ef2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0281ad-0c71-49e5-af44-09a4204e0594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6750d8-d204-4c5e-89c0-df80021393d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e459b1-1149-4a7a-8270-f2cde82c7696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92adf8b3-74a7-468c-841b-5b4ec90d6b29"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b46967e-43f9-4406-93fd-ed49100fcd58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a90b6b4-677b-4064-9f96-21b1e5cf4010"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd39e6c0-f314-4dd4-b4de-a477abaafabe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0f5e554-ba43-4e41-83aa-dd14dfb31f4f"
                    }
                  }
                ]
              },
              {
                "id": "e831dfed-fb93-4074-aadb-7088240b5f71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1fc045d-004d-450d-9a1d-a91408cbccc2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9faee865-c429-4f80-9b7c-9e0c4f1c9c66",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f6a76a87-d79d-4acd-b90f-1ce741abb0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "086908ee-c080-49c4-83d5-93fbcb35c11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7e4e587-0ae2-4684-b427-be5d5284a275"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "046342e2-e20c-4651-9946-4a9f6bdd1328",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e60d908f-958e-44e8-8b9b-07f60546df6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "03e5bfb3-cdb5-4252-8779-be255bcd6938",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a9cb7ec-6c1c-4a6f-8330-e2ccfd6034a2"
                    }
                  }
                ]
              },
              {
                "id": "7f928f61-e729-4ea5-a5b7-2b90c99740d7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "68019e04-d0b5-4580-b2ad-33152048ce74",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366dcf1e-9b37-4a99-b276-a39a9c5e3e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "28925b5d-0f12-49c0-abca-84ec03af7507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a216b4d7-1a0c-4de1-adab-c39edb26e3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308f7943-8c95-42df-8265-7f45544a416d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6bd4af9c-1f31-49b9-bfda-c2b6bdc99d37",
            "name": "Positive Testing",
            "item": [
              {
                "id": "85631e07-9e89-474c-84d0-2b5ee02a1e0c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8992d84-dbf6-486e-9faf-4b3fea5227ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b719a82e-bfe8-4633-bfcc-5022371b6a42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b9dfc09-d409-440a-bcde-3c7cf1cee815",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cff0396a-dbff-4077-b2ea-30fdecdeaf8e"
                    }
                  }
                ]
              },
              {
                "id": "809f329d-a8a1-449d-95fe-54d3b3fa24c9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88e2da32-7e14-4110-967f-9f95b2c70396",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b946fa55-4e04-44fe-8610-697ca072cf59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e1231e2-46be-4282-890e-fb8d98ce7288",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d7717db-28d8-4854-9f97-7f36b3b0bba5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a9458b3-261e-4ede-a984-9f0a06fcef93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e544a9e4-257a-449b-b712-1339660af5fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3b2aedb-4125-4ca5-8377-81c32e7eac3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04cf6a67-5d21-416c-b19a-32a0d58060a4"
            }
          }
        ]
      },
      {
        "id": "05af8a81-b33e-409a-add0-3adc56a6b54e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "54c6a9cc-5629-418e-a38a-6b7b54ff6671",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4acf6a5b-cd1d-4f36-ad3b-f288e5d77d4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "436ad665-8b60-451a-a846-7864baf81f8c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af87655-0f80-4689-8b1f-5feb5376f753",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "84e0e3a7-49de-4de4-bb1d-7ebd09b8b610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12304375-0bd3-4ede-976d-00ca4b2ed339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75c7ae35-49be-46f3-8f52-4c27c7dbecb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4492caaf-c3e5-4bae-b463-9ff21e23ac58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ca3d358-59f4-4443-9c8c-94ebd8503538"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c86c8a1a-f3bf-4291-b0e0-2c4bd4a62511",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3b7e6ad-001b-4672-a4f9-044646556ad6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e46b998-70bb-43d0-8a33-ee2ca779ddf3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1e40b42a-7658-48d5-999d-6c67c3fa4730"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f132be3-7d5b-4045-a685-dffc195a4dd7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7c4815d2-a342-4b50-8be9-a78b4b9648b7"
            }
          }
        ]
      },
      {
        "id": "88ce7e46-eaa0-431f-a7b0-36a7c6f7743a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "893a56a8-6396-4e1d-a60d-13f71cdbe10e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "baeacb09-93b2-4f92-9140-5dc0ff816277",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e47b5fa4-1172-4b45-8117-0315dab64735",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47296ca4-2e49-4ae8-bfdb-b016ce761142",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72dd9c65-d991-4265-9919-7ea1d51b465d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4415f0b7-9d11-4353-8be5-02c8f5b22943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5eba62da-f2c3-4d70-a99f-fc498519200f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c933441b-2ca7-4fe6-b01f-87df34825226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64456ac6-2d2c-437c-8651-adc4e2c3e918"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1a8669b-18de-4a2d-a932-87cf17767597",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5853e183-eac4-416e-b5d4-de91e0cfd6cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1321683-0a46-4074-bf21-2adb5f714227",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba773713-fb66-4c23-ab51-da258628ffc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29f19d48-ed56-452e-b86e-773efb4aa075",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "157f34ff-5d02-435e-8185-db9c19682459"
            }
          }
        ]
      },
      {
        "id": "be9a5cd2-39e5-47f4-ab5c-884f966d70d4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "05efca1f-0821-4520-8631-36131f326a4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "460be58c-a1ef-4db3-878f-bce9514da771",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5020919e-7806-4af7-8a7b-a465033a1f48",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12739367-38c7-4bbd-9866-93e7a82864ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b57034c9-e06b-4ab3-b756-dd1e0e36d2a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6191ab77-31fb-4185-a18b-c1121a736f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff635221-2acf-4c44-89d5-c52ac7d223c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4300f8d5-7149-4bcf-baff-1b975c7caf5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9e69c0c-a4df-4221-be8a-f4fbb995f7f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08c08745-1f02-4c64-b33f-534b33f46a9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50c53849-4852-4db6-9704-04daceba5ed5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18f263aa-065a-4ce9-bae9-711b764662d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5db1943f-3059-4a38-a860-2bca166acc14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed44afd1-15bf-480f-b03f-838d66474fd8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b38f592c-7b92-4b14-8abf-60856ac22db6"
            }
          }
        ]
      },
      {
        "id": "e7acf068-7cfb-4ecf-b09b-6ba2bd116570",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88f602f7-96b6-4719-9c7f-e4dbf706758b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80389b9c-cf0e-41fd-8176-7dff90e0f9a8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "92905962-b00b-4a00-a8ae-c045bcfa46dc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db66acc9-8ee9-4641-b2cf-49bbcf9d5faa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a79d18f-de67-4338-abf3-bf574de4ddbe",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 365.1190476190475,
      "responseMin": 7,
      "responseMax": 9902,
      "responseSd": 1505.80238119897,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720226248753,
      "completed": 1720226349215
    },
    "executions": [
      {
        "id": "0f2e3a8e-ca3a-4fc7-8a7f-6ef19f80352c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9358a321-8f1f-4472-8a0f-de4bb3734075",
          "httpRequestId": "04273178-a785-4d1f-814d-b3e546718564"
        },
        "item": {
          "id": "0f2e3a8e-ca3a-4fc7-8a7f-6ef19f80352c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fce5ad8e-2337-4cd9-b948-c80888d90c96",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "da2a4150-7a1d-45e9-9b0a-99c0a9990971",
        "cursor": {
          "ref": "7b13727a-2125-465d-9a13-d20c56e8f188",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3b9dfc16-43f6-42d8-add1-07ddb405a185"
        },
        "item": {
          "id": "da2a4150-7a1d-45e9-9b0a-99c0a9990971",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a61a0efe-67aa-4397-839d-92cc56f9c564",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "eae1d189-4278-4dc8-911b-e5ff6e371314",
        "cursor": {
          "ref": "44a93fd5-3fe3-47f7-b3f3-180071ffa3ef",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "34f44821-7739-4e30-ab93-cfb18bb14fe9"
        },
        "item": {
          "id": "eae1d189-4278-4dc8-911b-e5ff6e371314",
          "name": "did_json"
        },
        "response": {
          "id": "5799c037-1848-4642-93d7-a4c826359413",
          "status": "OK",
          "code": 200,
          "responseTime": 481,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa352456-a0ba-47f1-9b70-e046653c9143",
        "cursor": {
          "ref": "4a916837-7bba-4adb-97b8-7bbfa7959090",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d1822724-cea1-48e3-bd50-576b0215649c"
        },
        "item": {
          "id": "fa352456-a0ba-47f1-9b70-e046653c9143",
          "name": "did:invalid"
        },
        "response": {
          "id": "13f073b1-ec33-442f-97dd-5ced368b7d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2099,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa352456-a0ba-47f1-9b70-e046653c9143",
        "cursor": {
          "ref": "4a916837-7bba-4adb-97b8-7bbfa7959090",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d1822724-cea1-48e3-bd50-576b0215649c"
        },
        "item": {
          "id": "fa352456-a0ba-47f1-9b70-e046653c9143",
          "name": "did:invalid"
        },
        "response": {
          "id": "13f073b1-ec33-442f-97dd-5ced368b7d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2099,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be52631-711b-46b4-9308-ed6bead95fb1",
        "cursor": {
          "ref": "b8f92abf-5f47-4a30-b042-58683cb7884e",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a476d92e-6496-4429-aa95-fc320442aff5"
        },
        "item": {
          "id": "5be52631-711b-46b4-9308-ed6bead95fb1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "28be4b07-3408-469e-86f6-44c57ca07783",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2516,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad80ecdb-983d-4982-aad0-54808b89c147",
        "cursor": {
          "ref": "8fb53269-e17a-4ac7-b9de-53b4e999e6af",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f51fc4eb-1847-4cc9-aed2-cf7414be2a89"
        },
        "item": {
          "id": "ad80ecdb-983d-4982-aad0-54808b89c147",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "565017a6-84c1-41f4-8b30-7d57f9b6720b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2070,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950adb14-2112-44a3-8f08-ea8b84609af1",
        "cursor": {
          "ref": "66040ac4-975e-4210-9a32-fd9d4010322a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "aaeaaa6c-4de2-4581-a705-7705e38adb67"
        },
        "item": {
          "id": "950adb14-2112-44a3-8f08-ea8b84609af1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ceb0a5c1-9b68-4f55-97bc-e9d8f74843aa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df46216-19bf-4663-90de-6ebc2df1c48a",
        "cursor": {
          "ref": "91510427-b4b1-4fce-ac91-c6608dd2af6d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "722377be-6fc2-4059-bf8a-4ec07303d862"
        },
        "item": {
          "id": "2df46216-19bf-4663-90de-6ebc2df1c48a",
          "name": "identifiers"
        },
        "response": {
          "id": "6b67f668-361a-42dc-a04e-e314462b36bd",
          "status": "OK",
          "code": 200,
          "responseTime": 2488,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389a8983-7e08-47e4-b250-d159fec77ea0",
        "cursor": {
          "ref": "546e5f42-d06f-4e43-9f70-856c02be9fa1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9a07bb9e-b4e2-4f39-a516-af47cdf83fb2"
        },
        "item": {
          "id": "389a8983-7e08-47e4-b250-d159fec77ea0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cbfc9cfd-ee35-4414-800b-4d46b05eab81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3f504c-e1ec-45f8-9307-a24d211a5789",
        "cursor": {
          "ref": "d7e68a20-b695-4d08-ab4a-edf27bd96aba",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8222a0b7-f6a4-4745-a5de-d3c308b01488"
        },
        "item": {
          "id": "8f3f504c-e1ec-45f8-9307-a24d211a5789",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "62d366cd-f07c-4885-b8be-71f45ff4fdc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bc9268-b17a-4f8a-a2d8-986eb4dbe296",
        "cursor": {
          "ref": "ce84ea19-1e0e-4cc6-a69e-3222f73a9545",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5816b051-513e-481a-94c4-a508eeb9b833"
        },
        "item": {
          "id": "c5bc9268-b17a-4f8a-a2d8-986eb4dbe296",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bcce4784-1500-4f9b-b025-e53b5c812f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db22b270-c2e0-47f0-ad4a-44e454140f3c",
        "cursor": {
          "ref": "5049414d-ca66-41d6-82ba-d791a3d0ca88",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "09365eed-72fb-4b6a-a312-a966b7a7ad79"
        },
        "item": {
          "id": "db22b270-c2e0-47f0-ad4a-44e454140f3c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "396512b7-40a5-4aae-ac46-8b48b8382a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e75f9d-a740-483c-9963-377b8f40c98b",
        "cursor": {
          "ref": "6b1d83dc-4d5c-46cc-8dd0-c3ced3a91faa",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0e013c68-f7c9-42da-bb59-3b1556e7d727"
        },
        "item": {
          "id": "08e75f9d-a740-483c-9963-377b8f40c98b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "eeecc962-6266-4c6e-b9ba-b69d6302b6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ba2241-33fd-49a3-88b1-45c154592b2b",
        "cursor": {
          "ref": "c1d02c88-8d97-4226-9fa9-decb38e29023",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c053d3c0-930a-452f-9682-2e44b770a6d9"
        },
        "item": {
          "id": "46ba2241-33fd-49a3-88b1-45c154592b2b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b2084452-1739-42bc-bbe7-878c7f39a148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233077a3-77c9-4539-b09a-57520eb4d595",
        "cursor": {
          "ref": "cb24c5c0-ef9c-4518-83bb-fffa048b0186",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7bb35e7b-7b8b-4583-96b1-e4e769a934e3"
        },
        "item": {
          "id": "233077a3-77c9-4539-b09a-57520eb4d595",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "38ee49c8-a410-4f17-a931-fc0f84fb6d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e655ad17-8f8f-4718-8c78-6d9ee04b7ce1",
        "cursor": {
          "ref": "27e75ea9-851c-4c2d-9051-2136220dcc32",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e2ab3c5e-6126-435c-8cea-abd864e6aa85"
        },
        "item": {
          "id": "e655ad17-8f8f-4718-8c78-6d9ee04b7ce1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d75da8c8-f173-4d9c-9ee8-3b24e5bb5c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89711e8-e8ba-4ca0-a90a-0fd77c3c8acb",
        "cursor": {
          "ref": "f6a75af9-231e-493e-84a9-202c791dd5f0",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fb61ac6a-95f5-4fe4-8971-49962debb90b"
        },
        "item": {
          "id": "a89711e8-e8ba-4ca0-a90a-0fd77c3c8acb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "33f4fb3f-cb9d-4237-acba-06bf4e41f8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657f18a4-ee99-4bb2-83e4-58a06e973db6",
        "cursor": {
          "ref": "d6fae201-2a73-453d-a0c0-b9cc6e6dfeaa",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fb1bc543-0de9-4ce7-912c-93e6e2b93b36"
        },
        "item": {
          "id": "657f18a4-ee99-4bb2-83e4-58a06e973db6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ccb235fd-78f1-4f4e-83e7-37e3eca9c270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd23018-4bc6-4313-9d9b-050821d22815",
        "cursor": {
          "ref": "042453d2-9586-4e03-9b11-329f2db5786f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f65fa54d-801e-4fa2-a667-1f9f0647dc54"
        },
        "item": {
          "id": "dfd23018-4bc6-4313-9d9b-050821d22815",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "01687525-cf16-4f57-b6d4-2ab88a46ab31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f1367a-9204-4fd7-8098-93b5307dc99e",
        "cursor": {
          "ref": "1f75154a-defd-4499-8855-01dcecc097c7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4bded07e-6175-4d3c-a567-9632f1ee5308"
        },
        "item": {
          "id": "e6f1367a-9204-4fd7-8098-93b5307dc99e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8aaccf5e-b034-4b65-b5d2-f6280a4141d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926b566c-3c43-4c4a-8bf2-7afd901b2d7d",
        "cursor": {
          "ref": "66f87b72-dab5-4bb1-a369-521e7b74ba57",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f409bac7-db1e-4fee-80cb-97feb5421ed6"
        },
        "item": {
          "id": "926b566c-3c43-4c4a-8bf2-7afd901b2d7d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "909737e8-f041-4128-a957-6c628b170291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebd930c-405d-43a1-901a-264cf2eb2028",
        "cursor": {
          "ref": "cffd557c-765b-4f0d-9c8c-cede3cdb11c0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "97f1adcb-d647-4957-b450-beacd3936ddb"
        },
        "item": {
          "id": "6ebd930c-405d-43a1-901a-264cf2eb2028",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f2464241-5e5a-48a4-b0f9-552de10df507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc124ba6-8730-45e4-9f44-1094a5a7b84e",
        "cursor": {
          "ref": "b55220bb-6e68-4a75-934b-d4f256f09aec",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dcb90ec3-6b6b-42e5-99fd-dbeb1c66fdea"
        },
        "item": {
          "id": "dc124ba6-8730-45e4-9f44-1094a5a7b84e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9baf20a6-ff20-4c95-8a7d-bef3f9a7cfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17da0d4f-7619-4208-8aa4-3ea37e882f78",
        "cursor": {
          "ref": "9e763a1e-9cd7-4bd0-b1ff-b461dbe865a5",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "545ed608-4bc9-4681-aaa9-a4f6ddde111b"
        },
        "item": {
          "id": "17da0d4f-7619-4208-8aa4-3ea37e882f78",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f63fb898-e50e-4c79-b81f-815c99e710b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c55ddc-2c24-4c91-a8a5-bfaf516ac24d",
        "cursor": {
          "ref": "b7f3e135-3b9f-4780-887c-43ac00a6abe3",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "97c93efd-2be3-4f75-8dbc-64dcb1e9a801"
        },
        "item": {
          "id": "53c55ddc-2c24-4c91-a8a5-bfaf516ac24d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e37105e-8dce-4abc-b19f-84d5aa33b420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662d11fd-b54f-46b5-a552-038f4e45b34f",
        "cursor": {
          "ref": "26ca18cf-0d67-434e-b781-95b1278cea17",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "aaf1332f-f1d8-4950-a1b0-71e1708391e3"
        },
        "item": {
          "id": "662d11fd-b54f-46b5-a552-038f4e45b34f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5aee6fd4-2f8c-4176-b014-feea6efea38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ab5726-ab9f-4974-be2f-8abd5a6f3663",
        "cursor": {
          "ref": "d69d635e-0737-481a-859e-ebebc46495b0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3ee183a2-bee9-46d1-a049-5499efa92252"
        },
        "item": {
          "id": "b9ab5726-ab9f-4974-be2f-8abd5a6f3663",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0b89d4ad-9192-49d4-a506-9afc462b6dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd2fafa-b7af-4332-ba49-ac83053b96d4",
        "cursor": {
          "ref": "0b119d05-9252-44ad-a20a-5e3779f1f136",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5fbdd7e5-e174-4ab8-a679-b112e829b2d0"
        },
        "item": {
          "id": "8dd2fafa-b7af-4332-ba49-ac83053b96d4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3c2c46e6-5894-4dde-af11-49a33f31b8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dd084e-bd24-47b3-962b-a22e0742b908",
        "cursor": {
          "ref": "5bf0fea5-74a4-4cec-aef9-49fc6f9004f5",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d9626b1e-f4bb-4638-8b03-bd57875afccd"
        },
        "item": {
          "id": "c4dd084e-bd24-47b3-962b-a22e0742b908",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "86cf7bb3-780f-4b0d-be89-b1032cca2c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebea4cad-169f-4499-9df1-e72e2b2c95ad",
        "cursor": {
          "ref": "93b9a460-36f0-452a-b964-7b95c1d42c55",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "51f88381-e0b7-4f17-9bc8-352917f6560d"
        },
        "item": {
          "id": "ebea4cad-169f-4499-9df1-e72e2b2c95ad",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ddafe226-c7ba-4ed0-9fa0-9a3e275ad595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bef6ad3-79f8-4d93-a42a-55d3abe152c6",
        "cursor": {
          "ref": "1bdf7661-ba41-4c9d-971f-a74f4f918ec2",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "663a10b8-7619-465d-b84e-2eb025dbddcf"
        },
        "item": {
          "id": "8bef6ad3-79f8-4d93-a42a-55d3abe152c6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "55dcef69-5b73-4cb9-8428-9945274159a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c690ce07-621a-4b17-8cbe-c49f4d10c35c",
        "cursor": {
          "ref": "0441ff56-963b-49a9-bf07-a537e02553e4",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "00bb0139-80f0-47cd-b238-f8884bb4c2a4"
        },
        "item": {
          "id": "c690ce07-621a-4b17-8cbe-c49f4d10c35c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "aab3e076-d06d-4a43-aa9d-491de195dd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e1ba8c-cfef-4edd-ade1-5ad2fe7fe972",
        "cursor": {
          "ref": "4a5eebb8-36dc-4203-b407-2598e0814650",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7ac6ceb1-4341-4e74-a894-927ddee2d8b0"
        },
        "item": {
          "id": "a4e1ba8c-cfef-4edd-ade1-5ad2fe7fe972",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5f6f979c-1074-4633-9687-5c315430670f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309ae996-fa0d-4e66-915f-f97117768f16",
        "cursor": {
          "ref": "b04bcfd0-e082-4dac-8f2b-41fa8adff7a3",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d965d800-bbf1-4c85-9819-84f62c8fbe88"
        },
        "item": {
          "id": "309ae996-fa0d-4e66-915f-f97117768f16",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "692ef1be-f8b4-4de1-9493-8d925049e8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2315c044-b684-4888-8664-0b7e75224b33",
        "cursor": {
          "ref": "35f41533-5ad2-4ab8-ad85-3b3f2f0ec8c9",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2bcbca3e-3a12-4bfc-9a23-a8a71b1102c3"
        },
        "item": {
          "id": "2315c044-b684-4888-8664-0b7e75224b33",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5cc18bfb-5fcd-4546-b6c5-ed6d32ce90de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f8b5eb-5e4c-456c-af07-d892aee82fd9",
        "cursor": {
          "ref": "fbd7674a-dd2d-4657-ad1a-062dd0863ed9",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "782d7012-daa3-4118-a892-dc8249b5f356"
        },
        "item": {
          "id": "e6f8b5eb-5e4c-456c-af07-d892aee82fd9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "24394d02-69c6-4083-860e-3cec2d3c955b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74303288-3d9a-4a0b-8cd5-d8087fe26476",
        "cursor": {
          "ref": "b603cf1d-4cf3-4109-923d-690b8c6e891f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fd07c73f-9bd8-40d8-bf66-2785c0e05435"
        },
        "item": {
          "id": "74303288-3d9a-4a0b-8cd5-d8087fe26476",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8885da94-873b-4c55-a91e-ac35dc5b4c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd947a20-181d-4a79-bc59-f0f5bdc7b2be",
        "cursor": {
          "ref": "b2fd503a-ec1d-4a0b-8c5c-ca6ce9d18adb",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a6dbc685-1cf6-495c-bd98-fa648a80aa00"
        },
        "item": {
          "id": "dd947a20-181d-4a79-bc59-f0f5bdc7b2be",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f93287eb-0535-4093-a1f0-e79ce30133f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9963b74a-ef87-4a7d-8c1e-5373260a8a17",
        "cursor": {
          "ref": "84aa3829-d991-407a-a14f-042e1fcc28b4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8ff8fcd7-0062-4687-b3fe-26b58ef64d4e"
        },
        "item": {
          "id": "9963b74a-ef87-4a7d-8c1e-5373260a8a17",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "19e52b9c-2dbe-4cae-96fb-8697d877004b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef80b5f-32eb-4105-a1a9-58edb92b6593",
        "cursor": {
          "ref": "69ee1505-9ee0-48c7-a246-9ebf8973dd83",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "14ade5f2-f1b8-4492-a33f-77e7fd676428"
        },
        "item": {
          "id": "5ef80b5f-32eb-4105-a1a9-58edb92b6593",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f18da2ef-1ebc-44e0-b5bd-562122c172c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a09748-7b32-4226-af15-f0d196254e03",
        "cursor": {
          "ref": "9f596de3-a82f-4d96-aa38-1605e41e40e7",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2b7f3175-85e5-46d0-9308-0f5a7b65d5c6"
        },
        "item": {
          "id": "a5a09748-7b32-4226-af15-f0d196254e03",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8ade1168-2ca8-4eb9-a4fb-aa34d1479c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63812e48-85d4-430a-bae0-a867c66f4691",
        "cursor": {
          "ref": "9a35008f-fa29-4027-84d5-92cba37fba6c",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4c2c0542-ca3f-429d-be53-5deda40eaf05"
        },
        "item": {
          "id": "63812e48-85d4-430a-bae0-a867c66f4691",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2a109d0a-6641-44e3-b0a8-f990e5f56c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f15e7e-bfe7-4f2f-86f9-5e8c6708c2e6",
        "cursor": {
          "ref": "cb460720-697b-434d-8e75-2f2a81fa1380",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3b18334e-89c3-48a9-a8f8-1341b0463cd8"
        },
        "item": {
          "id": "29f15e7e-bfe7-4f2f-86f9-5e8c6708c2e6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6da40784-00b5-49cc-a603-952b83c890af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f17b8a-c53e-4eba-9f5e-65720e067ad5",
        "cursor": {
          "ref": "9cc66e76-3607-4e4c-af1a-2787351fcb42",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fd1d8e1b-b23b-4dc1-97f8-8e8fb45121e7"
        },
        "item": {
          "id": "98f17b8a-c53e-4eba-9f5e-65720e067ad5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "032a0085-1788-4c0b-acb2-aa85437a97a0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555ada36-66ad-4435-b552-91d51c544605",
        "cursor": {
          "ref": "da4e5243-c5c2-42b9-aabe-0e9f9afd0fa8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "99217ea2-7755-41fd-af45-557eb0dffe99"
        },
        "item": {
          "id": "555ada36-66ad-4435-b552-91d51c544605",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f489fd61-b705-4a07-ba31-3d9169df3a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61a8bdb-2856-445c-b00f-17f16767ce34",
        "cursor": {
          "ref": "4273e113-2468-465f-87d0-4a9ed115df65",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d7415762-86da-4459-8906-720a3d838aac"
        },
        "item": {
          "id": "a61a8bdb-2856-445c-b00f-17f16767ce34",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2e53de53-4660-4690-b567-8b5a63bc56ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3eec85-43b1-41ad-b988-6eeda0c995d9",
        "cursor": {
          "ref": "863a76b5-cc56-4286-bba3-ec4a5463229f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2639975d-4c02-430f-a503-2e89fd68249c"
        },
        "item": {
          "id": "7b3eec85-43b1-41ad-b988-6eeda0c995d9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f25a556e-632c-45a2-b9c4-b5886435bdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc1b422-6118-498c-b82c-33fd5616c978",
        "cursor": {
          "ref": "0190fcc7-c868-4e30-8dc6-12f153737736",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cab99718-95ea-4213-a92f-06f72d3e4fff"
        },
        "item": {
          "id": "4bc1b422-6118-498c-b82c-33fd5616c978",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a35f7de4-1783-4394-a146-65b0926d938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9ac6f9-78ab-4581-8955-1446a8f51039",
        "cursor": {
          "ref": "11d441b0-9f62-4189-a9bf-43394675890c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7e7d62ac-8a45-4dff-ad22-ca2d9ddb722a"
        },
        "item": {
          "id": "1e9ac6f9-78ab-4581-8955-1446a8f51039",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ff3d1b02-a159-4ba6-9398-38663902807f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78380abb-0d51-4c8c-854e-1586a922d09a",
        "cursor": {
          "ref": "fc652487-dcbe-4bcb-8d7d-78462ecca828",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "85eead4a-41cf-417a-8eba-579983757251"
        },
        "item": {
          "id": "78380abb-0d51-4c8c-854e-1586a922d09a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "56fc348e-747d-4c26-9b22-cdb063d387e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c039cad8-0219-4ca1-b310-7c178f3aefd3",
        "cursor": {
          "ref": "d397cfae-6c59-46df-8242-fabe81c5d184",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "da8f29ae-9bb3-4e41-b043-e8fc8f9245de"
        },
        "item": {
          "id": "c039cad8-0219-4ca1-b310-7c178f3aefd3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "596631a8-f64d-4b9b-9812-eb66d0fa53e4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4659899b-34f2-4719-8417-ccb25f2a883b",
        "cursor": {
          "ref": "33632d6a-c5eb-4c24-9bd6-108da966fe89",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fda0c00b-8f65-42af-8736-efa5d64c20f7"
        },
        "item": {
          "id": "4659899b-34f2-4719-8417-ccb25f2a883b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c6811608-b2a7-433d-9393-960d15be6c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfe89c2-7167-47e1-8604-fb797d26caa6",
        "cursor": {
          "ref": "e12a96de-93dc-4b48-8d67-87a2d9ea2123",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "758592fd-929c-492f-8ca2-2e6aa2794f83"
        },
        "item": {
          "id": "5cfe89c2-7167-47e1-8604-fb797d26caa6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "24d6d004-eaa7-4709-9002-e1975f0059ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c529b1f-0843-48a7-b5c4-cbb4f42664b7",
        "cursor": {
          "ref": "ba89260f-effe-4758-a31f-67dd871854ea",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a2430fd3-7605-43a1-91f9-071572cd07a1"
        },
        "item": {
          "id": "6c529b1f-0843-48a7-b5c4-cbb4f42664b7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c9651933-fff5-499e-aee2-26373e442c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b79a8e-3ef2-48d6-a0b9-200a0c7cad82",
        "cursor": {
          "ref": "2c2369eb-e201-402c-94e7-adfc3fd90f8f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f2d0edbc-c51f-4715-a10c-898f65afc43c"
        },
        "item": {
          "id": "e2b79a8e-3ef2-48d6-a0b9-200a0c7cad82",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "63729e7a-63e7-4111-8549-e8a58e12d445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6a5212-c258-4258-a24a-334ef5bbfcad",
        "cursor": {
          "ref": "718013bf-8d36-450b-b9fb-a7c6ab9fdd13",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e7b0c9f7-58f5-47be-957c-c09e4eb8b36a"
        },
        "item": {
          "id": "ad6a5212-c258-4258-a24a-334ef5bbfcad",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6e149eff-2656-4d15-bd77-e07f7b99dc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d717f5d-0a0b-486b-9775-de5d7bf9443e",
        "cursor": {
          "ref": "f2c2f713-bff2-4141-9891-b5edf01bd13f",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fabc6592-e21c-442e-89e1-bdb3e79b8eae"
        },
        "item": {
          "id": "2d717f5d-0a0b-486b-9775-de5d7bf9443e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e840d612-d006-4ab4-b8c6-fd27ea7c1234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0c6b7e-f07e-4357-bb64-d34f9be2b3e2",
        "cursor": {
          "ref": "2d7cad2c-a036-4501-a185-9441563ee6df",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c6d0e6d3-0a68-4666-b873-b7e25802b32e"
        },
        "item": {
          "id": "aa0c6b7e-f07e-4357-bb64-d34f9be2b3e2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1afaaa6f-3aee-4d49-b6f5-3ce7dfeaccfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348e4680-6af5-43c4-ade3-2376775b4a19",
        "cursor": {
          "ref": "a333df74-858e-4818-af4c-103fb6b89fbe",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0ac492a1-05e0-4d9f-85ba-1555e7dd6f3c"
        },
        "item": {
          "id": "348e4680-6af5-43c4-ade3-2376775b4a19",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ea24cea9-4660-4185-9c48-65242c3fd6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "700f79b5-c495-4e16-a833-e329d17d97ab",
        "cursor": {
          "ref": "9cea476d-bef6-440b-b7ca-803cb8bfd882",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dea17430-9c28-4920-b96a-875f534c0f9b"
        },
        "item": {
          "id": "700f79b5-c495-4e16-a833-e329d17d97ab",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "495ea49a-a566-42ca-b577-41e6d4e80def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b632fd6-aa25-495f-b3ed-ea559080255d",
        "cursor": {
          "ref": "ede9fa9c-37d2-4ab8-9985-74c8e2a1730c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7beca994-f993-4912-aa65-aa068feb651c"
        },
        "item": {
          "id": "0b632fd6-aa25-495f-b3ed-ea559080255d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "932d2f23-b07f-408d-a009-65dfebf671e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db7fd60-05ba-49d3-aa67-8ef81c7fc6af",
        "cursor": {
          "ref": "566e4069-97bf-4ec0-908d-46e6c5048286",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "96979014-5c41-4ae6-9493-399380df2c2e"
        },
        "item": {
          "id": "2db7fd60-05ba-49d3-aa67-8ef81c7fc6af",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3da1b6de-d04f-465e-b384-36b30efba951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1c5997-f20c-4e2f-98e1-b3d61e50d7eb",
        "cursor": {
          "ref": "0e368ff4-8d74-4a53-a2ff-4cdbf4ea7f54",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "50b57ba9-14c4-4cd2-8243-56ab9d8d0cc2"
        },
        "item": {
          "id": "ae1c5997-f20c-4e2f-98e1-b3d61e50d7eb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "eabee7db-c5f8-4a1a-a21c-ae0bcb21b541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c625bea-1702-4778-99ed-0038bc242e6a",
        "cursor": {
          "ref": "45051840-ef53-415a-a9a7-771a2a9426e0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2fd82f40-ae94-449f-8a59-d4b7b9d6f641"
        },
        "item": {
          "id": "0c625bea-1702-4778-99ed-0038bc242e6a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "48e81efe-e126-4b59-a610-f47aeafc6d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd94d73-2ee3-4912-8858-92ed8ae0d475",
        "cursor": {
          "ref": "06bf1ac6-e5df-418c-8b73-0a0a40dd26a6",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "75e3b790-46d0-473c-9197-2bf30563c3a5"
        },
        "item": {
          "id": "6cd94d73-2ee3-4912-8858-92ed8ae0d475",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4eec4ed5-ba32-45ac-ac97-fc04e6ecf2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab98043-f68e-4d00-a61a-03fdac84e91d",
        "cursor": {
          "ref": "15c25f0d-267e-4539-808c-5d97a8e106f7",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d76b3dbd-81eb-4472-b5a5-168729a4ae52"
        },
        "item": {
          "id": "9ab98043-f68e-4d00-a61a-03fdac84e91d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d074fc36-cebf-433b-8e70-88a03cbbf5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3801b28-4fd2-424d-bb66-d12ce1dea26c",
        "cursor": {
          "ref": "0e49ae75-0359-4b2d-96ea-64b2ec44c02a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a12da758-3a12-4c22-8a99-006ea0ec64c7"
        },
        "item": {
          "id": "b3801b28-4fd2-424d-bb66-d12ce1dea26c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e37f94f8-08cf-4ea1-838b-5bf8ec65421c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42d794a-d5e8-47b1-b57c-f0db120d625b",
        "cursor": {
          "ref": "90e1b424-219f-4319-8831-622500b1bf2b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5a6299b9-2d46-42b1-bc3c-8773cbc64eb4"
        },
        "item": {
          "id": "f42d794a-d5e8-47b1-b57c-f0db120d625b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3a197cef-5207-46c7-a979-7345e23224cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58163821-f3e4-496d-a3cc-0946d00452e6",
        "cursor": {
          "ref": "388205f9-b294-4112-ac57-c2ff0364173d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2070920a-6f0e-49bf-a59e-a245fb594435"
        },
        "item": {
          "id": "58163821-f3e4-496d-a3cc-0946d00452e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "05abf6dd-1091-4a03-b941-34c3344e2af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe2185b-b994-4018-976f-9ace2837fe38",
        "cursor": {
          "ref": "3664b90c-ad7d-4677-aab0-29dc83ccd8b1",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "10c27153-2e01-4f33-9a82-1bdf4a5879ad"
        },
        "item": {
          "id": "4fe2185b-b994-4018-976f-9ace2837fe38",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6fb2a111-6369-47fb-a280-025e17f05845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082175be-8dc8-442d-a502-c692c05757db",
        "cursor": {
          "ref": "5cb7f152-2434-445f-aea8-45c3ed4326a6",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e8a386d9-e30b-493a-af7e-9286be2c4547"
        },
        "item": {
          "id": "082175be-8dc8-442d-a502-c692c05757db",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2eb86210-f34a-4263-9b56-01386188b2ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adaddf93-ee87-4391-8945-b419371c868d",
        "cursor": {
          "ref": "11a3c88e-2a77-40d9-8fa8-93b9c41e3f92",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0857652b-e92e-4280-b706-2778dffcbb9d"
        },
        "item": {
          "id": "adaddf93-ee87-4391-8945-b419371c868d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bb5becb7-2adc-4ed1-abb3-ceeeb1e60949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07abdeaa-dd96-4ad1-b421-ef5268508458",
        "cursor": {
          "ref": "6572e1b3-ec24-4947-b811-db1d1a12b322",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ada07177-9bb3-4da3-ae99-4fd20b899529"
        },
        "item": {
          "id": "07abdeaa-dd96-4ad1-b421-ef5268508458",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "044a5192-8158-4e53-b69b-c6aa0271889e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320138a6-c24b-4516-afb6-7d6bbf769764",
        "cursor": {
          "ref": "12b7541a-65a9-4776-8cd1-5be254ce248c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "20628b48-42bc-480d-aa26-daf8e8dd19ea"
        },
        "item": {
          "id": "320138a6-c24b-4516-afb6-7d6bbf769764",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "826a3fce-7866-4559-9756-e73e4c223c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e4835b-277b-4895-bbe4-9d1f8b881590",
        "cursor": {
          "ref": "73a62aa1-3c20-4c10-be3d-c23bc11857dd",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "663f024d-4afd-483e-9cf9-b5f141f8f403"
        },
        "item": {
          "id": "41e4835b-277b-4895-bbe4-9d1f8b881590",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e35b5b1b-66bc-44c1-9517-a2585ec6ae34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a8b408-6b39-4f1b-8302-84f8f5c667de",
        "cursor": {
          "ref": "90b9547a-20af-4ef2-bd16-74f3278493b6",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a30ac174-4cab-4532-9ec0-d6d2feaac57c"
        },
        "item": {
          "id": "80a8b408-6b39-4f1b-8302-84f8f5c667de",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c315e46b-8bf5-40b2-b86b-ebb26ce95ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcd7d0c-ecf5-4b5a-9a4b-376ed53e6e07",
        "cursor": {
          "ref": "a92b71e3-bbcd-48e3-860c-c59ab285d888",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c170cded-3f87-4b87-a09b-ff26aa044b4c"
        },
        "item": {
          "id": "5dcd7d0c-ecf5-4b5a-9a4b-376ed53e6e07",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5b70d547-42af-49fb-8260-6eb92f058bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f0f273-ac7a-4246-8051-3866b12dbae6",
        "cursor": {
          "ref": "6ad85060-5776-45ab-aca4-513b44d35586",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a590fd44-1dd8-4de3-9b9a-600756daa852"
        },
        "item": {
          "id": "59f0f273-ac7a-4246-8051-3866b12dbae6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e4dadc76-2225-494c-8911-8553c480c54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3b1e51-60b4-46d3-be26-a0f5ed4c938a",
        "cursor": {
          "ref": "674eec72-5186-494e-8687-d96d308a5f94",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "166c18ce-5fa9-44b0-8d96-a736ba522af5"
        },
        "item": {
          "id": "3a3b1e51-60b4-46d3-be26-a0f5ed4c938a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b3506e66-9a67-4f82-ad28-cb91c4dff713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0216b42f-daa3-42f2-9acf-d72599a966dd",
        "cursor": {
          "ref": "bfc6af8e-0446-4d9d-b22e-8f77211a6307",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "beda80f4-4155-479c-8c07-f7fe2fc8458a"
        },
        "item": {
          "id": "0216b42f-daa3-42f2-9acf-d72599a966dd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "36cd69ba-83d0-4c50-b426-a37f3f9e9bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2737ac-01a5-49ac-8215-a5286377c294",
        "cursor": {
          "ref": "31628388-5621-453b-bdd6-0ddb9c11104a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "68fa524e-8802-48e9-b090-29aa3744ad41"
        },
        "item": {
          "id": "7b2737ac-01a5-49ac-8215-a5286377c294",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cf9d3b98-b1f1-4fb1-a82e-7d1d4f9e451d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b9c17d-ba4f-490a-aed7-af5905ec6560",
        "cursor": {
          "ref": "c8668ec5-8910-4ddb-a017-6fbdfd6505a6",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "964d878b-b00a-4c3f-814d-9173ac174e28"
        },
        "item": {
          "id": "f3b9c17d-ba4f-490a-aed7-af5905ec6560",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "860626f0-f5ff-4484-a2ba-dff73cf4f9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eafac8-989b-4968-8f75-85f7d7aac37b",
        "cursor": {
          "ref": "35f6d04d-b407-4e3c-bbc2-f31ecce29e79",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e7e3c661-06d9-4b7d-a697-19c2b3fbfae3"
        },
        "item": {
          "id": "e9eafac8-989b-4968-8f75-85f7d7aac37b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2ed9ea4f-b50e-4bfe-ac73-01c6cf27ac3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796e35b3-1dc7-47d4-b92a-e898b9718b4d",
        "cursor": {
          "ref": "797f16a1-d733-4e0f-9789-819c37c4f65a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "255602e5-9e83-429d-a78a-179bc8268208"
        },
        "item": {
          "id": "796e35b3-1dc7-47d4-b92a-e898b9718b4d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4d6db351-6b41-4873-9fb2-283d8e57c3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a203a69b-8d88-47ab-a2eb-8373d3f51c50",
        "cursor": {
          "ref": "7ff82420-7a44-4115-a3d1-44cb7a4d4841",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f0c83dc4-ddbf-41b7-8a4c-552841fc608f"
        },
        "item": {
          "id": "a203a69b-8d88-47ab-a2eb-8373d3f51c50",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "dd4dc3d3-feb8-4705-aca3-8f5ad54f1913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b612903-00ee-4914-ad13-7e216f4889a1",
        "cursor": {
          "ref": "6bcef917-c1cd-41f8-9a09-46e01d323026",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "27e795b8-a4a1-403c-b04f-520b968ff740"
        },
        "item": {
          "id": "7b612903-00ee-4914-ad13-7e216f4889a1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e28923f2-1d8e-4161-a254-0387d634a212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e3e7e8-0bc3-4d07-95ed-27f42c41e253",
        "cursor": {
          "ref": "f51db2d9-5e3a-46e6-a466-1037472c4e46",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "36c53201-8c28-4864-b9f7-807d1128bc40"
        },
        "item": {
          "id": "48e3e7e8-0bc3-4d07-95ed-27f42c41e253",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "35e33e7d-1d5d-4147-90e5-93556868f012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b195985f-72f6-4978-81f9-c2582d365c81",
        "cursor": {
          "ref": "f7c8d04f-b83f-4594-ab24-5f4bf8f6297b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e7c27b74-155d-47fb-9bab-61a67aff154b"
        },
        "item": {
          "id": "b195985f-72f6-4978-81f9-c2582d365c81",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "45c09a0d-c7db-405c-8bae-29a42c8ebfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3265b7-13ca-4bc7-b522-60ec985000da",
        "cursor": {
          "ref": "bf79c583-6fdb-4948-87b4-efc2bbdd5cf6",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "272b1c70-cc2f-46ed-b0d9-4fa7ade54a0c"
        },
        "item": {
          "id": "6e3265b7-13ca-4bc7-b522-60ec985000da",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "eb04ad65-c4a9-4253-8bea-def758427bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8dc064-970d-400d-a6f4-9f653a102110",
        "cursor": {
          "ref": "db465f31-86fd-4692-b928-30f7a95811ed",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "033361da-fe04-49c3-b441-c6466d0b74de"
        },
        "item": {
          "id": "7e8dc064-970d-400d-a6f4-9f653a102110",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bdf69112-cccf-46d6-b748-227f6d7678ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1b2691-9994-49ce-920c-024a1abe2ffe",
        "cursor": {
          "ref": "bf293493-56d2-4122-b2fd-90be11355220",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e36a0001-ca8c-4548-8d7b-8b75082c8993"
        },
        "item": {
          "id": "cf1b2691-9994-49ce-920c-024a1abe2ffe",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ca78f19e-f0f2-4bc6-9afd-70b48582a20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fe79b7-9f07-463c-b250-91068e42e414",
        "cursor": {
          "ref": "071a0130-b355-4789-aade-e4bda5df11f9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1082a423-687c-42c1-81d5-a2cc2eaf2f59"
        },
        "item": {
          "id": "20fe79b7-9f07-463c-b250-91068e42e414",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6a772a2c-c0b0-47aa-9854-7994c9ada822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4329128-b466-4b7a-8812-778b3dd94ec2",
        "cursor": {
          "ref": "9e1a14af-a125-4ae3-9743-359c77746ca4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "615a11b5-2e2a-4ff0-b3d7-b154a39b0d39"
        },
        "item": {
          "id": "d4329128-b466-4b7a-8812-778b3dd94ec2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "44683930-be2b-461f-92ab-63dad84b1a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a81ccf3-4b87-4500-a033-c205259614ee",
        "cursor": {
          "ref": "5209ee09-d081-4b6e-895b-f220a4c00f00",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c2947c48-16a1-4bb6-8386-4ccf261118ec"
        },
        "item": {
          "id": "0a81ccf3-4b87-4500-a033-c205259614ee",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7c3cc7eb-77b1-4229-ab95-e01a8317bb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23de3f9f-a8be-4399-a838-3e085e375a91",
        "cursor": {
          "ref": "3d3063c9-eb29-418b-a218-66260b336548",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d4865cac-d04e-4cde-870a-ea14572f2611"
        },
        "item": {
          "id": "23de3f9f-a8be-4399-a838-3e085e375a91",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "13c7f421-fa62-4789-8d2b-631f40a155ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6528ed8e-fa12-48f7-b0ee-6394e5b34951",
        "cursor": {
          "ref": "11c216c0-da46-46e2-bca5-9ce2bfa368b9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c75cd8c8-c0e8-4c64-a2a2-63c2571b74c5"
        },
        "item": {
          "id": "6528ed8e-fa12-48f7-b0ee-6394e5b34951",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cb607e7e-b5a0-42d8-a750-165300a70da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a6976d-fefd-4f6f-8b63-8582a8958a9c",
        "cursor": {
          "ref": "094ba9b6-ea31-4343-b407-40c292dc07dd",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9e7ce73a-1a56-4dce-b8b3-402c61e44a84"
        },
        "item": {
          "id": "53a6976d-fefd-4f6f-8b63-8582a8958a9c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "71d01854-9939-496e-a9ce-35ffaa9267bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd69da71-1294-4ac3-9f35-100c7459e54f",
        "cursor": {
          "ref": "70689400-2024-4aa9-b69a-b5636b856069",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "97974f24-17c5-486e-9b88-5193766cfb5a"
        },
        "item": {
          "id": "dd69da71-1294-4ac3-9f35-100c7459e54f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8fe276e2-c5da-4b53-8dc5-f344ec57acb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ed7ec2-ce3d-40dc-a081-f7e0271c3304",
        "cursor": {
          "ref": "0f12c8a2-d919-41b9-9978-1170b0ef668b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fe24d093-abf7-40a4-aacc-f73ec8b68ddb"
        },
        "item": {
          "id": "a5ed7ec2-ce3d-40dc-a081-f7e0271c3304",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ce55ec95-b80b-4d6e-bf6e-c49398e7003a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfcda51-b39b-4bd8-83a4-f04711ff333f",
        "cursor": {
          "ref": "7c0ece59-cb81-48e3-b869-a667958d1f50",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "50d4f956-a39b-42c5-9693-ca4391b17c4b"
        },
        "item": {
          "id": "cdfcda51-b39b-4bd8-83a4-f04711ff333f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2b0087d4-3bd0-4b95-9597-3a16f4e7e78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a491a8cc-a7dc-40f9-b4bc-c5b9aa0f070c",
        "cursor": {
          "ref": "8d142dcf-891f-4dba-9f24-83824b16777b",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a3da49b8-e528-4bc4-8afd-3e1eee9b62b2"
        },
        "item": {
          "id": "a491a8cc-a7dc-40f9-b4bc-c5b9aa0f070c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6c0bd350-2e5b-43b6-86f5-b3b67247071e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93562d73-813c-47c1-8dfa-8da266637f03",
        "cursor": {
          "ref": "9f4b2359-80f9-4c6c-a756-44fbfb5d3ec9",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4fad190e-c4cc-472a-86f5-f6b65b9883f6"
        },
        "item": {
          "id": "93562d73-813c-47c1-8dfa-8da266637f03",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "af20f240-5a8f-46e9-8530-782fdb7c2ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "cc7085a9-263a-4b91-b1f4-87981183a2f2",
        "cursor": {
          "ref": "edea8ebc-df2e-4148-8fb2-c61192b23c44",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cf4fe631-22c1-4ae4-9e2f-655cc13fb976"
        },
        "item": {
          "id": "cc7085a9-263a-4b91-b1f4-87981183a2f2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9a31d8d0-8b8c-4d79-8421-2c6f26ad6bc2",
          "status": "Created",
          "code": 201,
          "responseTime": 9879,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5df7e42-df61-4f9b-b5c8-24609b4fb6b3",
        "cursor": {
          "ref": "8dd78de5-b01e-4415-8975-ec30dce755bd",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "108364cb-50fe-4308-8498-46699ae0340d"
        },
        "item": {
          "id": "b5df7e42-df61-4f9b-b5c8-24609b4fb6b3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "31e16355-c730-4710-933e-39b030c5739f",
          "status": "Created",
          "code": 201,
          "responseTime": 9902,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d24b7ca-5f37-49d2-a4ee-355e31e73d9f",
        "cursor": {
          "ref": "822b0cea-f5ba-49d3-aa5f-deb0fa39aff3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7238f167-d967-4f34-a2fd-65e350f5dfd8"
        },
        "item": {
          "id": "0d24b7ca-5f37-49d2-a4ee-355e31e73d9f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ff711b46-0b64-4a62-bc9f-39344f1ea7f6",
          "status": "Created",
          "code": 201,
          "responseTime": 9865,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "32213507-99cf-4119-a1a7-be4f43486c43",
        "cursor": {
          "ref": "718f58aa-594e-4a22-81d7-3212c3a40a9a",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "31d551a9-4af0-42c9-a45a-8112be303223"
        },
        "item": {
          "id": "32213507-99cf-4119-a1a7-be4f43486c43",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "43b64fb3-4963-452a-bcfe-6488693235d1",
          "status": "Created",
          "code": 201,
          "responseTime": 9338,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "db566618-73f7-47dd-9530-4a757210e73d",
        "cursor": {
          "ref": "80c1e631-5d29-4926-a163-f7d545050df9",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a94220ee-1aaf-4ec7-96dc-03fac2bc7d92"
        },
        "item": {
          "id": "db566618-73f7-47dd-9530-4a757210e73d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5ab7792e-f370-4ee9-8767-8ed5a8c54f0a",
          "status": "Created",
          "code": 201,
          "responseTime": 9626,
          "responseSize": 1218
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-07-06T00:38:37Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-07-06T00:38:37Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "314e9af8-1126-41ff-aa4d-099cbec2d6d5",
        "cursor": {
          "ref": "7811ad48-e138-4ad3-b89a-d0ba3fe0d4ca",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "61b4a0bf-6967-42c6-aed7-c6956c6a5c1e"
        },
        "item": {
          "id": "314e9af8-1126-41ff-aa4d-099cbec2d6d5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a0571f57-16a8-4de8-b720-dc7a5a70bea9",
          "status": "Created",
          "code": 201,
          "responseTime": 9484,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdbd235-b47d-44e1-bc70-732eadf458a5",
        "cursor": {
          "ref": "c71c04d6-49c0-4b84-9ae6-3566334520bc",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ad19e7c1-67a7-45f5-8f4a-e642550e8126"
        },
        "item": {
          "id": "6bdbd235-b47d-44e1-bc70-732eadf458a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a6e2485e-81dd-4881-a109-8fe2641ef281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915fb76f-6190-4b1c-93a9-6e8f11b77e24",
        "cursor": {
          "ref": "236bee40-1ad0-40f5-9eb0-b1de32a15447",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "47321754-dc27-4484-8873-4d1df387e0fd"
        },
        "item": {
          "id": "915fb76f-6190-4b1c-93a9-6e8f11b77e24",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b7ee6eae-7895-46e6-8591-299f50daa7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbbfe12-1db6-4eb6-a204-e0d90ec28cc9",
        "cursor": {
          "ref": "cbf654dd-f858-4aa2-9e51-9af3efb6f162",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5b1e52f5-b15b-4ab3-9a63-d89a1635fab9"
        },
        "item": {
          "id": "cfbbfe12-1db6-4eb6-a204-e0d90ec28cc9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2cd039f6-ade5-4888-9b63-8f78b7724dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009d7a0d-fd69-470c-ad5b-2b87a7d059a3",
        "cursor": {
          "ref": "1f4a912b-b343-4c39-970c-69bc086ef89a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dbc57341-22b1-470e-828f-a85368e13678"
        },
        "item": {
          "id": "009d7a0d-fd69-470c-ad5b-2b87a7d059a3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7fd8f6a7-8b27-4e07-aa95-ed2dc8e93849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3d97d0-0d53-467c-9a53-34e5a985aa57",
        "cursor": {
          "ref": "74e61a4e-b879-48c7-bb0f-3acf60183334",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "daacf081-c57e-4fa8-a3b6-d2d1fbaafc17"
        },
        "item": {
          "id": "6d3d97d0-0d53-467c-9a53-34e5a985aa57",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "93a496b8-9741-4453-9590-191e786bf523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fe16db-5998-4dc5-95a2-f5c63f210e1d",
        "cursor": {
          "ref": "277b0d08-1ccb-454a-9134-e21cc377cad8",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4e289ce6-fe36-430d-8e22-d8e82377a43e"
        },
        "item": {
          "id": "e2fe16db-5998-4dc5-95a2-f5c63f210e1d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1c6f2ac4-cce1-4078-b07e-e84d137ec778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9bdfaa-3311-4961-87ef-f7c2874a6ec5",
        "cursor": {
          "ref": "974d6a15-d8bd-4707-b47d-3bcea4362ff6",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1a470595-b62e-4101-a19f-6d70d7bba9d9"
        },
        "item": {
          "id": "4d9bdfaa-3311-4961-87ef-f7c2874a6ec5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d273899d-a4a3-477d-a737-79d438ca1774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b00b379-09bd-4255-909c-5477a1716b88",
        "cursor": {
          "ref": "05fe2dc7-e9f5-41bd-b1ac-dcffd9dde677",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d6ea72f8-3884-45e0-99fc-efa5a24302c9"
        },
        "item": {
          "id": "6b00b379-09bd-4255-909c-5477a1716b88",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cf0090af-752e-44e2-aef2-1644305324fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c173b2-fb5b-4ab4-98e2-d64aeb815276",
        "cursor": {
          "ref": "3c8fbdf9-66f2-49da-afe4-a7a56a623c8c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a6bf46b3-0b7b-4426-8dc1-ac77b1e105ed"
        },
        "item": {
          "id": "16c173b2-fb5b-4ab4-98e2-d64aeb815276",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5ddc125c-cfc1-4a79-af03-00afbad61565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cb6b5b-e97f-40c5-a2ee-5a972a31b8c4",
        "cursor": {
          "ref": "324ea8d3-2e61-4605-a4c0-84fb0eb697dd",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4cb7a79e-ecad-4cbb-8fad-f890f05aefa8"
        },
        "item": {
          "id": "e6cb6b5b-e97f-40c5-a2ee-5a972a31b8c4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "67487e52-e1d1-4eba-93da-25a928c84995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a83a045-cc4e-4b14-b41e-ae2bb403a125",
        "cursor": {
          "ref": "b7ad580c-1fca-4f3b-ae9d-377f5a22a6a5",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "532969d4-3acf-4a17-acc2-956e61d613b0"
        },
        "item": {
          "id": "4a83a045-cc4e-4b14-b41e-ae2bb403a125",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0ad46fec-66c3-4ab0-a499-4fd8c118b8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78279b7c-ed5f-4e08-a1f0-31d2a083e489",
        "cursor": {
          "ref": "bf198ada-3516-4eda-8324-66e1866d8607",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9138fa2c-9089-4d65-bf9a-baf4b12f13f6"
        },
        "item": {
          "id": "78279b7c-ed5f-4e08-a1f0-31d2a083e489",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f4ad88a1-e190-46d0-8cf3-47592761b31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171ff897-a761-4004-8361-bf97e10a5dd0",
        "cursor": {
          "ref": "ca6fbf78-d4e0-4db9-92cf-7a27201a3692",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7f6ebf5d-b0c4-4d2e-88df-8021495701a8"
        },
        "item": {
          "id": "171ff897-a761-4004-8361-bf97e10a5dd0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a105daee-ca61-4824-a943-f247a5914f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d08571-25b7-4ec5-a916-0c2b0c1ee035",
        "cursor": {
          "ref": "d5aa178d-4e33-44e4-899b-45a9cdc8c218",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "86557a52-008d-4b1d-96f3-d059d86d36d8"
        },
        "item": {
          "id": "47d08571-25b7-4ec5-a916-0c2b0c1ee035",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0a8922a1-2086-47eb-8375-c5cad9b854ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeebc613-95da-4c03-afbc-b2079453269a",
        "cursor": {
          "ref": "40f20304-249e-42f8-8ce6-4f3832e58935",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "11b9ab10-c8fc-46de-9d5a-a42d02405648"
        },
        "item": {
          "id": "eeebc613-95da-4c03-afbc-b2079453269a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6c5e9719-4988-41fc-8848-aeca61fb2b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54f12f9-a537-48d5-bb46-f723bd84c4f8",
        "cursor": {
          "ref": "4fec63c0-96dd-4558-be4d-c70c383f46d3",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "76b431bf-f2ad-42fa-b48d-af7ad327621f"
        },
        "item": {
          "id": "f54f12f9-a537-48d5-bb46-f723bd84c4f8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fc0d19e7-8935-429f-b818-67cd244a5e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec5b1b0-cd85-4e2e-872d-388474209f9b",
        "cursor": {
          "ref": "d92bc3e5-6854-487e-8f3b-a3227dcbacb9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8d1f8b92-c05c-4651-a6e0-83909eccae3c"
        },
        "item": {
          "id": "aec5b1b0-cd85-4e2e-872d-388474209f9b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f2c58673-6146-4686-b254-8b384b9ea140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ac9862-d13f-4e54-92dc-bac74267ac86",
        "cursor": {
          "ref": "6a80e54e-644d-4429-8999-5fd4555433c8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a0a04f10-0b8b-4fcc-b46a-d8bfadbd4a49"
        },
        "item": {
          "id": "89ac9862-d13f-4e54-92dc-bac74267ac86",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2aeed162-15ac-4bf1-9650-e1624e4c3bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f157f6-bc17-426b-845c-5c6cd858216b",
        "cursor": {
          "ref": "24536d6f-0031-4afe-866d-0dd9bfc78929",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5dfbef50-1ac1-48c9-b603-ee45da323e54"
        },
        "item": {
          "id": "74f157f6-bc17-426b-845c-5c6cd858216b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7471fa75-e3fc-4e64-9711-a0307c79b135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f09aa0-6a41-4f34-87fd-86f0723332a9",
        "cursor": {
          "ref": "479c098c-170f-4821-9981-bc814a065b55",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "16c2facd-4d4f-4301-9b70-366739841a90"
        },
        "item": {
          "id": "76f09aa0-6a41-4f34-87fd-86f0723332a9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4ee42506-8ee6-47c5-9339-75274c1e3c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf07737-326c-4572-ac3b-d31c946cf404",
        "cursor": {
          "ref": "a4ec579e-a5eb-4df8-b2d9-498a154c9169",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "43793bda-0762-42c9-b127-c3a8ac0bf6f2"
        },
        "item": {
          "id": "bcf07737-326c-4572-ac3b-d31c946cf404",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cc6850b2-b7ad-4c87-a230-506f282add63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf2aadf-a2bc-4c97-b0bb-8bd3619e779e",
        "cursor": {
          "ref": "5c8d15bc-c783-4d34-9a18-0ee9f7747c06",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d1c230c3-cc78-4ce1-89c5-97bcd10d902a"
        },
        "item": {
          "id": "ecf2aadf-a2bc-4c97-b0bb-8bd3619e779e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "51112569-ea6d-42b1-8831-041632384250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82361cfd-ab89-4422-b901-b5f01fa4361b",
        "cursor": {
          "ref": "0c575cf1-dda8-4f68-bfdc-d6f60dcaccd2",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "565b73f2-149e-4153-ba35-447564d39022"
        },
        "item": {
          "id": "82361cfd-ab89-4422-b901-b5f01fa4361b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c1591008-bde5-4caa-9192-366492b8d013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67991b7-3ff1-4300-85c1-cae16b85ac06",
        "cursor": {
          "ref": "eb9446c1-df06-46d9-b756-30684803b92e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "17c45c6b-8914-4826-8123-4174209c4ce3"
        },
        "item": {
          "id": "f67991b7-3ff1-4300-85c1-cae16b85ac06",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "db3400ab-e145-48f2-ae16-ffd4f00facac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c3ce5b-f943-4868-8373-8eab8de3c1f0",
        "cursor": {
          "ref": "c2612d72-a2a7-4e60-ba74-2c4bbca46ca2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4ff94876-8996-43b1-95d6-de39877b71ad"
        },
        "item": {
          "id": "f2c3ce5b-f943-4868-8373-8eab8de3c1f0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f08a66b3-ba04-4afd-a117-66607b513bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b02134-1034-4eca-8f82-f0f372c7e779",
        "cursor": {
          "ref": "e7363026-29ed-430a-aa0c-357d24d456e8",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "900ee113-63d0-4294-9182-6cbe9d5ef74c"
        },
        "item": {
          "id": "58b02134-1034-4eca-8f82-f0f372c7e779",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7a84e8ad-0e0a-4d19-b947-26eb84bdda8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a778abc4-e6f3-4da2-8e64-998c55861ae1",
        "cursor": {
          "ref": "62ca6d64-3c59-489b-8824-de4edf7b6ff8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "07e120c7-b308-4758-b3bd-e07ae43db6af"
        },
        "item": {
          "id": "a778abc4-e6f3-4da2-8e64-998c55861ae1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "185bed35-f691-4fae-a8cd-6c860b30472f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3349617-dffd-4224-9e6b-e0166433c41e",
        "cursor": {
          "ref": "e398f635-5c8d-43c2-bca9-dadc4fa8c91d",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2ba6f5cf-344c-471b-8225-4bf8af7b10cc"
        },
        "item": {
          "id": "b3349617-dffd-4224-9e6b-e0166433c41e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "074a0438-666e-4d93-bb6c-388c89f66ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0675a791-e05f-4ea9-8624-c90a956d8ca0",
        "cursor": {
          "ref": "bf2ebbf1-2016-46f2-9128-0b853e9e2a63",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e782dc8c-e073-4936-956d-f8e32d704f55"
        },
        "item": {
          "id": "0675a791-e05f-4ea9-8624-c90a956d8ca0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d44dc24c-f48b-4a31-a24b-c3dddd439d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed27d206-01bd-4ebe-bf18-9f93a04601b5",
        "cursor": {
          "ref": "50c8cdbb-ab11-402d-a6f8-fcb166846c04",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6ee9e5b6-c819-424b-a80a-9f50132459bc"
        },
        "item": {
          "id": "ed27d206-01bd-4ebe-bf18-9f93a04601b5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c3342ba0-1fd9-4ce0-8ac3-8bb8371e5a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5de47d1-b118-462d-ade4-f9fdc67fed3c",
        "cursor": {
          "ref": "03355638-f5ec-4d8b-a1cb-89cfb5dcaf0f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f048fd8c-f7be-45f8-9314-77fb26531eaf"
        },
        "item": {
          "id": "e5de47d1-b118-462d-ade4-f9fdc67fed3c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dcee01b6-931b-4efc-be2d-8ea1d1577735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9dd301-43ac-45ae-b720-ed40a8e5a52a",
        "cursor": {
          "ref": "0e4c4ad4-b386-4d46-8f08-c007c6fe8632",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6190c3dc-cab9-4967-8199-7dc1f4d6737b"
        },
        "item": {
          "id": "ba9dd301-43ac-45ae-b720-ed40a8e5a52a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "60508c75-f15e-47c2-bc0f-6efff6cb7089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6031e6-1ba2-42f4-8172-9ffbd564b5eb",
        "cursor": {
          "ref": "da3b68e0-766d-42e5-9b79-e0e1281a93cf",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "41a4db69-8192-44d4-a375-bacfe96a511e"
        },
        "item": {
          "id": "fc6031e6-1ba2-42f4-8172-9ffbd564b5eb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cf51910e-14df-408f-a098-d4f17faf93a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcbfeaf-ce21-460e-a847-f03e509aa93e",
        "cursor": {
          "ref": "6b30580b-f5b3-4b66-8cda-772b939bf7f6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ae54bb79-ebc8-4ce6-9f78-aac1d1d2e7c7"
        },
        "item": {
          "id": "cbcbfeaf-ce21-460e-a847-f03e509aa93e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "59075fca-dcd4-4f73-9e99-f8ca09f4c5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfe179a-7121-4197-be9c-1885a333996a",
        "cursor": {
          "ref": "ad448658-2fc5-44ad-aa80-f34678b7bcc7",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9ed953d5-0c65-484a-a49e-235ec28a5990"
        },
        "item": {
          "id": "4dfe179a-7121-4197-be9c-1885a333996a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "44c886f6-fefb-497f-b53f-3e8f6e683e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca5467a-83fa-4e22-bb98-75a92f2aa13c",
        "cursor": {
          "ref": "dff55a34-b1f2-4173-8b03-1db026c7b74a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "32e1f594-75ed-41c6-b58d-c69f0d8e5221"
        },
        "item": {
          "id": "cca5467a-83fa-4e22-bb98-75a92f2aa13c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2938be37-6d93-40eb-89d9-b1db3031bb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521ee471-6848-4aa5-804b-3a7517f235e3",
        "cursor": {
          "ref": "b5170eb4-258f-4919-9a41-5fb985e0f3a6",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f86f622c-5f62-45d1-947a-b28088209a9c"
        },
        "item": {
          "id": "521ee471-6848-4aa5-804b-3a7517f235e3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "25949d3f-6a15-4d50-8fec-3bbdfcdeb50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0224b158-96b2-4036-8878-b8c2375fe65e",
        "cursor": {
          "ref": "b98ce7a3-f0b2-4bd1-b80d-abe8ca41b227",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2205b4b1-a105-4409-b74b-a8101b6d5a50"
        },
        "item": {
          "id": "0224b158-96b2-4036-8878-b8c2375fe65e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9b133ef7-6c9c-456a-85d1-32505fc87f8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1dd350-5828-48f0-975a-e94b2d011d13",
        "cursor": {
          "ref": "8c5b30ff-4717-4f1b-b751-eca45778499d",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9212c898-780a-45f7-8ac6-4609e4c6bbed"
        },
        "item": {
          "id": "ce1dd350-5828-48f0-975a-e94b2d011d13",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8820187c-1a07-4a27-9e09-d4fae562a6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29eda04a-966b-470d-9cd8-15f9e5d59240",
        "cursor": {
          "ref": "cf8cf89f-edb3-474e-96de-975311ea70e8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3e6c4527-a21b-4f84-9891-824c802970ba"
        },
        "item": {
          "id": "29eda04a-966b-470d-9cd8-15f9e5d59240",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7a8b5e6f-73ee-42c6-8ab0-8344e97997d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a0bfc6-2dc8-477e-8126-5374cd96af2a",
        "cursor": {
          "ref": "b3b12910-ebb4-498d-86f8-afd5246a8f18",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f4a5d7b9-8aa7-478b-9fa3-67859da263a1"
        },
        "item": {
          "id": "c1a0bfc6-2dc8-477e-8126-5374cd96af2a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6c757a6a-41e4-4287-a415-bb9e8717b756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0722e12-03fb-4b53-9228-00d8c10259ae",
        "cursor": {
          "ref": "a240f156-ed98-45b4-a142-9406e0a43e7c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "395580d7-791e-4dd9-9d70-ff3e8e5101a5"
        },
        "item": {
          "id": "d0722e12-03fb-4b53-9228-00d8c10259ae",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e65fdb0d-85de-4fde-93d4-51ddefd900a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c306320-482c-43ab-b277-a243d58514e5",
        "cursor": {
          "ref": "47f6efa0-f97f-4ad8-8cfa-d3c5cb145533",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1aff0958-df17-4e45-92a5-aaa50dcffea1"
        },
        "item": {
          "id": "4c306320-482c-43ab-b277-a243d58514e5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "05db355c-2ae8-4b11-aad0-40855b64ac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edc5245-c952-4350-8184-51d0572b025d",
        "cursor": {
          "ref": "aed3c851-8d35-4027-8897-6dd2dcb87176",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "039b13e7-0d87-4744-be5c-06b1b233958b"
        },
        "item": {
          "id": "6edc5245-c952-4350-8184-51d0572b025d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "664fdfac-788d-4b75-97ce-fac7c94dc24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc35412-eb43-443d-a8fc-565f5f0000ff",
        "cursor": {
          "ref": "aa0bbbbf-e3a3-431f-bdac-753ee235f439",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1a8053cf-d4c7-49dd-8c16-8be18e5209e1"
        },
        "item": {
          "id": "1dc35412-eb43-443d-a8fc-565f5f0000ff",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5976a25e-5ec4-42be-85f7-8014f449275a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450d83d5-4260-4810-a9ef-057e4efb42c2",
        "cursor": {
          "ref": "c5bc85f8-229c-4670-8569-0230b90f47d7",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3bb03577-ea43-435d-93bf-8e792967a315"
        },
        "item": {
          "id": "450d83d5-4260-4810-a9ef-057e4efb42c2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "52531cad-90b3-48d5-b373-ac6a58586eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60509a92-d618-4935-bca5-26ab6570911e",
        "cursor": {
          "ref": "5794fab9-9228-4a95-87b9-e0c2c5026d4b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7b850056-9bac-4bda-8a9f-d259405ec12f"
        },
        "item": {
          "id": "60509a92-d618-4935-bca5-26ab6570911e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2461402e-1e40-448e-827d-1f4b706a74b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a655f92-036b-4309-a58e-78668639dd25",
        "cursor": {
          "ref": "2f742187-34e7-4829-859d-abf7a7cba260",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cab9cf4d-1663-4960-bcc6-84d5e53b4904"
        },
        "item": {
          "id": "7a655f92-036b-4309-a58e-78668639dd25",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1004005c-ae3b-4f84-a32a-db5706bde51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e744f83-7de9-409e-9ff6-abe85075dea1",
        "cursor": {
          "ref": "d2dce8af-8201-42ce-8c3c-8eb848fd3856",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c391e370-8712-4a06-841e-d810517c34dd"
        },
        "item": {
          "id": "1e744f83-7de9-409e-9ff6-abe85075dea1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e0e77f8f-64f4-47e0-9064-0fe70fd4b5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e01dc8f-b540-4162-8f42-2b06b14b7e80",
        "cursor": {
          "ref": "e6ee4e60-be52-49e3-ba44-63801129c79c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8625c457-bb67-4a55-b4f5-1f35d30796ef"
        },
        "item": {
          "id": "1e01dc8f-b540-4162-8f42-2b06b14b7e80",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "83aa1233-2af4-4bdb-9a00-3edbf5df1984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd05328-3d47-4283-a509-fb7496f0a726",
        "cursor": {
          "ref": "6ee0e483-0e9c-4a7d-997c-fc00fcf7d434",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8d816fe8-41c3-4094-b787-e54a6e87b36b"
        },
        "item": {
          "id": "0fd05328-3d47-4283-a509-fb7496f0a726",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e54d8cf1-99e7-4834-8385-c1120ebd1571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0288c0e-54c5-412c-a35f-861ff2f06adb",
        "cursor": {
          "ref": "7dd86817-bf93-4f7b-b594-353626c91ba6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3829c7e1-915f-459f-9e70-d284a55f6a48"
        },
        "item": {
          "id": "b0288c0e-54c5-412c-a35f-861ff2f06adb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0c173333-870a-4950-958c-98f52cc0987a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8457e2-0651-4f20-a3ca-a425f41489ed",
        "cursor": {
          "ref": "e6ac2240-de80-4c56-9930-04b1e5a95ce2",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "31179d88-5547-4f53-9724-72c37ed7d1dd"
        },
        "item": {
          "id": "8a8457e2-0651-4f20-a3ca-a425f41489ed",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9373d761-c46f-4be1-85f6-d8e076a0c1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90da3cc-efa5-48a8-9f08-4d2f8d5ffa0b",
        "cursor": {
          "ref": "c3ecd97c-c359-42c7-8bd6-cc2a5e03a7c2",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6fef350e-16b4-4188-b767-7263e7bbe7f5"
        },
        "item": {
          "id": "c90da3cc-efa5-48a8-9f08-4d2f8d5ffa0b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e3712e45-b23d-48ff-aeb6-da53e6218a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac31b5a-db1b-490f-98e6-3c5625fa1e42",
        "cursor": {
          "ref": "8be2f4ac-f148-4e82-9a6f-e93e4b91e063",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "025e47de-2ade-4066-b1b8-0c4e22fa079e"
        },
        "item": {
          "id": "0ac31b5a-db1b-490f-98e6-3c5625fa1e42",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1111bd9f-75c0-4054-a956-1fd029fe42ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cf4f55-9597-4b52-9e5a-eefbce8f496c",
        "cursor": {
          "ref": "72b7ac51-d70b-4261-b428-30f436741efc",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8ed2d53a-1465-4d0d-a80f-c6cc85fb7189"
        },
        "item": {
          "id": "65cf4f55-9597-4b52-9e5a-eefbce8f496c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a88fda73-fba8-46bb-b8d6-b26f66477ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f487b7b-00c2-481c-bb74-5855e3fa71f0",
        "cursor": {
          "ref": "b9c5660f-8e56-460f-b196-498e0f843436",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f4ddde23-c528-43cf-a875-2a562807ef62"
        },
        "item": {
          "id": "8f487b7b-00c2-481c-bb74-5855e3fa71f0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9ed93d91-c2bb-46fd-829a-94662dabc005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9f4639-a9d5-4f3e-8c4d-dec947c2b495",
        "cursor": {
          "ref": "760d8c0d-9e36-4d87-8630-b9ba6957baa9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9948bc9a-4455-457f-9b85-e57e6ff22c18"
        },
        "item": {
          "id": "3c9f4639-a9d5-4f3e-8c4d-dec947c2b495",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "50c60036-3c27-489f-85d2-521a9a469173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ebfc41-8b39-4b90-8676-a79f6e2a24dc",
        "cursor": {
          "ref": "4979bb3b-3d7b-44ad-b8ca-3a4aa31f2a06",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "eb792486-5786-43dc-9c80-b2cfdc738b64"
        },
        "item": {
          "id": "95ebfc41-8b39-4b90-8676-a79f6e2a24dc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8eae0ae8-3295-42e6-8ab9-d8c76bfd6fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0f2334-bf76-4328-a001-aea67be77d87",
        "cursor": {
          "ref": "b1765acf-efd0-4fc1-a5e3-df3db178bcc2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "adeed40d-07d8-4ec6-8807-7b890ee45676"
        },
        "item": {
          "id": "ac0f2334-bf76-4328-a001-aea67be77d87",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4de47d99-f250-4fcb-b7a0-ac0b07f1306c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e23348d-992f-4f1f-a364-bc764b0b94d3",
        "cursor": {
          "ref": "55cf5f43-51df-4417-ae45-6c9beee85276",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ca0243c5-f6ed-46b8-804e-32e2b7eaa446"
        },
        "item": {
          "id": "0e23348d-992f-4f1f-a364-bc764b0b94d3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "10a9badd-c3c6-4f07-94b1-fa277f2beccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c006708-b1d9-4f67-a9cc-79baadf665eb",
        "cursor": {
          "ref": "85f281a7-2f6d-4b46-a41d-3c425487833b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aebc0335-f499-43c9-b338-20783c5b6c2a"
        },
        "item": {
          "id": "5c006708-b1d9-4f67-a9cc-79baadf665eb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6ebb084e-c4ea-4be3-bc4e-169762640dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc06f82-efb8-4f1c-bf38-c7856c698352",
        "cursor": {
          "ref": "dc04c54b-c79b-4d0c-929b-7a50099d859c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d3e6dedb-f23f-4494-bbc2-ab9c385ee93e"
        },
        "item": {
          "id": "ffc06f82-efb8-4f1c-bf38-c7856c698352",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ff01d4d6-0ee1-45aa-bf58-7b4356a843d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4e2516-3d92-4bd8-a7dd-2a0accf0adef",
        "cursor": {
          "ref": "9fd84745-a584-4692-a754-6fc08410c673",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c34c287e-478d-4506-a391-821c96d0fd20"
        },
        "item": {
          "id": "7b4e2516-3d92-4bd8-a7dd-2a0accf0adef",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a3342af7-bdb1-4c66-bd0d-c15d3eff7dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4f5562-67e0-4156-8c9d-b2cf9ce75372",
        "cursor": {
          "ref": "eba50d6a-b45f-4148-aa62-5854fafb6ff8",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5493d0a6-2f88-49e6-872f-43973c415822"
        },
        "item": {
          "id": "8c4f5562-67e0-4156-8c9d-b2cf9ce75372",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d65a817b-52b7-446a-80a2-938f7ae89037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ef01f1-3fad-4461-82ef-1ab16e4b5676",
        "cursor": {
          "ref": "200c8352-64cf-4dbb-97ba-0708ce1eeaac",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d2ba15d1-6e49-4200-9116-f8e13b2b1990"
        },
        "item": {
          "id": "13ef01f1-3fad-4461-82ef-1ab16e4b5676",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5754ab70-c9ff-4513-863f-6cfdb4edb928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e3a047-30d0-462a-924e-77f286209e5d",
        "cursor": {
          "ref": "7272cebb-658d-4c20-92cf-05c1ecec135a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c47b0ee8-3da7-4112-8d6c-6ca89076d1df"
        },
        "item": {
          "id": "09e3a047-30d0-462a-924e-77f286209e5d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a2f8ae9e-1707-455e-8f13-6fca2641cbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f6f665-52fc-4c1e-b1a3-2c56a820645b",
        "cursor": {
          "ref": "66f477c1-5b08-40ce-9860-ba8e905ff7c5",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f8aceb13-6596-44b1-813e-5e00b6857d88"
        },
        "item": {
          "id": "11f6f665-52fc-4c1e-b1a3-2c56a820645b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ac509e46-dbc5-49e4-800b-4f87e04c483e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc13901c-4eb8-4ae2-b2e1-2a39c5e71f6d",
        "cursor": {
          "ref": "c4e75d79-8dbb-46fb-a2a8-4e6b25cd47f3",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e2a1f4f4-2f76-4d90-8359-eb4528c9f6f9"
        },
        "item": {
          "id": "fc13901c-4eb8-4ae2-b2e1-2a39c5e71f6d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "17fa87f8-6e8f-404e-a40c-5298844b7b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10379cd4-e4ef-45b8-b0b9-718b1d5410e9",
        "cursor": {
          "ref": "c78baae0-eb98-42d2-9957-43f92f38fd0e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "968225f5-d835-49f3-b946-25ce70bd8547"
        },
        "item": {
          "id": "10379cd4-e4ef-45b8-b0b9-718b1d5410e9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4e8ea5a2-5e55-42fd-9b09-abbe31abe7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82fc2cd-8f97-4cdb-b429-42f1d0d33103",
        "cursor": {
          "ref": "27b66f8b-290f-4c4e-9827-cb68edb5e139",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fb20b79c-75da-4560-999e-31d53debcc16"
        },
        "item": {
          "id": "d82fc2cd-8f97-4cdb-b429-42f1d0d33103",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "937ece9d-c676-4d3e-8d3f-341b1fda486a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9c4b23-bebb-481f-a1be-3286d504a62e",
        "cursor": {
          "ref": "61edd39f-21d9-406f-8774-8d505a89fe41",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "02487fd1-57cc-42da-ac55-a17938409ea1"
        },
        "item": {
          "id": "6b9c4b23-bebb-481f-a1be-3286d504a62e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b506d42d-2967-4f59-ad0e-32fcc35d148e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896c78eb-2f98-4386-a300-f833ea59d0d4",
        "cursor": {
          "ref": "7a6ce14c-9884-4d8d-b16f-5fc4b8e7a62f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "629ce5d4-ec8d-4616-8178-bf0b275c121d"
        },
        "item": {
          "id": "896c78eb-2f98-4386-a300-f833ea59d0d4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c2127138-153a-4ff5-8d45-82a807c84aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3add1615-215e-490a-97c1-b0d0abb1c2a8",
        "cursor": {
          "ref": "eb291c9a-0642-402f-aa07-43ced22d0f61",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "23cabab0-774f-4995-8378-e0218a57fde4"
        },
        "item": {
          "id": "3add1615-215e-490a-97c1-b0d0abb1c2a8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6e769da7-ae26-4128-9e9e-d21551621d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c87431-7611-4d60-8378-af21089b8c5a",
        "cursor": {
          "ref": "b2734571-7e7d-414c-bdf1-b1af9b7a1ff2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "24b27f47-2e90-48f3-9082-00e1d6c85ccd"
        },
        "item": {
          "id": "93c87431-7611-4d60-8378-af21089b8c5a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6f2873f2-7492-4ea2-ab59-b4a7756617a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d43c36-646d-4375-97ed-6ba51c8b6433",
        "cursor": {
          "ref": "1f80d6d6-2a3c-4805-962b-85ab1e14a320",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "48be5f9e-a472-4491-85ec-1be83137eaa9"
        },
        "item": {
          "id": "81d43c36-646d-4375-97ed-6ba51c8b6433",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ccf67f4a-0fdc-4744-874b-9de07d9e7351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be6329f-fb88-4e9a-8eff-b195f0cff4ae",
        "cursor": {
          "ref": "6731060b-69c5-461f-91f7-b9e7b4b262a4",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7f7ecfca-50cc-4b0f-baef-b9d6ca93593e"
        },
        "item": {
          "id": "8be6329f-fb88-4e9a-8eff-b195f0cff4ae",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "14a92e7c-4f89-46f2-ba6c-41401e3ef76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a850b7a-f594-45b0-8bf7-02def1cc5103",
        "cursor": {
          "ref": "37156ccd-bea3-4244-9e92-a33a56904344",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2309f28d-f300-466b-80f9-ebb4a431a2dd"
        },
        "item": {
          "id": "0a850b7a-f594-45b0-8bf7-02def1cc5103",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0373b2f5-0bea-4d0b-a7de-ec680f461811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f985181c-e272-4e42-9477-19ef00263d57",
        "cursor": {
          "ref": "26d905af-403e-43b9-b729-ac1bcb970b47",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5527d307-dd7d-4d95-9380-9e38b98f5c8e"
        },
        "item": {
          "id": "f985181c-e272-4e42-9477-19ef00263d57",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3c2503f2-c35d-435b-a3e0-0a330fe8dc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d79c69-1777-43ea-95d5-dc1e5d67644a",
        "cursor": {
          "ref": "ce0e2321-182d-47c9-9681-be26fa2fb809",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3bd6bed2-0fb2-46ca-8e21-1bf3d0438d57"
        },
        "item": {
          "id": "57d79c69-1777-43ea-95d5-dc1e5d67644a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1eeb2ee3-1a4a-47a9-a7d8-4c6ab1a20681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27a34fb-28bb-4fc7-857d-4a796d5b7a45",
        "cursor": {
          "ref": "978798fb-8ff0-42ca-9ea7-1e8db377c1e7",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "660910e2-fcbc-40bb-8b7b-0064bd52614f"
        },
        "item": {
          "id": "d27a34fb-28bb-4fc7-857d-4a796d5b7a45",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bcaa315e-36cb-48cb-bb0e-38e526b1c6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795caab0-2684-4625-863a-a9318e86b159",
        "cursor": {
          "ref": "1c33be4e-8890-4b8f-80c0-6790cbc8ca1c",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "75d859c7-850f-4867-9171-cada033b36b7"
        },
        "item": {
          "id": "795caab0-2684-4625-863a-a9318e86b159",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "23945b10-8bb4-446d-ac36-7c6c10b8315c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8b7db8-d222-43c7-8e01-b174ff003ce4",
        "cursor": {
          "ref": "bf0b03ed-96fc-4650-9725-fc6bf3e3a3af",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "256fa504-f263-41c5-bfa5-c2e99459b0df"
        },
        "item": {
          "id": "cd8b7db8-d222-43c7-8e01-b174ff003ce4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3de9ee6c-8839-4a06-8c65-3f7eb9d7392a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555870cc-529e-4229-8fb4-b7484395faa9",
        "cursor": {
          "ref": "6479c3df-db42-4e38-adf2-1d679fcc06f6",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cee0c596-2bff-49ac-af13-74607f67e614"
        },
        "item": {
          "id": "555870cc-529e-4229-8fb4-b7484395faa9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "06f589ee-4d4f-4aac-934b-8c3cf0e599fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdec85a-4c16-4386-a2e3-5678a9081e51",
        "cursor": {
          "ref": "346ffff6-3db1-4fe7-975e-659c27a75126",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b2c6f7d7-502a-4be8-b87a-701b63557b8d"
        },
        "item": {
          "id": "dcdec85a-4c16-4386-a2e3-5678a9081e51",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fbcac7a4-b624-40f4-adcd-9d329c30916f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ecc2cb-6973-4633-bd7d-1a2f99682d8c",
        "cursor": {
          "ref": "b65349c2-7fbc-4dd3-bfdf-7d72bc9437dd",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ed25e6cd-f8d1-4360-a750-76dcfba6c6ca"
        },
        "item": {
          "id": "e1ecc2cb-6973-4633-bd7d-1a2f99682d8c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2bca2247-0874-4e0f-be18-d7ff6c830b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad73ad8b-ffcc-4df7-842d-a6c2dcb56a6d",
        "cursor": {
          "ref": "ff88770e-5c85-41ab-849c-0d541f4c5bd9",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f10d8588-22fd-4139-a4bd-b198e3630dc2"
        },
        "item": {
          "id": "ad73ad8b-ffcc-4df7-842d-a6c2dcb56a6d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8064df85-905e-4c63-ae40-d11912cf5da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fb6af9-6010-42ae-9a87-dad7cc2a0957",
        "cursor": {
          "ref": "84cac007-7d00-46ea-a098-720f0be2d11a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f4300953-453b-4a25-8df6-76090b4036d4"
        },
        "item": {
          "id": "53fb6af9-6010-42ae-9a87-dad7cc2a0957",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "74a1ac95-285b-4489-a0c7-ad7d31eb4f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9939b50-6843-4406-a1e5-c4c10d2d4572",
        "cursor": {
          "ref": "1eb31bdb-b395-4fc1-bc0c-1dcb9e249ea8",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1fe2649d-76c1-4d07-8a84-2631c29f917f"
        },
        "item": {
          "id": "a9939b50-6843-4406-a1e5-c4c10d2d4572",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "883cccf6-93f6-4c24-82c1-bd059a93017c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fb8f15-2fcc-412e-b3ec-25c8ca3ae4d6",
        "cursor": {
          "ref": "7ef5ec23-f952-4221-af1e-0dd4426aa624",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "299d3654-04ab-4a7e-adcb-5303456faeb5"
        },
        "item": {
          "id": "e9fb8f15-2fcc-412e-b3ec-25c8ca3ae4d6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8086eec4-a2f2-4dd0-8878-09b890c80927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785a39c8-9a94-479b-8945-9266cf5f6ca7",
        "cursor": {
          "ref": "d381a016-474c-43d6-a80d-ec07d8dd8658",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b4115ddd-e3c0-4598-b42c-7075b6173180"
        },
        "item": {
          "id": "785a39c8-9a94-479b-8945-9266cf5f6ca7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f75705f4-c3d1-4c8a-bef7-139f3ee5c6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d046ad3c-3757-4a01-be90-aa487ae22c44",
        "cursor": {
          "ref": "76f64138-05d5-4beb-8e93-c1a986f074dc",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f24a137f-dce4-412e-8c5a-d6fb00f8ef44"
        },
        "item": {
          "id": "d046ad3c-3757-4a01-be90-aa487ae22c44",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "45bc09d2-b1e6-424b-a460-d6f856c002c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca65d74e-137f-469b-9425-26f7593187bb",
        "cursor": {
          "ref": "d227c1d7-c963-4693-95bd-833bff253a87",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "eb7749cc-739d-45a2-baee-fbc0da70bb8d"
        },
        "item": {
          "id": "ca65d74e-137f-469b-9425-26f7593187bb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "236b7ee7-7828-4f41-879e-009cee57c61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558683f4-62e1-4980-b3f1-33fd0434c71b",
        "cursor": {
          "ref": "2b74302a-6c1d-49b1-a7f6-40bfb39c954c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "58c3de83-90cb-479c-a344-ee4f609b247c"
        },
        "item": {
          "id": "558683f4-62e1-4980-b3f1-33fd0434c71b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "59bcd16d-0500-4220-9ddd-b51c72de0340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dac0e70-a3ea-4f60-aa6d-77ef172d6cf2",
        "cursor": {
          "ref": "ce37a168-f6f6-4f75-8690-d4edcbdff32f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f2f94e37-0184-4060-a725-6c9d15f57f43"
        },
        "item": {
          "id": "3dac0e70-a3ea-4f60-aa6d-77ef172d6cf2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fcb9520d-e7ec-45fc-afa1-dec93ac1d641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedc906e-a850-42e9-aab9-c8de831adc31",
        "cursor": {
          "ref": "6e855a2b-41d0-4945-b6d1-5a7f1d9fbc59",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4ba4384c-72c2-4154-92cc-e3eb47c3a5a7"
        },
        "item": {
          "id": "cedc906e-a850-42e9-aab9-c8de831adc31",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2bc4f56c-da87-4487-bc81-bd0bd8e9058a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f49013-9f6a-457e-9dec-d9d01418bb33",
        "cursor": {
          "ref": "5dcbeed5-6901-4b2f-b469-edcf7501945c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a5c7cfef-878d-4d00-b9bf-044faca669a1"
        },
        "item": {
          "id": "e1f49013-9f6a-457e-9dec-d9d01418bb33",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0baf325b-80e9-42fe-8007-2f532ebdb654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc3a706-568b-41df-aeba-48f56b1a5080",
        "cursor": {
          "ref": "f95767e4-dd9b-4e1a-a3a9-5d43b82d6837",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d2e1c485-7524-44f4-b56f-0b21f6f9d2d5"
        },
        "item": {
          "id": "abc3a706-568b-41df-aeba-48f56b1a5080",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1311207b-4737-43e5-b45f-452f1939b706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77eca2d-f473-472f-b690-8ed840d89e43",
        "cursor": {
          "ref": "4b2061d0-4e5e-4531-a2e2-b956e41a8605",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1a10be40-d5b3-45b5-b9b6-99927253d200"
        },
        "item": {
          "id": "f77eca2d-f473-472f-b690-8ed840d89e43",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "20b4a9dc-03d5-441f-a309-e0046d1f94e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de28413-52dd-4ac2-9f7d-c107ffeb4f26",
        "cursor": {
          "ref": "4af8b084-ce45-4383-90d5-0173881bb63f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6ccc4c38-2428-4dae-9e35-e74571acbe56"
        },
        "item": {
          "id": "4de28413-52dd-4ac2-9f7d-c107ffeb4f26",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d0b3f400-4262-4f08-8f83-1e52d5912fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7181767-0403-4227-8fe6-09140fd7364e",
        "cursor": {
          "ref": "4d67958b-cba1-4363-9995-6a28b993bdc9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0112cb13-214c-4dd5-8e13-3c7cff0fffab"
        },
        "item": {
          "id": "f7181767-0403-4227-8fe6-09140fd7364e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ed79c0bb-3474-4ac5-8d33-473ce9822980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bb759b-4370-4aab-b0db-d12efda43768",
        "cursor": {
          "ref": "ca843f07-3f17-4078-a255-14c4e0b7f4fe",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "36dcb999-d405-4bc5-af7f-75af37df4038"
        },
        "item": {
          "id": "34bb759b-4370-4aab-b0db-d12efda43768",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3081d1bb-2399-44a9-acdd-620255b51682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6139a30a-a41b-43b6-8a92-895a80fdf2b7",
        "cursor": {
          "ref": "6971b88d-beb3-49bf-a4ff-9a4ba30e1f48",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ac38ec3c-92bd-48b8-bc21-1685d94a4007"
        },
        "item": {
          "id": "6139a30a-a41b-43b6-8a92-895a80fdf2b7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "55fe3fb6-0d8b-48f5-ab39-e7deac518334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1db555-5225-4ad4-bae2-2776c7a75753",
        "cursor": {
          "ref": "eb4335d3-8994-4265-8eab-97c59afea7bf",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "40da5d6e-5ea2-431a-9d29-2f5f30c78727"
        },
        "item": {
          "id": "fd1db555-5225-4ad4-bae2-2776c7a75753",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c085b21c-5373-408e-a50b-b1a70a0e13d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef15e92e-11cc-4c74-98ed-d94e031da9eb",
        "cursor": {
          "ref": "c8136639-57e5-4599-8b8e-57ed87d823b9",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c46ae9fa-45ef-4bc9-b049-3c7882d4d435"
        },
        "item": {
          "id": "ef15e92e-11cc-4c74-98ed-d94e031da9eb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "76d560c5-3781-48fd-a0e4-4a0ba88043cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be31eed-e282-42d6-9258-0d8d3301d445",
        "cursor": {
          "ref": "a7a503fd-7042-4569-95ee-91ee7084baad",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7bd6d67f-c99a-4230-9bf7-a3017786db03"
        },
        "item": {
          "id": "9be31eed-e282-42d6-9258-0d8d3301d445",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e8d1e9aa-5909-4f0b-a245-12a5ab0d4e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f053e9b-dd53-4c8a-bc19-1e7e8140c996",
        "cursor": {
          "ref": "98df2b44-4213-44f9-af39-f52bdbe4bdff",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "43af3651-0e98-48f0-a207-f1c1f40c48c0"
        },
        "item": {
          "id": "2f053e9b-dd53-4c8a-bc19-1e7e8140c996",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "583bd990-cd22-4548-97ce-0aa86de7b799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec00c22-0ab6-4ecb-afa4-cb8173f1b452",
        "cursor": {
          "ref": "7ac8827c-6775-43ba-9dcf-d5735539d792",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8ac9dd49-88d4-466c-af6e-a074c17f6a35"
        },
        "item": {
          "id": "dec00c22-0ab6-4ecb-afa4-cb8173f1b452",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "21c3e7d4-dab7-4237-b102-8532c02bb7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8677c8d7-fa58-4374-a986-b346d7a47af6",
        "cursor": {
          "ref": "82520409-d071-4596-876d-805f32d987bf",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "39ac4152-aca0-43cb-9b36-184f097f144d"
        },
        "item": {
          "id": "8677c8d7-fa58-4374-a986-b346d7a47af6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "68a505b5-0034-427e-bd4d-eddc9789f0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bb4ef3-dc82-46ee-8bb8-506d2ee6a722",
        "cursor": {
          "ref": "e711b6d7-acc0-4d10-bb90-9dbafaea758f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6131ec45-ad81-48dd-9ec3-794b5ce4bb7a"
        },
        "item": {
          "id": "88bb4ef3-dc82-46ee-8bb8-506d2ee6a722",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ea559582-87ab-4b2a-b7af-01e4a29b271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9da9ad0-a45c-456d-8ce0-63cf28633a1d",
        "cursor": {
          "ref": "cadf8244-1632-4529-b545-70ef4f65764e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0cfc9d5b-5b88-42c7-acf8-db3ea5729cf0"
        },
        "item": {
          "id": "d9da9ad0-a45c-456d-8ce0-63cf28633a1d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9ab507a8-67b6-44d2-bec2-ad87613bcc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2a7c14-9dff-4a0b-9829-a2436c72980e",
        "cursor": {
          "ref": "b85b7d4f-27f9-40b4-b11d-dbe428e2ff8e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "359ec143-567a-4f95-be13-1f495fc887a6"
        },
        "item": {
          "id": "cc2a7c14-9dff-4a0b-9829-a2436c72980e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3a56efb6-eb9f-416a-a718-e7ff217f0a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdda09af-5bed-4601-a0d8-fd77782f545d",
        "cursor": {
          "ref": "befde97b-a05d-44d5-8f65-3340c379603d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c13a10dc-c731-4abd-a937-819e6ce3386b"
        },
        "item": {
          "id": "fdda09af-5bed-4601-a0d8-fd77782f545d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "48015ae7-3a5d-40a7-ae8a-a3611925f573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3f495c-9eec-4dda-8fa0-9d3d3eb01614",
        "cursor": {
          "ref": "7c349884-3396-4076-9c60-db4d093d983b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fb428b68-840c-403e-9864-45630f02c3f2"
        },
        "item": {
          "id": "3b3f495c-9eec-4dda-8fa0-9d3d3eb01614",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1c1269fd-2e7d-4f12-bf7e-c04782fde4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb19ad6-6ad5-4833-a103-7a3efce1301b",
        "cursor": {
          "ref": "2f079cda-9623-4977-9d23-6240b3b612b6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2e54ba56-5796-43de-812a-cd28e380b1dc"
        },
        "item": {
          "id": "beb19ad6-6ad5-4833-a103-7a3efce1301b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "713a625e-2730-40de-b1cb-9740697cfd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1960abc7-37e7-4eaa-ae59-6c09cccbb39c",
        "cursor": {
          "ref": "d02548fa-9793-4d94-a7a8-08e5df7f8593",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "da234390-032b-43cf-b02a-7e2a8357000d"
        },
        "item": {
          "id": "1960abc7-37e7-4eaa-ae59-6c09cccbb39c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d1986dd1-f40b-465e-b2e9-5eedf2188319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20dd738-46fa-45c5-8f2f-1f056161e0f1",
        "cursor": {
          "ref": "7e55290a-2730-4666-99be-611de79d8c8b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b6d59186-1156-49aa-843e-d89bcc3129a7"
        },
        "item": {
          "id": "f20dd738-46fa-45c5-8f2f-1f056161e0f1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "04ec9f7f-5b99-4b3f-bee7-7fa456284fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ed0b8d-89a0-4943-aca8-93ebb88e2cc7",
        "cursor": {
          "ref": "c53f7c72-db76-4b93-82b7-64c3c6b87790",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a2ca5b88-86f6-4e52-84db-181aa7d807ce"
        },
        "item": {
          "id": "f2ed0b8d-89a0-4943-aca8-93ebb88e2cc7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "674c7cdf-ee81-46fe-bd8e-ce5d497fd3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed92d2b-bb7c-4de7-976d-400a1a56ace9",
        "cursor": {
          "ref": "bb75d1d8-ab3d-49e5-b52b-5d038c6de3eb",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e2dcb530-0d2b-4776-9b29-821d2966e905"
        },
        "item": {
          "id": "9ed92d2b-bb7c-4de7-976d-400a1a56ace9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8636bbeb-b097-42ad-b395-99f8d935849f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f311cf4b-815a-4326-a38c-7ef41b2b7864",
        "cursor": {
          "ref": "550e46c6-9895-4729-8c11-fb1519d35d5e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ebf3296e-abce-4e9c-9d90-f31a95c9ba24"
        },
        "item": {
          "id": "f311cf4b-815a-4326-a38c-7ef41b2b7864",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "55e79732-a097-47d4-8884-27793a804ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8f8675-ada3-4da0-827c-c7b015db3b5d",
        "cursor": {
          "ref": "eef522c2-17bb-45ea-b4cd-1eab3690e7c2",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b2b57ed6-5fd5-4c91-b6d1-223d49ade438"
        },
        "item": {
          "id": "7a8f8675-ada3-4da0-827c-c7b015db3b5d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aeda3a8b-a329-41d0-b493-ae10163d2750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea47b037-f1dd-4f3e-b6e2-87cf634bd6b7",
        "cursor": {
          "ref": "22f9a712-7114-4f5b-928e-914e1f66640e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e3d4246f-0ad5-4277-a4d0-4bc923f3adbd"
        },
        "item": {
          "id": "ea47b037-f1dd-4f3e-b6e2-87cf634bd6b7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "13f2c367-4892-4496-9924-ca1f445b7c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4ab3cf-cbbc-46b8-a7aa-b841328c094d",
        "cursor": {
          "ref": "6d262fe1-7fbc-4f2c-a069-2fffdace302d",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5ad194a2-b01a-498f-8748-5b8098071e68"
        },
        "item": {
          "id": "7a4ab3cf-cbbc-46b8-a7aa-b841328c094d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "efd4c2c2-5499-4cab-9d98-6768d1facfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c17efcc-b6d8-4191-977a-8f2321f92eca",
        "cursor": {
          "ref": "a45ca805-964d-4c3a-858f-f0b65f11c755",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5a2e516b-7f2a-4d7d-8b54-62120e6955d2"
        },
        "item": {
          "id": "3c17efcc-b6d8-4191-977a-8f2321f92eca",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "95b2498f-e7d4-4b3c-a171-c3ffd8ec3fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ba55de-00cd-4b51-9b47-ea01229747a1",
        "cursor": {
          "ref": "8cd827a4-0048-4a7e-adcc-7021c374dad2",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "225fffbc-a641-4237-8229-536e59381900"
        },
        "item": {
          "id": "e9ba55de-00cd-4b51-9b47-ea01229747a1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "974da9df-8b39-4adf-a08a-8023aa890b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df618e3b-dfc1-4650-8c10-071cbbf05ddf",
        "cursor": {
          "ref": "52634be6-645a-413a-bb21-e31783ecdeb9",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f836b32d-975b-45b6-944d-11dbf83f68d5"
        },
        "item": {
          "id": "df618e3b-dfc1-4650-8c10-071cbbf05ddf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "59541228-8af3-48d3-852f-6febf31d4d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cafb2f3-317b-4689-b051-6ada944b73f9",
        "cursor": {
          "ref": "e68d3222-45de-4e83-af07-8aeece0f1d48",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ddd58e8a-440c-4a16-9237-d5ad8285eb60"
        },
        "item": {
          "id": "5cafb2f3-317b-4689-b051-6ada944b73f9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "084c3f77-9ceb-4ce7-b304-bfb8b1c1d36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd7b5ca-3f88-4fe5-a31a-0369431680ed",
        "cursor": {
          "ref": "2c69b7c6-27af-4274-a75e-c56d00180771",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d551a186-c24a-40a1-bb7f-08ed1201a86c"
        },
        "item": {
          "id": "9dd7b5ca-3f88-4fe5-a31a-0369431680ed",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5372b348-de87-4fef-acb2-68595663b58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec15f2a-7a09-434c-9df9-db7c6fd58822",
        "cursor": {
          "ref": "7f049e3c-74ae-4db7-bc75-9a323ccf39ac",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d2751116-c111-4faf-b426-c2d0eee8cf05"
        },
        "item": {
          "id": "bec15f2a-7a09-434c-9df9-db7c6fd58822",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a9cee701-af53-4882-8554-16ee42b8896a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f397d6-3899-43a3-97f0-787c40ee0ca0",
        "cursor": {
          "ref": "426d3a6f-8300-4e13-b2d7-46f0c507d57c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ce0e4022-1a36-45a8-9178-c7cd840f76b1"
        },
        "item": {
          "id": "f0f397d6-3899-43a3-97f0-787c40ee0ca0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "313a86de-e015-473a-b359-6a4d5f6a397b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d699501d-55be-47d5-85bb-b18845b2d589",
        "cursor": {
          "ref": "ce5343a2-dce8-424e-9fe5-b7a7b4dc6253",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e75c0c3a-148c-4d76-b4f4-358e10bcd010"
        },
        "item": {
          "id": "d699501d-55be-47d5-85bb-b18845b2d589",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "de686efe-e13a-4db4-8abb-f4c627fa6728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5551da91-e72d-43fa-84b3-93e5b779d4f8",
        "cursor": {
          "ref": "be5b5045-2aa7-47f3-9f81-5138cbbb7703",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "197640ec-cc8c-408a-a0dc-eba1c112394a"
        },
        "item": {
          "id": "5551da91-e72d-43fa-84b3-93e5b779d4f8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "185b74f0-7cba-40f6-b369-f47582cfbb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210e2066-aa1b-479c-be3f-5f2c7c327538",
        "cursor": {
          "ref": "ac38a3be-9b5d-4314-9eb5-44c419237b44",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a289f585-b129-4fb6-8c9e-f471ca4326d9"
        },
        "item": {
          "id": "210e2066-aa1b-479c-be3f-5f2c7c327538",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0f862112-7ba2-4704-a6fa-d4173fc77611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa57f92-3a99-4a11-bc5a-2370f47ba9ef",
        "cursor": {
          "ref": "23a739e2-d784-4d81-b4e7-f006a994621c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c43b0d4b-a58b-4891-9bfb-5d66bb271e7b"
        },
        "item": {
          "id": "8fa57f92-3a99-4a11-bc5a-2370f47ba9ef",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fd2affd2-d7f0-488c-a113-b037eb315915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b63b09-eb73-4cb1-b596-05cb43e69ef2",
        "cursor": {
          "ref": "34c973ae-64b9-4247-bba4-b6e860c92db1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7333af41-aa9c-43bb-b464-e42797fffc0c"
        },
        "item": {
          "id": "46b63b09-eb73-4cb1-b596-05cb43e69ef2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fbc3250a-c592-4080-9dca-d72141a0e937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fc045d-004d-450d-9a1d-a91408cbccc2",
        "cursor": {
          "ref": "ba5971ba-1117-4dde-8ba0-fd06ed8cbc30",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bdd8b0ee-7c17-4946-8948-bbb41786e6da"
        },
        "item": {
          "id": "d1fc045d-004d-450d-9a1d-a91408cbccc2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "021d47e3-9ccb-445d-bebd-4e2c8f08f627",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68019e04-d0b5-4580-b2ad-33152048ce74",
        "cursor": {
          "ref": "b44b4ee9-5034-414a-a8bb-9d7e19712248",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "00eb8365-b035-493f-9613-d2deeca18123"
        },
        "item": {
          "id": "68019e04-d0b5-4580-b2ad-33152048ce74",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cc9908e3-6a8d-4ad0-8e1e-19240af25d54",
          "status": "OK",
          "code": 200,
          "responseTime": 2255,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "85631e07-9e89-474c-84d0-2b5ee02a1e0c",
        "cursor": {
          "ref": "d56d4a85-d033-4183-8ae7-6a2ad13f3ce2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "38377220-0714-4db1-b84e-1becaa764e38"
        },
        "item": {
          "id": "85631e07-9e89-474c-84d0-2b5ee02a1e0c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e5ac2e29-528f-4072-a2b6-968b35202d62",
          "status": "OK",
          "code": 200,
          "responseTime": 3004,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "809f329d-a8a1-449d-95fe-54d3b3fa24c9",
        "cursor": {
          "ref": "82ad2263-5bfa-4334-972e-ae6077381824",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "24d9e481-659b-4251-80aa-7ba3760a4687"
        },
        "item": {
          "id": "809f329d-a8a1-449d-95fe-54d3b3fa24c9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "46c48221-9e07-4321-b7ee-36c16b6e9943",
          "status": "OK",
          "code": 200,
          "responseTime": 2344,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "436ad665-8b60-451a-a846-7864baf81f8c",
        "cursor": {
          "ref": "e1457daf-68a1-4af7-8433-bdcb5adaf47a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d33165b8-7e9c-4ed9-9cc7-2c84d87269e0"
        },
        "item": {
          "id": "436ad665-8b60-451a-a846-7864baf81f8c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e081838d-d3c4-44ca-b519-07c5f7406c1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436ad665-8b60-451a-a846-7864baf81f8c",
        "cursor": {
          "ref": "e1457daf-68a1-4af7-8433-bdcb5adaf47a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d33165b8-7e9c-4ed9-9cc7-2c84d87269e0"
        },
        "item": {
          "id": "436ad665-8b60-451a-a846-7864baf81f8c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e081838d-d3c4-44ca-b519-07c5f7406c1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47b5fa4-1172-4b45-8117-0315dab64735",
        "cursor": {
          "ref": "95985472-1778-4647-b5d8-a27292c892c4",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "90bf2362-de2d-48fb-b6ed-6881fddefcdf"
        },
        "item": {
          "id": "e47b5fa4-1172-4b45-8117-0315dab64735",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ff18e7ce-c253-4ffc-aff4-72edfb3f6d20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5020919e-7806-4af7-8a7b-a465033a1f48",
        "cursor": {
          "ref": "f51c8438-7f87-4e77-bbee-360907ab8e9d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "91a948e2-2008-495c-a2ee-e841aa2df2cd"
        },
        "item": {
          "id": "5020919e-7806-4af7-8a7b-a465033a1f48",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b0295db0-b5b3-46b5-85f0-73c6067f2992",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}