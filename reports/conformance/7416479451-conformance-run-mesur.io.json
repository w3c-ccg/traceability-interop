{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6a020fee-75aa-40f9-a216-debad532cd2d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2abd17f5-fa75-49c5-b6f5-fd44d4d2fc43",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2cf34aa0-1abe-45fb-8c72-aab6fa3f073b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e205738d-a82c-41a2-9c80-3896cfef8076"
                }
              }
            ]
          },
          {
            "id": "b4fdbc4d-6e99-4ff2-a3d0-ec1527520f1a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e136b87-6fcd-4e7d-ad90-39c2dda099bb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "50809157-1066-4349-8b81-61da60b94255"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "08d947e7-e67b-441c-96ae-c3a35ff32d7e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5078d2f4-8921-4cf5-a627-760ae53918aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3437b429-2cd1-47bd-ae02-c7769747ffdb",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecbb2ff0-0632-48e9-9eb2-eda0234368dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e0785a2-947b-4f55-bd30-cedf760ce62d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56e2761d-e2cd-4ccc-ad1b-f369d3c82238",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9299954b-a759-4247-8c06-68df0da7841a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6396ade0-ce7f-40ef-be5f-eddc4b0ee4a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7350c1b8-ecdd-488d-8747-b7d9dbe51e69"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b2a2151-6319-414a-8788-8a1cce8ccaee",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b923e1d1-14a3-4987-a08e-efb9a90cc4d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa59c720-3325-437c-8f92-3d41bfe5668c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e908bd3-4c33-45de-9af4-2d3e103d7a67"
            }
          }
        ]
      },
      {
        "id": "945bbf3c-8c20-4b2f-b589-f65abec5f278",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bcf458e1-e95d-4c36-ae60-48e821d3ffe5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bcf9c10-9e16-4b91-96dd-ae3da9fbc29e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "eb32d966-2003-440d-86f7-a9d6dd262273",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f6be98-dc5d-452a-a21e-93888b15d0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f72374a1-59d3-4d1d-9742-970628ac07a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56dde79-3e8d-4034-92e6-72e488e78b7d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66430c3a-93f5-4b60-9117-b065c5c41135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bca2e4af-929d-4e20-97c7-c068acd34287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3aa858-f11d-419d-be57-62c4e3e82124",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e7f2e7-736d-451d-90e2-f6f1c34e574f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3242d4b-60b2-4039-8670-3289279e7c6d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "981362bb-e490-49ef-a033-364a7db19e36",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "814d0f97-b4d4-4cc2-bf2d-bff8aa02b23e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8cc735-e5f8-4a7b-8e2d-60d2a301fbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f5eafa6-b116-4dec-a552-dc963943dd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11437ec2-216e-43bd-b92a-6d2f4156f2d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ad2368-1553-4d35-b5d6-a6c7f0787034"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2be06937-9f2d-4a7e-9ebf-564a2bdba255",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b16bce1b-74c5-428e-b76d-fa2a9f3f3465",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4538d8cc-0252-4d82-9486-4fbc5683439e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c1f79564-d0f8-4888-b293-ead95ac996ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f207208-336b-4af8-afb7-13641bfa8333",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e07d17e4-e725-4b99-b458-87def048913f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc303d03-2782-4616-bacc-ddc2f9e4206c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad756010-292b-4a9a-ba58-f628b0fc1bfa"
            }
          }
        ]
      },
      {
        "id": "8006400d-f234-47a3-a07c-42da99d7457a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d260d052-ae44-4863-8df6-a4b73c3610aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a250577-1a55-42d2-a347-b42875a867af",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8491b737-b27f-4113-8d9f-75fc5f92454c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4d4d28-757c-4873-ac48-f7127200afb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d749265-c8d3-42cf-9604-276ed4660128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fcffae-513c-4837-979f-642427d94518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ed0353c-5f14-4fb8-8d7d-d49269c24fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7055537-df68-4f87-8808-f84578ed9de0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6f2880-5b8a-4276-88e8-c09a8a6f6341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0259e0-882c-4fe5-9576-54993893a97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ea72f1-ac96-4b5a-b628-091ab61d729c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccd5f892-1e9f-4bd7-a497-018656be147e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca7939b-edd2-43e5-9338-75d246b2c91c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568aa388-3bfe-4cb9-b3ae-84f93750bac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62e5b23-6061-4c52-80b5-cbfc2c3d275d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315ef2b7-eea1-4512-9fb5-378a6c2aa2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f708249d-3e00-46b9-b746-e9f31200728c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df0b025-a3ec-486e-b887-1fb76326c30f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4868c942-b5b9-48fe-b15b-f221c2e7c43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cf73b0-fb1d-4b79-9407-4873fc77270d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bdd9b9-f2d2-4636-8a49-903606d32042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aea851a2-c52f-438f-b606-0e3803506a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687782e1-027e-4a11-aa2a-21c53bab8773",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0434d1-77c7-4cda-914f-0056e74b7c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae1002e-7623-4c44-8643-1274003f76f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7e964f-ec24-4b02-939c-206c97c599e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06153cfd-c996-4812-ba84-69480d829d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d8e0fb-327b-4586-976c-b6c62f9fbc24",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8bac6c-f975-4c08-9675-97ca0241b9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a61705-947c-4934-9888-822d62151565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a5f1b0-e260-45c8-a361-b3d43ce0e5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "669ab88e-0f9f-41bb-ad13-88bb20aad474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ff8b00-b24a-4a93-b717-ddeeabcc6618",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68b6f56-0864-433d-bf92-1de97ad2476e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a13503-38c5-4304-9e00-812892c8858d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126fa02e-6e32-4ed9-a312-210ef0b33a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1769b27-5f61-40de-ab1a-f7f07591c530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f8d8fd-4181-4a80-8c1b-b323a01eb3ab",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d62f5f-4f79-42ec-b6c0-7414db762537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27be3a27-0efe-4fe9-b24a-d66f6304774b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09aaf86f-d19b-44d9-be5e-81fa0a33062d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9de8a287-3d21-45a9-a482-bbeed79ad437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e47b230-3b1a-4912-8593-70090b1ab8a8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8109b8-d62c-43e1-a8e3-815d120fc97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74cc32e-4158-4402-9449-1e5001c92eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a526d31-4ebc-4deb-92e4-38a778f9736b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1447eda-5cb0-4c7b-b12d-fdd48080b280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1f436b-d6c5-47b8-9618-36c57a5c4a1f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10536c21-fdd9-4747-9406-406e8757c30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54215f87-ca49-497d-ab09-a53f0992f0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee81d8e-78bf-44a7-83fd-4fa305a313f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ff908a1-1ca6-4069-a1bd-1ee8d5c17188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964a36bf-477d-4e8d-af2d-2cf794f44fa2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c78b8df-178f-4505-8296-7f86632e2617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7e97eb-1a25-4417-a5d5-2835d71d1b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ecfabd-ca5e-4230-a905-7186d1859574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "073653c6-2a08-4ad4-a1fe-bdf259357055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ce458e-5ce9-4b69-a256-38163a9d87b8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b65da7-4993-41a7-90c8-7e25be2dd37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549603e4-9b00-4506-8d2b-70fe7515479f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b812c6-716b-4806-a287-01004903ea7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94b8dd01-40ac-40fd-94d8-9871c91a80d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aee2967-81f9-4c72-a71d-9315802b43a7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce9e724-462a-498d-80d8-fc1de1af4b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8efe9d6-f278-4eda-8a06-27b20c9df8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282e1bd0-6366-4526-8432-5f4dee253c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06958d29-9401-4884-8f40-536377fde770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1054389-b216-462d-a2a9-75cc5f5cfef9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85efd5df-22f0-4d8b-8007-3df52918bfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54baf8dd-4934-4ade-8f64-6b0c8109a438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5539e926-295d-4635-a458-2247fc4f5833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "133f71f5-d103-4a85-b101-5200cc2f8f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffd2011-b8fc-45c8-8cb4-3148b275a1e1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2a1917-b902-44d0-af78-90168770f317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef851ab-13dc-4bda-9d3b-c9ac2bc09f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862b0ed3-c9cd-420b-afbe-b7c62d0a8c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd814f7e-df5e-4a22-b0e0-c1b65f104708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c281b3-979d-4718-b019-be812f24d336",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e11ec5-5612-4238-b814-b7a01ec3bdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2469bf7-84b6-4c85-a196-82ae032dfb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1123e07e-e9fd-4073-aada-104624346179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9036245e-4998-49cf-993c-5708771b1bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2e4bed-65e7-446d-8356-16014c4c788a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418043c6-e706-434e-9eda-99fb899dc20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145de62e-373f-453f-8754-9448d0470f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926dfdff-3d9d-4570-8e9f-a64c94014335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed2d2a38-a47d-4c82-b568-1adf20a388db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecbf616-8e99-41c8-bb50-9ff7a123b667",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c49547-bee9-4e42-946d-9c3a49951e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4def1567-e242-4c7a-ab5e-1ed5af3a625f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2320cef6-27a9-4d24-8772-b632f7e9ac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "603f473e-c857-4029-84a6-28ec2fe50a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de6a9ce-a64e-43f4-bd5e-8a88746a667c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5256697-370e-41db-83a0-ace97029f3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9889d102-86dd-4397-a3f4-78fed0dfa7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a62a952-6f0c-4327-85d0-a9d9491600fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b920742-8008-4805-b99f-53a5236458ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd58422-0a8f-419c-a5c0-27839d5e5dd2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f32670-1779-4c40-ad50-56c34f6c6c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b4b9ce-d977-4e43-9046-0f914f1d9598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd229b87-9e4e-42b3-a0b3-be622a777179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1787e885-ac0e-4f86-a700-170ea4bed5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d404788c-0c65-49eb-8511-8c65178b9156",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf6bdfb-99d8-447d-a6ee-04033172bff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b248882d-30ac-43c8-9043-db223d9b8fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2856de5b-aa58-4d41-a6d2-96ffa0ba6b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c534a190-ca88-4185-af4b-5962bda1ee4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0ea1bc-f694-4177-8913-3c5eacdd0561",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3444afbb-c3d6-4942-8444-20fee8213069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39917c8f-1937-4393-a559-7cc78d1bce94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f43198-9222-4552-a47a-4a1e406a4b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee03b74e-1c2f-4934-bde7-fc26fc350ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c679ab-6972-411f-9e0f-f2ab7d88e302",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcada60-ff6b-4b05-a7fe-c4340bdb60d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480df324-d42f-4098-a765-90c5e1fcf8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd9e10d-2139-448c-b78b-e12b13974ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66533152-fdab-47c0-a073-b2840dd5d482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96685afe-830d-4661-9438-bda4d6725da8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eaad9ce-6cc2-4972-a6c9-78bed0acf6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e9d1ee-ab87-4829-8b8f-ab2a25c8b355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9f0dad-006e-4c11-ba63-c0254e3324e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfd7beb-e47d-40f0-9e14-9013bd366bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4840e35-6323-411b-9de8-651f2eba0e7a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0ae4f2-bbbc-42a5-b051-f0b3f0eb7098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b11d25-db68-42f8-b9fd-d4eef98f3e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da89aa52-7d95-4f9e-aa39-51df6346fafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91039a8e-feb9-4994-a42b-25f85f5d767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab559abc-6a79-451a-998a-5b11b551fa89",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c8826e-b9b5-4c4e-89d3-258265ba0897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2b8c40-d0a7-4c43-b038-835384a93eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c525c2-91cb-4df1-9b06-b3c387cb80f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d98855-6004-44bd-aef5-e84f66dbace9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97f4c6f-5bfc-49e3-bb87-dbea707e82e3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f196dee4-a8b1-481a-86fc-00abaf2968f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55394e23-b73c-419f-96a7-f915a10d6fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e15594-81c5-469e-93dc-667ad3c53bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b94cec8-878b-4612-8485-d2edeededa04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa18bcb-6c4e-49cd-baba-1d704932d6b6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d07e38e-5b55-429c-b1f0-65c635545937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e4d312-64fc-49d7-bd8b-76c22b395892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee006dd-d138-4b4e-a16a-059f66038f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3b3581-d299-4cce-a47d-288a6bbfd675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a0f7aa-e0e6-4e87-b586-eae3e2810eeb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9419151e-9298-414c-8818-5a8ca721a1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a07b8ee-f4b6-4927-b869-01f18cbe8c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0c42c1-b90d-434d-9d81-ce6f63cd27c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d84665e-7a49-4236-9919-32c5ca5ae3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a7e28a-295d-41cd-bd7f-87bcbdc7565b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55e79db-e730-4838-9b02-175f3d5e894a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db4699d-2c65-4b10-89dc-ad075059b70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75127507-1da5-4ac5-9daf-6d959d2ac487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c55c4b1b-8fd6-4f78-bfdc-0fe6c68c66c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb0bc2b-548c-4363-a7c3-45dfaca51fc1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381f0f0b-eaf3-4c5a-995d-0168f029ebf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b98a79-b382-4adf-81e1-eb6e98bd9f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d025526f-2713-43b8-b16f-586281c29028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1becea48-f3d9-418f-a615-f64700eab5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0aac02-443f-45ae-a3f5-6e5eddad9b6b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab810e3-d676-4fb4-b49c-74c370b355ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6154f85c-334a-4396-8875-deecb8eee818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67ca8f9-9eed-4d30-9320-c186f331f18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b60afb81-b6c2-45a8-8d7b-8003e5478f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c6dee6-beb9-4e73-bb1e-94be65c14fda",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9dc5c2-9bee-492f-8e8f-6aa24b4bdf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb25ffec-92c0-4c57-b2bd-72bf1c561b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70bdc43-5c94-4020-abd2-c303fdf31de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67256849-62ef-457e-b5c7-698a34c59287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59582a5e-c4d8-422a-b042-413b6da7500e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87d9f0f-43ba-4860-bcdb-16765a296850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf783719-ce04-47de-9a48-24fadb510962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297e41d0-eec1-4a02-9cdf-a28553a049d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76f3da6c-4ed2-4bba-8d38-aa3446d659a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dca2a76-aa0d-4d21-a010-59679aff24d7",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d6355d-8cb5-49ce-a7ee-856d7578eb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875adc62-470b-49c6-8aa4-24d4081dcba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11e038e-b285-4655-993f-e9fe32a13a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0b7fa5-a831-46af-be36-c9f667a80aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886c2440-a322-4c43-8adf-313572b5a40a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1189c39-b48a-459a-bab2-e970633e1fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e40f71e5-9c12-48b9-9b14-e7bd5a6007ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fba36dd-d01d-4176-96a4-063d8dfc2605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20a28590-8b59-48bb-8b88-21bf50349b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898b4956-4698-41d6-8051-aa72ddfd5b33",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1406d7-6e84-4efa-a872-94b6b5cfd42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a065aa7-6e57-4fb2-96d6-77efd361c3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370905af-0abc-47dd-a3da-dd2aa4dcac4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6cc4ca-9818-433a-96de-87e437e684a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7520708b-3e4b-423d-8267-6cc570254afc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5308388-6f86-4bc0-8d93-b1f79f4270fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba083db-0522-4fac-b1f9-261e871c5db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb06b79d-5d97-4b57-b8ce-1e6913f06652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "36c8245c-2e14-453d-9c84-ea0811eab9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0a63f0-e66e-4ac7-bfb1-e199cf849588",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b554a67c-9198-44ab-aa48-7a66bcfb5338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7af5fe8-bcee-4379-b0f4-d10aa3c54f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7016c0a8-b5b1-4f8a-b2a9-62970ab13c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "185ceddb-8c14-4737-b29d-c2e4bd7bc3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33aa01f-de92-4bf2-9f4c-1119fe213e02",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cd4b21-e422-4b2c-b2c1-93b73789c223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c596de9b-5303-4701-a166-9151816cd20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed150bd-b870-4fe9-9eb9-48cf95466d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d53c1a6-2ec1-4303-bf8e-6a9615336733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cb3029-ef36-49f6-902e-92f5b7e6d1dc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9559a46-e72d-497d-b0e0-1bee67519c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1a84de-b6ac-453c-8db6-aa325596a05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b149142b-f89f-4e43-9778-eebdabc9bfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d9efb26-c01e-4e4d-adcd-3515f941b8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6614ae97-c917-4f04-897f-ceaabef8379e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d8a29c-5a57-476b-a63e-89a7ad6c3ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8266432c-2a92-4af8-988b-c5b90aee7af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f870b71a-046c-4b88-a289-d2d1fdeb9ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "27e3b0bb-dbed-48ee-a8f8-7d69b5e6b66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97272a4-a3e9-4c3c-9375-524343cfe719",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1437af0-b22d-4b1b-b9cd-8e86af902224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6abb2e3-5bd7-4de8-91f0-195fd3a01b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21142e9d-55e5-44e4-91e5-89ec08552f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "69881629-ccfc-4557-9c47-0b3abd751baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c0cc17-bf0e-4c61-985e-2bc7f8f8fd85",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e330ed5-c189-4430-b41e-b16a701c15df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a088d1-e4cd-4bb1-93b8-ecf05a5194d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f2155d-d071-419d-8708-0a165a183055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3be00958-7a1a-47f4-9d89-e5f633bde748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae50d278-a19e-4181-b86e-6a10153267aa",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb388195-388c-4a69-bb73-c63509067591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33fe19e-2b88-4fa2-8ca0-d22317903a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85c1ef9-af53-4bd0-ada3-50ae8866d44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1765b7ef-2020-41ef-86ef-bab57e7b73bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2d485f-dd88-490d-97bd-e72a3a2cb549",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c352901-6e5d-4f0e-8bed-180f9adbce5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a1acc9-0c9e-4db6-a148-e2990528de35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b490279-dcb5-4122-95a5-63d795de5bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26f8f26-2dc8-4005-8bff-d2c9a8a09939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd866f3-5b06-4995-8cbd-3f64632a452e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320c53cb-8a08-4b4c-86d1-fde51a6cf3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35db6f3a-2995-4449-b7db-0e6cf0492e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eac4b70-aecd-4419-ae85-4010a6fbf33f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31288cff-4447-45c5-80a8-156b7dedbbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46d9f77-a974-4c62-aa3d-1d740506fb88",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff954f94-7d95-45e7-a736-a8964e1cb9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988aec5f-9a8e-4e99-afdc-19d4391c3609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b402544d-7ed1-4424-a217-c58571c7cecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75162c48-3f9d-4536-83f5-d24c85a84a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15a9955-b66f-4ce4-9d39-2ac8962cf643",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f960b922-4915-405f-9b1e-d8095e90e433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6c2100a-8153-4327-a16f-157f7758ddc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff759d83-dcc3-4f9f-843d-689651954566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e7c66e-3691-4fcc-a642-1feff39a6d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f25f7ce-cf85-4ebb-84fe-d5800b216574",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a0401b-ac53-4d83-bb6b-cfe0b2495695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f46428-198e-42eb-8e6e-b99545f7f29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c8e0dc-d256-41a1-b3a0-a62f80ccac66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b76ccb2-5128-4b09-8742-226eb873ed09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37de01f-3a5f-4621-a56a-facbbbdc1bcf",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf20607d-825b-4160-bf11-f9bae89b3de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1e3739-9530-44fe-b943-609acf97f91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce6857b-d76f-48be-b7d5-eebc9e8add35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "02a54988-4c3d-4d46-8290-4f01c356f669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4fe0c6-aeab-4882-935e-d21b32c5928a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e51210-fb0c-41f6-93b9-465645e2f297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98af48a8-1b7e-4c78-bebc-efb38d6a268c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb087936-3d7c-43ae-9cb3-2ef2adf03471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15243e1-13b9-484e-b9b4-9fb7d1b68c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e31507a-3451-42d7-82b1-9f7310b3c091",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3eb1c3-d471-4e84-981f-a26be7288c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84aae206-b8c6-4034-b3df-9b88e1ae3198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd438790-09d4-403e-8451-6220b62f6360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9078e08b-a16e-4401-91bb-04a83daf5f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b539eb5-b053-4a4c-afa7-f67b46b9b531",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265b496f-a1bf-49c9-bb43-535cd275c0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d1ceb2-09e5-4067-99fb-239a5cf7bab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6f29bb-7737-4220-bb84-32bd7e0ff65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1910494-22d8-4391-b9c9-da33b060fe9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c468b264-0996-45cf-9ed9-f61a3688cd73",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e588a1e-1b22-4b34-9b1e-5baf7e6464fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf3893a-213e-4b07-936a-c81e70f57578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3bad2c-ef87-4a5e-9d03-556a3f6e8c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63f9a04e-6890-422a-8f86-454d413dde33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35f8897-68b3-4413-b8cf-63364ac59085",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad27f27-b6db-49f5-8ed5-085487dcdb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e663fc9-5dba-4780-add3-e401f38feb3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde51b44-d82b-4f73-a644-d7839ce9b91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f448bb-4417-4cab-8ebf-9159e5557bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7026f926-6281-48da-8194-f417afe22d02",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54d78da-bc27-4ba7-a3c9-c6a6f2709545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38ed1ac-4c27-4abb-8b83-245da178be0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa815d5-b143-4ea7-b16e-8b48eb627189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e5cf9f4-fe16-4cd7-a2d6-ac0ad076f7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e856d4-1d06-4d85-855d-66de75f0b10c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2294f7b-f556-4146-9aa1-61978e6baaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258cb302-cc49-4b44-a639-953829cd9550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96ca0f4-13ea-4fc8-98af-ec5a6c2bd7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "950178cb-9f39-4029-a06f-578673df9f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79a3341-3217-4d41-b809-9e62f521773d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7469fd-478b-443b-ac25-2d582b6284c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12377dfe-f5b9-4b4c-bc0d-3c4727a13278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517dd3ce-3c76-472d-bccc-736a136bc61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "38ec5dd3-ff3a-4325-9a84-f3b4ee5efd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee9e5d8-510d-4905-98d7-0ed874bd9764",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd8595f-53f3-4948-960c-78285bc24b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a07d19b-61bc-4196-8b1c-ab463467e39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4e06bf-95b8-42dd-ad15-27e0ee78f88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eda2161-ff22-480c-9498-cd3bc527e7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5749a8b9-26e5-468f-bf24-1141875dddb4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081d793f-525b-4561-903c-1662f70a6800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50846422-f7ec-4fd7-8fc5-8051ca196d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4198042b-493c-43fc-af08-f5a4ee94766b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f8e665-82cd-483a-9c25-4e6955413970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0a4fa4-31a1-43c9-bf4b-57cb9565d248",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175dace5-8865-4fca-a2fa-a8c382a3689f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f09171-a1a6-4343-b3e6-fbaca75f8936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5349edc9-0cc9-4688-b83d-ab9821f9c0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1ca047-cf3c-4df2-a90f-f833013feadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2631543-ab58-43df-97f2-c23d684237bb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47b0b66-2848-4384-9e80-d36e76787c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2104657a-f6ff-43ea-944c-de30a0a6ed50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce85f280-0ea5-4e24-aed8-d7e9df523061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "68029bde-197c-46b6-869e-f1bac9fc203c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8570ea2-0414-43b9-a975-e03a62f2c332",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d96371-d8eb-4d9d-8e9f-9719046c1575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b84562-2dfb-49ba-87a0-acba9695227c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4f62be-99e2-49f8-a852-2f45fb4cd146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ea1571-5924-43ef-acc3-842f42009b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b9e81b-26f2-473e-a2d9-da603084961a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3ab711-92da-4707-abac-9bf3ee6af584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd2197e-94fd-45af-ae8c-4d94aed68f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4151261-f331-4e1c-b820-8df88aaee94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07247a18-0892-4f84-b68c-873060df3f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101baa3d-5a80-43b1-ab46-3b16ba9a7780",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc795241-5b04-4cc5-8e5b-29fba26f0c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26445ccd-44e8-44f7-b24a-f34fd0237e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde6b71c-ffe4-4ef3-8315-6c959184b2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52fcbdaa-7292-4607-b7bd-42ab68255f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd760d61-512e-4444-946d-c87ac540532c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cde6884-8f26-49ba-90ac-8d75b2d73543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1bad10-b2f2-4446-afab-7c58cfb7f2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea365fa-8b94-4069-afe2-e27aa64fef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad420307-6781-4ad6-8a09-d21bfd961ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc037482-c2f9-462d-bb59-a1ef3f228e71",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b4f2de-3dd2-479d-8c12-0baa3173e16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8c7631-4c56-4e10-ba55-934f22983dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5108cdda-a04b-4f24-a952-0cce26ac5459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8602e2-e1b9-471f-893b-6a78e43d6fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027cd82b-3f9f-4325-81ce-89688b5f890c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77108948-7f8e-49e4-ab76-9b3148eef29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dacc7e-7833-4d58-801a-eaeb585e1e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ef9c4b-179c-43d0-988e-e7f8ff05559c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "650d3bc4-9fb2-4059-8bc4-b838026f81fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c4949d-faa7-4bba-96e3-c4b7c6687a3e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82e56fc-0f66-4230-9053-40382aec34af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f06d41a-1998-4d5d-9ddc-03b093582d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225a4f02-39a1-46b2-a83c-f1ef3880e075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1820bf33-93ae-4e0a-9951-6b7760130ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc78694-b2d2-4879-b967-1ea90522137d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc0f297-5bfe-42a6-bb01-eccfdb6c15da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd079e3-b584-4d70-b6d8-a3664356651a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22062cd2-e9c6-4437-8575-db481ddf4ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5014e906-ba17-4620-a598-14b64b83f727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6186dc-d95e-49e7-9bfe-56cb4026b03d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6ec0a4-1743-405a-b16c-18c5b12350ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba42124-8b77-45ff-bfe3-350f1d6f82ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c900e41a-0fd3-46f0-ab10-59749dbc2ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7d5288-733d-4101-bb00-09c0dfad2709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cb6b19-900f-4961-adba-b22615182fd6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7676a4b3-97bc-444e-83d9-8f0f156fb0b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a3918c-81a4-406f-afa1-c511c7050870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0157a0a5-e0c9-4b50-b9e7-4308b20d9c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3196608c-a170-43fe-a5d9-bc788261bfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f802d796-aba9-4bbb-b6c8-d68efa6cfc88",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c79d5fd-6b3e-4883-ae9d-738dd30a04f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89828b4d-d53a-495d-8794-a65bbf788b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5b9e3e-2089-44e1-9e09-e497524af6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a4a45b-b152-4d8e-a709-27a4fc2897ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e807dc3a-2233-4e8f-aea3-b4d1fdcd26ae",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7768b6f-47de-4e63-8bf1-dc15ce35bb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b539a3a7-3d90-4df3-896a-b9de70465a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55af5870-fc43-4919-b518-530894edadd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22c21f62-be13-478c-ab09-b51f1ecbb933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eda4277-6aa5-4846-b47e-264db8b3c381",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121d26b9-b6fa-46c5-9cea-e836dd51b550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb437c9-af7a-4954-a086-20c1aa8a5378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905b2a19-7c68-4bbf-8924-b9017ff62fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "775426ce-2e72-4088-b39b-1c6f7015297e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a4b7fd-a9bb-4a70-abfe-4d0589ca9516",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a004939-c0f9-41d1-b469-045bea04115a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6345ba6b-e4ec-4418-a3d4-1e70b3d46d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4e103d-bec7-4f61-b9f5-aecc78437736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47150533-b914-4747-aa4e-74bc16fc2153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80498b04-be90-4597-b7b5-416c9d6f8dfb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fd1e96-9373-4f1f-9e54-6adbc13feb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49eed4e5-e68b-4eed-a11a-5e5bd58ab55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d88a3d-eb9d-422c-a291-c56819e5253a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "704f215d-9570-4b0c-b5ca-5e56e54c7025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eacc35d-c3d4-4cce-a8e3-b88cb78c8733",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2a3a01-8cf7-458d-8092-4edc4104fcec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b86f06-3ac4-4621-864a-80c7f098e329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60707ae6-166c-4df2-ac7d-be11058e03c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0ba3d0-8ed0-44df-8bdf-861ba9c2123e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9658f5b4-c403-4f16-9eb0-063a19281763",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142f49ff-a674-4d14-902d-edfd97d67aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e6ac53-3807-4dea-8d3a-0b4b8a7cac56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0592fe8-76c3-407a-9906-e9551483f5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "918487ef-9db8-454e-a398-726f7b108f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ccba5c-037c-42ec-8ddb-e898a2c31f31",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde51b19-7c81-4166-a2f9-941a17e7ff42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91443261-51a6-4ad3-8d67-778355f2ed5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1538c6fd-8ecf-47ca-80f0-be54d6beaa60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bde9069-44e8-466b-8eb6-9a8ce370f95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9144949-1e59-4617-8992-38bc17df5b61",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08057db-c2cd-4990-bb0f-6c7e863a3041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93dbc5c2-8050-4d9e-b3a4-becfdc7da576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d661a1-f45e-4bb5-b2a0-7322e8f85b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d1403e-8e36-4ada-9964-79a825e3d3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d7b093-cd16-4c1b-b418-d679f2811377",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c88eccc-13ed-41cf-8934-10bbebca7e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23498095-53f2-41b6-897b-3556212f8110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1568d33-e078-49cd-be52-15366a1a3600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a9deb3-8cfe-4312-9378-1174b30db700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78718b06-29d7-48cf-87fc-b15f3f25b9f5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45d27f2-93a1-4c8f-b0f3-39ca6f75bbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85d9117-0e03-45cf-b4b9-74017e324ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909dc564-0a25-49b0-8cac-cfb2b7a91095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40fc6e30-3ea7-4839-8975-79e30a36076d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a18e4e-aadb-4569-98fc-d2daf8339c38",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80693596-885c-4f24-8aa9-77998a31c5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f16d303-3049-4094-bea4-1e5d21b2fc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69233e00-b886-404a-b119-5c0b5f5425b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7da9e6-7848-4b6b-b4ff-e295ddc8ed2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a761eb86-69c2-41be-9a01-dae60f221fd8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1349fd87-4be9-4201-9a0a-d13da6348860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327c2255-8955-4902-82d9-d40fa89fa292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3689f2-cdf6-4eb5-b0a3-a78fb7ee9da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "579c80c7-0fba-4d73-8a4f-36747ebae6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07534e13-202c-456c-9483-a9fbdfe24360",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7958f3b2-cfaa-44b1-9dd7-52907cfe1d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a580e7f-1279-485a-9072-a7419bc2e71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711be08f-9531-4aa8-be56-08cd5b39ce76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c29114-5fe0-46f0-9013-a5376d4e7bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0660610-3e92-47b2-a92e-3fe17a516c0c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516130f0-5886-460f-acd9-0bc9035eff04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000c115f-f240-4cdc-ae22-abac7fba1200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3063b5-52c3-48f6-b15e-665d52d3759e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6958a7b2-95e1-407c-9d1b-e535a2700e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e83096-c444-4e8f-b733-69807c0812b6",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467da6da-ce63-41b7-9d1e-d95489473e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21aaf2cd-c5d9-49f1-8493-651204b591bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64623510-3cd3-44be-a731-ed6807d41eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "289798ce-5079-4f1c-bea0-19cc86013ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c143c467-f59d-47c2-bdac-5d527b17f3a1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b627ae93-29b6-46bb-86df-81149e4489a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0572bbe-5b7d-4454-8ce9-901e19bf9c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3a6d20-81d7-4a4f-bb06-f64f9e05590d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0362e3-f82b-452f-bdbf-32c88b9be6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c9008f-1e00-4af1-bd91-1994f0702cb5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7848409b-08cd-4b84-804c-50933e76cf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02706649-a9e7-42a9-828b-be7d1ea2a73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a462d18f-104b-4322-94ef-b2c0f20759d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab53a352-6de3-4f72-9351-e14907d0c13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ccd44c-8c9d-45d1-b8b4-00189a2cc7f5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfccbd31-5548-4602-86a2-2f4b1d786c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d21c1f92-1b69-44c9-a93d-9955282f3c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc644c37-8b53-4e73-8b95-0c0a8ced593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1757340f-59b9-4b65-92b3-d791f6ba890b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b66da6e4-500d-4e53-8f54-eb4dd1b28fbe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90b7373e-e696-4d82-b72e-b24aa0e1fd37",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79c545f-1da1-4013-bc70-77d02e6e336a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bffc728e-a1a0-48e1-ae2e-4800340fc960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f94800a-89fa-4802-8303-1b1b79b19919",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36edc087-d834-44f4-adcc-e1737b90c4ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da62c592-a988-431c-921b-dcbd545eb429",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f6a6384-bf52-4032-882f-f29b88034be5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ac82372-a856-469c-882f-e8e063d64255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e8b2556-5122-4497-84ac-03e67e014e0e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0bb083ab-2c1e-4cc5-a4c9-68d8dd50c412",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d0dc341-0e5c-411c-84e2-5918019389df"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7555cabf-bb2f-40dc-81a4-d6d866942ae1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "489d38a6-b914-468e-b634-fe8dcec6e97e"
                }
              }
            ]
          },
          {
            "id": "c28e7b03-eaa8-4a40-b14a-7cb55bf3ed32",
            "name": "Positive Testing",
            "item": [
              {
                "id": "958eebea-c74d-45b8-9277-3fd9c910da98",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "041ff46e-50a4-4a77-a4c4-ed2b9c4a0901",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afddc9d-76a8-44bc-89e9-6c961ce563c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2218ba4f-8699-4924-8d37-258951cdf5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad7c8c1-fc69-4743-92f9-29958e9e781d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41862d6f-0233-45fe-b3ea-300dca60bc01"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dbd25b06-13c0-464a-a4f5-ee76e11c439b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "745f7d4e-5653-4fbb-8309-d075d5a1f7a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eabf7509-be8a-4289-8bd5-6bc8d2891503"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f22d08ff-076a-454e-b910-6e803cde23b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "976c5992-afa7-4ce8-99e7-739382bbb228"
                    }
                  }
                ]
              },
              {
                "id": "e4a537b1-3b59-404b-92cc-11eed5ba4cd5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10d56373-f589-4576-a280-3dfa6af8cd80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "021feb4b-92e7-4b05-af7c-cce311641dae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b02efcc-10bb-4313-9861-cd3fec33d1e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca585f7f-dec9-4158-90a6-65014776189b"
                    }
                  }
                ]
              },
              {
                "id": "11d31357-ec74-4729-9cda-05d2a358dd3a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "920df0e2-c723-4e75-9446-6d78e65691bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75e0044b-096c-40cd-8886-966b3ec03dcb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d874e81-cf3b-4a66-97f9-9d2ff9fc009a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c3d677b-0c82-4fbe-ae77-63d24c935a44"
                    }
                  }
                ]
              },
              {
                "id": "a816495e-2571-405f-a544-0e39c9d521e7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00b242b8-ea8e-4d3d-bc1c-c5a548b953c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49e5a1df-e3d0-43c2-a90f-90dae801f6d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "165bc865-1f44-4047-bdd6-4cb37cfd42c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9c8a0605-3880-4adf-bace-7f1d7f65b97f"
                    }
                  }
                ]
              },
              {
                "id": "db01347d-d54c-4892-9edd-f7859caca77b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2505f9fb-7b4a-4fb0-b104-a584ce88f8c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80b61ba1-2c67-4e1d-8903-73b595d9f826"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db9d5bb4-3c1f-4c8c-96a2-7d6f368d5fa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c5736cf2-e70b-415d-9943-c4224e02b21e"
                    }
                  }
                ]
              },
              {
                "id": "a863c68f-bb0b-41ec-b2a7-f4cefb8d4317",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4ba5d4f-be43-4583-9e72-64a6970fabc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bb0eab7-bfb1-4387-a3ce-87e28ffe6689"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a6e3cee-b808-4fbc-8841-ddf3642cddde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aa6f6fec-4f12-41da-9ac0-17bf1ae9ebd2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "118ff6b9-c692-4c46-b0f3-ba86d9f94ee8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "96376ff7-4e0f-40c9-9cc3-ff88c4befc57"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "76218563-1c5e-448f-8ff7-1e2d158bcc80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b582e39-e647-4610-b73f-83298f951ad8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4644b10d-c6d0-446f-aa18-f5bc2d6e453e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e3636671-d658-447f-a84c-7dd0a1e7144a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f8148f3-f2d2-400d-a590-8026ecc110df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c37d32fc-99ee-434d-a0ee-2669b226f9f3"
            }
          }
        ]
      },
      {
        "id": "628041d2-abef-43cc-b795-8928cbbbada1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f584d8c0-6671-4229-b756-714671ac5fcd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d81371d6-7d95-491b-b4ed-1ca4a93079db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f7957888-f77c-4f4b-9b30-1b7dd94e5c5d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a59075d-ce3b-4e8a-ba0e-0e2e6654c2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed3fd0b-8d47-4763-afab-20132de717e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de209d9-b36c-4bbb-9451-8b01fb336dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc5b0a3-267d-42a9-b10d-01317333bfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d427d8-7588-4fdb-8d73-0a235cc611f4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68327571-99d2-4aeb-9c7e-d6a9997a287b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f634548e-e110-4e6b-a67c-4f80af28dfd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aafc857-1fde-4620-908e-cceaf708e4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08421b90-b04e-436e-bd13-c474e2095783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8708f5f4-39da-4f83-acc1-0f6fb741d2f7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2480e9-0582-4246-90ff-357dc0336674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafec0da-4472-4a72-a14e-75eae61ca61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e494cf81-df38-4b80-9077-9a716ecb3479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9edde2-e633-43d3-98c3-06000583a6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049cc64e-99e5-4db8-8a4b-3b4f4022570b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7e7dd0-5815-4045-bf90-a488a96a41b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dda44bc-c7a1-48d2-b5b0-3cbbb4511f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6250b6d2-b79a-4834-b78a-deefdc12a5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ea0c59c-5972-4d77-b5d0-05114554e4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c191b7f-79db-4916-a1c9-a316c7bb9d2d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a30e7ae-d558-4bf7-b8aa-89fffc9d699f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611411de-4bac-4ad3-9fcc-d1462a36ea6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dea457-088c-4945-8c70-23450912d5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d99c5a-61c8-4869-a7a3-ee7e8ed5e9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640ab447-8c22-48b6-9d65-69c34b02538b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb971efa-bba9-4380-bdd3-fd0438007c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31683d7f-59a2-4fde-97b5-1bbaf03d7e91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e647871e-8d56-4e61-b786-1b96bf0e2a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4be6b216-2e64-41eb-8bca-af143fc315fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d6864b-420c-45aa-b391-9815705de136",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977d68ea-5c8c-4609-929d-2e09f10ea781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceaad3da-51c4-4926-ad1c-9b435747d988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ef62c6-d420-4ec8-9edd-24e4a105478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9233d3-2397-44ac-bcc4-3ec7395a2aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad4a9b9-356b-4891-b6f8-a2ce560fba28",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65cf1d3-89e3-45de-ba26-9be7387a8301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf3aa2a-24d1-4a2a-8536-5368da8bfd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ac2824-8d73-4733-ac5a-fecca193d3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d673b03-4514-408e-89fb-3b2a3280839f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709449eb-fc21-4f80-9b37-66b0b34bee51",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847a108f-5789-4fcb-a8c5-541446f248e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90883298-7dcd-4f76-afd0-b6940dc31022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c567de95-11fc-4cb3-96a0-233809b5ebd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5223d31-3a64-4f77-ae1d-803e930d6cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792e9ad4-e354-4315-bea7-86576907a42b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2b09b7-0ac5-4074-b989-509bd399bbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd766e6f-6c74-452f-9bc9-321c207033c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65098fd1-cde1-4569-a346-87f05e7ff056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b5e523-f153-4c9a-9531-f8971d909f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b73f477-73ab-42a8-ba61-a79d90d24223",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f5da31-31c3-463d-a39d-61e319219e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23d4356-a570-4659-80ce-27a7e468b52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200282b8-67c3-4522-8fb8-5f22a7f1c16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c6484a-e278-4f3d-91ed-7736742858e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755fc1a6-001e-466f-abd6-0d0ff4ac9725",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea1e159-96d8-4084-b3a7-fe4a97174278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e22ff73-9631-4b90-b9f9-0a7fa9bf0a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca514fe7-ad61-45d8-9e3b-0be9ed53aa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9dd896a-dfb6-42ff-bd17-d14f74a4d847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462315c2-dc0d-41b0-9b13-f36e60e3d8fa",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150ffe93-af52-4a80-b951-a7acbe8d3ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebe6b11-ca20-4489-a18f-8545bd1b3045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558fba9e-3a23-40da-8c68-7174640014a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "07757cb1-08ea-4e5f-bcee-37d723d815b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b134d7e5-f8b7-4059-840b-e9f24956ff37",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b165431d-8d80-4b65-a838-7e1a30fa0127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a122c4-0236-410a-a4da-711cae333515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b721ab9-e472-4d0f-abd1-e19dec11702a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eba296d-fd5b-4d48-925b-caf3c9cc96c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05619c1-2e3a-4bf2-a6c7-8fcf9eed6d72",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe18067-84e8-416a-b3f5-e4e1ce5d00c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88c7d2c-1c7e-491c-9f2c-7446bd626cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e597b6d-3c1b-41cc-961a-8c0a5663732d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c673bda5-aa8d-46c3-9628-ba4b515c23c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed9b0cc-a511-4282-b22c-43b5553248c8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8c6365-66a3-4285-a4ca-f0fbe8b43d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef58aec4-3094-4a60-aff6-2c0a39cd353d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae585661-c1bb-4173-8e0a-fc4d34e9d597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "805dd8a5-a3b7-4166-b525-3720f24b79f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f65832-832d-4ea7-8a27-045b426efeac",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff92050-7ab0-4e9c-8d83-6df3d5103703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faea8192-9ba9-4adb-afa4-1098fb802cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7891cb-9ebb-40d2-860b-f85f1ef102d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "be6e9b7f-967d-4038-890a-238c246be1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4fad71-6321-4c9d-959a-d4a53ba04629",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bd7f73-ddf2-4036-9cec-b776ab672a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bfc537-a966-4d73-98ce-cff7b7055a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b9ee58-b4a0-4c17-a93a-c1693faa47c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "478b10e5-3f18-4da5-91bc-b717e6650bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fdfe2f-ac82-45f5-ace1-fc6d1dde0d23",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c067d983-a749-4640-9729-15f26d4a1a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f4eb7a-9481-482a-a7c2-9c1c1de0612c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fc4927-390b-4ff4-a603-adf185c5bfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f32ef59a-4dba-4759-bc51-cf5cab6a6c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d61622d-bf83-4f3e-94c6-68e365de19b6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4172c1-c6c3-4c8b-9aab-fe64c6f30f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69efb5b3-2d49-43bf-84ac-111f00be0879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b406be33-50a0-48a7-a3c9-355f70a1b6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8da9577-7d6f-4fdf-8d08-98f4ea05f96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999a23c7-66bc-4a8d-91fb-c48943cbc1ca",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f387f4-b7f8-4417-a0a8-6378e5b157e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be82fdf5-fa0b-4c10-bf4e-9a3003490391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a144276-c7ed-4f6f-858b-c2bf0c430db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34ae8eb1-de9e-4db7-95d5-7dcc8ae4bb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c019fb7-d2ef-4911-9eef-360a8e66de97",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122276f5-3a8a-401c-bf17-e613d263969b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01339b5-8e86-46f6-ac8c-38c71f97aa6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a474804b-dc2d-40a4-970b-c26909cd1ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed58fd0c-8968-4303-a7b1-71788b924c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514c7a0a-fb2f-427e-885c-70c17fe5ec5c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087bab70-6ef5-4b35-bb5c-60a74dc0e4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b18e07a-0e1f-4dd5-9645-730e4914755f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db11203-0674-416b-93a9-cce805584c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "083a181d-0569-43b0-8d2b-702facd24de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5eb284-0d1f-4082-8dff-b749477872a6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e769f1-2167-4c92-823b-4f620548aea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2794b13-69e8-488b-9409-e195fde3e9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9993911c-6429-4df4-9649-257d906b4323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5209eadf-04a2-4c85-9613-d304e2e256b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085e58fe-2c98-4880-bc6d-07b3c755e3c2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ff3e96-9186-47d1-bf61-cfeea6d057c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7936039e-1edd-4d96-8b6f-3fb3c2e5111f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec64e17-522c-428f-9663-fd06dc3db20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3acb0d-3d59-4de1-9824-be8b47f06897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5444db8-1e39-4aa8-812e-be3393d45a23",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb02b6b-454a-4701-b2f3-c9773b08505f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0d2aaa-47d8-4d5d-afed-4b661b5eae2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55784e56-624a-4070-b587-059ddec3b3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8402eff4-8e71-4b1d-a546-a93a60aee58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4f511b-36b3-4ba4-ac36-d650c6dac531",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fabb071-2ae7-4737-8038-b87a638fae60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cf4025-6a12-4c5d-889a-6d1705d817bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e5f17f-30bb-41c5-b542-204c91558d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33bcd2ca-aece-4d1b-8af1-c65e2dcb63e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf39875e-b829-4d6c-8b1b-dceb0afa5a6b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a213583b-26da-42ee-89bb-fb7c32267119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af317ed6-a5fd-4ca5-b8eb-c39ffb0cadb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab87ac92-2f2d-4195-8cfc-d0e13f1e50b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd762523-ab32-4ea7-a753-f13ba5b8aa4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa784ba-c937-4361-97ac-c95041e16463",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bfbd05-87f2-42a2-9e33-a29abad7c4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245fad6d-93c9-4569-80eb-156176193d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12da233d-46e8-4506-9ebb-7f3ade8851b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf23cc25-b740-4d6f-8fbe-249319b95749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3674891-9cfb-425d-b9a8-4f060d5cb4f6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ce9818-2dc4-4299-a530-16c2ff77f24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6638c9e-bad8-4f00-aa89-b5ec7181f24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd5fa5d-6e88-4250-aef9-0a63643091f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4100d5e-6f3b-47a8-a70f-235b7934a6ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371d01c0-a443-48fb-9a9d-883f3b5969f7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f179b22e-6cab-4100-9af1-0b459cc39075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9f5c77-8876-47d8-80a8-60b24ae6d208"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad7e41b-24a0-43bc-9adf-87b7dc30199a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28af1497-6bf0-44b0-b319-de315832297d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be5ece7-356e-4f31-bb25-392336ce741f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b08577-df7e-414d-9ca3-59fa984a1df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d8dc87-ad5f-4144-a763-25346b06b70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d276ffd-c0eb-451e-b955-71426fbfff2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b67f1d72-fd2b-4686-9266-387c3e621f6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0cbec120-71c0-40de-a7e2-f659b0899cd1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e8c8853-da0a-4700-9f5f-1364c4c6c233",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c6bd5c-3613-42bb-b993-3a60f9ce292b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4b981650-f482-4f05-ad1b-63b3b541d9c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a361966-d98c-4e3e-af46-838fb793e8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfb5d2df-6959-4309-8e99-77eff50e4c9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6df46d69-ec04-42cd-8665-6cc54ecaa468",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b2c194d-2f94-4717-9356-d174485c4670"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebafae88-9750-4c6e-81ed-3f9b7ea9568a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b8b0850-acf1-41ba-91b2-4b198e95350b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54d34fe5-acd3-4c5f-bce5-46d2f5374c5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fc7953d6-adc6-46b8-a2da-ea91189921b1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2150b1fc-727c-41c8-b261-f2ec59de011a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf14f591-c27a-4d9c-9446-0eff1e586911"
            }
          }
        ]
      },
      {
        "id": "c1968d10-a6db-4961-a3b3-0e039dc89c84",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d734ac62-f6f1-4ef4-9045-3f514d794249",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3455e477-73a4-4b19-8a43-2fdc1e84aaf8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8cb1caa8-56c1-4538-af17-224912cc801b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f52a05e-4664-4932-9b05-b774acf33d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05bc713-bcc4-420f-8217-887b06705252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16adf3f1-26ab-4a62-ad87-42b55303f747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "995c15c4-9886-41b9-b9be-f8231f15cfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fd9a02-f857-49fa-b656-03c9fb996068",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10c36b7-8a79-4619-8f09-3546ddfae5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0884b5-1b38-4844-b0f7-e2fbc12f57e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cb38c7-54eb-4246-beec-6d6c38f9d063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "030dd236-2c73-4a00-bdfd-c597d8a20b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dcb559-6e55-4031-ac6f-d0513ec9e7fd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592633ab-2ed7-410c-aae2-d2b690711935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a5ec2b-3c3a-4202-8757-395707a41a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c53227e-9191-4ff1-80c6-7a898d224bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc3b46a-e060-40b5-b7bd-4f459708c935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc8349f-32c0-45fe-85c2-4f49734d3f44",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb9e4a8-fea3-4b0f-b304-a6acaa158615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fef658b-52ac-4ec5-ac91-32e9f6a793b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74123497-3ec6-4eb6-9549-d673950e2b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d49151-4e9c-4daa-96f4-714bbb4b5b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d6814c-8066-4dea-aef7-990d0a36e737",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c991579-0926-4844-a0ba-40c55d6df7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094d0a75-7880-4045-91be-b7e845f33c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591c0a58-4729-452c-9ca1-175a3ca13312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3a151f-1f03-4942-860e-0152cf8b26cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37119e02-38b5-4a4c-882e-b0227dedb5d8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681b1e28-5651-48eb-8c8e-76ab74c8f40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfd9d6c-a978-4ae7-a128-5ac8f3dba111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fdd186-56e0-4dbb-a5c1-425c22aa1c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09323d6e-5f17-4d61-bc44-6fac593f3718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39060f10-4431-47eb-bb55-a6559890c920",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4eca830-56e5-4e38-b240-d7d750fcbabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae65b05-5c16-4654-abdc-5ef58779ae1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bce9fc-5019-474a-9464-1904f5c00bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fd3c3c-4306-4da5-939b-ce7fc8724a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d234f6-5c3c-4632-a0fa-10bd5cdec1a7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afa8ad6-b579-4563-8ba7-cc4d96bd5a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db1d738-738e-46f3-bf9e-5af1d0299433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaafacdc-4fe0-41e1-9985-a62a4c6913d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9c2c07-58f5-4ccf-888a-f73a0175496a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e4d7b6-2b5d-4048-99f3-e317d691b182",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220ef1ba-2077-48f4-9104-8885ac05205a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0e09f1-5999-4a26-b674-5375965a6b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18de173e-2b24-41ff-86b6-3bfee41698a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7df0f8ba-348c-42c3-b462-292318d132a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0394f74-16bd-4ca5-b817-5b93a362f0c9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae1297b-15c0-448f-bf8b-697046aff861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584def08-914a-4796-befe-84af424727aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c720d1-e6a3-4f73-b13f-8d8c6d7b62eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8e9b32-0e68-425a-9981-d862c3ebb5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27476a0-c086-4247-8585-01f484c4203e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2180a59c-632d-46a3-a8c1-35be6ea9c268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c654bb-cbd1-4328-9b21-7f7abcd80335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c953952-877f-4141-9d74-c4d973b72398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a0a125-d1f3-4cb3-8679-f5a62ab9a7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cda1f2-67d5-4c4b-8976-1cab77d74c6b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73a42b0-9478-43f2-bfcf-19809a9ec590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44f3bf86-f6a9-4158-938b-d9a3d85a210d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bede26-080b-45e5-a533-a332680b96e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a84bbdee-c745-4eda-9e77-adf13a7fba00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa16732-0548-4a86-891e-c0334ebacf29",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630d0f1f-9709-4026-86ca-ea6e25774769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242db03b-502f-45de-aa5f-3e63d2c5c68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c32214f-d5d6-4b5c-867e-1d95f745c1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2ef9fb-f342-4ae7-a4a1-03d8dbf19dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647f7cd3-42e5-48c9-9a28-1f220fdac542",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc95a15-fc75-41bc-84b7-a4003dd324c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278f4096-06fe-44a4-964b-741140abdca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05d166d-e2aa-4533-b40d-d89249ff406d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4836a1a5-037b-4558-8024-f4ed73cb8866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78976d7c-78b6-440a-aefa-13c871d27ca9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6870bfcd-46ad-41d0-8774-279370e65131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b547c6f-7cf5-473c-a94d-307c1b8cfeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e109f4-c54c-4353-9f2f-b8e07c497d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e487a8a-4c28-4af9-be13-121b78418864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e6a7e5-41d3-4d2a-b6a1-b4423bfaba7e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fab7506-e9ab-486c-8d23-6b3118ede3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82936229-224a-47b6-b560-fce2e0fd4502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50e9f0f-6c41-4168-b9eb-77a7e9b9ce46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "07d599ad-3165-4a50-b347-783e92a157c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b8816d-7235-4194-8217-852dd9870b26",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e6b68c-a8cf-40f9-a4e0-f5e4f8681909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad83d7e8-b11b-4e3e-a4fb-f041dfda702d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e530e2e-41fc-4c9e-836e-85767a4b5698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2209f802-1b22-49ab-af06-00f38d35122f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecb63d5-06d5-45cf-b8b1-9573980c184c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7ae294-4220-4b8c-9e3f-94c3d148db6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5849ce7-1fc4-48cb-9d62-e32260b9eb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3a42d1-e6ce-4344-a056-d6744d2d43f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab51ed5-4f2f-4b99-af5e-166d63bdeb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4464cbe1-ac22-481c-9431-63d59c370e16",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e801db4-fe63-469f-af97-b2241fd45b7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e23cf9-0b60-4bca-a62f-fe67544e2d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d32c9f4-69c9-467d-bfa5-36773a3e694c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29485c7e-cfaf-49b7-a8fb-9a14b8f92eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3984f0e7-5b35-4fe4-8495-5670a6ae4f93",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0fb227-7d98-4408-809f-1e0b180fdc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802facf4-dee7-4add-87ca-fa4525ce1dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9d394c-12a0-4455-8e8b-bb7a16e71e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b821e01-2209-4ba1-9df4-0808bbd1df70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e591fe55-2fc1-4014-83cc-2089cb89aca7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b54919-da27-40aa-9576-7c8713354bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a88bade-384f-4ef1-9e37-6228333f6db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7e3917-6559-4d9b-97ed-32e18f1eaa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02e2da56-34c3-40c8-ade2-4750eb39b1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18485e24-c53e-4d8a-95f7-a6c4acae4ffe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca012c7e-cfcf-4f02-b17c-ef9dd2fd539a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35234908-5867-48a2-956b-aa1a083af280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84206ff-79ad-40ff-90eb-d119f13b46e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f909568e-fcd3-478d-b75c-9818cc9d20be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51357f8e-0bd8-460f-9033-fafd82c27852",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553808b6-1b14-46bb-a11b-0fad18b47c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dda60d9-b7a3-429b-83b9-cb33e9e5d8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b43d23f-5d24-4e8b-9b07-3ed25fe0cddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c763fb22-863d-4a5b-98b9-8a9a1c4f0498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1592512b-a392-4054-83e9-2f9f037eb70f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73467b34-b422-4b5b-893d-dcc8c0af65cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c2d238-94c7-4cfd-9625-1f94230f03e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d81424c-6cd1-4cdb-a6bd-40b3a8f85de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72d4b37f-92b4-4491-88d8-7c0c43441d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59ff474-98f0-4eba-95f0-c0837dc4956c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db77e73-e3c4-4c45-957d-21dbca84e270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144f8772-1908-452e-b185-3f2d2b68dda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85036fde-9407-4062-a912-79ff10b24dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d97d72b7-3938-4ef9-bee9-a397c54c2d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e72732-da33-42f0-ab02-d99f4644da70",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbfcd44-961a-42da-8e68-29eb9525966b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932e90d6-e9f1-4dc3-bc9c-4c7cbf10629d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19567f58-804d-4f8c-8546-e9b7642db5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f07c42-cca0-4dce-961c-5accc3c7ac83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8699285-2be1-4c46-a5b4-eb2d89a9baf5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fbe1a5-d401-4440-b2d3-0d00cbaa8fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fe379b-6ac8-4c27-97ae-b56abbff55aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dc0706-f7d1-4dc0-9b71-eab33fa21c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d7b217-13c3-4b8f-b8eb-c7b7b145c621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce35c302-b128-4824-be18-cab2195fb1b3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f1e81f-39e3-43be-a1aa-15f719f360e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0fc954-cb4c-4164-a29c-81fd8bffb0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc7c8cc-9684-4895-8599-51a03252a71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2c8fb9-6f75-41c8-aaa8-eb9d870ceb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dfdf31-3998-40d6-b0f8-6456e222fce8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a96f44-07b6-42af-99f3-360a4aba0d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6866be-c152-41c4-ad7c-967b7c0559b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af6d8c9-1de2-4152-92bd-006f884ef94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73a7bcd3-92d9-4de8-a821-a5ed075e42e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80115108-7d61-4e73-9db2-3ce13067bf41",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8b6c2b-c88c-4aa5-8260-5273a828b154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c2a11e-2455-4ce3-90e6-9742a6bae99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb5e2cf-051e-4b50-abac-8302dafe6088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1804c6-5106-49dd-a588-b4953b95c991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5ce973-3bcd-43b6-b97a-ffd156421f92",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2290ffb-091a-4ea4-b546-bc68a9cd1dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7375e9f2-7507-4ca8-af23-38a58bd18677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74235662-9eb6-45a0-8502-a672b2301e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa5aa07-c7e6-450f-9ed2-79de589f3e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce55833-ea6f-419f-9caa-a6667cbc7968",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fd3e78-b2e8-4684-9297-a350f75db3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0c60ec-7eda-46f8-9858-f86b906f20ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a91c5e8-e4c4-4f82-aee6-5f9fb2d95205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1988cf7-fac8-4227-a926-c6c4e6a83784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7a18ca-1679-4a50-bb70-027fdb0b8fb8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba1b20f-58fd-40f9-bcee-aa4c457c63e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb4e245-2c83-4ab5-99e2-c4af07f38f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadeebc4-536c-4b74-a6b9-b1f24450b0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "390457b6-30ef-4f67-8f2e-ee19651cf16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641a98d9-1ea8-4064-93e5-0581dc4a09f5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2fb964-a963-4fd5-8bd6-967315da1006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf88acc1-828e-4688-85ab-c62e5386d8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e77261e-22c1-4768-b4df-5fc0b17f4ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6de625c0-c10b-4265-b334-ab3e5d595380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3b3413-b8bd-4272-9914-af390ed8321a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6099168d-7554-4351-8178-9446962815fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c337a46-b35e-447a-9948-c4bd142b86ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9a01c5-ad67-4f95-8fe9-17753bc675f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7177f785-9005-4d61-87a1-9fd74dc62bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292f5e80-ef28-4964-9557-c5377648a604",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cf483e-d7e7-4423-80be-2a6d03910fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3daa4d5-17e9-4020-bb86-ebf88601ed5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0766200e-0d61-4136-86fa-ddcf39ebbcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c084d665-35cc-47dc-bd56-ad9f82d8c226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7122ec6-a598-4708-b326-bbf94873ed66",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ffe97a-61a3-4abe-a586-e267ef4d9bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a468fa3-f074-41ad-8669-8937ef007265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677c11a4-fe29-48af-9280-3343a6ad465f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "609f5ee7-73fa-41d8-98cb-37be941d0ac5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf32f07e-eb02-4270-8c7b-572bf6c42e78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ceabc20-365d-4109-874b-6881dc96dea4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e1bb9f-5861-41f2-b2cf-85329ddb2fdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f9258f44-0413-4f9d-a408-18920b494474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe8ca92-1ee0-4c7a-86c0-8e68e451e247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8f66966-fd90-4288-827d-5f342ce6e759"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a85d0de-b57b-4c21-b373-c59e9bcdeeba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8495e397-fa9b-4bad-9376-a93f93dde97e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b108bd71-73eb-4025-83f4-d17e61e5d7c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5cfd17e-8dbd-4f39-a449-4bac2727222d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cc6b5d0-d0a3-4791-b1e9-e0f4c9235d51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60c89f94-3139-4440-ac42-a8673421103a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de8796ac-8be0-45f0-a7f7-99636ed2f469",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd646518-a5d6-4710-874d-67ce96d053ee"
            }
          }
        ]
      },
      {
        "id": "f5dde867-16b6-46fa-b3ee-f2523e497f45",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "480ea791-7c1e-4cd5-be35-ffaba666e948",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f79e0ce0-aca0-41c6-afe4-18645d4ffd0c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "df375117-3e85-48a7-b646-40e36f8cf961",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96263d9b-1385-43ec-b799-30031f0b8447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64e0903-da7a-4931-b03b-f022dcd5bd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec645c9b-b61c-4657-9bcb-d2dfb953b3f4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78308d03-4566-4ce5-964c-f4c596c71fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b097005e-0936-446d-bf55-1f03f5b5f826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb8710d-cf1c-409f-b210-8693f82c87b6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a7950e-2f25-4008-93d0-aceb726f71d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1e86e1-467a-4aef-98b2-efd66ad16ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6908009b-988f-433b-9eab-0b7b480b07f3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5641fb-cf8b-4f13-9a31-b18598686c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7943f3ba-00e8-4005-93b9-e2758e84c6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f9154c-c48a-4456-a077-f82de0ba98c4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0869f1-4745-4fe5-a1a7-52760514d547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a66204c-dc34-4e3b-b572-efb9ff062148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f46f3d-b0eb-4084-b1bb-7566aa1522e0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9233c5-59da-441b-a72d-103c784ccf36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14be04a9-a008-4467-8d30-5cbe175f5efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d859bcc-a391-44bc-8904-e9de1509fb71",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a16b4b-1709-416a-aa73-8367ecfc06a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eacc360-5d4c-47c4-a83a-065c1384b2f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4e5a41-0d34-4583-8b88-59d8f3054da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "389611db-da72-49af-b668-0634d269851c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6c43fe-182b-4d9e-a82f-6aeb9ee924cb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189ded03-58ed-4390-8a73-c2adc7eadd20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b26efde-052a-477e-af76-76800f07f89b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3be506-1f58-4ad6-9a51-8b4c9afddbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5275539-6eac-4e76-ac2a-ba578304e4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95029bdf-e33b-457b-b8c8-245002a9a3e9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5770688c-0a86-41eb-aaf2-1ef86d87cbd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b659526-7468-445e-a7c8-2260d113da57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2aac73-4632-477a-9d84-7c694cb0559d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e89d22-da57-4df8-8411-b7e62de30426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46914253-a9c1-4f12-a48b-e865c995f9c0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937bdacf-a49e-47be-b8df-11614cc30fa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a1f37b-f47e-4d7f-b959-9d975325de41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e4fdc6-f08a-4a13-8b66-d3024bc59964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6224dfc-8f4c-40e0-9203-c57b6ec41a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4053048c-c0db-4da7-95f8-b8a24984311b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c21b8ec-948b-4951-931e-aa41dddd60ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044db274-d618-4ec5-b1e4-9a8617862e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1294fac3-464d-4ebf-824a-b85d5a7e21dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebdd8c1-9875-4fc4-9d60-a3355f0a48ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43581379-8b80-4a42-917e-7725363e7477",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d951cbf-528a-42ea-ab29-b151fbe337fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b01cc7-0b9d-47ce-84fc-e24d732e67b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1610acfb-3b0d-4e0e-81a3-749335f1248f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e76a865-9fc9-48dc-88a1-e97e3f148f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16011810-0941-44b5-8a7d-4bea197595ea",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fbb18b-b04e-4456-8380-1aafa9304633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d80e7ffe-76a8-471e-90b4-7ba77b1850e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc7583b-9e82-403f-9a65-21d005fa2ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d021ab76-8fe4-4307-9bac-3ae2e96f9a66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56829128-f6d9-46e8-b8b1-aeb6c09286a6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee461a07-a9a9-4673-96d0-b39d32f6a9f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acab0bc4-3667-4f71-8909-e1ec5643a0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1169e4-0204-4c9e-b119-5230b6fd38dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fb5d7c-8265-4479-a032-a5f1fc0d23f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f3ef47-ca40-4733-bccb-e87d37b0a7ec",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30dccb31-b2f9-4227-8371-87b4b8a88b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12084efa-85ed-428b-9961-90e63b87a673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462a76a0-9f4a-4aaa-9d46-fffd3afe54d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a11ba5e-d132-4e46-9f95-f89c50c18460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e31916c-0bdb-4c57-aa09-19c7d0efe4ce",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82cc63b-fb6d-417a-822c-929c33d21c44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ffe143-bd07-4ca9-82e3-a6378f93d036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f20c848-6ed6-405d-82ee-d80f8cc154f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24855eb9-6065-45bc-be5f-97c588b1a94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aad3362-67ca-4cd1-a787-15c4085cb5c4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3ba23b-2342-435b-8714-d5508c006be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38141a58-c7a1-4487-ae61-98adf0c3b60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a11fef-e9c4-43b2-8cdf-60d7b2e1a627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b445447f-721e-47c3-a5e4-ebe0b282a991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7d4e56-d0af-4e9e-876b-2deee20fb1d8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60509746-f416-4064-9b26-70cc030bee40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24214a59-1e9a-402f-bfad-f12984df33c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefc17ff-c26e-400f-af51-09f5cca207e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1feba573-f6ff-44c7-9669-821063f06821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935daeba-d344-466a-bbe5-08a75d93f017",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1c8e5b-d27a-4e67-9760-e7b24e07ec92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f78eb67-72ed-48d2-8e38-c0aadba10d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5442017-4695-4ca6-86bc-87a8d7472afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c4a16eb-ddcf-4394-bcbe-1dea9529a005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e802e0fb-ab63-4e49-be2d-dc6b77eafe9b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd79e2e-7cb5-4a7c-8ec1-f911d22d34cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90110ac7-4fc6-43fc-b79c-1c45bcccd8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a4e910-aacf-4ebf-bc87-096e03c0f027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d45a97-8dd9-473e-a68d-23e100ca3237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8256bce5-956e-4d4f-925a-3a589f2a57a7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8583e94-06a6-434e-8795-1272d9c9be74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bc10af-1ef1-420f-aee7-2c716800b0ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc20b2a-7f20-4b22-929c-2e088d26baa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc45fee1-d444-47a4-b248-802c25f5b995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f35ffd2-e596-47f8-be91-0eb4c0aa33e1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3de7bc-d7f2-4a36-8090-724f0aeb1bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da4666c-18e5-4028-86ef-3630a79b719e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86129506-de38-4a62-a5dc-3302ffe66327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "335d4919-b518-44e7-b0c1-74d305c5ee90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30b79f5-e622-4474-bd38-d2c24437e73f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7158c3-2aa9-47d3-9837-f5df1c57740d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5918a599-4511-419c-ab2b-d277a9bb4586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e37a068-d66c-4418-a739-54e8c5221919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874d53a5-ed71-43c6-a724-09f3dfbcd61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff369f9a-5184-4e81-8233-50d4d32dcf75",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e5d17c-c443-4d97-bffa-1ce3acfdd159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b1c978-064e-424b-a0d2-5036cc88f5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7c497b-eaed-449c-807a-c22efe7d9939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dfc0ca-5d6f-4ba8-b34a-5c36852372a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a25201-4184-445e-88d3-96dee2714740",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d11000f-9ee7-4532-8671-38deb41b9122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3815d70c-8241-462d-9374-10d6f11d23df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75058265-3b70-4bfa-a572-0e4f6bc13bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422b0883-6b02-4a42-a55a-1374a3edbfea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f8fe03-a6bf-4ec3-877d-1def23012d70",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5aee1d-9ccd-4581-8efa-da4dc7cf8d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2938354b-e61a-4921-98e4-0c53570c83d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20177ca5-3951-436d-bdfa-6233e8b1b897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa84993-3ade-4bfe-aaf4-98a1de53c7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad6cf5f-6202-4003-9134-260df203b0e3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d8e627-2d94-4b3c-805f-3c078c542cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f205e02-8a40-4bf9-b1c6-dfe3f621b886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c32046-92bc-4e1c-b802-1af08c1b8ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff96dfe7-9eaa-4994-bb65-b04d04bdce55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c668a7-17d4-485a-9280-8bf6fc72f83a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c77cd93-2ca0-4f8b-82c7-a77c20a9bcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e7e619-ac04-4b17-8739-15e7a8156dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afd13d0-a80f-4bd5-8fb3-fe5f41db0f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819a3a57-3d12-4666-a272-3a7ff7eaa7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746a38f7-9d04-4893-aabb-e1c64f342617",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d3c61f-9178-47a4-8cc3-09b5c1604a90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0884a562-39f9-4c8a-a261-49d351a556fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a639b2-ed45-4d04-97fa-2a0c5e6a26e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579336cd-ef37-45b0-9a42-799cbf206645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6955ac-09ce-4c82-9c76-94bf1d879b49",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aeba531-dd14-471d-b479-ac2d8a7222c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53cb37df-1a61-4b1a-8054-cbc830e87c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec7bdd3-0b9b-40d4-ae86-88df3a1f4a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecb9de1-8530-4e35-8e4a-c0c3be38a9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61389c5e-8f24-46d7-945b-3179ba994bde",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fb68bc-5cf0-4ca0-9447-4f6a0763cdd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6763e1-5dfd-4f72-8930-5f59598359e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8490bc7d-0b73-4e1b-85c2-2bd9aeaadfb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f85ec84-f1e2-40c7-9326-7c272f217ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7968139-400c-4de9-8659-5f1e731c6482",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6fa631-6ab1-4a3f-a92d-6da0a4829138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2da8b8f0-b9bb-4a3b-be3e-f6c357e95425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d850961d-72bc-4330-9d2d-97eb89accce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63efcbb2-5609-4733-8f7f-b7bed00c1f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f10932-9df0-4e2a-b8a0-96210b5b6e86",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffc5c1b-5243-452b-9bb4-96681793e3ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32b744bc-923b-4e4e-9e7f-4561201bc2b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41cb487-3eb4-45c9-9f3b-de658b22932a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc7db41-5376-4269-af02-ea9b495bdc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f244d58-d667-4e88-bbaf-fb6cb10983d4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0fedfc-8869-4a2b-b4b7-435538cb14dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de61b3f9-b15f-42c2-8791-7e7f65e5054c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d22ef6-2c90-4156-a0cb-44fd2d2ba6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e20b82-30eb-4020-af4b-f1ee85d1ccf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a47be2-3733-4a37-ac28-5d8de9778585",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dffe4c-ea9e-4856-b603-443d8b2c76fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daaea539-cb62-4cee-ade6-9db5266b825a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc3bf50-d2f7-4a8c-a401-9289d279cfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a637f4-91e5-4652-852b-11349dce386e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bbf3a6-5da2-46fc-8808-9b2a143cc185",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a83344-31e8-4ecc-b302-773ce0800889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd65f23d-ea8a-453e-ade3-93c6dc6f2052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2375d0b5-4213-49e3-9842-531fa2c9ee98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc7b036-d8d8-4474-bea8-ba15074c03e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687f9747-66fe-4958-9651-674ed22ecfe9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24411ed5-6582-4316-8755-937c8e3ba8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccf2fa6-6036-432b-800b-a4e92168b5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15639349-6ad9-4348-bb67-b8b1aaba2fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf183d1-4ae5-44a8-be0b-66441d6c8be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bc1ca2-8d98-41a7-8383-3be8f612025a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd41b63-80c1-4a52-bdfe-fdc52bb7b275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268533c6-e26f-447e-a0ae-87ba4503c6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac65ab7-b7f5-45d9-a406-bab04e716337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be30848-af63-4a49-89cc-aa0ad316383a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36854247-3c81-42f9-bc63-df4e4c5bd3f3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2c30a4-9233-4c80-98be-b129a0383eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89afb2d-db63-4c20-a212-0443b2f7ee83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c15b7b2-95d8-40d7-b7f3-f540b76400fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f477f9-ebed-4cae-afd1-164667ff4c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752e74a1-d2d2-4ec6-a858-c06681be9ea4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba780543-4846-456a-bd81-934a0390445d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185c8672-36d1-4df2-9c65-1dc593d16be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72136c17-fa55-46d5-b59c-1bc7242e1f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68e4589-fa6f-45d4-aeda-08f1fbe8f125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a7ab0e-67cb-47e5-9700-b33c5b02c684",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefcf8f9-28c6-4325-af6b-391369ed54a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d8e856-6e63-4a94-a0b1-aad968fc55cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef9930c-bbb9-475d-b3c3-f4b3521bc35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f04d45d-175c-4e1b-95d3-a0a9cacdc1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f77980a-6f4d-4f63-98a6-81df8e29dcba",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8766be12-0a30-4261-8ee9-e7c3817e7b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed0def9-aa87-4c78-9373-f838c134587f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1a71ba-583e-4e6b-9062-d67edb9d36b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62bd28be-3342-48b2-961d-be1c754ea2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2b447a-2adf-48be-b37f-d02f48dadc40",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a980dae-dde8-47b2-be7d-a4af84750d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084ec98b-15aa-4ec8-8a21-8e6d51faf7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa8710e-cdb1-4502-8b28-f40cc96cb069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1f132f-3a6b-453f-ba84-f81f8b9f9043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193957ef-9cbc-4c7d-a1e9-4f818697544e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bf84ec-670d-4891-adf7-01b58eafece6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd002348-0986-4e35-abc0-3dc3b341b53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a1190b-9963-4bed-a0bb-c19a17d053af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e2fc11-6210-4997-8748-e623c5874044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7e52a9-2146-4777-98ad-5f58b9b07cf6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c909e8bf-09d3-42a6-9498-53058b7e8322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a1b39a-431a-4d4c-96ca-9c1829b8d67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7782a04c-0443-4ada-9941-70bc71842e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f16ef2-62f1-458c-a821-90452a445ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c413693-1dac-4160-b774-63e4fb381e97",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d12ac0a-1707-44d7-a8df-c4ef741b4d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2429a27-b8dc-4de2-8b99-0be037e0b986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a1bf92-7de3-411c-9930-acf246bc73a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6474511b-e041-45ba-af32-402b3918aa62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fa1df2-b547-4f9a-892b-a7e1103f66ef",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63525cfb-bfc5-490c-a9a1-c6e91796e9a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77003dc-5888-4072-882c-5208f29f65c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1ca2d7-ab81-476a-9d1a-c9d07aa03d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40dc896-9ed9-4910-935b-f79bc763bd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8188de3a-637c-452a-9c4c-cac921632d46",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaa2c3c-4255-4bdc-8b7b-dc41177f04c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f8ab0e-85ae-4a43-95c9-1beb288f5aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fdac94-05b9-4567-b1a3-b72b320a4cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a87a412-49d5-443f-90e7-3f329b1379ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6650bb4-a305-4307-982a-c63be60374ab",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bd6a39-2d41-4e52-bb32-b1ae024b5d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31279454-9c6f-4aef-ac00-32a7f98c7eda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f37d96c-127a-4e3d-81b0-31ac0f2c6596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99461a2-3ae6-4310-a39e-890e85fcbca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb47a82-c4d7-4a7f-a00f-a0220dc8cacc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc424b86-3000-4c07-afdc-ac30e6541f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc3f8cf9-e899-445a-baf1-31e66a933bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b560bbc1-b76e-4612-b941-3c749b0535ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edad8800-20be-4521-83b2-8631a93d5851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d1a6a6-ca47-43d2-b6d0-4a9b84934d6e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24442352-6e1c-45e2-b019-a982953f4d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c1b0e5-8cb3-4d1b-a5be-21c83fecf976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa68f33c-e37e-4a7e-93a7-47a350a398e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321c267c-db35-449d-abac-17581d2238d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a09420a-cac1-49f3-80b4-a2825e785f5f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391ff622-539e-4400-bb62-439ba0a76cef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a20f85-e222-4e7d-8bde-3c6a268937f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05dbaa2-5f8f-45fc-8c71-d0781f804d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5153cb2b-e086-4bb5-a050-0e892d88132e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6825e5ac-5ad0-42c5-a1eb-29c5ebb039c4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35067b1d-71b8-4ef6-9c79-d3a19c3ff83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12de09b2-b7ba-4165-94fc-e958cce52dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1c4cda-0273-41b1-bdd7-1496747ef7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ee877c-14b3-44c4-9767-3ab382c2fa8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c749163-6b14-4a63-9993-d52b0df60493",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13b9de8-6330-48bc-8240-8fd3ed7d3d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3cda3ad-c124-4b73-a455-1373c56a1fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7c9f10-6708-47ee-a621-38422d1b6886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a346fcb-6b54-4a37-a2dc-e95f4af49192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940c3d0d-fadc-4238-bb91-c9f9dc0d8b2e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f49d099-a5aa-473f-8214-b9f4d7857ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694fd384-b28e-449a-ba90-f531a226b18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec70c476-a7c4-4207-a899-072c43b5afc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df087d4c-a3bf-4af7-8d99-9d48500bb55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175894e9-f915-4b24-84f6-705f97e4182e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b32533-03ba-4427-bef0-d293790ad38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9654408-47fe-4a8e-bf4b-0819b3e16d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec10cc83-b913-4094-8f62-8497be63c7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde8cb88-414d-4f89-914c-1b37ef6c42ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4127c370-b109-4385-8bd2-cfb5611450b4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f062202-bc6f-4f08-8e45-51f47f096443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4c7611-aa88-4166-a9b9-f0ae38bc2152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532e2707-6eaf-4276-8a33-770de97a1d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2c9fe3-74e9-40c1-9e11-5fde86cd3bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d15c94-ff31-41fe-9e37-20f26210225e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf4cc27-db27-4433-8734-0f228a50d9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfc8262-29e2-4f78-9a78-c1e583636469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31664133-9e6b-4cb4-8ad4-093363641140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d43fbb-747f-474f-a520-f2f696c9f11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dbe446-0017-4c31-837e-27cf13b3e994",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2177bf58-876a-40a9-9ba8-b6bfb16d39a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550b4f7c-e972-4cfe-8841-79cc432ca36a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af81a251-ffa2-4ae0-9d33-c865b60529d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e5ce05-425e-4b4f-8196-cc793ad2b4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae591e3-0766-41cb-b8f6-be6b1844e1dc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7431731-bd23-45db-9e04-d67ceb24a5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1d959b-57df-4350-9d64-5dea9a11fa72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faf1dbf-d899-4b2f-b0df-40a1d2dfc046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f165dd-5c56-402e-b950-7eb10a4604d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4982aed0-7086-4ab9-90d7-59f64c74eaa6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84461c76-be8c-443d-8df9-e4f0d6c30820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad69bb69-efeb-469f-a72e-a8db8937e423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97c5c58-0536-41a9-851f-e227024da873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09547f30-3155-4399-a7ee-e3962a6d87b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df155c50-f523-4650-a0af-096547e89d46",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e068cfc8-a48a-48b4-b996-1cae8d916d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f638e38-2ca1-4fbd-a32c-93b61e852212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196b0f2f-37e6-4bdd-8f5d-70c0ba121d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca5ff08-5600-4678-bf97-d8e8a1ce7b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff57083d-5008-47df-af9e-c928b197e62e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d959f115-7ddb-4516-ac98-08f7b6d151b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1371ca42-0d1d-4641-8de3-5160410fcf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4aa10e-e57a-4b1e-a484-befe34aad5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcac3a2-769c-4d34-a468-375d768526b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b18fa3-cacd-40be-b457-ee232d159b7f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3a8f9c-6fde-411f-b627-cd6bb62aa888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbc3cec3-112c-4c9b-bf3c-36f44a3fe64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616b64d4-ffc0-4461-b4ef-34856219b8c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5a5c5a-5069-4eb9-b38c-8f78529d6625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3ea5ed-aea3-499f-84c0-5ec884a4b654",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0115654-1923-4ec8-bb34-12ee71695937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48dec1e7-4146-454d-b2bf-91d78aee2bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdfb0ce-8743-49a9-9937-8304a7c0110b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fdb3b1-45f0-461f-a3ae-4d97e12a1ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4eac0d9-b8a3-4819-a49c-69ff2d2ffb0b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbb6274-6eaa-4aff-9710-33efc5ee0bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bafa129-18a8-40ff-8b04-7848534e65f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49d1bfb-3fe9-4f4e-998d-db9beb3e6321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0798ef7-0c99-468b-bbc6-5629cc263754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa76644d-8469-4d12-8a54-27536351f44c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed300022-2277-4122-8e06-5bb01ce6b841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b14210-86aa-460c-99e0-43103b4ccde9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0613e50-d0e7-4bac-ab64-22a5391922d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dcf467-93c5-4189-891b-5797654228ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018578ee-190b-494d-8d2f-7245904716d3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53c98f1-a566-4a5d-9b01-7d86ca8597f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2f06d5-fb8f-4db5-b76f-5e4f96c75419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95f0196-f243-40ce-a89e-19755f46ca67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4154142e-b38f-4d0a-87ac-04bfd7aa98fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3425265-ab4c-4e7b-bcd2-b55e2fd11124",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9efdfd-5d62-4b3c-9686-1dffae61fb31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb770966-9dee-4182-9570-beb1be7480b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e4aa7a-c7b1-4518-a66c-e3478f8b2c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e990f0b-8018-4e9c-9831-40b2207aa24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb04aaba-aef6-49c0-9cd8-55a32bc6d31a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16978f4f-65f2-4147-8f27-2f57bfb79a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "835f1074-9854-4a23-b4a2-926278750453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad85c930-a1e9-490d-9eed-71bb9ffefc27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103dcf22-6a7f-4d8b-9829-36eac4d87767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a30cb0c-be29-4dfc-89ee-29c414fa847b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8157ec-c538-45b6-8b22-539d1a2bf43f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afc9a85e-71c0-4a44-a468-5a3ba5f1b8dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4769e490-191b-403e-ad3e-ad523af60e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "323711ef-238d-4939-992d-72e2d469ea83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f26219-d60c-43e8-9925-f23f73c13f3b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8786b2e0-2a5b-4395-b190-bb5ea9f6528d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c42e91-d8b9-4b46-b36c-1d30260178fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff5eba7-0135-49f0-9286-775bf67a7300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7fa69e-eb98-4ac9-92fa-7082073f1f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0b5ec3-3d14-45a3-ab15-a43777065737",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a969acb9-480f-4dae-b91e-4446b0ef0830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99741b74-730b-4ae9-a94e-f71e48de78b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379c223c-a179-4290-afab-7cf027e03eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7a778c-57e8-4173-9814-93fe5b8caf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f27c762-f49c-45da-8ed1-a424232443f9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f88605-8a3e-4ffc-9730-43a1c76a24d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87179b7a-83b4-4a7d-886b-5bb9ddd2731a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cc561c-4c67-4ac5-beff-60262d40fe82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9251542-686f-46ea-bb32-6d3dd4154427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05586eb1-e7cd-4fd4-ba1b-6eb4c15fb816",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c227d1-203f-4b8f-92a5-37a67bf3dda6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b548edc3-374b-44e7-8c22-9a76594bbd62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4dac0a-be55-48a3-a4a4-32b50313960e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84fef6e-0bd3-4f37-bfc8-176147366594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128984b0-9fdb-435d-8a53-d944292dfb5d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5124601-0f90-45c3-b6f9-0fd2e9812698",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a624653-b061-4cda-81fb-9b09e9f30fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b5d812-7f15-4c07-a3ff-091d0324ce06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238fa1f2-f786-44b0-91d8-3ff73eb5608e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cca82e3-a98a-4e87-9cae-8bb9961243c7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd4abd4-3b42-4288-a8ac-c649cbd5829e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff864b4d-3075-4c10-95a7-508118a609f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08737c09-1501-4ac9-a3b0-a64b60d3443d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc971903-8f79-451a-b041-56b6717c5c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b3dd2c-cf23-4427-88a2-57f34a2814a3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149c3ce3-c690-4f0d-8056-9f392447d414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9154e079-8893-4641-a0ff-1c999c4874e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cd3a39-08c8-4858-86d2-ba1acb676f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3305ad43-2947-4eda-8baa-178eb94db224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a857054-60c9-4d4b-a7b7-33d55d2ff101",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f199f690-93e3-4757-9e6d-5fb33b202f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a812e660-eedd-476a-ad65-2c72a5845b0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf88895-7ebb-4fef-bf5a-a1b19e0ffaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae372f37-ddc4-471b-9e77-75b4e822a84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e1584e-fe83-4583-ad1d-f07db8ca1f4e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efdde2b0-474b-46bc-a5e5-2d757547f98f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "698c06c7-e29f-4730-a3bb-c9d89ed4e42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e48bff-c55f-4e3f-a4ec-d5e78bd69ad7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb94f756-46fb-4c0d-8296-ec496fa12108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622cf354-4271-4711-8ec3-14c7d59c3b2c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecc9bcb-5ab3-4147-b97e-56a09269dc97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0883bf40-10a9-41dd-ab84-d3eeb4db651c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37d4e28-89a2-41fd-a72d-85a1cfd85e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcca4cb-adcb-419d-90e4-bd9a8af73a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757c4d34-2527-489a-a43d-d643100ef24f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7def308c-efa8-4220-aa82-f299b5058347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aca4771-56a4-4d53-81fd-a618762cff30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89236c6-00bf-40db-9d51-44c2a837cd8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed0c0a5-8aae-45e4-b3a2-8762434a20aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce410d9-7ac4-4664-9c00-ecddab1bc80a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c25fba-25ff-4fa9-967b-05fade74ad5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9272f3c-f1e7-467b-8d02-4c7da27a9dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a8b53d-ee80-42c7-aaae-73ff2b8408b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f8750c-f620-4bc0-a75b-91b12c38854f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec21d48-2303-47ea-aa0c-5e8a47875ce7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a609ea9-5ee6-48e3-8257-fdeba5950965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4bf1dbd-d0e2-4d71-bd9f-f18da20a720b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "968eb189-5bc0-4a47-8af6-b21a944f6660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70497d2-fed7-4c14-88f2-704fd547666e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf82f43-3330-4324-a95c-6641ac79a48f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5b95c2-8c99-4ded-b172-f1117958d827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e90f46-37bd-41c8-abb4-b3319a287373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc86a951-08a4-43ae-bef3-3bac64a18b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50ac90f-b7de-4dd1-b598-b07ce17737d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ff8740-3e67-45e3-b05a-daac6d5f2072",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3a24e5-345d-45d0-bf6a-90bd8fe115b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "341f0829-e8c1-4419-b2d0-36976e9299f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda9d627-077e-4bff-ad42-e2e73fa82d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5973550d-f2f1-498f-80dd-0afb2a41abaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3889c95-acd6-4cca-8647-d89e9a6cf381",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db93450f-cdbe-42b1-86b7-b982a5aeea76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8796500-45f5-4b22-8b7d-1ce1e41e60ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699ff69c-b7d2-4620-9559-c835837c3dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6323445-e8f4-49d8-a6b5-b16132223e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4fd35b-4b35-4d20-af5d-990e5515a68f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857f7607-34d2-4cdf-92b2-9ee0d3d30d9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab7050c-cda4-4ac1-afcb-21dc264830ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2d8450-498a-409e-89ee-c7e11a51d8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63eef2a8-06cf-4bb6-83c1-0407e6e9a8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ffc76e-4dfa-4a71-87dc-df82ad0e4af7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8650875b-565f-4d9f-8ea7-3f20e22a2f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da6a7b9-e336-4edd-9ae5-67ebbe8c1f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ebcda3-0cbd-4675-b2ff-0aefac413160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1689f68-a54e-4109-871b-86385f17f4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c00da6-4b20-40a2-b26d-3bcc7bfc126d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a129ee1-daff-43ee-91ea-825293269b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f18a8c5-875c-4c8f-8ef1-42cd05670e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d506afc-cf56-4fd9-85f1-6f5358b41426",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e64b56f-875a-44fc-b09a-42facf693245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d999ad01-c69e-48aa-b743-0d962881ec01",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb162db-9c46-4fc5-8d58-9221616824a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffabc852-e497-46f3-a121-1c4a3a2d2e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208bed8a-5891-4147-9dbd-41e687de75d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69517d5-20f6-4613-b477-1e9564737c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78c427f-e1a1-4132-bfd9-31ba98bf6057",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0011c366-0820-4047-8d8d-d5501dbe2d94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff9caae-0d37-4539-80ff-cb20a5fa3d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d087d18-d2ec-4b72-b299-b5cfa384c94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e88ebf-6130-4fab-80e9-5feee366c097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125d15d7-2779-4fe6-bd5a-461c599076e0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58314452-d350-4b1b-87db-6f58aab592e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b348a4-d691-4f90-9606-d47be21f7a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d7a00f-7222-4258-8477-0b7719eea2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba04492-5f6f-43fe-b759-632564e0e05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4364913-0516-4a11-a413-7ed75972aac0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec6db9f-8184-48b1-98fc-05277ceed53f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e713dfa-0d2e-4f2f-b7d4-1b67942a8fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c90a89-9159-4603-bd52-5cc723d014e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfed802d-702f-40fe-b463-483dbb670f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504d7e2d-6f6f-4306-93c5-560bafea6213",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a7b65a-42d0-4af4-8a8e-70c255c13c63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac71c010-4440-44a6-9562-f2a8ab47c44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec4ed0c-a054-4996-a8dd-0be3c0d00c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9b85ac-0003-406c-84c0-42a9c683f8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1e67d3-ee7e-4f4d-9f4e-ff3a198fadf5",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7d9835-5e4f-4189-85e9-69468e2574c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6d9f8e2-e685-4d96-8cc5-354d4038ff3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca13943d-7577-4121-bbe0-95edefdccc66",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7a168b8-9972-4d17-80ce-fe40a938559b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ce5fa5-efb6-4f67-8559-a750679652a1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469eb31a-8ffb-46bd-8b7e-fdf5df929354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c60d0a-0513-4362-87ef-fae5d641848f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ee0bea-8047-4a99-a547-c69d2dfbe028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e1a48f-419e-4abd-9598-bf5a59a22d48"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b9d0bf9-2614-4512-97a0-7cd87b39591a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0edd97a1-5440-4ddc-bbdc-d043c6cfc5f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be0c1535-1928-491a-b8ed-fa616e40100d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b0a90cb-70f1-4172-991a-12cbc82817f5"
                    }
                  }
                ]
              },
              {
                "id": "c931a21a-592e-44e0-b3cd-035e497031a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2687d364-072d-47de-ad59-cd9327ec28d7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cb485a-2f42-4009-9b9a-a4e5c082fef5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d60c70c8-7fac-4f84-a9f1-b760a37769eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26758fa3-3361-43c6-ad80-94706ac6e4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81ddca68-efca-45fb-8a5d-c7dc237e801e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2800e3b9-ae21-4e15-9d4c-c309f4b04733",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "773e60dc-a1c8-4f95-98e9-9b8efcdc5891"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d553d25-c3cb-4de6-94a7-778c317b3e48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68d19566-f718-4826-9448-b8112efb6172"
                    }
                  }
                ]
              },
              {
                "id": "7c68252d-49b0-495e-8bba-bef64bba2157",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "60633974-482b-41d9-a179-b7303e724c0b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cdfa61-0698-4e5e-b502-b0d7f73b50d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1534d926-3cbd-4171-97cc-5c760200bf39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe6be4d-e5b8-4ef2-9fb2-338546e8bd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a8f126-4d43-46fe-a274-b87fb1b02042"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e4da6e6b-557b-48a1-9c03-f69e4f75006a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a179a5c3-d2bf-4ad7-9b26-7b79ad6d4c4e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cc5318c-92be-4a97-b07e-86ffc60351c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "10e7e859-66ea-45a1-8562-27f5bddece3e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69cfd626-387e-4529-a2b0-11166850f278",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df0aa6d1-72a9-49d3-8268-01624199d690"
                    }
                  }
                ]
              },
              {
                "id": "20ecd257-0fa7-4f33-8c1f-e46b4c31cf6b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd255c66-adfb-438d-8c9c-8cabee7bcb04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f56f289d-6162-4db2-a0cd-151b135fe3d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69494148-adef-4974-8827-fc1e806e675e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5181abbd-c447-41af-8789-79feb7b1e9a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "107d4eb5-a06e-4b5c-abe9-6098b685fded",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "82ef8907-3df3-4f64-8a0f-3a2a366004fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb7a985a-5b80-4aae-84f5-ee620d90ccfa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f54ba2b-f3ef-443e-ae9a-9e888694951e"
            }
          }
        ]
      },
      {
        "id": "50749b6c-c69a-4082-8819-c333da06c31e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e60db5f3-469e-4c54-a405-0e3a82653f4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9138aa8f-1777-4658-a6df-c9a743589dc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c54213d1-e1d4-4ac5-a634-c62f7e449ce8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe3e17e-5a35-4124-82ba-9b01d3fb098b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0cb40048-fbad-4dca-92b7-9ec60c3e8868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ef8ed0-da42-453d-8a0f-4f2bbc44d440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "609fecb3-10b2-4cef-8a99-bc9dd558e801"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f90b353-2949-46e6-9e4f-be7eed8b6d3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cce4aee8-f104-4231-a314-be60b76683da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbb2e216-30e1-421b-bbb1-f2fde96383a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e317e55-d80e-4acd-aa74-aa139452de10"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "536a40db-2cba-410a-8ecf-109148cfa09b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "39423456-6f18-48f7-99b5-bf69e5f7903d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb3c98dd-811b-4a07-bbae-8ec85f4148f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28fe9c48-2c03-4834-84af-1ebfba101395"
            }
          }
        ]
      },
      {
        "id": "1272f338-16e5-41f8-a3ef-2e2414f42185",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "452301fd-af30-4220-b8a3-0a86c62df86b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53d8fa52-70a6-46ef-b482-86c799e9737c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db204724-ca5c-4cf6-8d7d-f1ed2bbf3752",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb6b380-6073-4647-b9b3-2c8c1a643794",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1bf1d77-1613-424c-8954-b61eabd9d01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e093a98c-41ad-437d-b9d7-dbdab43a2483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2725a49c-eb3b-43db-89b3-7cbce53d4db6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16433755-c962-45c5-81a0-a31d3c1741a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2cf81ba-9aa2-482e-b88f-b0001c68d237"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19001c19-00a0-4e5b-98d0-e09d8a036cf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7840800-e210-4597-9169-3849baf3bb59"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f5ffde2-0734-4bba-bce9-2f1624da6a0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c89d43fe-aa3d-46a1-b0bf-b97fad831ef7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8c43d34-39fe-4f62-94a9-e9d7236f604c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b1b9d4d-32e4-42e9-b3cd-1a8088891f78"
            }
          }
        ]
      },
      {
        "id": "4d93d51a-a513-4acd-94d5-b0926927a966",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "87726ac3-d153-415e-af6a-8016fcc24096",
            "name": "Negative Testing",
            "item": [
              {
                "id": "366045c4-7098-4ebd-aadf-15851383d756",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84241c90-4c09-491a-99f0-308d4263145e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c951f7f4-ec7e-499d-b00c-0232f2308f9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a3cf8d4-be08-4ef3-969f-d58f25d80195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "584724ed-9d70-4c65-8f7e-5c89651ea67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "054be76a-1b36-42d9-9cd0-a6a3c6fdd88e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9768b21d-8ae2-4ddf-8b24-b3609354cdec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d53d13b-12d6-424a-80a8-7b16065ab6b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "772a874c-b1ad-4089-a8e5-5669cfe5550b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bef0847-959d-43d7-a0a1-b6f1f006a9bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a6df42b-1254-479f-a93e-683d9e4596ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7076906b-cdac-44cf-b227-e9affc9c32ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03375f15-76ec-4af3-a107-efc2bdae2385",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd2acdac-5aca-403a-884d-cc4c3bef611f"
            }
          }
        ]
      },
      {
        "id": "988c7a70-d395-45c9-bf8e-1157f2f90926",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e16e175-ad1a-4aa1-be61-72ced2783175",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77978c16-a8b5-4f74-905f-0b4963b5afb4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4b99a22e-e21e-41d3-843d-327ae45e14e2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cd0c7a2-f08f-4d2f-b766-60f5f53274cd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b902a008-c072-45b3-b676-eb36b3e76fa5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 31.414035087719306,
      "responseMin": 6,
      "responseMax": 270,
      "responseSd": 26.215111743383197,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704414963449,
      "completed": 1704414981705
    },
    "executions": [
      {
        "id": "2abd17f5-fa75-49c5-b6f5-fd44d4d2fc43",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4bd127c8-07c2-4846-8ea4-4a91ea6e7853",
          "httpRequestId": "743efdc9-c5e3-4aa5-a98a-753bd786575d"
        },
        "item": {
          "id": "2abd17f5-fa75-49c5-b6f5-fd44d4d2fc43",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "326e8286-6c0e-4a6f-b6fe-7ef8c2e3afaf",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "b4fdbc4d-6e99-4ff2-a3d0-ec1527520f1a",
        "cursor": {
          "ref": "5794ceb6-49e2-4f0d-b4f4-bea2c6b0dcee",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d8c48d54-35eb-459c-8aa9-2e88b47736b4"
        },
        "item": {
          "id": "b4fdbc4d-6e99-4ff2-a3d0-ec1527520f1a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "65ae6ffa-9a29-48a4-8f34-edd84e874f7d",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "3437b429-2cd1-47bd-ae02-c7769747ffdb",
        "cursor": {
          "ref": "51459670-f44e-48be-b089-7e2188326659",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f5098a6e-5389-4fed-9b45-fd702e4700e0"
        },
        "item": {
          "id": "3437b429-2cd1-47bd-ae02-c7769747ffdb",
          "name": "did_json"
        },
        "response": {
          "id": "770c985d-eaa5-47a3-b35f-ab34d8f4b731",
          "status": "OK",
          "code": 200,
          "responseTime": 269,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb32d966-2003-440d-86f7-a9d6dd262273",
        "cursor": {
          "ref": "6f71671d-cf44-4203-9e95-ffe3299d2e14",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9ed165dd-b158-473a-aaa9-6ebc2c62d616"
        },
        "item": {
          "id": "eb32d966-2003-440d-86f7-a9d6dd262273",
          "name": "did:invalid"
        },
        "response": {
          "id": "19b368d1-9df7-46fa-aa00-c062bb016cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb32d966-2003-440d-86f7-a9d6dd262273",
        "cursor": {
          "ref": "6f71671d-cf44-4203-9e95-ffe3299d2e14",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9ed165dd-b158-473a-aaa9-6ebc2c62d616"
        },
        "item": {
          "id": "eb32d966-2003-440d-86f7-a9d6dd262273",
          "name": "did:invalid"
        },
        "response": {
          "id": "19b368d1-9df7-46fa-aa00-c062bb016cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56dde79-3e8d-4034-92e6-72e488e78b7d",
        "cursor": {
          "ref": "24074603-ff8e-462f-a60c-fbac408f0e47",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fbb833ab-5026-4f79-b569-ceadd7dc1dae"
        },
        "item": {
          "id": "d56dde79-3e8d-4034-92e6-72e488e78b7d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c11e8a7d-fe98-4c88-a420-d9be4e9dec45",
          "status": "Not Found",
          "code": 404,
          "responseTime": 80,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3aa858-f11d-419d-be57-62c4e3e82124",
        "cursor": {
          "ref": "8cb37170-98ab-4769-ac8a-fe082a16687a",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "13b7b284-7fe8-4e3e-89bb-e834f54fe39c"
        },
        "item": {
          "id": "bf3aa858-f11d-419d-be57-62c4e3e82124",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9b0cf741-b736-41b3-83ca-2d266308b68a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814d0f97-b4d4-4cc2-bf2d-bff8aa02b23e",
        "cursor": {
          "ref": "ad66ef28-8233-4d50-aedd-7957defa0b33",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8a4c3ecb-8a22-40a3-844b-89d217a8872f"
        },
        "item": {
          "id": "814d0f97-b4d4-4cc2-bf2d-bff8aa02b23e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dde384b2-3544-4ffa-b6e1-2e04b4620ead",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16bce1b-74c5-428e-b76d-fa2a9f3f3465",
        "cursor": {
          "ref": "67ce6a0c-0c03-440d-b4ec-79270e679581",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f9bb7d24-2a6b-45d8-a03d-40b62fdcdba5"
        },
        "item": {
          "id": "b16bce1b-74c5-428e-b76d-fa2a9f3f3465",
          "name": "identifiers"
        },
        "response": {
          "id": "2bd006bf-d595-4bae-8df5-5e02557d3462",
          "status": "OK",
          "code": 200,
          "responseTime": 188,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8491b737-b27f-4113-8d9f-75fc5f92454c",
        "cursor": {
          "ref": "11cc2025-a093-44d3-a948-d8ac7e0a0095",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5d7b1938-8441-4b00-9e35-030345cfaef5"
        },
        "item": {
          "id": "8491b737-b27f-4113-8d9f-75fc5f92454c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d069e9ec-08d3-4a6e-89c8-3fd023d1a80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7055537-df68-4f87-8808-f84578ed9de0",
        "cursor": {
          "ref": "d0b9d202-a046-4189-942c-d4fb467c4717",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7c1cf4dc-6889-4887-8bbc-be9d4bd5bd12"
        },
        "item": {
          "id": "a7055537-df68-4f87-8808-f84578ed9de0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6747bf48-f42e-4ce1-a8e3-11d53964600b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca7939b-edd2-43e5-9338-75d246b2c91c",
        "cursor": {
          "ref": "e13ad37b-c456-4ff0-aaf3-29f5ddc94a87",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "41c19275-4dc9-4c72-8cea-669ae781448b"
        },
        "item": {
          "id": "1ca7939b-edd2-43e5-9338-75d246b2c91c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "afdcbf2b-f459-493c-b02b-e8ddcc60b6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df0b025-a3ec-486e-b887-1fb76326c30f",
        "cursor": {
          "ref": "c7b4de85-9d19-4e75-819f-e70e68358e1d",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d4f2afd9-c75f-4014-8ec7-eee4b43a16e0"
        },
        "item": {
          "id": "9df0b025-a3ec-486e-b887-1fb76326c30f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "300a8d13-6017-4bee-90d2-5b33dfb04b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687782e1-027e-4a11-aa2a-21c53bab8773",
        "cursor": {
          "ref": "c03275e8-0f6f-41c7-9f3d-78e3adf22372",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4096cf86-ad71-4ead-ad80-59935c698c99"
        },
        "item": {
          "id": "687782e1-027e-4a11-aa2a-21c53bab8773",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ef827eec-ff1e-4f99-8450-78a1464a2baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d8e0fb-327b-4586-976c-b6c62f9fbc24",
        "cursor": {
          "ref": "e6a8d7cd-1f08-469c-a557-86751834c0f5",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "19b034a7-36cb-4ec2-9112-7555a1a99dde"
        },
        "item": {
          "id": "a3d8e0fb-327b-4586-976c-b6c62f9fbc24",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1ed0f1c9-9d2a-4f37-9e16-77f26ae4f7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ff8b00-b24a-4a93-b717-ddeeabcc6618",
        "cursor": {
          "ref": "0a043cb5-ac5c-4c3a-b8a3-7a2d26c78bdd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d0ff6dd6-0fa9-47c2-ba11-9d59ddd33fc8"
        },
        "item": {
          "id": "55ff8b00-b24a-4a93-b717-ddeeabcc6618",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "11fe5eef-7dce-42ef-87e5-4a4aeecd583a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f8d8fd-4181-4a80-8c1b-b323a01eb3ab",
        "cursor": {
          "ref": "5fcd7e24-c3a2-4bf0-9785-41e478f07100",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "080a6a26-1147-4406-af2d-51009c7a7da3"
        },
        "item": {
          "id": "28f8d8fd-4181-4a80-8c1b-b323a01eb3ab",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8ff482d7-0b0d-479d-b9e0-15310fb47847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e47b230-3b1a-4912-8593-70090b1ab8a8",
        "cursor": {
          "ref": "33fb8afd-6b95-45d1-9a78-55e9993fd117",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8639c842-d6fa-4477-b067-65709e286da6"
        },
        "item": {
          "id": "0e47b230-3b1a-4912-8593-70090b1ab8a8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "19bff807-458c-457c-8583-e988fa4b2798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1f436b-d6c5-47b8-9618-36c57a5c4a1f",
        "cursor": {
          "ref": "2f35bd42-b4c4-416e-91c6-b6268ea9fa9c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6f149df3-9ece-4175-b14f-910d0917bcb7"
        },
        "item": {
          "id": "0c1f436b-d6c5-47b8-9618-36c57a5c4a1f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cd1167f9-95ba-445c-b680-8a45afef3723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964a36bf-477d-4e8d-af2d-2cf794f44fa2",
        "cursor": {
          "ref": "be899b92-7165-4d93-9c33-ee6df8125c7c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8c088a96-0569-4f1d-b8ae-55fa4595a398"
        },
        "item": {
          "id": "964a36bf-477d-4e8d-af2d-2cf794f44fa2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "16b06423-e92b-4dd1-bf46-f266117aa0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ce458e-5ce9-4b69-a256-38163a9d87b8",
        "cursor": {
          "ref": "a9744525-0d30-4340-90dc-66020fa215d4",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ea4d45a2-d4e9-48a2-ade4-3c0f6fc3ee0c"
        },
        "item": {
          "id": "e7ce458e-5ce9-4b69-a256-38163a9d87b8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "33cea777-0b44-4b29-a9e2-5c21b9446c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aee2967-81f9-4c72-a71d-9315802b43a7",
        "cursor": {
          "ref": "e576052e-a195-4c18-850a-40f08feeef17",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b79c0e5b-8c18-4f49-afa0-580f7aa49571"
        },
        "item": {
          "id": "8aee2967-81f9-4c72-a71d-9315802b43a7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "656dae35-79fa-43ff-9fef-312ed0cd3836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1054389-b216-462d-a2a9-75cc5f5cfef9",
        "cursor": {
          "ref": "cc2baf9c-6a05-4e34-a8bf-16f97a8fcf36",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f05a5fcc-1735-42c4-869e-f0353c0966dc"
        },
        "item": {
          "id": "c1054389-b216-462d-a2a9-75cc5f5cfef9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cec95401-7163-4aff-9049-896acb3a0276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffd2011-b8fc-45c8-8cb4-3148b275a1e1",
        "cursor": {
          "ref": "de8ee0fc-636c-4286-b074-3fcebe8d8a4c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f27332c4-0601-4686-b2c4-ba055f9214d4"
        },
        "item": {
          "id": "6ffd2011-b8fc-45c8-8cb4-3148b275a1e1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "acc5f6f6-c639-4e1e-8f92-18de1def91c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c281b3-979d-4718-b019-be812f24d336",
        "cursor": {
          "ref": "b7a6112e-7dc7-4675-ba53-848d37a66126",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1cf3d497-80ec-46e9-8ebc-16ae3dd5988f"
        },
        "item": {
          "id": "66c281b3-979d-4718-b019-be812f24d336",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "73c89dca-e438-4289-a7c9-d0cf881b2d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2e4bed-65e7-446d-8356-16014c4c788a",
        "cursor": {
          "ref": "56e5d652-cb46-49a9-8a41-a53e77c9ffae",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "52245146-c634-415b-83e9-6e9c63c8f3cf"
        },
        "item": {
          "id": "df2e4bed-65e7-446d-8356-16014c4c788a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "508835a0-c37f-444e-a7fe-0a50618ed172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecbf616-8e99-41c8-bb50-9ff7a123b667",
        "cursor": {
          "ref": "f5b43f6a-078e-47ca-a5f8-f2a510df8858",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a4e26f08-ee89-4190-a9c6-df94f5f1b54b"
        },
        "item": {
          "id": "5ecbf616-8e99-41c8-bb50-9ff7a123b667",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ad48756a-847b-4b35-8fa4-7e21ee5bd31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de6a9ce-a64e-43f4-bd5e-8a88746a667c",
        "cursor": {
          "ref": "60aff1fe-341b-4787-93bc-f43cc263e57b",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "97bac5a8-6858-4911-8b1d-de543b77200e"
        },
        "item": {
          "id": "4de6a9ce-a64e-43f4-bd5e-8a88746a667c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6c0b38d3-f85b-473a-bbfb-a378b2c321ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd58422-0a8f-419c-a5c0-27839d5e5dd2",
        "cursor": {
          "ref": "66003df4-0074-4960-a72b-90f530d97c0c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6ef0f93c-8a80-42cb-b30c-28d9d4d8163b"
        },
        "item": {
          "id": "bdd58422-0a8f-419c-a5c0-27839d5e5dd2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bd29e35c-d9cf-4b83-a132-796f61364f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d404788c-0c65-49eb-8511-8c65178b9156",
        "cursor": {
          "ref": "4c4ebd54-d72b-4af6-a6cb-ecf5e0ee082f",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "692c30cb-9c0c-465f-acea-a9e50e79f344"
        },
        "item": {
          "id": "d404788c-0c65-49eb-8511-8c65178b9156",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bc1fb85a-6db9-417e-8f83-fac75fd084c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0ea1bc-f694-4177-8913-3c5eacdd0561",
        "cursor": {
          "ref": "e1c77664-2731-46e4-bbfe-129658396113",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ded84da3-7a64-415a-bd55-0e9cfed2f685"
        },
        "item": {
          "id": "db0ea1bc-f694-4177-8913-3c5eacdd0561",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b7efeae5-c261-4219-a200-62644d161dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c679ab-6972-411f-9e0f-f2ab7d88e302",
        "cursor": {
          "ref": "bd243386-301c-4454-b854-0c8941199f2b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "012aa335-b723-4859-9ceb-b4c2eb48a7a6"
        },
        "item": {
          "id": "52c679ab-6972-411f-9e0f-f2ab7d88e302",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "223ff6ba-5d5f-43dc-aa14-8ed6f526ad0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96685afe-830d-4661-9438-bda4d6725da8",
        "cursor": {
          "ref": "939463c7-12a3-4455-bdbc-aeec33bda831",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b51b9c22-6754-4ee7-a7ea-69f54537fcf6"
        },
        "item": {
          "id": "96685afe-830d-4661-9438-bda4d6725da8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "249d6a6f-a60e-4338-a953-2c43a18feaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4840e35-6323-411b-9de8-651f2eba0e7a",
        "cursor": {
          "ref": "6ccb5dcd-661a-4240-a312-1c48e0dc1122",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "418bcb40-1071-48f6-a3d6-9f683c40b9e3"
        },
        "item": {
          "id": "e4840e35-6323-411b-9de8-651f2eba0e7a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7a3cdbfa-2536-4ec7-a4dc-f0f8b79a7963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab559abc-6a79-451a-998a-5b11b551fa89",
        "cursor": {
          "ref": "dcbeed9b-a2b1-43ec-9324-869ec2e3dd40",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e8224c2d-b8ac-47d9-86d6-45386f412c89"
        },
        "item": {
          "id": "ab559abc-6a79-451a-998a-5b11b551fa89",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8fddd0f7-c489-4472-9581-0d52b7626e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97f4c6f-5bfc-49e3-bb87-dbea707e82e3",
        "cursor": {
          "ref": "fff52246-5c05-4636-887d-bec7cadf2f0c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "370b5f30-d5ca-4167-83e1-7da7d1cc0df1"
        },
        "item": {
          "id": "d97f4c6f-5bfc-49e3-bb87-dbea707e82e3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bd503f7a-9565-4773-b295-bf7de8d64212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa18bcb-6c4e-49cd-baba-1d704932d6b6",
        "cursor": {
          "ref": "61b4912b-bb8b-4128-814c-6e5812b86d2f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fb8c5fff-44b1-4f69-80f1-51968e9b6105"
        },
        "item": {
          "id": "8fa18bcb-6c4e-49cd-baba-1d704932d6b6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3e12714e-ad91-432d-884d-a24da7097cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a0f7aa-e0e6-4e87-b586-eae3e2810eeb",
        "cursor": {
          "ref": "a57710c7-ed2c-4800-a837-0a10944dc554",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f0ed8a22-f1bd-49de-8293-5e08ad5e25e6"
        },
        "item": {
          "id": "00a0f7aa-e0e6-4e87-b586-eae3e2810eeb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "597e2c43-2dd3-4550-8e3f-42943433d66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a7e28a-295d-41cd-bd7f-87bcbdc7565b",
        "cursor": {
          "ref": "5860175b-5718-4744-82a8-16799c198151",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "30c05f93-602f-43a2-8277-277fe3cad65c"
        },
        "item": {
          "id": "08a7e28a-295d-41cd-bd7f-87bcbdc7565b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5cfb6deb-44c1-46ce-a898-a9da93089687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb0bc2b-548c-4363-a7c3-45dfaca51fc1",
        "cursor": {
          "ref": "47b2f561-6d8c-43a9-9aad-033c467760d3",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bd1bcc4c-921a-443f-9155-8cd46d28b161"
        },
        "item": {
          "id": "4eb0bc2b-548c-4363-a7c3-45dfaca51fc1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5469f338-9aa0-4c6f-af84-7209b10efe7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0aac02-443f-45ae-a3f5-6e5eddad9b6b",
        "cursor": {
          "ref": "e21af5a5-2089-40d2-9c7c-9717b765d24e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4c67d798-913d-4b1c-b5a9-3f74ec971295"
        },
        "item": {
          "id": "6d0aac02-443f-45ae-a3f5-6e5eddad9b6b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5903c566-533b-4a87-b847-fd83821218ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c6dee6-beb9-4e73-bb1e-94be65c14fda",
        "cursor": {
          "ref": "c505d871-9b27-49a7-9602-d4326b610616",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a4426c5f-5822-466e-9dd9-36156dba58a9"
        },
        "item": {
          "id": "03c6dee6-beb9-4e73-bb1e-94be65c14fda",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b4814a91-27a7-49c2-8ae6-06ac351f1788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59582a5e-c4d8-422a-b042-413b6da7500e",
        "cursor": {
          "ref": "4c848dd2-0010-416a-ae7d-1432dbcfdd14",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2b5fff11-7cf7-4566-9949-2e74358c3905"
        },
        "item": {
          "id": "59582a5e-c4d8-422a-b042-413b6da7500e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "151319cf-0451-4af8-bb5f-11ff4ba5ac43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dca2a76-aa0d-4d21-a010-59679aff24d7",
        "cursor": {
          "ref": "21fe581e-65b2-4b01-9861-16b40a923800",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2fbe3775-e4b2-4bb3-94cf-31001ac6a1ca"
        },
        "item": {
          "id": "9dca2a76-aa0d-4d21-a010-59679aff24d7",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fc4951a0-c93d-40d9-8818-e1126b7b3f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886c2440-a322-4c43-8adf-313572b5a40a",
        "cursor": {
          "ref": "07b7a66f-e40a-4ffe-8931-a666ae2a7e2b",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e40f48d8-35b3-4bcb-bbe4-0020ae041fe6"
        },
        "item": {
          "id": "886c2440-a322-4c43-8adf-313572b5a40a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c98492a7-197f-4bec-af40-e90d6ef48da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898b4956-4698-41d6-8051-aa72ddfd5b33",
        "cursor": {
          "ref": "fd4f7e8b-c00a-4114-bf4a-763d2c6b9dfc",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "75d1940c-f21b-4fd4-b063-465502494f00"
        },
        "item": {
          "id": "898b4956-4698-41d6-8051-aa72ddfd5b33",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4b05f339-4f91-4bf4-8768-f7a71180a74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7520708b-3e4b-423d-8267-6cc570254afc",
        "cursor": {
          "ref": "e1e0c327-978e-49dc-8571-c95f51b3810e",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8b17d45a-f5b6-4996-8ba9-6510b889a177"
        },
        "item": {
          "id": "7520708b-3e4b-423d-8267-6cc570254afc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "23817afb-584d-499d-a6a1-3d34fea2f35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0a63f0-e66e-4ac7-bfb1-e199cf849588",
        "cursor": {
          "ref": "5971da70-1f0a-4012-b2f8-9c1269a72055",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f7ee3a61-7072-450e-9535-bece2d80698b"
        },
        "item": {
          "id": "9a0a63f0-e66e-4ac7-bfb1-e199cf849588",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b8470d11-39f6-45da-a74f-b146bc65c23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33aa01f-de92-4bf2-9f4c-1119fe213e02",
        "cursor": {
          "ref": "1fb57a11-8f34-49c0-83d8-98be3f53e51e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "921f56a0-6188-4290-b6a7-5d58765d0095"
        },
        "item": {
          "id": "b33aa01f-de92-4bf2-9f4c-1119fe213e02",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6ab7e7ac-bb2d-4d56-b770-913ed967312f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cb3029-ef36-49f6-902e-92f5b7e6d1dc",
        "cursor": {
          "ref": "1a022a88-c275-4be2-8011-bd089763b9b8",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "68e1036f-d886-4a51-9123-73518ed96225"
        },
        "item": {
          "id": "86cb3029-ef36-49f6-902e-92f5b7e6d1dc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "06e56473-b7ec-4218-bbe2-6d0e53aab1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6614ae97-c917-4f04-897f-ceaabef8379e",
        "cursor": {
          "ref": "34a56a8b-159d-486a-a186-a8731f6a703d",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6ecd6a99-f5b7-4fc8-942d-aaa6127285d1"
        },
        "item": {
          "id": "6614ae97-c917-4f04-897f-ceaabef8379e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "50cc3749-b9fd-4850-a443-4c09decbf90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97272a4-a3e9-4c3c-9375-524343cfe719",
        "cursor": {
          "ref": "db3fce9e-b955-4024-8d35-59be20f01ab5",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "095d6f36-fbbe-4d45-8ccb-19e2ca0cb61f"
        },
        "item": {
          "id": "e97272a4-a3e9-4c3c-9375-524343cfe719",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "22ead784-248c-4289-ac9f-9a8d015adc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c0cc17-bf0e-4c61-985e-2bc7f8f8fd85",
        "cursor": {
          "ref": "bb88168d-70ef-46b0-92e6-18c8c58b8adf",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "82673deb-6cca-4450-bcda-9c17fbaea06d"
        },
        "item": {
          "id": "02c0cc17-bf0e-4c61-985e-2bc7f8f8fd85",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7d2be48b-f158-44ff-8cf8-27aa8f70210b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae50d278-a19e-4181-b86e-6a10153267aa",
        "cursor": {
          "ref": "d74724e5-05b0-4a86-963e-4e83b74c14b3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "955c959a-0c66-48f4-a814-3ec54fb10778"
        },
        "item": {
          "id": "ae50d278-a19e-4181-b86e-6a10153267aa",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9a6c479b-8563-4447-9d1f-937473e32d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2d485f-dd88-490d-97bd-e72a3a2cb549",
        "cursor": {
          "ref": "8c41ccbc-256f-41c4-92c5-275c0c014db6",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ea9cc9b5-a965-4379-a064-fd188ae81e86"
        },
        "item": {
          "id": "ff2d485f-dd88-490d-97bd-e72a3a2cb549",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8855c2b4-2718-4c51-a63d-2881c3e436c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd866f3-5b06-4995-8cbd-3f64632a452e",
        "cursor": {
          "ref": "24f70e04-499b-41e0-83e0-056986c39672",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "96a97ff7-13ce-4c65-9751-cdfe71d678de"
        },
        "item": {
          "id": "3bd866f3-5b06-4995-8cbd-3f64632a452e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f5e28efd-fbc5-4e97-8065-a4216eb97af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46d9f77-a974-4c62-aa3d-1d740506fb88",
        "cursor": {
          "ref": "47868ef1-2e02-4741-99fc-01b2bb6566d4",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3a87b307-a678-4d14-984a-8411d0a9f563"
        },
        "item": {
          "id": "c46d9f77-a974-4c62-aa3d-1d740506fb88",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "73de9601-afb9-41cc-b28b-2b24a014a717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15a9955-b66f-4ce4-9d39-2ac8962cf643",
        "cursor": {
          "ref": "4602e26c-99ff-41df-9179-ee9e1f04e3b2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9300ef1f-f467-4b3f-a995-42c480f1d00f"
        },
        "item": {
          "id": "a15a9955-b66f-4ce4-9d39-2ac8962cf643",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "da4e7bc1-cbfc-4565-8e71-e66908ae9c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f25f7ce-cf85-4ebb-84fe-d5800b216574",
        "cursor": {
          "ref": "a54e7c19-adaf-421c-aa9a-baae3c8e93a7",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9dae1d75-36d4-47cd-8cac-13b27a7398f4"
        },
        "item": {
          "id": "6f25f7ce-cf85-4ebb-84fe-d5800b216574",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c4606779-da60-4f19-8d0e-9bfb8d1f5bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37de01f-3a5f-4621-a56a-facbbbdc1bcf",
        "cursor": {
          "ref": "94bfe050-ed1b-4821-9eff-a9c9c73f37c6",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "77ccfd10-2242-417c-b183-190a5e7daf09"
        },
        "item": {
          "id": "c37de01f-3a5f-4621-a56a-facbbbdc1bcf",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "10fff5de-ec8f-4076-9465-7a10b93f3178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4fe0c6-aeab-4882-935e-d21b32c5928a",
        "cursor": {
          "ref": "cdcd8e12-16c1-4489-a9c9-e48bff95cde9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "65b76088-8403-499c-b96f-466562404748"
        },
        "item": {
          "id": "4a4fe0c6-aeab-4882-935e-d21b32c5928a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2f4d0e92-2878-485f-baf3-36340351e02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e31507a-3451-42d7-82b1-9f7310b3c091",
        "cursor": {
          "ref": "551a8083-bad2-4d42-9a3c-2fb1692ec66b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e982c8ba-f16c-4d2e-a459-bcc39304ffa8"
        },
        "item": {
          "id": "4e31507a-3451-42d7-82b1-9f7310b3c091",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f938eb37-c388-4e36-8486-b0a2a0e2f9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b539eb5-b053-4a4c-afa7-f67b46b9b531",
        "cursor": {
          "ref": "ee7f3f41-26d7-4bff-84d2-cb2619d072dc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2adccb25-df4e-4ff5-8e8e-a202b70b8b06"
        },
        "item": {
          "id": "1b539eb5-b053-4a4c-afa7-f67b46b9b531",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5810b61b-636a-4c44-86e0-c286dcad5485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c468b264-0996-45cf-9ed9-f61a3688cd73",
        "cursor": {
          "ref": "d838a91f-3d97-4fc3-a03e-4a3009da827e",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6ade68f4-0d03-49e4-8356-03847569402e"
        },
        "item": {
          "id": "c468b264-0996-45cf-9ed9-f61a3688cd73",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "87779117-575e-4154-a8b4-d1c061f719a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35f8897-68b3-4413-b8cf-63364ac59085",
        "cursor": {
          "ref": "050480ed-33a8-4353-a9fa-3560c59bf1e7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b005dd58-11c4-4b63-84c0-f6c29e2dab65"
        },
        "item": {
          "id": "b35f8897-68b3-4413-b8cf-63364ac59085",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "50c55887-9deb-4a8a-8891-bd9e6e79b8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7026f926-6281-48da-8194-f417afe22d02",
        "cursor": {
          "ref": "415089ec-f799-4cff-9bca-2dd114c181d0",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "41ca8b79-32c0-4d4f-bc63-920e326cf399"
        },
        "item": {
          "id": "7026f926-6281-48da-8194-f417afe22d02",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9617a58b-8c6a-415e-b68b-b9a948102b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e856d4-1d06-4d85-855d-66de75f0b10c",
        "cursor": {
          "ref": "491c7a84-1e9f-47dd-b7f7-72426833719b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "85315721-856d-4da1-801a-a210830c24f6"
        },
        "item": {
          "id": "77e856d4-1d06-4d85-855d-66de75f0b10c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "995929b3-68a8-44fe-8caa-5ef73092a371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79a3341-3217-4d41-b809-9e62f521773d",
        "cursor": {
          "ref": "b7d9e3f5-ea1f-4e3c-8bf7-e0d2f9d016ac",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "010ed054-57d3-4c8d-8853-9be52d49f0d4"
        },
        "item": {
          "id": "d79a3341-3217-4d41-b809-9e62f521773d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "600b97a0-29ef-4d47-b51e-fb8345df27c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee9e5d8-510d-4905-98d7-0ed874bd9764",
        "cursor": {
          "ref": "e5e2a73d-a1c5-4c21-b716-19934cdbc7a5",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "612d6981-3cf5-42ab-8e96-3912febb5920"
        },
        "item": {
          "id": "4ee9e5d8-510d-4905-98d7-0ed874bd9764",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1fe90ead-b372-4a29-8566-3340a9c94877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5749a8b9-26e5-468f-bf24-1141875dddb4",
        "cursor": {
          "ref": "e1b81cd0-ae39-48ad-b9b6-62a63d4f5942",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6fc4b172-666e-4a45-92bb-1e081e1079d2"
        },
        "item": {
          "id": "5749a8b9-26e5-468f-bf24-1141875dddb4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "665718d8-de15-44be-aa2c-e420920d6066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0a4fa4-31a1-43c9-bf4b-57cb9565d248",
        "cursor": {
          "ref": "7d517aeb-d9b0-41c3-bae8-ffc821e9dfe1",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "631b6a91-f388-475f-ba28-4e46e1c4e684"
        },
        "item": {
          "id": "8f0a4fa4-31a1-43c9-bf4b-57cb9565d248",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e1b52740-ad11-44b9-b42a-469a028eb9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2631543-ab58-43df-97f2-c23d684237bb",
        "cursor": {
          "ref": "e269fb83-f4b6-438d-8c83-385d5ba75409",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dc7c4369-9be4-4ee7-bdab-def9a6f6d946"
        },
        "item": {
          "id": "f2631543-ab58-43df-97f2-c23d684237bb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cb204952-9ef6-400b-b028-301e1dbb156d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8570ea2-0414-43b9-a975-e03a62f2c332",
        "cursor": {
          "ref": "bc85a30f-8167-4224-9183-1731b6a2af16",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5bf896da-b29c-461d-84fc-b8a8227cb704"
        },
        "item": {
          "id": "a8570ea2-0414-43b9-a975-e03a62f2c332",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3449709c-9f5e-4515-9935-87b5cba9f4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b9e81b-26f2-473e-a2d9-da603084961a",
        "cursor": {
          "ref": "48638858-ec71-4ddc-967f-f8d0bce79493",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "be3aa991-9af5-4674-a0d6-3ee355a033f0"
        },
        "item": {
          "id": "44b9e81b-26f2-473e-a2d9-da603084961a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "71d9cb40-ba39-46af-999c-c9d693fb6cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101baa3d-5a80-43b1-ab46-3b16ba9a7780",
        "cursor": {
          "ref": "81094c7a-f152-4947-9fd0-1afb0270805b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "929713e7-aae3-40ca-b1e4-d9567f9323f0"
        },
        "item": {
          "id": "101baa3d-5a80-43b1-ab46-3b16ba9a7780",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "72486d58-7aac-471d-adb6-574e54669c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd760d61-512e-4444-946d-c87ac540532c",
        "cursor": {
          "ref": "1e351859-ae56-4a4f-b594-9b3e938b22ac",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "006eb9d5-d641-4ace-9603-eb13a76da10b"
        },
        "item": {
          "id": "dd760d61-512e-4444-946d-c87ac540532c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b4adc770-284c-42e5-8a60-ce0846c56618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc037482-c2f9-462d-bb59-a1ef3f228e71",
        "cursor": {
          "ref": "832155f3-5194-43b9-8c6b-9cdc1288454a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e085b737-1f5d-49fd-a028-e4c8c882e6b8"
        },
        "item": {
          "id": "dc037482-c2f9-462d-bb59-a1ef3f228e71",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0cd9c081-a194-4058-ac2a-93555667a5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027cd82b-3f9f-4325-81ce-89688b5f890c",
        "cursor": {
          "ref": "678a506e-7c5f-4d04-a016-945096dcd25a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d91fc0cb-d819-438d-ba24-d244c903407b"
        },
        "item": {
          "id": "027cd82b-3f9f-4325-81ce-89688b5f890c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dd50366c-1454-4c46-8a3b-b800bd4b1f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c4949d-faa7-4bba-96e3-c4b7c6687a3e",
        "cursor": {
          "ref": "d84af29d-60cf-484a-b0f9-f3ba7c112336",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "95d8330c-ec83-4b09-b3c6-70d3d6285108"
        },
        "item": {
          "id": "d0c4949d-faa7-4bba-96e3-c4b7c6687a3e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e8d6afa2-eeaf-4cbd-8517-f1b2639277ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc78694-b2d2-4879-b967-1ea90522137d",
        "cursor": {
          "ref": "4163f228-3501-4f99-b052-93566dbaaaae",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "741de908-69c8-4c62-8311-6aa6f5653a35"
        },
        "item": {
          "id": "cfc78694-b2d2-4879-b967-1ea90522137d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ccbfbe93-b361-4d95-ad71-3f428f0b2269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6186dc-d95e-49e7-9bfe-56cb4026b03d",
        "cursor": {
          "ref": "b5f0b741-fbc6-4ead-a950-a538532c6657",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "12f071eb-aece-4e9b-ab5a-3f096c249007"
        },
        "item": {
          "id": "2e6186dc-d95e-49e7-9bfe-56cb4026b03d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b471e531-856c-41f9-9568-cedfdf021bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cb6b19-900f-4961-adba-b22615182fd6",
        "cursor": {
          "ref": "8a994411-9c54-4a3c-af81-9c27c0bc3af9",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0b854520-546a-41e6-8762-1a7f16cf3155"
        },
        "item": {
          "id": "08cb6b19-900f-4961-adba-b22615182fd6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f323a875-c4d7-4391-913a-b7fdd52dbf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f802d796-aba9-4bbb-b6c8-d68efa6cfc88",
        "cursor": {
          "ref": "33cdd774-d622-40c9-a6c5-98c8ffa6b40e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7727ba21-40a4-4a4f-8a04-11385a0bc78b"
        },
        "item": {
          "id": "f802d796-aba9-4bbb-b6c8-d68efa6cfc88",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a531cc31-beb9-468e-bb67-6e0079d832cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e807dc3a-2233-4e8f-aea3-b4d1fdcd26ae",
        "cursor": {
          "ref": "27049a81-bb11-4c3f-a9bb-87a199689bbe",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "913f72c8-a88a-442d-90d4-3b35a4c027be"
        },
        "item": {
          "id": "e807dc3a-2233-4e8f-aea3-b4d1fdcd26ae",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "926e9da2-326b-45f2-a0dd-1891584dce2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eda4277-6aa5-4846-b47e-264db8b3c381",
        "cursor": {
          "ref": "c1b3d7df-4bda-45a1-a681-da04d47cb16e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e71de357-a506-4c37-a5f4-8162333027b8"
        },
        "item": {
          "id": "9eda4277-6aa5-4846-b47e-264db8b3c381",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2fb82b2c-6442-4d0c-b58d-8c9263b11c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a4b7fd-a9bb-4a70-abfe-4d0589ca9516",
        "cursor": {
          "ref": "90d8e84e-a295-4483-8c54-a44ddbc8b2a5",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fbeeaf54-1602-48fb-a81d-a9990f8940b1"
        },
        "item": {
          "id": "f1a4b7fd-a9bb-4a70-abfe-4d0589ca9516",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a3592e71-db5c-43eb-a04f-0d67d77776c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80498b04-be90-4597-b7b5-416c9d6f8dfb",
        "cursor": {
          "ref": "48a19785-186c-4a50-aea9-33abf5e0fa82",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "18e932fe-8099-48cf-9afe-b18b2417fac0"
        },
        "item": {
          "id": "80498b04-be90-4597-b7b5-416c9d6f8dfb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6b0c6d1c-c42c-4c9d-8bd4-6a4d799ddb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eacc35d-c3d4-4cce-a8e3-b88cb78c8733",
        "cursor": {
          "ref": "b5e6482f-b414-4e90-9227-5150ab9dd580",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "764101ec-2bd8-41c3-ac5d-064dd539f007"
        },
        "item": {
          "id": "0eacc35d-c3d4-4cce-a8e3-b88cb78c8733",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0d22c678-3821-4286-b5d0-63ba7efb6c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9658f5b4-c403-4f16-9eb0-063a19281763",
        "cursor": {
          "ref": "007abf5e-3595-4db9-b6da-ce937315210f",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3ec5f5c4-4212-44a1-843e-0d87ff895f9b"
        },
        "item": {
          "id": "9658f5b4-c403-4f16-9eb0-063a19281763",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4aff94c7-c5b4-49f3-8f14-d82785e075dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ccba5c-037c-42ec-8ddb-e898a2c31f31",
        "cursor": {
          "ref": "0069a6a1-d6b5-485c-b8ec-8b2e13ea3b98",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1c6ea829-d752-4251-9142-46cafb841c9b"
        },
        "item": {
          "id": "28ccba5c-037c-42ec-8ddb-e898a2c31f31",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2d20674a-b2b2-43d6-ad95-fa1bc8827a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9144949-1e59-4617-8992-38bc17df5b61",
        "cursor": {
          "ref": "e3c18478-5a50-43b8-a06d-36ca53facaad",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5d38e8c4-1e32-489e-a000-03ed93d473d2"
        },
        "item": {
          "id": "e9144949-1e59-4617-8992-38bc17df5b61",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0e6bfa9f-9f7c-4ce5-81c1-d946ef67da14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d7b093-cd16-4c1b-b418-d679f2811377",
        "cursor": {
          "ref": "948b40b6-b8c1-428d-8cdd-4d48a3406bfe",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "91c4f739-3555-41da-8624-ea52ffd8e1c9"
        },
        "item": {
          "id": "87d7b093-cd16-4c1b-b418-d679f2811377",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dfcd880e-e2a7-4bef-8f5e-e090fae06b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78718b06-29d7-48cf-87fc-b15f3f25b9f5",
        "cursor": {
          "ref": "f93ca46f-18cf-4dc9-b864-dbbfb46015c8",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d228c03d-0a68-4d1e-b95e-4de547efaef6"
        },
        "item": {
          "id": "78718b06-29d7-48cf-87fc-b15f3f25b9f5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bbb900cb-10bd-41c2-afd0-fbfbc62fbf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a18e4e-aadb-4569-98fc-d2daf8339c38",
        "cursor": {
          "ref": "18c4c4e0-4404-4da6-bd20-36d77a6df7cc",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1d3d874f-44d6-45fc-ad39-5bcc5549b244"
        },
        "item": {
          "id": "93a18e4e-aadb-4569-98fc-d2daf8339c38",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "68c3f5f9-b98c-455a-989e-c99c62f7af87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a761eb86-69c2-41be-9a01-dae60f221fd8",
        "cursor": {
          "ref": "1985da02-8949-4e3b-a554-20006dbf281b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f1bf5a0a-f78c-4652-a3eb-088ff9c59827"
        },
        "item": {
          "id": "a761eb86-69c2-41be-9a01-dae60f221fd8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "61572c5f-c78b-4b2a-b38c-b3c350b084bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07534e13-202c-456c-9483-a9fbdfe24360",
        "cursor": {
          "ref": "c0a62027-9805-48d6-86a8-d308068a31c3",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e8c6b5ce-e10a-417c-9965-9f276ef66dd0"
        },
        "item": {
          "id": "07534e13-202c-456c-9483-a9fbdfe24360",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "267a1599-e73d-40ba-8708-eb75b86717d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0660610-3e92-47b2-a92e-3fe17a516c0c",
        "cursor": {
          "ref": "f9592a29-6118-406a-9fc1-364bb040b921",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5762f6c8-7ffd-48ae-a745-7bb2cc8112b8"
        },
        "item": {
          "id": "e0660610-3e92-47b2-a92e-3fe17a516c0c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e8ec51b8-fb5e-433c-ac6f-f227c48a01c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e83096-c444-4e8f-b733-69807c0812b6",
        "cursor": {
          "ref": "f9d479d5-3bec-428b-93ba-a1da732c3db2",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1973e311-4cd9-4aad-a673-c027a6809f59"
        },
        "item": {
          "id": "86e83096-c444-4e8f-b733-69807c0812b6",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b41e6cce-542d-4305-b102-bb19f8162fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c143c467-f59d-47c2-bdac-5d527b17f3a1",
        "cursor": {
          "ref": "cc5888aa-a12a-47ae-90d4-3b0a9050cd93",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "72d83d8f-afd1-44fa-9928-3bc68ea0bf02"
        },
        "item": {
          "id": "c143c467-f59d-47c2-bdac-5d527b17f3a1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "945ae4bb-d215-4c92-94b1-9ac863ac3d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c9008f-1e00-4af1-bd91-1994f0702cb5",
        "cursor": {
          "ref": "42df467d-5dbb-42f8-8298-b8d1a869e2b8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5d89b359-f86c-4370-9893-b3d23e1b10de"
        },
        "item": {
          "id": "58c9008f-1e00-4af1-bd91-1994f0702cb5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6417990e-72f5-4d9c-9c9b-f16923e1c8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ccd44c-8c9d-45d1-b8b4-00189a2cc7f5",
        "cursor": {
          "ref": "9c07a4af-3753-48f3-9615-fd4d4d7b0f89",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5cec3358-bf99-4ce8-a702-2f8d74b3f7f8"
        },
        "item": {
          "id": "72ccd44c-8c9d-45d1-b8b4-00189a2cc7f5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "838933ac-6acc-40c7-8ecc-7b6568fe2259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b7373e-e696-4d82-b72e-b24aa0e1fd37",
        "cursor": {
          "ref": "3ac6cd1b-7d62-4c0a-ab9b-a5fa507b6644",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a58ea97c-0db5-48c1-83fc-a949540ebd4a"
        },
        "item": {
          "id": "90b7373e-e696-4d82-b72e-b24aa0e1fd37",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9bb31ade-4ca0-49fa-920b-cdb398152511",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041ff46e-50a4-4a77-a4c4-ed2b9c4a0901",
        "cursor": {
          "ref": "aac51200-8019-477f-a085-1bdc79310f7b",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "469be41b-c7d7-4dd3-aa6a-b14461735faf"
        },
        "item": {
          "id": "041ff46e-50a4-4a77-a4c4-ed2b9c4a0901",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2ddadd26-eb2e-4aaf-b7b8-2b536ab478f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "dbd25b06-13c0-464a-a4f5-ee76e11c439b",
        "cursor": {
          "ref": "ddaff028-1c33-4022-a382-e142ff9b8586",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "78515693-d8c2-4dfb-884e-9c8a9da4e136"
        },
        "item": {
          "id": "dbd25b06-13c0-464a-a4f5-ee76e11c439b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5acfbce9-6c58-47d4-8901-e0be5d87a59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e4a537b1-3b59-404b-92cc-11eed5ba4cd5",
        "cursor": {
          "ref": "544a54a9-5b3f-4d3a-926b-3cb362f3b333",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4bf571ea-8896-49f2-a833-2825ad79786d"
        },
        "item": {
          "id": "e4a537b1-3b59-404b-92cc-11eed5ba4cd5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2c94450b-f6c1-4de6-a579-8857ebfd9e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "11d31357-ec74-4729-9cda-05d2a358dd3a",
        "cursor": {
          "ref": "9abea3fb-fcdb-42ad-8697-8d5ceb5ea461",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5ff60e99-133d-44f8-a4d9-ab8d18563c71"
        },
        "item": {
          "id": "11d31357-ec74-4729-9cda-05d2a358dd3a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "740af517-8cc1-4737-80cf-21c1c95fb63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a816495e-2571-405f-a544-0e39c9d521e7",
        "cursor": {
          "ref": "a68bccb5-85e4-4736-9d9b-1b4ffde67f8e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a8a42af9-7481-4581-85e6-26a11d6dff3a"
        },
        "item": {
          "id": "a816495e-2571-405f-a544-0e39c9d521e7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c4f74f8b-4f02-4743-a399-eaef5876a478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "db01347d-d54c-4892-9edd-f7859caca77b",
        "cursor": {
          "ref": "7fbefa71-889d-4d21-83c9-b15b00624b70",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "68dd52db-e754-4b29-bfd6-28b5285085c2"
        },
        "item": {
          "id": "db01347d-d54c-4892-9edd-f7859caca77b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6ea06dc0-ae79-46ed-867e-db72a60e2429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "a863c68f-bb0b-41ec-b2a7-f4cefb8d4317",
        "cursor": {
          "ref": "ffa10f67-303c-418e-afc2-a76956d08d06",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "539236c3-086e-4c50-88f0-b4829b3f338a"
        },
        "item": {
          "id": "a863c68f-bb0b-41ec-b2a7-f4cefb8d4317",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fbbf3900-e21d-48fe-a473-6cc369405272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f7957888-f77c-4f4b-9b30-1b7dd94e5c5d",
        "cursor": {
          "ref": "9ec78ef2-4220-4c2a-81df-53f4b55dabbd",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bd3aa6e5-aee0-4eb6-8acd-958a668602bc"
        },
        "item": {
          "id": "f7957888-f77c-4f4b-9b30-1b7dd94e5c5d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9b333df6-cf2b-42b8-a11b-7b0f89e0e598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d427d8-7588-4fdb-8d73-0a235cc611f4",
        "cursor": {
          "ref": "dc471ee0-51b6-49b3-ae11-fc6a77401843",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "324f7f85-6032-43aa-af63-7fe9bba7e7f7"
        },
        "item": {
          "id": "e7d427d8-7588-4fdb-8d73-0a235cc611f4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eb2de66b-0723-45ae-985a-bfd12f3336a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8708f5f4-39da-4f83-acc1-0f6fb741d2f7",
        "cursor": {
          "ref": "af05e638-e4c6-48b3-a5ca-f38e3ec02536",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4cc1c3d6-91cf-433e-85a4-8db64caa82ef"
        },
        "item": {
          "id": "8708f5f4-39da-4f83-acc1-0f6fb741d2f7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b1c78d2d-6684-4410-a59a-5d5129004e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049cc64e-99e5-4db8-8a4b-3b4f4022570b",
        "cursor": {
          "ref": "903a0d83-6e2d-4c41-884a-3abd98f206f9",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "31443f56-a98b-4874-8ce7-7e5e90e3b6c0"
        },
        "item": {
          "id": "049cc64e-99e5-4db8-8a4b-3b4f4022570b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c456d99e-9dad-4c14-b35f-419dfc604f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c191b7f-79db-4916-a1c9-a316c7bb9d2d",
        "cursor": {
          "ref": "8b4c3035-181d-4d6d-a8a7-5a1c4ed8b2af",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4fae4cda-07a3-48ee-83a6-4c8b7f955b41"
        },
        "item": {
          "id": "8c191b7f-79db-4916-a1c9-a316c7bb9d2d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "54154981-4f82-4b3e-bc68-f1e1bd6be583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640ab447-8c22-48b6-9d65-69c34b02538b",
        "cursor": {
          "ref": "b8f9d6a8-9e7d-407e-97b4-085590ce1503",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cbdd00ac-ffdf-459f-8485-34a68f06e84e"
        },
        "item": {
          "id": "640ab447-8c22-48b6-9d65-69c34b02538b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d6129bd3-09ba-4204-b60b-331b79e2b102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d6864b-420c-45aa-b391-9815705de136",
        "cursor": {
          "ref": "565318ec-5377-483c-b119-7c778fca2391",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "43f84eea-5c25-4c03-8cfc-0c9bc311d319"
        },
        "item": {
          "id": "01d6864b-420c-45aa-b391-9815705de136",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6acf67cb-f403-40c3-b1ce-e5cf2fa2e695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad4a9b9-356b-4891-b6f8-a2ce560fba28",
        "cursor": {
          "ref": "bf97eb9e-5f88-41b6-a85c-d043bd75f754",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ff9860db-a5f5-489f-8a56-badcd8a6f515"
        },
        "item": {
          "id": "cad4a9b9-356b-4891-b6f8-a2ce560fba28",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e4dd1c59-36a1-4326-b474-e6340c7b70da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709449eb-fc21-4f80-9b37-66b0b34bee51",
        "cursor": {
          "ref": "4414eee2-2ea1-4017-90b2-1af58896dd68",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d3ff5a5a-f377-4831-b0ff-da0b2c8023e4"
        },
        "item": {
          "id": "709449eb-fc21-4f80-9b37-66b0b34bee51",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bd26f2f5-828c-4e98-aef4-bd4c89b4f3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792e9ad4-e354-4315-bea7-86576907a42b",
        "cursor": {
          "ref": "efcb628b-0d51-4b46-95f7-38b6a24f9e91",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "66aa4d34-dcba-4e8e-8fa0-9fb5c68297d5"
        },
        "item": {
          "id": "792e9ad4-e354-4315-bea7-86576907a42b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "13d24c6c-932d-4a8f-804c-a952261d8df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b73f477-73ab-42a8-ba61-a79d90d24223",
        "cursor": {
          "ref": "17e600e6-570d-4582-bb70-7f9499c2b614",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "936aafd2-3f29-4c2e-bb90-a4243ff99901"
        },
        "item": {
          "id": "7b73f477-73ab-42a8-ba61-a79d90d24223",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "416c8279-14fe-4b40-a6c3-cbc503b03cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755fc1a6-001e-466f-abd6-0d0ff4ac9725",
        "cursor": {
          "ref": "2c24586f-263e-4810-acd0-c9db8d5febf6",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1f26de80-5d10-46c7-9c19-f4c7bbbb7e50"
        },
        "item": {
          "id": "755fc1a6-001e-466f-abd6-0d0ff4ac9725",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e7bb49b7-bfdd-47c7-9c59-24443777c5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462315c2-dc0d-41b0-9b13-f36e60e3d8fa",
        "cursor": {
          "ref": "74ffd22d-8863-4b29-87f7-474ecbe3f7cb",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ebbcab62-3328-4086-88b5-18dfb03966ef"
        },
        "item": {
          "id": "462315c2-dc0d-41b0-9b13-f36e60e3d8fa",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "11eea92c-053e-44fd-b51a-4d0cba95b9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b134d7e5-f8b7-4059-840b-e9f24956ff37",
        "cursor": {
          "ref": "589332c1-6bc7-44ea-ba55-4a0e7b4d0fbd",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7197d7ca-ed91-4d6b-a177-b308cb469ac7"
        },
        "item": {
          "id": "b134d7e5-f8b7-4059-840b-e9f24956ff37",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "94d85d78-5160-44ed-a940-78d4f5ebc58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05619c1-2e3a-4bf2-a6c7-8fcf9eed6d72",
        "cursor": {
          "ref": "146caade-97ab-4fe0-aec0-f555f27083cd",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c6233042-ba2d-4aff-a555-fcc45bdd5564"
        },
        "item": {
          "id": "f05619c1-2e3a-4bf2-a6c7-8fcf9eed6d72",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "79e1f041-85d3-4038-8790-9fb6ba31c984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed9b0cc-a511-4282-b22c-43b5553248c8",
        "cursor": {
          "ref": "320f7312-32ad-4d84-a3ef-a047e87184f1",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3d7b97d3-65ae-49e6-8927-cf70b682bf40"
        },
        "item": {
          "id": "fed9b0cc-a511-4282-b22c-43b5553248c8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "707170c5-63d2-4a6a-9640-fa855d5aa677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f65832-832d-4ea7-8a27-045b426efeac",
        "cursor": {
          "ref": "e4deb256-fa84-4624-b098-c9944d92904a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ce1ef6ad-0be7-4f44-be62-cbffe34b16ed"
        },
        "item": {
          "id": "c4f65832-832d-4ea7-8a27-045b426efeac",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ae9ee172-d7e3-45dd-b50c-0f2e34c62a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4fad71-6321-4c9d-959a-d4a53ba04629",
        "cursor": {
          "ref": "61b86065-a629-4a4e-9495-b430cb0c7edb",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "29a36dc7-195c-48da-b50b-466d7231c823"
        },
        "item": {
          "id": "5c4fad71-6321-4c9d-959a-d4a53ba04629",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "91bcb8e0-ab04-4b6f-b16f-694e2bd3f390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fdfe2f-ac82-45f5-ace1-fc6d1dde0d23",
        "cursor": {
          "ref": "af186fc6-160b-4c18-a925-6761d61dbcdb",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7afa3f52-d9b6-45ff-a952-7559a8b86280"
        },
        "item": {
          "id": "d3fdfe2f-ac82-45f5-ace1-fc6d1dde0d23",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9de63e2f-8f79-4f81-b793-cc502dd06b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d61622d-bf83-4f3e-94c6-68e365de19b6",
        "cursor": {
          "ref": "76ab899d-bc66-4061-8bb1-dbef41539c96",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fd35d260-d44f-460e-954b-ff3cf43c4d2d"
        },
        "item": {
          "id": "9d61622d-bf83-4f3e-94c6-68e365de19b6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0bf2d3ef-4d9d-4eff-b510-aded33338d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999a23c7-66bc-4a8d-91fb-c48943cbc1ca",
        "cursor": {
          "ref": "47c791c2-a006-4fe6-bff2-51014f940349",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a16646f0-33d0-49e1-befd-990af33a3046"
        },
        "item": {
          "id": "999a23c7-66bc-4a8d-91fb-c48943cbc1ca",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cac64a67-803c-4f20-827d-531cfd4a6903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c019fb7-d2ef-4911-9eef-360a8e66de97",
        "cursor": {
          "ref": "35f9371b-f65a-43fe-830f-d8f8b5a28aa5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8ac3c0f6-fce6-47a5-9f93-cf282ce75cdb"
        },
        "item": {
          "id": "6c019fb7-d2ef-4911-9eef-360a8e66de97",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "216cb1cb-4977-4edb-9b9b-a337c3fcf828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514c7a0a-fb2f-427e-885c-70c17fe5ec5c",
        "cursor": {
          "ref": "6a422dc0-1f58-4906-a4f9-3cb6f9ffd041",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c322c4ef-6ada-4f45-b808-083238161e33"
        },
        "item": {
          "id": "514c7a0a-fb2f-427e-885c-70c17fe5ec5c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2dc427c6-b22a-4566-b9ec-d0b9c5b786ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5eb284-0d1f-4082-8dff-b749477872a6",
        "cursor": {
          "ref": "174186c0-d352-4bf8-8ab0-0939e02e709f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "26e86d04-07f2-48e8-bf5f-cb0232838fa1"
        },
        "item": {
          "id": "5f5eb284-0d1f-4082-8dff-b749477872a6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1f015b67-db80-4521-b624-f229e9079757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085e58fe-2c98-4880-bc6d-07b3c755e3c2",
        "cursor": {
          "ref": "bac60885-b9d9-4f11-bac2-5354b4a83e24",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e2236f44-7774-45be-a75f-dafb273a5f60"
        },
        "item": {
          "id": "085e58fe-2c98-4880-bc6d-07b3c755e3c2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fe9d3826-cd04-4079-97bc-cbe6abea616d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5444db8-1e39-4aa8-812e-be3393d45a23",
        "cursor": {
          "ref": "4bbd9b98-c04e-47c1-a53c-4607cdbae257",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8689d16c-866e-4cba-ab01-6064acd5aeb2"
        },
        "item": {
          "id": "c5444db8-1e39-4aa8-812e-be3393d45a23",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9b093ed7-6ac0-44d6-afba-5b4b69305332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4f511b-36b3-4ba4-ac36-d650c6dac531",
        "cursor": {
          "ref": "84861ed2-932d-4ae5-94ab-e3cb7873fda2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "664568af-287c-4e91-b57f-051a6eb1742f"
        },
        "item": {
          "id": "bb4f511b-36b3-4ba4-ac36-d650c6dac531",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2d1e7ca0-3bcc-4bae-a7a9-e455ef2712d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf39875e-b829-4d6c-8b1b-dceb0afa5a6b",
        "cursor": {
          "ref": "d4c1e6d2-83ca-4043-9328-2f9faa3871d4",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4c996dce-8f8a-4715-b29e-ad46b91b7cda"
        },
        "item": {
          "id": "cf39875e-b829-4d6c-8b1b-dceb0afa5a6b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9426c3e0-4ec3-43b3-a7a6-0e134c092719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa784ba-c937-4361-97ac-c95041e16463",
        "cursor": {
          "ref": "9c384077-c4eb-4e74-b27d-ce86bcd1a083",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e4118e50-5d55-439c-8dc9-e7325fa5cd3f"
        },
        "item": {
          "id": "6fa784ba-c937-4361-97ac-c95041e16463",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3e1f225e-47f8-4dc2-8132-1e06276f6f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3674891-9cfb-425d-b9a8-4f060d5cb4f6",
        "cursor": {
          "ref": "787261c7-6f80-4d7e-98bf-5f84e67fe132",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cf44624d-072e-4c1b-a900-be4e0365a668"
        },
        "item": {
          "id": "f3674891-9cfb-425d-b9a8-4f060d5cb4f6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "727358e8-7c44-44b2-b27d-0086e23ffda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371d01c0-a443-48fb-9a9d-883f3b5969f7",
        "cursor": {
          "ref": "850cd16a-3c79-4b2f-a97a-d7abe732f07f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "553d1482-a606-4964-a05d-54edcda18c74"
        },
        "item": {
          "id": "371d01c0-a443-48fb-9a9d-883f3b5969f7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e1ff3505-1d16-4ece-ab51-4156a2d4199b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be5ece7-356e-4f31-bb25-392336ce741f",
        "cursor": {
          "ref": "b5e62331-5394-4102-8100-8f70ef6c6aea",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9adc2e14-8e84-40bf-bd5a-a6ae444293b5"
        },
        "item": {
          "id": "4be5ece7-356e-4f31-bb25-392336ce741f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d8f2a484-5a6d-42b7-a2a2-a9deab532cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8c8853-da0a-4700-9f5f-1364c4c6c233",
        "cursor": {
          "ref": "f5d1b57f-f576-4d16-b289-cc1730928796",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "75d07b74-2ece-49f6-808c-b52a0115d605"
        },
        "item": {
          "id": "4e8c8853-da0a-4700-9f5f-1364c4c6c233",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ea629316-2d6a-435d-84e1-df9640bd1da4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb1caa8-56c1-4538-af17-224912cc801b",
        "cursor": {
          "ref": "da72e318-5e72-4f15-bfdd-b2ec61917eaf",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "778d38fc-1b32-4e6e-9404-9b392894339a"
        },
        "item": {
          "id": "8cb1caa8-56c1-4538-af17-224912cc801b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6beccd1e-6ccd-4539-b8a1-37664b943914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fd9a02-f857-49fa-b656-03c9fb996068",
        "cursor": {
          "ref": "22e9e735-4fb4-491f-bcd9-a7800660bf71",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b09cf58b-5386-4c52-aec3-2836ac85444b"
        },
        "item": {
          "id": "34fd9a02-f857-49fa-b656-03c9fb996068",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e8a5730f-7d8a-4195-b668-ffc364d90d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dcb559-6e55-4031-ac6f-d0513ec9e7fd",
        "cursor": {
          "ref": "1762fee3-797a-4372-946f-5093a63e72c7",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0ec8ee89-c790-4286-9dca-65fbf08c5e9e"
        },
        "item": {
          "id": "d1dcb559-6e55-4031-ac6f-d0513ec9e7fd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fd9831d8-5cc4-4054-b763-9fb062a16b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc8349f-32c0-45fe-85c2-4f49734d3f44",
        "cursor": {
          "ref": "9d827449-767e-44f1-85f7-ac7a5285ffc8",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ae790158-10ba-4588-9008-c7466aa76ca0"
        },
        "item": {
          "id": "7fc8349f-32c0-45fe-85c2-4f49734d3f44",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ed5e3125-9815-4219-9a3f-31e84dfea566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d6814c-8066-4dea-aef7-990d0a36e737",
        "cursor": {
          "ref": "63381e6a-6965-4282-956d-0f771aa841e1",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6af3186a-3161-43a2-b0be-b459a6dcb024"
        },
        "item": {
          "id": "87d6814c-8066-4dea-aef7-990d0a36e737",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "47c86731-397b-43c0-a53e-ae201b9f224c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37119e02-38b5-4a4c-882e-b0227dedb5d8",
        "cursor": {
          "ref": "d8b72ef3-b1fd-44be-8ab1-7dbcbccc2ebc",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3ac4d551-514f-4fd8-ad55-719e85919532"
        },
        "item": {
          "id": "37119e02-38b5-4a4c-882e-b0227dedb5d8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0f200170-6f28-470b-98fb-7bb0253ff016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39060f10-4431-47eb-bb55-a6559890c920",
        "cursor": {
          "ref": "1b0d565d-dcf5-4527-8c36-0427b6392b4b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "732281a2-da36-4e94-8fb0-15e560152527"
        },
        "item": {
          "id": "39060f10-4431-47eb-bb55-a6559890c920",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7d1b4726-2a8a-4fe9-b3f9-3fa37c69ba6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d234f6-5c3c-4632-a0fa-10bd5cdec1a7",
        "cursor": {
          "ref": "35db9c93-4ae5-463d-89e7-85609f27d891",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3f99b2f0-78b1-4b4f-bcf6-14611d8c7e69"
        },
        "item": {
          "id": "a3d234f6-5c3c-4632-a0fa-10bd5cdec1a7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7f132b23-1124-46b4-91e2-9e3dd193d0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e4d7b6-2b5d-4048-99f3-e317d691b182",
        "cursor": {
          "ref": "259f102a-a84a-49f0-8d1c-08cb5afe41d6",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "294fb138-054b-4f17-b2fb-674b7861a92d"
        },
        "item": {
          "id": "c5e4d7b6-2b5d-4048-99f3-e317d691b182",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1fd45f4d-979f-4d3f-9d18-30fd75253283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0394f74-16bd-4ca5-b817-5b93a362f0c9",
        "cursor": {
          "ref": "a9ca7204-6e64-4107-9ac0-9a0e18783e46",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2b3816eb-8685-462a-bee7-ba3e99f535a8"
        },
        "item": {
          "id": "f0394f74-16bd-4ca5-b817-5b93a362f0c9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e94192e4-cd4d-4949-9ebd-01098f8bc4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27476a0-c086-4247-8585-01f484c4203e",
        "cursor": {
          "ref": "14d39a11-60b4-4a9e-8c3e-04078851e01d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1bab8005-e281-4984-bf48-9b2c3acec31d"
        },
        "item": {
          "id": "c27476a0-c086-4247-8585-01f484c4203e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0e9e5b68-0635-40e3-9e37-c137c28a9a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cda1f2-67d5-4c4b-8976-1cab77d74c6b",
        "cursor": {
          "ref": "6d983c44-594d-45fc-9700-e5c5a64bb59d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "efcf1356-a266-462e-ac48-071d3ba9ff9a"
        },
        "item": {
          "id": "35cda1f2-67d5-4c4b-8976-1cab77d74c6b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6582ee2a-467b-4b4a-b0ea-a0d26295b8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa16732-0548-4a86-891e-c0334ebacf29",
        "cursor": {
          "ref": "502f11f8-b603-42eb-be8b-8bb5cb9a1420",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ddf704af-2c03-41dc-8686-42fa72197ec9"
        },
        "item": {
          "id": "7aa16732-0548-4a86-891e-c0334ebacf29",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "af07e360-5ed9-412a-8a1a-c9fd1072bb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647f7cd3-42e5-48c9-9a28-1f220fdac542",
        "cursor": {
          "ref": "bb4358db-57c6-47b6-8ca0-52089ec674eb",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "334b34be-4d05-496f-9356-9550a585305c"
        },
        "item": {
          "id": "647f7cd3-42e5-48c9-9a28-1f220fdac542",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2ee4c9f3-41a7-4d37-87a0-a52d90bfe4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78976d7c-78b6-440a-aefa-13c871d27ca9",
        "cursor": {
          "ref": "47cf3f00-81e1-4e4d-bb84-23aaaac1c336",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9f61abad-fb0e-4fd5-92f9-5192fd0f0321"
        },
        "item": {
          "id": "78976d7c-78b6-440a-aefa-13c871d27ca9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f9ec3190-f9fe-40be-a28c-77fe5c5702b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e6a7e5-41d3-4d2a-b6a1-b4423bfaba7e",
        "cursor": {
          "ref": "b841c4af-44a5-478f-b91f-b90ee4622b11",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "91a54f09-628a-4dd3-8f22-8f8665d46b5d"
        },
        "item": {
          "id": "12e6a7e5-41d3-4d2a-b6a1-b4423bfaba7e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f1a2cd0d-718a-4300-9a98-c50e3303b848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b8816d-7235-4194-8217-852dd9870b26",
        "cursor": {
          "ref": "46cdcad4-9277-442b-885f-40ae4dbcf4f9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0761b5e9-c0bb-4537-b2bb-13a22cda7c31"
        },
        "item": {
          "id": "58b8816d-7235-4194-8217-852dd9870b26",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bac2dc02-49e5-4a87-a16c-b71d32cae5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecb63d5-06d5-45cf-b8b1-9573980c184c",
        "cursor": {
          "ref": "2c97f1fa-b798-43a4-97aa-23053d4ccfd0",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "325e073a-5ae4-433a-ad47-178526d6110b"
        },
        "item": {
          "id": "cecb63d5-06d5-45cf-b8b1-9573980c184c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0fd867fb-e568-4c71-83bd-1dcbff231d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4464cbe1-ac22-481c-9431-63d59c370e16",
        "cursor": {
          "ref": "a7f0a5cf-af34-480a-83ff-e5393ddcedc8",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3b2bf24d-a07e-486e-b4a6-c4219e86cbe2"
        },
        "item": {
          "id": "4464cbe1-ac22-481c-9431-63d59c370e16",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "db265b92-f9cf-43aa-b1f0-70ac3cd0c803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3984f0e7-5b35-4fe4-8495-5670a6ae4f93",
        "cursor": {
          "ref": "d5c6bc39-4f82-4f38-bbe2-755ac590ddc6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4a1f39ac-8b6f-4406-a8d8-ce6d5c9f6910"
        },
        "item": {
          "id": "3984f0e7-5b35-4fe4-8495-5670a6ae4f93",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "21d8465d-20fe-4639-98a2-cf00a728825d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e591fe55-2fc1-4014-83cc-2089cb89aca7",
        "cursor": {
          "ref": "33388f93-a02c-4f0a-aba8-25bd66c4cb7e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "accb59fe-92bd-40c7-a580-2de145f35fcb"
        },
        "item": {
          "id": "e591fe55-2fc1-4014-83cc-2089cb89aca7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1c912720-876e-475b-bacb-bbb89c4ee187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18485e24-c53e-4d8a-95f7-a6c4acae4ffe",
        "cursor": {
          "ref": "62f0c32e-614a-45cc-b731-45fdba7a38ef",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0bd175fe-628d-4046-8957-aa18901f5e90"
        },
        "item": {
          "id": "18485e24-c53e-4d8a-95f7-a6c4acae4ffe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e9625a3e-d51f-4791-a137-93914889b509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51357f8e-0bd8-460f-9033-fafd82c27852",
        "cursor": {
          "ref": "30e7dc83-0b3e-47fd-8eb6-88309848b443",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8ae78ae5-8cc7-4b7a-bfa3-bf5bc665d52a"
        },
        "item": {
          "id": "51357f8e-0bd8-460f-9033-fafd82c27852",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a6e03843-7fae-4bdf-b963-c91b66108c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1592512b-a392-4054-83e9-2f9f037eb70f",
        "cursor": {
          "ref": "3123fbc1-2cef-4fca-9c96-7d1bb5d4f294",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9d7a8a06-4922-4e4f-b35e-d04ab252cd56"
        },
        "item": {
          "id": "1592512b-a392-4054-83e9-2f9f037eb70f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d11b371c-4cde-4e2e-8dcf-cb5f2491a782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59ff474-98f0-4eba-95f0-c0837dc4956c",
        "cursor": {
          "ref": "c1397482-a14c-4d0a-a1c4-876e91f4f0b3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2c605393-1511-48d9-b472-cf48d3ebd739"
        },
        "item": {
          "id": "a59ff474-98f0-4eba-95f0-c0837dc4956c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0a8ba44e-3214-437e-8b56-97fcff587160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e72732-da33-42f0-ab02-d99f4644da70",
        "cursor": {
          "ref": "f9a54c58-0628-4a92-894b-48e2b539bad3",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e6e8361d-ed72-43f8-bb16-8cbd33ffb116"
        },
        "item": {
          "id": "93e72732-da33-42f0-ab02-d99f4644da70",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "90108468-e80f-4d2c-8db8-b92e9fa4f09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8699285-2be1-4c46-a5b4-eb2d89a9baf5",
        "cursor": {
          "ref": "601e5d66-2739-40d8-af30-74a61c38e3c0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4bdc5450-128b-4499-b388-04d084ced947"
        },
        "item": {
          "id": "b8699285-2be1-4c46-a5b4-eb2d89a9baf5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9039edc1-422d-4f1d-bda7-95c1b640c481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce35c302-b128-4824-be18-cab2195fb1b3",
        "cursor": {
          "ref": "9d24f610-8e8e-4afb-afa7-2fa2b5bdb019",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c35a1104-6588-4db9-96f0-0ef45e1d6be3"
        },
        "item": {
          "id": "ce35c302-b128-4824-be18-cab2195fb1b3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "20fe9694-c878-4582-a9ea-bed82e78d740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dfdf31-3998-40d6-b0f8-6456e222fce8",
        "cursor": {
          "ref": "f88fbbbb-e898-49d3-84b8-7dbc67cca6f3",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a672cda2-64bd-4075-970c-683674c92fa0"
        },
        "item": {
          "id": "49dfdf31-3998-40d6-b0f8-6456e222fce8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5daaf6c3-e9ba-4c6c-8c4c-0544fdafa22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80115108-7d61-4e73-9db2-3ce13067bf41",
        "cursor": {
          "ref": "4a74c70a-d327-4ac4-a86c-c7a6c72e9a5d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "79c4e59a-46d5-4af8-a0c1-8c30cb3ff828"
        },
        "item": {
          "id": "80115108-7d61-4e73-9db2-3ce13067bf41",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7ad3411c-8ed8-4b3f-a6f3-9f3abc69125f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5ce973-3bcd-43b6-b97a-ffd156421f92",
        "cursor": {
          "ref": "685ea17f-2a91-49d3-bf04-87a32ef2f56a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "edb128a3-c810-4f4d-807e-deea4b4e3edd"
        },
        "item": {
          "id": "bb5ce973-3bcd-43b6-b97a-ffd156421f92",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "598ef09f-e051-4f94-bef6-ed3c2c34ac04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce55833-ea6f-419f-9caa-a6667cbc7968",
        "cursor": {
          "ref": "da9990d8-2dea-47bb-8e57-db1976c5afd4",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "56f4dbe1-6bac-4e76-b298-ff549119be42"
        },
        "item": {
          "id": "1ce55833-ea6f-419f-9caa-a6667cbc7968",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "37fd9743-0aa1-4879-9354-9b7e110b888e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7a18ca-1679-4a50-bb70-027fdb0b8fb8",
        "cursor": {
          "ref": "27c21e4c-2814-40fb-866d-52d1002a1918",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bb1f3eef-83d0-48a5-a7d4-ff25ee981b6e"
        },
        "item": {
          "id": "7d7a18ca-1679-4a50-bb70-027fdb0b8fb8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4eecaacf-2162-4297-b1b0-91d8aafb78c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a98d9-1ea8-4064-93e5-0581dc4a09f5",
        "cursor": {
          "ref": "ae2dc95e-c24d-496c-8ebe-643412888f6a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c3b4400a-bdb2-4915-b343-da1f56411418"
        },
        "item": {
          "id": "641a98d9-1ea8-4064-93e5-0581dc4a09f5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "79d9f7da-f57d-4b3c-9b15-db55e51eed65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3b3413-b8bd-4272-9914-af390ed8321a",
        "cursor": {
          "ref": "885635cc-9940-4af6-9b2a-df66b4b52ea1",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "702bdbcb-66d8-48e0-8f42-e474c27f72aa"
        },
        "item": {
          "id": "9c3b3413-b8bd-4272-9914-af390ed8321a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "07c3576b-4b93-4e8a-81fe-c8c5bd67c5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292f5e80-ef28-4964-9557-c5377648a604",
        "cursor": {
          "ref": "2098efaa-8130-4729-b129-25d2c2d80317",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "17efae10-474e-4545-bfec-a9fd624688a0"
        },
        "item": {
          "id": "292f5e80-ef28-4964-9557-c5377648a604",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4ca4b05a-dabd-4b24-a4e5-09a0a5d5b2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7122ec6-a598-4708-b326-bbf94873ed66",
        "cursor": {
          "ref": "58de8e6f-d492-4f59-8df1-558592a1d5bf",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "399b16dc-68bb-45e0-9fee-713461ee97b3"
        },
        "item": {
          "id": "b7122ec6-a598-4708-b326-bbf94873ed66",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5cae96e4-6151-4906-b550-90d7c5319a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ceabc20-365d-4109-874b-6881dc96dea4",
        "cursor": {
          "ref": "6f2dc00b-fec7-4866-8e12-98307d469ef6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b456d64f-172e-4a94-8c36-16d3e7d5d143"
        },
        "item": {
          "id": "9ceabc20-365d-4109-874b-6881dc96dea4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dc6731ee-7d8c-4b55-8b65-67b28abd44ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df375117-3e85-48a7-b646-40e36f8cf961",
        "cursor": {
          "ref": "b783e514-9075-4574-9a27-43ac13fc15c9",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b4437383-81dd-4bef-897b-e631a24827dd"
        },
        "item": {
          "id": "df375117-3e85-48a7-b646-40e36f8cf961",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "097c9ac4-b7f6-4ec4-bb2a-a4a4fd525315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec645c9b-b61c-4657-9bcb-d2dfb953b3f4",
        "cursor": {
          "ref": "baf32fa7-9448-4dfa-84d2-70b3a489c44b",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "624dc477-3dff-4d60-8d9e-cedea9720014"
        },
        "item": {
          "id": "ec645c9b-b61c-4657-9bcb-d2dfb953b3f4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "594e6c0c-8eb1-4bdc-a9e4-b27ce2627620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb8710d-cf1c-409f-b210-8693f82c87b6",
        "cursor": {
          "ref": "feab2f0f-407b-4085-846d-d7559766694e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f1610cb7-b0e1-4987-b863-55743600bcd5"
        },
        "item": {
          "id": "6cb8710d-cf1c-409f-b210-8693f82c87b6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "75e878ee-fe4d-4c99-b191-1ce2f6ced6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6908009b-988f-433b-9eab-0b7b480b07f3",
        "cursor": {
          "ref": "527f1b4b-fc47-4109-b33d-f4a6c899ecb9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "59cbcf4d-e003-4ef4-ae51-efeb22edb179"
        },
        "item": {
          "id": "6908009b-988f-433b-9eab-0b7b480b07f3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "48c4fd30-34b0-4f38-9a96-46f892ad8d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f9154c-c48a-4456-a077-f82de0ba98c4",
        "cursor": {
          "ref": "bfabe9ee-5003-44da-9ef9-02bf29684769",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2d102f7c-6ec3-485e-8e2a-a2dcd1d9fb28"
        },
        "item": {
          "id": "32f9154c-c48a-4456-a077-f82de0ba98c4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "605b8928-ce81-4898-8e90-318c1dc985d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f46f3d-b0eb-4084-b1bb-7566aa1522e0",
        "cursor": {
          "ref": "a890f8d0-530b-4fd7-902b-cb2b1179876e",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a3bfdfc6-5629-41bb-a0fd-f83748399f21"
        },
        "item": {
          "id": "f4f46f3d-b0eb-4084-b1bb-7566aa1522e0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "53e63262-9373-4368-b6d3-a526eab905cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d859bcc-a391-44bc-8904-e9de1509fb71",
        "cursor": {
          "ref": "33c549e9-9390-466b-959f-d674f971d8ea",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4bd2e4f8-7fd0-4daf-abf3-3034a2a38a38"
        },
        "item": {
          "id": "5d859bcc-a391-44bc-8904-e9de1509fb71",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "feaaba9c-a81b-45a7-a2e5-1f6ec46c13d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6c43fe-182b-4d9e-a82f-6aeb9ee924cb",
        "cursor": {
          "ref": "bc54af20-610a-48a5-9bb4-46b0e5820ed1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2c39cf2b-1fb2-4a03-bf20-e80e3e0a54d9"
        },
        "item": {
          "id": "eb6c43fe-182b-4d9e-a82f-6aeb9ee924cb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1b054013-949c-49b6-8c6b-4669f92c6b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95029bdf-e33b-457b-b8c8-245002a9a3e9",
        "cursor": {
          "ref": "1124274c-bf79-48eb-9729-bc7dc865bad1",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e7f532c3-4aa5-42d2-b63d-f1c268b4b77d"
        },
        "item": {
          "id": "95029bdf-e33b-457b-b8c8-245002a9a3e9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0ceb0660-f4a8-4220-ad1d-03f2686ff876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46914253-a9c1-4f12-a48b-e865c995f9c0",
        "cursor": {
          "ref": "c636c7e8-8fe7-4d0d-9c80-f8ef3fb05547",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3ee4cd6f-fe76-41d7-bdfe-bcaba52210eb"
        },
        "item": {
          "id": "46914253-a9c1-4f12-a48b-e865c995f9c0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "95a7defb-fc01-4bce-aed3-88c696d149ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4053048c-c0db-4da7-95f8-b8a24984311b",
        "cursor": {
          "ref": "08264dc1-c2c0-4a83-b840-120242dccba7",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2f3078f0-bdc4-41ff-b110-a417441fdc38"
        },
        "item": {
          "id": "4053048c-c0db-4da7-95f8-b8a24984311b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a7395713-ed78-4bc8-a624-3763cc5a522d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43581379-8b80-4a42-917e-7725363e7477",
        "cursor": {
          "ref": "cbd60e8f-1410-4467-a0de-e06dc15635af",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6d1408ef-e108-4fee-a104-17500d604146"
        },
        "item": {
          "id": "43581379-8b80-4a42-917e-7725363e7477",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ffe69fd3-746c-4608-bcbb-75adf408c7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16011810-0941-44b5-8a7d-4bea197595ea",
        "cursor": {
          "ref": "a34d5292-9997-4d34-b645-2311d5182220",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "03bb0bc6-e7f7-4d7a-9a31-2f5a7ece1848"
        },
        "item": {
          "id": "16011810-0941-44b5-8a7d-4bea197595ea",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "806f9841-4c71-4383-a787-fbc70c8926eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56829128-f6d9-46e8-b8b1-aeb6c09286a6",
        "cursor": {
          "ref": "60949fe7-0397-4f6b-8000-d319c3518fed",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5d728706-b2ed-47f4-9bc3-5a1aa5f56322"
        },
        "item": {
          "id": "56829128-f6d9-46e8-b8b1-aeb6c09286a6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b1b3feed-708c-4fbd-a18f-b0c721bd54be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f3ef47-ca40-4733-bccb-e87d37b0a7ec",
        "cursor": {
          "ref": "ff513f1f-ca20-45a8-a217-51c216ea4bbd",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "713ff6fa-d471-456e-9283-69b5f29052f7"
        },
        "item": {
          "id": "52f3ef47-ca40-4733-bccb-e87d37b0a7ec",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0668a3b7-edc9-446f-a94e-a3cf66fd62f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e31916c-0bdb-4c57-aa09-19c7d0efe4ce",
        "cursor": {
          "ref": "ecf09617-1600-468d-a1b9-f4bb4113674d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d911fdce-ad3b-4d43-9551-e2a32813a5ed"
        },
        "item": {
          "id": "3e31916c-0bdb-4c57-aa09-19c7d0efe4ce",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9ce7d5de-1e21-46d3-9670-cf759e8f449e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aad3362-67ca-4cd1-a787-15c4085cb5c4",
        "cursor": {
          "ref": "adb4a8f4-4436-49c6-a0cb-319a72169ebb",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4c376b31-2755-473e-9aff-847732f98c7b"
        },
        "item": {
          "id": "7aad3362-67ca-4cd1-a787-15c4085cb5c4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "a3f55346-949e-4816-9aea-4077249f516d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7d4e56-d0af-4e9e-876b-2deee20fb1d8",
        "cursor": {
          "ref": "42496044-d9f0-4f81-b204-ab38be9a7b43",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6992201e-90c2-41c7-bcaf-d8999e3ef2b3"
        },
        "item": {
          "id": "aa7d4e56-d0af-4e9e-876b-2deee20fb1d8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7253a3c7-c4f8-412d-b0b0-124753260851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935daeba-d344-466a-bbe5-08a75d93f017",
        "cursor": {
          "ref": "36b63b93-7c4a-41cf-ace8-1a4ffe659985",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a38bfa7e-e98d-4b68-aa22-e7bc72244327"
        },
        "item": {
          "id": "935daeba-d344-466a-bbe5-08a75d93f017",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "977e910b-6e60-4cdd-b79c-2d8adf05d0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e802e0fb-ab63-4e49-be2d-dc6b77eafe9b",
        "cursor": {
          "ref": "326a1762-4fd0-44d9-8b43-8575dc5b969e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dc598ab6-dc10-4754-b39d-55d5011fda97"
        },
        "item": {
          "id": "e802e0fb-ab63-4e49-be2d-dc6b77eafe9b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "660df361-f35a-4cdd-9898-7d9155dd1b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8256bce5-956e-4d4f-925a-3a589f2a57a7",
        "cursor": {
          "ref": "14670d87-eef5-409f-90f6-6bab64944d96",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "06b7b47e-53c8-453e-bbed-2e4a4e5ff214"
        },
        "item": {
          "id": "8256bce5-956e-4d4f-925a-3a589f2a57a7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e73c33bc-4046-4cf9-8a25-9f0d069efd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f35ffd2-e596-47f8-be91-0eb4c0aa33e1",
        "cursor": {
          "ref": "9e5fdc41-a216-417b-ba32-8cc8b5aad482",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "adc7f2f8-db60-4126-9021-ef08210cab04"
        },
        "item": {
          "id": "5f35ffd2-e596-47f8-be91-0eb4c0aa33e1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "edb4aead-0c21-468f-9688-9bb88b1089f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30b79f5-e622-4474-bd38-d2c24437e73f",
        "cursor": {
          "ref": "69adfbea-f1c3-4a01-8a41-2a7ed9e002d8",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "644ec78b-c030-4e6c-bcd2-fdf043abd204"
        },
        "item": {
          "id": "d30b79f5-e622-4474-bd38-d2c24437e73f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "542c407a-6fc7-4f3f-99a6-568629451c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff369f9a-5184-4e81-8233-50d4d32dcf75",
        "cursor": {
          "ref": "943751af-7e09-43fd-be4b-8c69a59f7c9c",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "aa721248-de29-4cdd-bcb0-b4fc58ac5674"
        },
        "item": {
          "id": "ff369f9a-5184-4e81-8233-50d4d32dcf75",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c89eb453-b824-453c-abba-4f1c298423fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a25201-4184-445e-88d3-96dee2714740",
        "cursor": {
          "ref": "db6e01f2-1eb0-4b3b-ad29-39ff39f4a3c6",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "42aeda09-d63c-4866-af14-50eb42b99fbf"
        },
        "item": {
          "id": "f9a25201-4184-445e-88d3-96dee2714740",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e70c8326-5659-4cb7-8e83-a407e815cbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f8fe03-a6bf-4ec3-877d-1def23012d70",
        "cursor": {
          "ref": "8327c6fe-69d5-4549-a0b3-17f04c19a034",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "50af5432-1abb-47b4-a44d-f788695f88cf"
        },
        "item": {
          "id": "b8f8fe03-a6bf-4ec3-877d-1def23012d70",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "377944b4-4e65-43fc-8b38-d6c6ae2c1175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad6cf5f-6202-4003-9134-260df203b0e3",
        "cursor": {
          "ref": "2b7d3e61-8684-4cb7-9fbf-96fd27c15432",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "68fb6547-e5ca-482f-9dc6-2b5e86da7970"
        },
        "item": {
          "id": "4ad6cf5f-6202-4003-9134-260df203b0e3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8d7e4d0e-2d5d-4646-a423-0c13e10296fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c668a7-17d4-485a-9280-8bf6fc72f83a",
        "cursor": {
          "ref": "b385689b-082d-4901-b123-b2afb3f387a1",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1df01821-164b-462c-9b76-4fa17f9e6c5f"
        },
        "item": {
          "id": "a0c668a7-17d4-485a-9280-8bf6fc72f83a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0288664a-9653-4f03-9e1e-2432136ab436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746a38f7-9d04-4893-aabb-e1c64f342617",
        "cursor": {
          "ref": "5f99e436-0432-4d67-9d76-666bd6a3f932",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "62e0d970-9c59-4205-90ec-3130f2437430"
        },
        "item": {
          "id": "746a38f7-9d04-4893-aabb-e1c64f342617",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f19e9cac-222f-4f3f-aa1d-bc95ded9aed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6955ac-09ce-4c82-9c76-94bf1d879b49",
        "cursor": {
          "ref": "1c01d3a7-cbde-4d42-88df-1680805cc440",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "782e6a34-38d3-486e-a251-b3e1a9b84fff"
        },
        "item": {
          "id": "bc6955ac-09ce-4c82-9c76-94bf1d879b49",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5f94cfcd-414b-4fb6-8773-37d3659b67a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61389c5e-8f24-46d7-945b-3179ba994bde",
        "cursor": {
          "ref": "50601420-ce5f-4d8c-a8e5-dfe16a683369",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5ea16b97-0c5a-4863-a204-b2ea3bad1f34"
        },
        "item": {
          "id": "61389c5e-8f24-46d7-945b-3179ba994bde",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c39ba70b-9e78-48a9-9471-aa1f8715f8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7968139-400c-4de9-8659-5f1e731c6482",
        "cursor": {
          "ref": "bf65746b-fad1-4067-a8a8-c280ade8b9f2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "daf3dc2d-4ecd-47eb-807b-c3c605bd9540"
        },
        "item": {
          "id": "b7968139-400c-4de9-8659-5f1e731c6482",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2789a95f-25f4-47ef-9935-262ad7f8014a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f10932-9df0-4e2a-b8a0-96210b5b6e86",
        "cursor": {
          "ref": "0df9fce9-21c0-4228-9534-cc6c4c8cd55a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "712d9f85-bb92-444f-8ce2-4f083d653ef6"
        },
        "item": {
          "id": "35f10932-9df0-4e2a-b8a0-96210b5b6e86",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "59378b84-a97a-4039-9bab-58b17ce71faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f244d58-d667-4e88-bbaf-fb6cb10983d4",
        "cursor": {
          "ref": "1237bf4c-218f-4c99-aebe-89c969b15787",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c077e4b7-f925-43eb-88ae-877a18cb7052"
        },
        "item": {
          "id": "0f244d58-d667-4e88-bbaf-fb6cb10983d4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "47521122-711f-4aac-b409-da2fef7f3347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a47be2-3733-4a37-ac28-5d8de9778585",
        "cursor": {
          "ref": "7e3e11a1-b9f2-4b89-af9b-f094ed92e68b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8d10491b-d3fe-447d-b3e4-1f0bdc2c8ac8"
        },
        "item": {
          "id": "e3a47be2-3733-4a37-ac28-5d8de9778585",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "015e4537-714e-4b5f-89fb-1b7ea0830f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bbf3a6-5da2-46fc-8808-9b2a143cc185",
        "cursor": {
          "ref": "47be5e93-c680-4205-bd2f-5aa3984e9af7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "371b92f1-643a-47d3-bab9-026cc681a858"
        },
        "item": {
          "id": "03bbf3a6-5da2-46fc-8808-9b2a143cc185",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8ea4338e-070b-401b-9dfb-dbb871f6cf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687f9747-66fe-4958-9651-674ed22ecfe9",
        "cursor": {
          "ref": "934ec508-7554-4ff5-883b-c910dba7f385",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1c0f1b3c-0aff-40a9-ad08-59d5dfb0cbe4"
        },
        "item": {
          "id": "687f9747-66fe-4958-9651-674ed22ecfe9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8f566439-532f-49c5-b0a2-75cbbf4ba8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bc1ca2-8d98-41a7-8383-3be8f612025a",
        "cursor": {
          "ref": "9ecb6f75-2278-45d7-ae39-36f33c4b9ca0",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1db86513-26b8-4643-b8d1-40a64c40f371"
        },
        "item": {
          "id": "a7bc1ca2-8d98-41a7-8383-3be8f612025a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5df718c3-000a-45b8-86d4-29f3f541700f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36854247-3c81-42f9-bc63-df4e4c5bd3f3",
        "cursor": {
          "ref": "5d1c71bd-e629-465a-bcd0-611193a4efd0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "845e9054-a111-48a5-815d-f9181e2d6673"
        },
        "item": {
          "id": "36854247-3c81-42f9-bc63-df4e4c5bd3f3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "89d2b62f-3e74-4136-b65c-9c87aaff50e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752e74a1-d2d2-4ec6-a858-c06681be9ea4",
        "cursor": {
          "ref": "f409d594-0df7-423c-92da-ba868b3c4592",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3cd2428d-3d32-4e45-a945-977418363d93"
        },
        "item": {
          "id": "752e74a1-d2d2-4ec6-a858-c06681be9ea4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dadf5574-32ae-4113-85ef-ff2bd297fa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a7ab0e-67cb-47e5-9700-b33c5b02c684",
        "cursor": {
          "ref": "332d1928-1f49-4a6c-9b5f-f51c9db1e58f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5c55b736-7fa1-4c7f-b243-90d37fae5e25"
        },
        "item": {
          "id": "b9a7ab0e-67cb-47e5-9700-b33c5b02c684",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "61ca670d-1db2-4e77-9c08-e45d7ac67f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f77980a-6f4d-4f63-98a6-81df8e29dcba",
        "cursor": {
          "ref": "f300077a-01a1-40d5-9a9b-acec902072da",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3b5984aa-0ef2-4c14-8178-b86a8ec639e3"
        },
        "item": {
          "id": "4f77980a-6f4d-4f63-98a6-81df8e29dcba",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c7a0ec40-b461-4017-adaa-ec16e0552b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2b447a-2adf-48be-b37f-d02f48dadc40",
        "cursor": {
          "ref": "72f1cf70-9f55-4e09-ab2d-e92ce29abd61",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "23bc1670-6151-44bf-b44a-e8deff437967"
        },
        "item": {
          "id": "ee2b447a-2adf-48be-b37f-d02f48dadc40",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6ebe26a4-c6a2-403d-8c79-c978dfebccf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193957ef-9cbc-4c7d-a1e9-4f818697544e",
        "cursor": {
          "ref": "918b6053-85f0-47a0-a7ec-5b88163eee36",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "27917faa-9d87-480c-b6e8-e6c7d898f365"
        },
        "item": {
          "id": "193957ef-9cbc-4c7d-a1e9-4f818697544e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "85e20d18-aa6f-41e6-9450-a75e83c33152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7e52a9-2146-4777-98ad-5f58b9b07cf6",
        "cursor": {
          "ref": "e2ab52fb-2987-4164-a2fb-4f7b585cd671",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eacf20e4-c65d-4ce7-98d0-f484cedefd3a"
        },
        "item": {
          "id": "9d7e52a9-2146-4777-98ad-5f58b9b07cf6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c2a6a3db-c696-4492-bd1f-0e8d2d6bf66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c413693-1dac-4160-b774-63e4fb381e97",
        "cursor": {
          "ref": "33b32760-44c1-4fa2-9681-63c21254ada8",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d49917a5-ea3f-474b-89b3-20904a3c3c94"
        },
        "item": {
          "id": "5c413693-1dac-4160-b774-63e4fb381e97",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2a5a4edc-5021-41d2-a9d9-fe9ea537f2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fa1df2-b547-4f9a-892b-a7e1103f66ef",
        "cursor": {
          "ref": "d1afae39-d446-4275-8235-2d75508fadc3",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7541c79e-932b-4660-b6dd-906a6919c0be"
        },
        "item": {
          "id": "d7fa1df2-b547-4f9a-892b-a7e1103f66ef",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "41e13bbb-fa4a-4000-aafa-ac3d2deb0948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8188de3a-637c-452a-9c4c-cac921632d46",
        "cursor": {
          "ref": "b394b2ac-c86e-4336-b222-8184475e2623",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a589d62c-5ae3-43b4-99ab-3b20cdf41d9e"
        },
        "item": {
          "id": "8188de3a-637c-452a-9c4c-cac921632d46",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "99d39158-32ee-4af2-b862-f8b8afed46d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6650bb4-a305-4307-982a-c63be60374ab",
        "cursor": {
          "ref": "710097e2-fd71-48c4-b695-f85ce8dc199f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e6262db0-65cd-42e1-9587-f1bd554fd77a"
        },
        "item": {
          "id": "d6650bb4-a305-4307-982a-c63be60374ab",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c28d7621-14ad-4c1d-a753-15e3d999984b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb47a82-c4d7-4a7f-a00f-a0220dc8cacc",
        "cursor": {
          "ref": "16075e74-92b1-48af-b284-bb22bb8f6473",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e18f3e84-b7be-4f99-ab87-64bb6056d29e"
        },
        "item": {
          "id": "bcb47a82-c4d7-4a7f-a00f-a0220dc8cacc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "53efca14-212f-40a1-a24f-23465a9f4329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d1a6a6-ca47-43d2-b6d0-4a9b84934d6e",
        "cursor": {
          "ref": "784969c3-91f1-4d99-86f6-8bbce42fbcd9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b22e5b16-0437-4d85-893c-ec8283f1432b"
        },
        "item": {
          "id": "75d1a6a6-ca47-43d2-b6d0-4a9b84934d6e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5defa3fd-5fff-4153-80df-45373b8f4ab7",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "8a09420a-cac1-49f3-80b4-a2825e785f5f",
        "cursor": {
          "ref": "f2792001-8add-43db-99f1-35474fc53ebb",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "82542af5-3025-477e-bd7c-c57058607c6c"
        },
        "item": {
          "id": "8a09420a-cac1-49f3-80b4-a2825e785f5f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0d1bacfd-868c-44ae-95db-9ea0c52ece68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6825e5ac-5ad0-42c5-a1eb-29c5ebb039c4",
        "cursor": {
          "ref": "1d5dff5a-7ad9-4e3f-ac70-c328779149a7",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e6a13eda-4ee8-4a4c-862c-64dd6181fe13"
        },
        "item": {
          "id": "6825e5ac-5ad0-42c5-a1eb-29c5ebb039c4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "013ab688-24f3-4757-8af9-fd1a18207ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c749163-6b14-4a63-9993-d52b0df60493",
        "cursor": {
          "ref": "ba802ae4-27a9-46ae-bf6e-586bf32d9f3d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7eea27e1-4525-483a-98c2-672840cbc567"
        },
        "item": {
          "id": "8c749163-6b14-4a63-9993-d52b0df60493",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "da941feb-bb74-469e-a249-375392426e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940c3d0d-fadc-4238-bb91-c9f9dc0d8b2e",
        "cursor": {
          "ref": "6536763a-c680-4254-8823-b1cd823da7f7",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e623d646-4edb-4556-a7f2-bb53aeadd0c5"
        },
        "item": {
          "id": "940c3d0d-fadc-4238-bb91-c9f9dc0d8b2e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "45158619-396a-4a5c-b3a4-c138f322bfb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175894e9-f915-4b24-84f6-705f97e4182e",
        "cursor": {
          "ref": "a0fa31b9-db83-49cd-9224-dc5b72911a1e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1cabd821-2b99-42e1-aad7-17ba01195993"
        },
        "item": {
          "id": "175894e9-f915-4b24-84f6-705f97e4182e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ab5eab55-4a9b-41b6-a730-ab4d38e7f7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4127c370-b109-4385-8bd2-cfb5611450b4",
        "cursor": {
          "ref": "cae69e67-3abb-4a2e-9b8b-89748f4d62c2",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f3eb9d46-9939-499c-8f31-224cc580de59"
        },
        "item": {
          "id": "4127c370-b109-4385-8bd2-cfb5611450b4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "646d314f-c021-4947-8f00-15a3e924f208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d15c94-ff31-41fe-9e37-20f26210225e",
        "cursor": {
          "ref": "410eab06-dbe2-413b-88c3-e344437fcebb",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2f093052-555e-4ce1-8d17-bab8e53f3de6"
        },
        "item": {
          "id": "65d15c94-ff31-41fe-9e37-20f26210225e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "94918e11-d75b-4874-90a8-5366a6f13998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dbe446-0017-4c31-837e-27cf13b3e994",
        "cursor": {
          "ref": "6b4a4078-86b3-42a7-b686-d7cc344c2afa",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4bdc279b-e877-4a5d-aaf5-dcd6ddd77e8f"
        },
        "item": {
          "id": "d8dbe446-0017-4c31-837e-27cf13b3e994",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "419e21c9-f690-4300-8d46-010a83dd2221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae591e3-0766-41cb-b8f6-be6b1844e1dc",
        "cursor": {
          "ref": "0afff0b7-41a6-4e54-a5e2-761eba300895",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5ef03bf3-b680-4db2-880c-44b4741f7f9b"
        },
        "item": {
          "id": "aae591e3-0766-41cb-b8f6-be6b1844e1dc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "42057bd4-206c-4324-88f7-72a2a15bfe4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4982aed0-7086-4ab9-90d7-59f64c74eaa6",
        "cursor": {
          "ref": "3a69092b-d17c-4052-a1c2-a54405a1b071",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c63b9fe2-0043-49ce-906c-d8f934b2b1b1"
        },
        "item": {
          "id": "4982aed0-7086-4ab9-90d7-59f64c74eaa6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f51e684c-888a-4e06-946e-cc7e946ef7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df155c50-f523-4650-a0af-096547e89d46",
        "cursor": {
          "ref": "21da0a64-4be0-4f4b-adcf-0f989f82209b",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e6fefb42-4b68-47bb-9858-d5eac689274d"
        },
        "item": {
          "id": "df155c50-f523-4650-a0af-096547e89d46",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "09856904-1ed9-4605-8cf2-55b9f276e39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff57083d-5008-47df-af9e-c928b197e62e",
        "cursor": {
          "ref": "9c4b7022-f4bc-4f87-95d2-f52b1e3d6526",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cf54c580-a954-46eb-87fa-6aea64ba2532"
        },
        "item": {
          "id": "ff57083d-5008-47df-af9e-c928b197e62e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bd5d217f-b200-48db-b59a-7403b439eae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b18fa3-cacd-40be-b457-ee232d159b7f",
        "cursor": {
          "ref": "e83ad87e-2659-4f8a-ac45-9a15abc3add3",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f4fe0891-9483-4bda-8604-acd1cd2adfdb"
        },
        "item": {
          "id": "d1b18fa3-cacd-40be-b457-ee232d159b7f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3d6aa8d8-6461-4ebd-9d5f-08239adc2c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3ea5ed-aea3-499f-84c0-5ec884a4b654",
        "cursor": {
          "ref": "bfcb7c4e-af3c-45ea-b38e-d6dab36da4ca",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e4f6e85a-f97d-4a90-b97a-9eba65a5d9e0"
        },
        "item": {
          "id": "bb3ea5ed-aea3-499f-84c0-5ec884a4b654",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f86f38fe-928f-49de-b9ad-62b1ccf4cb7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4eac0d9-b8a3-4819-a49c-69ff2d2ffb0b",
        "cursor": {
          "ref": "75d899f3-eef7-4737-9631-53fb68f4e22e",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "487b27c5-4f39-4f37-8d0e-d9e0fe492aa6"
        },
        "item": {
          "id": "e4eac0d9-b8a3-4819-a49c-69ff2d2ffb0b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6f40bbd9-b0c8-489b-a372-ba748eb2dab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa76644d-8469-4d12-8a54-27536351f44c",
        "cursor": {
          "ref": "9b67afca-e7fa-4d86-af4b-c629338877fa",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4e71f86b-3730-496a-b211-ad36accea77b"
        },
        "item": {
          "id": "aa76644d-8469-4d12-8a54-27536351f44c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f1bee7ad-c363-4c74-a7d5-a530e60c269d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018578ee-190b-494d-8d2f-7245904716d3",
        "cursor": {
          "ref": "b25b0427-918f-4d9c-9791-ef72d0564de7",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "357272cb-376b-4626-9c0c-49ade8ba1832"
        },
        "item": {
          "id": "018578ee-190b-494d-8d2f-7245904716d3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "139e2a98-4964-42cb-98a1-bc81ac8416d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3425265-ab4c-4e7b-bcd2-b55e2fd11124",
        "cursor": {
          "ref": "0171d3bd-e755-412b-8b22-b0c2f7b949fe",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c670f307-07be-4609-8644-08a23f775cf0"
        },
        "item": {
          "id": "a3425265-ab4c-4e7b-bcd2-b55e2fd11124",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cfc933b7-e1c3-42ba-9380-44b99cd41862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb04aaba-aef6-49c0-9cd8-55a32bc6d31a",
        "cursor": {
          "ref": "39fe0362-8088-4d6f-85e2-1acfbca5fefd",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "752fc316-3bd8-4288-8c3f-06f702fbb961"
        },
        "item": {
          "id": "eb04aaba-aef6-49c0-9cd8-55a32bc6d31a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2188cf16-a286-495b-96df-d57ccf8c6546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a30cb0c-be29-4dfc-89ee-29c414fa847b",
        "cursor": {
          "ref": "f98c7f5a-33b3-4a32-824a-a5ce36a56faa",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d38ca4cf-0d2f-4941-9c33-a3c3671676c5"
        },
        "item": {
          "id": "3a30cb0c-be29-4dfc-89ee-29c414fa847b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8390a728-a7c2-40ae-a83c-f6f3dc3a78bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f26219-d60c-43e8-9925-f23f73c13f3b",
        "cursor": {
          "ref": "29b39062-c35b-43d8-99eb-0f7f8e105521",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9ea72de6-457b-499d-824f-81429793b15b"
        },
        "item": {
          "id": "e2f26219-d60c-43e8-9925-f23f73c13f3b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fdb048ca-5963-4201-be3c-a3302a49f2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0b5ec3-3d14-45a3-ab15-a43777065737",
        "cursor": {
          "ref": "00abf284-3b4c-4ac2-b09d-8c9d233b6418",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8b92c73f-b0dd-4f66-ba3c-85e116610f21"
        },
        "item": {
          "id": "2b0b5ec3-3d14-45a3-ab15-a43777065737",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f4392af1-98db-4f6b-b84e-60723b25c44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f27c762-f49c-45da-8ed1-a424232443f9",
        "cursor": {
          "ref": "5ffc5996-7648-4448-9ea4-6211609ecc47",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "2f28beb0-d621-4113-b592-31791004d5ff"
        },
        "item": {
          "id": "3f27c762-f49c-45da-8ed1-a424232443f9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6cea8564-d7f6-4834-ac48-c6526e47ff2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05586eb1-e7cd-4fd4-ba1b-6eb4c15fb816",
        "cursor": {
          "ref": "aaa27cb9-3f5f-4dc6-9d64-c37ce4e75200",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fdac212d-9a71-490e-a4a6-bf17505cb58c"
        },
        "item": {
          "id": "05586eb1-e7cd-4fd4-ba1b-6eb4c15fb816",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b0125696-9c46-4cdc-bfcc-dffd255e497e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128984b0-9fdb-435d-8a53-d944292dfb5d",
        "cursor": {
          "ref": "21bcf513-2262-4be2-8b02-4d669a023601",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "42d2aae0-19b0-4c27-8192-603a05d03e17"
        },
        "item": {
          "id": "128984b0-9fdb-435d-8a53-d944292dfb5d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5dec38fc-f6aa-4fa2-a91a-c6f9f10895ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cca82e3-a98a-4e87-9cae-8bb9961243c7",
        "cursor": {
          "ref": "5b9c77ad-ac37-4cd9-830d-ca89ad58f617",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "03d1209c-7f1a-4fd4-8c4d-893dfd5b0370"
        },
        "item": {
          "id": "8cca82e3-a98a-4e87-9cae-8bb9961243c7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "73de6e12-e8a2-4ae8-b0fa-9046b7252071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b3dd2c-cf23-4427-88a2-57f34a2814a3",
        "cursor": {
          "ref": "45a2d5a5-bc8f-4aea-8b8b-c8076f2b47d9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "342e5fae-2fab-4a33-bfe0-932b9545e152"
        },
        "item": {
          "id": "b1b3dd2c-cf23-4427-88a2-57f34a2814a3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e8657a19-66d2-45f0-b56f-20f0212d8284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a857054-60c9-4d4b-a7b7-33d55d2ff101",
        "cursor": {
          "ref": "1effdefd-8e46-4cf6-8613-b86144e4caf8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c19123e3-b49a-4b30-8a98-84653a8b61ec"
        },
        "item": {
          "id": "3a857054-60c9-4d4b-a7b7-33d55d2ff101",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ae96f436-c501-49ef-8076-10b208be15e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e1584e-fe83-4583-ad1d-f07db8ca1f4e",
        "cursor": {
          "ref": "099d3b6e-c313-45f3-b565-9b475002aec3",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "01d68a71-f42e-4bb7-b97d-07a2e24e8db7"
        },
        "item": {
          "id": "25e1584e-fe83-4583-ad1d-f07db8ca1f4e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "23c55d4d-b2c1-4938-a954-29a35771ac75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622cf354-4271-4711-8ec3-14c7d59c3b2c",
        "cursor": {
          "ref": "2f0fb8ca-c707-4a58-a0c5-2eed5a2db8bd",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "08a7dd8f-a293-45c1-92fc-a0da76af58d8"
        },
        "item": {
          "id": "622cf354-4271-4711-8ec3-14c7d59c3b2c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a8fc3c0b-0994-429a-8a62-32ca1459caa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757c4d34-2527-489a-a43d-d643100ef24f",
        "cursor": {
          "ref": "84c8f26c-58b0-480f-86cb-0738a29da8f0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6a771396-63e6-4811-8ad5-4d043915b753"
        },
        "item": {
          "id": "757c4d34-2527-489a-a43d-d643100ef24f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0a024b7f-f28f-46b1-bfdd-b898ff468cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce410d9-7ac4-4664-9c00-ecddab1bc80a",
        "cursor": {
          "ref": "b5857982-b7a0-41e0-bcf7-fec67142c80f",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f74932de-5785-4ab3-bfb5-834c0f865e17"
        },
        "item": {
          "id": "2ce410d9-7ac4-4664-9c00-ecddab1bc80a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c1492763-4945-4827-a69b-08d711857e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec21d48-2303-47ea-aa0c-5e8a47875ce7",
        "cursor": {
          "ref": "76fff9c4-e86b-4373-bffd-e308762a9bcf",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7b46d1bd-c04d-46f7-9f3f-f3f919f9b0ef"
        },
        "item": {
          "id": "4ec21d48-2303-47ea-aa0c-5e8a47875ce7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "92098236-c676-4988-b1fc-98cfb0a1434d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf82f43-3330-4324-a95c-6641ac79a48f",
        "cursor": {
          "ref": "9f706e30-97c9-4588-a6e2-508a0d5703a7",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5e10c825-3db7-4163-beb1-92c2869fc0f9"
        },
        "item": {
          "id": "7bf82f43-3330-4324-a95c-6641ac79a48f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9f1b1d46-af48-4759-a65a-a1e22646bc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ff8740-3e67-45e3-b05a-daac6d5f2072",
        "cursor": {
          "ref": "3c994983-e2de-49d5-978b-12a88de9efe3",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d80b8a37-b65c-4bc9-b07e-0b2caad74749"
        },
        "item": {
          "id": "37ff8740-3e67-45e3-b05a-daac6d5f2072",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6877f2fc-8f2d-4b4c-99de-2ac6b028a3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3889c95-acd6-4cca-8647-d89e9a6cf381",
        "cursor": {
          "ref": "5dac90c8-c3b4-4f6d-8028-7ea25f3a91eb",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ce4c7b05-d2fe-42c1-9492-d0164a1fda83"
        },
        "item": {
          "id": "d3889c95-acd6-4cca-8647-d89e9a6cf381",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9d1f4363-39d0-4dd5-a819-86b0f0cb1bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4fd35b-4b35-4d20-af5d-990e5515a68f",
        "cursor": {
          "ref": "f6e03f30-7c8c-4ef7-b594-e6b4d4521f02",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "86985669-39dc-4274-a4f8-657551b4f812"
        },
        "item": {
          "id": "9f4fd35b-4b35-4d20-af5d-990e5515a68f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b7166408-c914-4812-8f14-0ef79990679e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ffc76e-4dfa-4a71-87dc-df82ad0e4af7",
        "cursor": {
          "ref": "506c97ad-840a-473d-8b1e-eb7b539271ad",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "cc953f27-6ac3-491d-81c9-3bc6884d66fb"
        },
        "item": {
          "id": "c3ffc76e-4dfa-4a71-87dc-df82ad0e4af7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ffc9b231-24bb-4f7f-962d-46406abf9b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c00da6-4b20-40a2-b26d-3bcc7bfc126d",
        "cursor": {
          "ref": "8e41f130-7190-4069-9acc-a912842289a4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3b1b006d-f25f-4df0-b5eb-1a97a9b3c762"
        },
        "item": {
          "id": "77c00da6-4b20-40a2-b26d-3bcc7bfc126d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4fd589d8-54d6-43ef-a70a-fbd692fdc796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d999ad01-c69e-48aa-b743-0d962881ec01",
        "cursor": {
          "ref": "5f8ef286-6596-43a8-9e33-9fcd1df612f1",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3fa1f1db-927c-46a1-95b9-379ebea5577b"
        },
        "item": {
          "id": "d999ad01-c69e-48aa-b743-0d962881ec01",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "578b2926-7b9d-48a5-b369-810efd931ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78c427f-e1a1-4132-bfd9-31ba98bf6057",
        "cursor": {
          "ref": "234793b0-4b33-4e93-90af-cd062e5858be",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e5629568-12ff-4d7f-9615-14ecd2c83356"
        },
        "item": {
          "id": "d78c427f-e1a1-4132-bfd9-31ba98bf6057",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "faca756e-641c-4793-9f00-42ffbe77d20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125d15d7-2779-4fe6-bd5a-461c599076e0",
        "cursor": {
          "ref": "527790f3-4b15-4b54-a55d-4dc64bb4657a",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e6f29679-9fed-4f9f-a4ff-5b038d9f5ad7"
        },
        "item": {
          "id": "125d15d7-2779-4fe6-bd5a-461c599076e0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6ec50a21-960e-468e-aa40-1d3ec7e79f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4364913-0516-4a11-a413-7ed75972aac0",
        "cursor": {
          "ref": "e7ac4d59-dc81-46c6-92d3-03f479d074aa",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "14faba83-3047-4db6-a8e0-0934a51ef54b"
        },
        "item": {
          "id": "d4364913-0516-4a11-a413-7ed75972aac0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1a1ffa23-d83c-46c0-bf60-9ca5902455d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504d7e2d-6f6f-4306-93c5-560bafea6213",
        "cursor": {
          "ref": "c77f91bb-a1af-486f-8b7a-89f8e38d95cb",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f83945ef-7df0-41da-826c-d23b6aeb2c54"
        },
        "item": {
          "id": "504d7e2d-6f6f-4306-93c5-560bafea6213",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9ce1a83f-3515-4dbd-8296-9328ed849e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1e67d3-ee7e-4f4d-9f4e-ff3a198fadf5",
        "cursor": {
          "ref": "48a0e727-a1ad-4f88-97cb-e06a34ab2892",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b9c8539d-94e5-4485-901f-634284e39b48"
        },
        "item": {
          "id": "ac1e67d3-ee7e-4f4d-9f4e-ff3a198fadf5",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3336b6cc-ade0-438e-907c-20330a9772ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ce5fa5-efb6-4f67-8559-a750679652a1",
        "cursor": {
          "ref": "99b898c8-b242-45d6-b911-e06c50f18b00",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "687e29fa-5b7c-4198-8985-83834b039617"
        },
        "item": {
          "id": "19ce5fa5-efb6-4f67-8559-a750679652a1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c401a8a0-92f4-489e-85f0-455d7503ba46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2687d364-072d-47de-ad59-cd9327ec28d7",
        "cursor": {
          "ref": "aa0106e2-bee4-4842-ae91-050f5023921b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "84a191d7-c13f-42e7-8a75-f7f464f4d3d2"
        },
        "item": {
          "id": "2687d364-072d-47de-ad59-cd9327ec28d7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9123f249-a570-441d-b9b6-130a82d75757",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60633974-482b-41d9-a179-b7303e724c0b",
        "cursor": {
          "ref": "db071ae6-5f32-4637-b45b-1aba9883aac9",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "58b63ea5-65c7-4805-b84a-d2e2844cefb7"
        },
        "item": {
          "id": "60633974-482b-41d9-a179-b7303e724c0b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cc818fd8-40a2-4154-9e7e-9b7b9d4cb14f",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a179a5c3-d2bf-4ad7-9b26-7b79ad6d4c4e",
        "cursor": {
          "ref": "55861862-22d8-49bd-b485-bf0504fd2cbf",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6df3b3d9-578c-4ab9-aa2f-6f05809cadac"
        },
        "item": {
          "id": "a179a5c3-d2bf-4ad7-9b26-7b79ad6d4c4e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2261c9f9-270b-47c5-bca4-400071608d50",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ecd257-0fa7-4f33-8c1f-e46b4c31cf6b",
        "cursor": {
          "ref": "efbf8b06-2088-49ee-a5a6-79e5cf60dea8",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a2b6334f-6a56-4491-a73d-1f48e1b4ecb2"
        },
        "item": {
          "id": "20ecd257-0fa7-4f33-8c1f-e46b4c31cf6b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9684c364-44df-4ba3-a12c-a7f7d418f9b3",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54213d1-e1d4-4ac5-a634-c62f7e449ce8",
        "cursor": {
          "ref": "03f49fb9-9b79-4925-9a88-0d0932a8c0b1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1dd35486-a2f3-4463-b8bb-2a935e502eed"
        },
        "item": {
          "id": "c54213d1-e1d4-4ac5-a634-c62f7e449ce8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f316e5dc-2dcf-4687-a50e-22b7128e4d16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54213d1-e1d4-4ac5-a634-c62f7e449ce8",
        "cursor": {
          "ref": "03f49fb9-9b79-4925-9a88-0d0932a8c0b1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1dd35486-a2f3-4463-b8bb-2a935e502eed"
        },
        "item": {
          "id": "c54213d1-e1d4-4ac5-a634-c62f7e449ce8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f316e5dc-2dcf-4687-a50e-22b7128e4d16",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db204724-ca5c-4cf6-8d7d-f1ed2bbf3752",
        "cursor": {
          "ref": "b228ddcc-b941-4074-9f70-c2adace35864",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "df08f0d9-faae-454b-88d4-5a9424734fa2"
        },
        "item": {
          "id": "db204724-ca5c-4cf6-8d7d-f1ed2bbf3752",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dd358f53-bcad-4498-b3cc-fff7bd15d429",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84241c90-4c09-491a-99f0-308d4263145e",
        "cursor": {
          "ref": "198abe74-ee85-42eb-a761-b6044f7fecef",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "61552159-a34a-48fc-a69c-955df6d79df5"
        },
        "item": {
          "id": "84241c90-4c09-491a-99f0-308d4263145e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "29309e9c-28c0-406a-bc9d-f9f8337adad9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}