{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "115436cd-70c4-494c-9e31-8c835ce050a9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1dfef00d-5ddf-491c-b681-4198ca8dd81d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9dbee877-50bf-4098-ad32-2aea5ee1b0fe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aea412b7-3f1b-4fc6-a3ff-7faa616c12b6"
                }
              }
            ]
          },
          {
            "id": "57b812e0-2e24-4961-aac6-14d3031b019c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eadf2db9-60ff-4728-be79-159cb9cee1c7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2995fd2a-11ff-4e62-a5ca-91a8706f8624"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d027d139-ed79-431d-bc14-8d99ddf519bc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7d1ebc6c-6eda-4f05-bb4a-d6de5dc84079",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad8389af-cff2-445f-abfe-9b32b08e27e5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3a201ff-5c45-403b-88ba-5db75f363db9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "724f6c31-5f55-48f1-ad45-2f2ea6371ba7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0706870-f467-4762-9c50-ecac9aff032c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "981ff029-6060-4d01-9812-07fa7d879eba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1f879d4a-9bc7-4e99-9727-c7eea50c8e43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4db8f58e-6dd6-44b1-b8a1-6d7961952836"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bb9d971-9077-46ba-98ac-1585499ea4f3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b1d7d41d-7588-4acd-bacb-4c525831a9fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35b15aaf-75e6-46a2-8089-123a939cb79b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc88f503-de2f-4dc2-b1fd-14ff696188c7"
            }
          }
        ]
      },
      {
        "id": "ef459f03-3818-42df-b74c-bbebba831153",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "855b1701-a60b-4edb-9da0-f202651ce203",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38a48b39-4c29-4dc4-aa74-02abde4abb09",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "77ad6d4c-eb92-4d7f-85c9-2807a6819a33",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cc7cb5-1989-4fee-8d97-5aa79228f16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3724162-f2dd-420a-b3d3-849cdce2cdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a227e4-2b0f-4a06-a2e4-d7a3a0c665e4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d1a2dc-cd81-47f7-933b-eda4c9032eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "781142f3-bbcf-4a0a-929e-ea98c93151c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab79d09-ba21-4436-a690-c930ed48a91b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36f57bd-baa1-4f85-879f-9265a0595d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a93b4930-410a-40aa-811a-51fb8a2aa453"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e70d84f7-b69e-4361-b003-e52f73a43224",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e646c9be-fbb4-4a40-92c9-047a8c36c673",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceadb662-b01a-47b5-a367-6a3db8fcadf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecdc6c76-ac06-4e0b-bf9f-dbb341e74f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55754ae-5840-4709-91cf-50dc9773ff71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6e0068-0f40-4560-8fb4-c29362991db2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "813da1e4-0e7d-4bcf-a5a7-d5d3711552e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da6ea453-c146-4135-accf-082a1699eab5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b61729f2-fbd1-4a68-9148-b4add53a4a62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1349362d-2fa7-4f4f-82d9-794edb3d85de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05d1906a-6a7d-45e7-b2e3-c0888ca7e0f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4d8f0ee1-4c98-4b02-aa5e-0f6a6280baca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e3de91c-313b-40ff-a09d-18fdb7eb519f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "735e888d-6f86-4ce4-9ba7-56fe2e820131"
            }
          }
        ]
      },
      {
        "id": "14b8be34-cd69-4605-b415-8f01a9f1ec08",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "450f5117-71fa-4546-8feb-b6b6e7996f5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebe3bcb9-fd17-4a55-9d03-ef89d10fe211",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f9e4da6a-29de-4563-abb5-cf04cea4da47",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6a89aa-4679-4ee9-a2cf-51eff3fa3320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10470c67-cb98-420d-ad45-19f58f94ab3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841505db-0826-422e-a928-2884a8f37370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25de271a-7ed6-477b-988d-9bd4bc5bc157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992e3186-138b-438a-837b-beca3e4ac763",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eee4898-a4d8-495e-ab94-663927021a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d07a3b7-b254-47e0-bdef-2c67b88f7999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bc9fc8-ee0f-4b4d-b55f-7a57229fd39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "306d7862-d367-47ee-9d24-f25b8d5bf274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851cae0b-8ace-41fc-8c47-4177641feaf6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fd531e-f9b0-48e0-9416-ced5cceaef96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22475bf8-5f3b-4c6f-8c9c-58f5b347db04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5baa435-dd2d-48a5-ac01-89715eee1edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6c876da-ecfb-41f1-98a0-cb6850fc75bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782ad043-6ced-4bc3-aaf8-8c2276c6a99c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773a8b99-39a0-420d-9efa-b67454fe3122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49bc61e-5e52-43ae-8489-33826292be5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b6fe3a-fb44-419d-88cd-ef918814d3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5c1b098-c031-408d-8626-70e2ea95a9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7947ef57-3850-4a3c-a966-6aeafd544366",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4299ca5-7043-4c1d-bb63-b904afbddfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953c9179-67e0-42d8-b033-681b27d01a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042f7d72-b3b6-4686-a32d-4e11fe5ce3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b4fa033-d029-48c8-97ed-83ae0216b6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45892b3d-df30-45ae-b6ed-b4ca94d80201",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a91213-b68f-4fc8-80ca-f4b0f1d27e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75f20cd-8249-47c3-b206-8cf312f1d0d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2233a3ea-fcdd-4511-8bcf-a4b88393fd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03c9e5fc-cc29-42e9-adbb-5a62f75d66f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dca81ee-dc12-46f2-818f-1a787547a35d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1728f0-7aed-4485-a055-9b09bc8e74e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ac979d-e7fd-456d-800d-b71c056337e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cae1612-4905-45d6-afb0-aa2d661bf554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6841e0a-5117-402e-b781-5c8924243798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717e91d8-5a37-4a0d-8e33-1063da8ca09b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fcaf2f-aa40-47fc-9d2d-a2f4ba6c30a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc688034-ba34-46c4-a4ca-c1429010b3be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851f2419-af0f-4856-8f36-8a3ce2c7ade0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "862a37bf-a8bb-4462-82a5-dd420fa241e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb7c2f4-848d-45c0-b127-ffed13fb0fb4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8a6353-1a09-4795-8419-95fbed7a02da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e7f078-0ff3-45b1-9053-5c50393ce19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e2d818-77e8-4808-becd-710647c93f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bb6e856-0249-46be-947a-d0613142d5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395e1d03-d713-4b95-8b16-c0b5a9cd7d94",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cc69f6-2887-4435-809f-fa1db180520d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375e35b7-c601-4954-a06c-0061ec391163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbd5134-416d-4a01-9b5a-073a33314dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a42231c-9b08-4458-86a9-b069875940af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c1d441-f7c8-4921-adf7-2926ddaf6b62",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592d1c1d-3ba9-4863-b5e7-2d3de225ccd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1784c1c9-9dd9-482f-8759-9c65070733d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4935b0d-0e1d-44c9-943c-e7f024c2d6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81b027d7-5908-47d3-be0c-1515f4c3afce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9685ceee-1715-4190-901f-f0848c3b0b80",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76b2454-6c24-4e1a-95b4-3b724a094c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb39184-e4b7-4dbf-8ed0-b32aa54d36f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2abcfab-96f9-4041-9003-7896c1b6a2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65113378-cc39-47bf-a40f-62b7de8e7ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b12a140-e4b1-4ae5-b114-368fab164afc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5bea75-9e48-4b8b-9d10-0d9afcc49212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598944b7-3762-4405-9c3a-f557da2e712e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32837964-f549-4b5d-ae9b-b98b96ae662d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd264148-9dc1-45b3-9a74-b89d1ddd1cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04edc226-4598-4497-88ff-df53a2858f65",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570ea887-9553-4962-9c4d-26433e39c4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98585ab3-ab48-40af-874e-1700f7b10c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7456d3d6-1401-448c-9037-79110e67c5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "294bfea6-9b54-4126-b823-27b143c3d164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0af9356-2ec2-4492-8116-4bbbaae5dc4f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e894e066-c8aa-4872-8447-5f45ae7d34b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2607e5c4-0024-4a31-8794-822426b49b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfaa553-b859-44d8-b052-ed70011ad4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a31c4a8-683e-42d1-bb35-359e4c1ff0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b67229-685a-449c-a555-417ce3d6b020",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aabd443-3fbc-4286-b271-2e70c3710b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f326be55-10d4-4492-b6cc-72111a7b7955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccf78fa-8da9-4c5d-a5d0-d1aafcbfc62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "885abe14-aff6-4c13-ac1b-67f3f41b60a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb0baed-36e3-45f5-a6f1-e8ca9871cdfb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e0cf93-fe14-4a9a-99ec-3ce8eea69640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51685e01-d34b-4ed6-a5f3-2287295ce271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f609e39-49ae-4a95-84d8-3096f3bd4197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "669c613a-bb41-4004-8845-cc559c98e7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ad02a7-b072-4455-9fe9-eb177a80e862",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff581f4e-f62c-4d16-95ca-8ca25acd1e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8525019a-7308-49b9-9735-324fe467d36a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d08cd23-b130-447a-a66f-322a9edc3d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "477b0e25-ed8b-45e2-b633-e85d86e51fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe89197-76c8-4539-bb44-d322577d06ff",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee4cecd-7792-4636-83df-172298f3a997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28336407-7225-444e-8f4c-9bd2050cf596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29378ab-c372-4d4e-9e66-f7b1700e5faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87ff5fe3-6193-4504-93b0-318fc5e26a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc6d5f9-cc30-4b7d-8eab-2afd9a4ea232",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e89aeed-7f15-4df6-9fac-0aafee825db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96095756-bab2-4c5a-b7a0-2e97a38dc9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c0f4b5-1056-4e60-a820-ffa85d3be9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d77d4a60-c480-4629-b9b3-f7a13587094f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450143b1-418d-4581-9418-66382d3b3925",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24879313-70d4-4578-ac1c-0e483f1e4780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd53aa4-b39e-44e7-b0e3-32ba285feee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79734955-2d8d-4f76-a5ea-5dc04f312406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "706b2da6-ddd0-4297-911e-d6eb149c65f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9dc465-39ee-4160-9acd-0742dff3313c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbc6ef4-e9f4-4741-875e-1524b6d7e868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cd137a-92e9-47f4-84b3-18af4536ad15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84196023-ba65-4f1c-a75a-6f7089990da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "712fb04a-a0ff-4f16-863d-6a1bea5c331a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676d7ef5-62d4-4626-aad0-dbf3d206585b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77185061-f96c-4e86-baa9-46367e71624a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b031c6-caa6-44b6-8991-d09111e4aeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcae45c-6086-4464-b7f6-4ff8015ba937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e13eaa4f-95a7-415a-b563-d7ca16614169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cdfc1aa-59fa-4438-a95a-960c0a2f65b3",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d937b9ee-a7b1-4d1d-9ac4-f9178b625785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c239df-151d-4d97-90e9-15b762689123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58017e2-1165-4e1b-b759-cf49da324bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7671d7bc-9288-4464-aef2-6f6e3532c320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd765d4-b06f-4ace-a15d-5f31c0381e0d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb24c08-779a-49cb-ae35-bb3c50d8dca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f912a87d-0ba8-4127-bc22-bb2038dfd639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba582b0-08e1-4347-af6e-44ff5aabc88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1661cd-065e-490a-992a-e51473637151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9292fa-09db-4fa0-9011-a9f65c9d5ac9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394994f8-bc34-4f06-80dc-edf16c9390af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52539528-829a-4e61-9ec3-e83f5a19a5a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba6b34d-92e0-41e6-a79b-d3fc7e542099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb3b73d8-7899-41fd-bb7a-e9681e59e191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fb084f-07ac-45d7-9701-88cdc6c511df",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243f2250-40eb-4b5a-855c-5cc1c47118f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e42dd8-f3e3-4f25-a491-546f6e7ad7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba99177-a790-4253-8f77-994804e246b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39dc1bbb-771e-470c-99de-8051d2eb669b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6ac652-bb0a-4db7-a004-79484fff74ba",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1a95bb-a3aa-4ba2-ba76-36c4d6cf2bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c29337-b185-4c7f-986c-4c6c8375c198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0889bc-27b5-435b-9ba4-2b1d33332e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c5bb80-5f46-4e90-9621-5d70d489be74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928f1477-21f2-4d10-96c8-ee405b1c286c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08bd397-a46c-4c83-89d7-ba4700b84fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9df0f47-6ba5-4b28-b92e-a0d09300c19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb692ddf-241f-4f88-8140-d0a722b538b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91f63e43-5c47-4e8d-a971-6902f4bbcd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5558e1a0-99aa-4d55-9e28-4c8ea27dcb62",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914ee45b-80be-4e02-9c40-94bd0d901161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749ed1fc-2972-4b0f-8a37-15917a66163b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f532b0d-aad8-4529-a736-0ed942896521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6158d4aa-0b10-46f3-b514-0c9b4fc86b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1111eb40-1cc2-47ee-844e-963968ad2623",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39494e1-e14a-4770-9e91-1298ff2db558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d8ac5b-9baf-47e7-ae8d-fce9eafdb3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ac5033-457e-4717-b412-e19378475702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aae32c1-4c01-440c-83b5-636f489b2092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c38df4-2041-4c44-8800-3e4fb9bf6fd1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b5bb48-1c58-42e7-bff1-cb5d3d66adc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29579117-7d46-4a57-a278-89826a98e789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dd812a-3d49-4747-bf8d-ea58f7dc770f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42a29e27-3b96-44a3-beca-754aa057f1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cf0fd4-37c4-4fdb-912e-b8356334b1da",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08779c1-e433-4893-9072-3d4a0964deae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c154340e-d627-4dd6-b4ff-4b71973989f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc9a858-b37b-43e3-8659-b3341ac4973c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0adf2f30-7d33-47ee-8ec8-93158d440fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9197f6-a791-4fa0-b743-b40b41e1689d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f80c87-7a88-4ad6-b828-ee4cc2017dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc1327a-466d-4337-84c0-6a8a21ecb07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a5aaea-d582-491b-b146-0cb9afc3d47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5796d7e-7769-494e-8d05-e4e3cc523390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587878b9-7316-4dfa-90e3-5509fce75b0d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a44d7e-32c1-430a-8a57-580de9331b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c068a9-ef3b-43f5-90e0-45b41f795bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7021c6d-e6a6-4e55-bbae-db0acdf0ffe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5d94228f-a7e6-4cd1-a4c9-8e5fd8caabd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e0ecd0-bae0-4cbf-bfae-398cbbc8fe2c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230ea6ac-8dec-421a-89e7-2c2f2136aa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c9f0e19-e52e-4502-87aa-0f591de33850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0b155c-4536-42f9-98d7-f6d53ca52969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "933b04c7-3d15-43cc-bcee-46629c21de01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf92870-f190-4508-b64e-b1f4d1584721",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7552ef-3460-4439-bf1e-8c022260591e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5821bfb6-7799-4dea-9da1-47325075b665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3b0bac-778b-4e8e-a9f8-f48f57c4a06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f83904d1-5623-4c1a-97cd-64bbeb763bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b725acb-38df-4ceb-b04a-9edab488a7d9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cd10ef-5cef-4cf6-befd-955ffb15522d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d441314-c841-45fb-b9c5-89463c28dac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cbf11d-bf7a-4ad0-b165-1e0272043bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5245bd69-a79e-415e-8985-6d1328d4adc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e441df1c-2b3d-4de2-a848-db2a82be922a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee34b2c7-56e5-48b6-8569-0f5b8eb5b0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57692489-2da2-47e8-9b7a-2926d9338261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193f1964-0f8c-40f5-ba38-5af462cc64dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89e86e2c-7ef5-4c24-a421-45b189bb74af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6d652b-b6a7-4222-940e-96492992e643",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130759ee-c64b-4167-bc77-a96a8ede802f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a978262-3ef9-4afe-938d-15893a83b5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b77d37-9129-45d3-8726-65238cde1acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd46a77-b47d-483f-9396-ab1586e72db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5e89e6-5a6d-4d9f-92fe-008c80f6010a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962103aa-ae7a-4e44-a128-a271dda4a8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3d03e2-b199-451f-a144-2c6b70861368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a59812-d9f0-4426-8647-cd3e15f534e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d9db31-15c9-441f-a6de-580382949714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb1dfe8-703f-49a2-a64b-34465e7c7ef2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb65e1a1-8eec-41b2-9277-8d49154a7d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8e8f5b-8fe5-4e25-95f5-aad5e3337fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926f34d5-309a-4c8d-9d76-54a6b3afbccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f171e313-8c6d-4413-8a82-c80f67e9bdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab00962-df3c-4e22-a4e8-20683f6c3aea",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbf412a-9d47-4831-8c22-fcd4244ef507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24780765-c1b5-41f4-b261-b5c3fa69f7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d05762b-a437-43c3-8fe5-3dccfe5b1c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b764dc1e-c3a9-4487-b93d-6c2f51fd7d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8effb6a-5dc8-4338-8fa3-b6601f2c63d0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70a15c0-16ca-4ff4-8732-116f211a8d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa295ea3-f530-4c22-871e-7afc9adb9e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de39934a-c49f-4253-b8d2-9395046f1608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fe3afa-5bcc-4fa6-acae-5cb237fbaa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0062e7fa-8e48-4c4e-be06-0899adcc3b9c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3c200c-d73b-4ed2-ad4b-4b7e4d7e3bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80417c04-a1c4-41eb-a0c9-f8e0d90ceb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3bc20e-2f96-496a-ade1-f85a4c72332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f10203-59a6-45d5-bcbd-355faeecd0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164b6600-594f-4f65-af50-009771fcb0b3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95b1358-043c-4c61-aad5-3fb907f3cbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c360227e-d11b-46d0-9340-2cf4f9188da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee8a159-1db6-4354-ac18-cb0b3e027d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e758ef-9e5a-4fa9-91c1-2fb3802fb364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e10083-a977-4fba-9c4d-bdcc52cbf338",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0932717f-7dfb-4dfd-b532-629b8e3841e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29fda22-3e60-45c6-b65b-4f634cf3a708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83353e0-5625-449c-b177-0dfe06a5ccef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59df9e34-03e9-466a-912d-991ed8e37fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3264d7-6a1f-433e-b60f-f416c93c4254",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a1de7f-4ba6-4ca2-a31f-3956c105e34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa5ea51-9f8e-41bd-8a05-63521126adf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167a76b8-227e-4507-8b50-40df84f128a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19aadf36-47d0-426c-ad1e-520ecc09111d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45895663-8c5e-4524-b062-a8f37415936a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52eb4223-77af-42f2-85e4-c18f318d3a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4b6459-762c-4a2e-9165-49a948038792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdb5a9f-451a-49cc-a3cc-b5098899b2a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "543d889f-c6a5-42d4-89be-8c38a8106dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377855d8-1dec-489a-b0aa-e0c7c0703810",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933fccf9-1b06-4507-8dd0-10094b02033a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda81460-8ba0-46ef-8f78-58e255f0aec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e9fa7c-fbc8-4b0e-8fb2-9e5b989b8e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "077d22a3-c5de-4976-8b33-f4399eef477f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612bd73b-01e6-47dd-89ea-e56be0bbd8e3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5de198-d10c-477b-b13a-1139c97c15af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797e00aa-bea5-40e8-b7be-e7399826d155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85590ff-8823-4353-96fd-12aaeaad40d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47b91f3-3687-4dfe-a083-bbb81c5fa607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c7d42f-0a72-4b88-9630-9f33c47a6480",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5badc0-4cc8-4e92-8104-cd7a5c5eb816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099ad473-0f00-45ac-9bdb-83b4586fa517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc22a04-ce47-4bd4-acd8-9703e3b1e3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "561f2234-054e-48c4-aa20-d5459f583369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b908843-bf26-4241-a415-79680b694f9a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9be2f24-a861-4053-91a2-240e604944a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03fcdfb1-f95f-4bb3-8250-14eb2341bfcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2b57d5-1764-4ed8-a6c1-d1b6f47d112d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82077b3b-50f4-4d94-a2f3-30fe9ec4b163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9343a4-b8e0-41b4-af73-ca7c9dd89ea2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9e0754-3e64-43c1-9d45-9eea5938fc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdb868a-b95c-4171-92c4-ba893e3d2b7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cc4b13-cca3-45e9-b463-74efe1f01661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b07855-c024-4b8b-9325-af1ad4082f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717ee05f-b5f7-48a8-84db-48cfc981b85c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777e50ef-dd98-4a84-95f9-0c601fa73951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd88ff50-0e25-46a8-9fb0-38134ce08688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ee8676-708e-425b-8329-6f408dbd9ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b4d442-6631-40fb-99df-93fc82fb3dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ae69f3-984d-4021-b889-4934299725d6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c2768c-2a3c-4f81-b5a9-4c5c3a48aa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cbd6d5-0e6b-4aa2-8389-3cae87ddb4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2b4d17-94ee-480b-b9e9-7a7e9fd86af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "934388af-3b99-45c2-a461-49efe1b61f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0760cb-3d48-42c8-bea4-8c88430a2334",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05307e5a-93cd-48d5-8e67-d30f1df3b1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009dfb00-11b0-4960-9e5e-89e2eda2b3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb2ecc4-50f8-481d-89cc-8962132902bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "37ead6a5-81ca-4a94-86ac-c30f48079b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5d2b86-8586-4ae1-b4e7-95936b0ad380",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d72fac1-164d-46b7-a37c-1f6bb01348a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db36dc44-c71e-4054-a77b-9fba2e714e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1917b583-7213-4d02-b937-3bcbbfb903f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "df51f2e8-b507-48ab-bff1-2cd93f5f391d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1809e425-5b93-4500-9548-b2c6ddc199fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f560c8-d610-432a-bfe6-eaf763ca8992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee69fe0-67e4-4882-bad0-7613d6ba26d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4eb6a37-a23f-4479-a818-04b218b15d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12b31898-ac8c-4076-9c53-4d5bdd38697d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3850357d-9105-4004-9ffb-a41366f0ec36",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b748d5f5-93ec-4915-8868-650d230dcaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c2f628-7da9-4bde-889e-bb72a1d5b037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de52c90-847f-43e3-85ab-a47a8c48f083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "37a9121f-8938-49b5-9d51-18fad0a8f19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d22767-88d5-45c3-a909-d7ffd7124650",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b72511-5bea-4c66-966a-3b10b05f266b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f10853c-86cb-4322-9b62-76ceb42a21fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a69de8-d445-4b50-b320-26bc1733bce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "46c1c617-ee92-4e29-82aa-8d5db5aff8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abe3355-e004-401a-9bb8-968053b58718",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8264eb32-c5a5-4e7b-95bf-3a3691802ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc1600c-be7d-4e2a-9d05-cc0dc6037d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e728b6-001e-43f5-ac5a-679b72486700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "47d7e868-6572-4a88-9434-7450a8046779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e215a6-5bd1-43ec-a37b-a838e290549a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92e83db-8ae7-48f8-b34c-15d296bfa615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94938174-8d1b-48a5-b778-63df2d822a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa336f7-95d0-474f-92d2-8764192a047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1d0184-1f6e-4555-aa93-cbbc90895da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a20a926-c2be-4b6f-88b5-645046e778ee",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6082e94-7719-4c8e-8fa6-389d79942c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44530358-b95a-469f-9cda-b76bb18b10e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87865845-ebf2-47ea-89c1-602e9ffc2c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f470cdc2-b27d-49f2-be3a-07739528ba50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d146ea-2324-4acc-8a63-18b1ab19e7be",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53486f03-7caf-4c5c-aea1-194a1630efa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d497efc4-02a5-4133-a326-7120fbeaae1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eef37aa-92da-40f0-8382-7481d89e2189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "738abbe5-14a8-495a-8f73-b69672e1c420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d089713e-ca79-43c8-b5d0-22eaee8fc9a8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35892d1a-0e5f-47a9-9d14-79002bfcaf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "447e86a3-96de-497c-8603-f043024fac53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e28994-13c4-4eb8-bd92-50bae6718384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b1fd85-4d06-4ce7-9812-595a9ed6aec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5464bb3b-7a67-4f99-9a87-a831abe24e77",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b6d77b-ee8c-447e-a9e7-b070f14551ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b6c27b-2c2a-4f7c-adde-96ffd6153da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec161e7-6ffb-44fa-9d88-f778b98559af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e95c7b-98f8-4978-a942-9d2a436c047d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3948cd3f-abcf-4511-992b-343dae085d31",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe2470c-dabf-48f5-bdbd-810258b30098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d48074e7-443a-48f9-bc89-eeecf807ff78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95aeec9-a829-4d78-946c-7f917b9d7ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f8322b-8b38-446b-a58c-b28a23ed9f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42002e46-a37d-45e5-8f3e-8286ffae8091",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e71955-b6bc-4ebe-af5a-9f204e6ab4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22abf2b-b852-4eb2-8afa-2309eeb51f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0652a0b3-8d31-4044-909c-15dddc66baec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf448c1d-c9ae-4b04-a4c9-ea9b49a9cf75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fbecef-6986-4617-beb3-65c94c6d019f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac4a995-41b7-4c27-9af5-22b97b528519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c31045-14b5-4df3-ba64-75441794fd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1806d340-77b3-4aa7-a17e-cc661f1abcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "694c1bf9-cc30-42da-9899-26d47893ca6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e60f20-c531-4baf-bdc1-046e7a1b08ae",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0ac800-cd72-46a5-945b-7e2110c7f696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb41c7c7-af6b-4fda-8159-4615f9093e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f352cb4-93b6-4188-b2aa-44d02d9962dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91069852-947a-4337-af82-47aa9257105e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038d5bb4-bd91-4bdc-a4da-c6ca06c8245e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91029641-8ab9-475f-9df0-d0eab520ffc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce9d7df-c7bd-4ea4-bcc0-f2896fc3799b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd04931c-a389-4b7b-9a6f-a20584b2934a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f2aafd-e071-4bcb-b85e-c1df865a58df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cee132-c0da-4fa5-aa74-eb2e1ddc3353",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88c5fa8-83de-4040-a99a-995313aa4619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c47ec686-cc28-48a2-b58b-1646de6d87e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d6b743-49f8-43de-9cb3-c60beb618516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17f93ebe-3580-4157-bf2f-f19837678f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbddf21-782e-4943-9d02-b94b1e41ca99",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b74098-d54d-484c-a731-ac51d8711462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee28459-c8b2-4f1f-a893-4f49c66caa6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696561c7-ad50-466b-966d-fff6b71d43b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5299ac22-8796-4cc7-b032-d649bdb12d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e277c91-e85e-4d3f-9137-05bc4fc9eeec",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0933f3-1d96-4f46-bf2a-e5b40412fbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b597be6-5d7c-49b1-9dd7-d9a85ccd4b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0baaecdc-32c7-48db-9d5b-117e2b2f9301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca207619-1893-4981-9e2e-6943f1542242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd047e59-c3ce-4f73-9336-d4deff286b35",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488345a0-b04c-42ae-8db9-b24a6b026194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f02f9b2-07e0-4e27-bf8f-d179a6c0eaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6e5881-45be-4582-8825-b8689b8b5130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e762b9f1-c30c-4b79-b6a3-d7c077d79541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e015ae91-cb2e-4791-8bd1-131ec11542f1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d36bdf-cd45-4930-959b-778260c0fcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db721875-a32a-4577-89e7-0655500278b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c219bc-8d4b-404c-82c7-d2faf8cad14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b03ad59d-549f-4f60-a2ac-cced1c593508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be3f5f2-3d96-4747-90a6-de899e01cf4d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16767e0-f680-4ac7-96a7-e2916248f8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a3f98e-df43-40bb-9587-e54fa1139fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0ea8e0-aea7-4bd1-9326-6ef72e826b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c22aa4a6-6b33-4521-90d5-8bcc23e7bb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505b6df0-651d-4a03-9d13-4110dcf7cad9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17477c27-936f-4907-a770-8768f78934d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2994f5-b2b1-4028-90b2-614c7c583e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8f215f-8611-4337-9e14-8eaa07037d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48bfe440-b704-465b-b205-1c6b26ff476a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a32a1c-fb5e-43f0-81a9-e13f3d3c7f7a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f46dd9-0e7e-4a26-90ed-c239cdc0d2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9525c47-143b-455a-b879-aa970babce4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04df27ac-9603-4b71-a70c-db1ec13e518b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e129542b-41c1-40fd-92cc-d9856416a54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7f2089-545f-4238-b5cc-226922386774",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a87d80-d856-40b4-8984-8d59de63402f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0a4c86-743b-46bf-9ca7-986c087cd605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a49cc5-14f0-43a6-a8b2-620a913443d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "831b8622-5978-4cbf-a911-f24cce9f3c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d01cd2-6d98-42dd-8576-a583abcd6a3f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1544f961-fb23-42c9-b9fd-1b1f814f49b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed46440d-fd34-41c5-b843-0f9028f60ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e441f6-a822-401a-85ea-b9387860c56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f123a634-aa07-4bf2-a70b-ec579aa0737a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbac069d-b19b-4ef5-bd07-a3f7fdff3b25",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d971464a-1bcb-41b3-990a-b7b7b983fba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e665c4-7aa9-4aef-833a-147c1e1ba448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e44a18-f534-46e9-83c2-ac6e7c91c4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "197a35df-bd42-496a-903e-b28f92639bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c712454-ec84-46c4-b114-f2073ce04b98",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24434ea4-08c0-41b3-b5a6-ff2c43f6f58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d921e9ed-ca18-440c-8318-63914224da7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8049398-953d-4583-9890-1f142259ae24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d96f0da-f363-4e44-a219-da41e0818240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de39048-df79-49b0-93ad-a77ed769a70d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594cea6c-2627-409d-89fe-4206b9aa7fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab05ffe-51e9-4ed8-bb25-599cb229c55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fb9253-94bf-4302-9a5b-8496e3193337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff328c6-3c3e-40e0-bd58-a1ba35788a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6c415b-d5df-4917-89ee-09a159abb840",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cccb27c-038e-4bde-8bca-2aba4c08ea7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b03ea7-d92b-4302-aba3-ba5baa30471b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05449666-b7b2-4d6c-bbf5-05e718e6a11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1404ee84-351e-41fe-b482-8de7d098ea5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7693603a-364b-466e-a964-925972fe434e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdecd5a1-5c51-4f82-9120-a8b771992126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa16464f-ad6d-49ab-a8b3-b816a7b8e456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a59ee3b-5404-4bb8-99c3-415c17de7280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b629abe5-34ee-4396-9e25-d20ec127ca92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40021109-3f92-45fa-9480-854671031827",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9f784c-5be5-471e-999b-fe16a18fddd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9cefea0-ff5d-47c4-81c8-39cb928b7a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9214c95f-9d3a-4b54-a1e3-4e9dc4bb84f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e769374-d330-4f00-8d65-e29d72e39366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ab36a6-1f52-4c18-81d9-96b72e01d870",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fccc1f2-99bc-47a7-91f9-0fc900792a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a170954b-4df0-4dee-9a92-5427b53a8fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e423c978-b8ea-4f54-8e98-b686bc2bdee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a20c0b5-a1f4-4418-be68-12ae28f104ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d46675-bde0-4d60-a835-0b4c9b86444b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cc17e2-5961-42f6-9c1c-3503049450af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7f0ff1-9304-43bb-8701-605d0763a824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2dc854-74c0-4d2f-826f-69de9481e591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2efeedbc-7025-4e99-89ac-bc2a714434dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075cb60b-9d40-49d7-9ce4-5e689f35e89f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d429d195-3df3-42dd-8e0b-5d32ac80df4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0f520e-97ef-49b8-8d17-2c2bfa2d9c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c027f94-0086-418d-8a2a-6582ba2eca97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "16269df7-e75b-411d-af8d-a84998975217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9840eb06-514d-4cdf-8717-9aee3760ae6b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1671952-3c21-4099-b947-94f464080708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c6533bd9-f66d-4b41-8217-a9bb766328e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e67f97-3c55-4627-93f1-63e4375f4bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9b0ff8-961d-498a-8911-01dbf5237203"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35e8c434-b537-4c11-b128-bcb0b03e46ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad815fe3-42bc-41e8-9ef2-dd4f982b2eb6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3d5e12-a3e5-41f6-829a-9f51e722d8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b8c7085-d04b-4c02-8ada-cc41fa89474e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3310badf-18e6-4860-bebb-4a0c4925062e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd033064-a829-4836-a99f-d249478a0b43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "643291f4-90f6-49e2-96f9-3c69a7e4a6e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b97306b-f395-4282-8e9d-955eaa20f028"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "262c326d-8006-406d-8c40-82f09b094d5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74de6678-3fb0-409c-9233-0d52602eb991"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01863c2e-4665-4e98-8fbf-8b46d35f302f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b62cdc3-12b4-4362-8b9e-202ec5d7ba03"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c80a2b95-5e19-48d5-a737-c770b9e58165",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d3fd9150-455d-4ff2-9178-f747a9b99011"
                }
              }
            ]
          },
          {
            "id": "1906f46d-d3e8-4148-adae-f88279c089c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dafe4cfe-3c03-4e45-8664-2b1422219bf4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fa94c71-fed9-4394-a9a8-d54d34b58472",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad7fa389-9bfe-479e-a21f-1bc91f52aca3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c563d85-d2e5-4928-a484-ae0f06d24614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33cac392-89ec-4661-9c7c-b5d451e9a694"
                    }
                  }
                ]
              },
              {
                "id": "6e61c7c1-9441-4e53-8f66-b465473dced0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09ad78ae-6c49-4c67-b749-5a187c24de67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ffb0bb2-517b-48cd-8de0-f280ac437821"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebc2a63d-6246-4647-810f-c6a1ebe3b308",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "74d6961e-4173-4220-990b-ef820a5c968a"
                    }
                  }
                ]
              },
              {
                "id": "9b8b4087-b688-4330-8c8d-c29e38c72880",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9518a576-9d4a-4969-8ecf-2dda82d0ffa6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0d1e0e4-f46b-4cc2-8ec4-1ca9cd06f572"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf48830f-f54b-45e2-a8ec-54f80f7d9ec5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c01fde2a-48f8-4171-a177-a695805baf0d"
                    }
                  }
                ]
              },
              {
                "id": "9f1e79f9-6296-4cd8-8b82-9969d8ac413c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "824f8431-005f-4d3d-9c30-b5c533c109ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbac2a19-cfac-49a3-870d-3c67d9fa46b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "671f3b6e-5699-40ec-8438-194d9e29d4bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "19a000e8-563a-4964-8edf-c8d54ddc5056"
                    }
                  }
                ]
              },
              {
                "id": "805efb31-8ca1-457b-bbac-39585c05dcb1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48435298-1669-4658-8e0c-8d21028df598",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88b578b0-f23a-49a0-b8db-c5d26bb4f9b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f259998a-fa0f-4827-a2c2-8fa336596a67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d7dbf6be-ce6a-4a36-ae04-6c8620116472"
                    }
                  }
                ]
              },
              {
                "id": "f909180d-d00e-429e-b6f4-f1c50910a833",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42425657-4ecd-4444-8c59-6207b2bc47a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "983b132f-7256-4c91-8392-d11dffed9c46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2f9cac8-58f2-4d2d-ba06-6b7dd74a093a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6099c6a1-2263-42ac-8f79-fe6a7e831538"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5e93dd2-7978-40b9-8f6a-c8593a7efd2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4979a1ac-3799-4bb8-82be-de67073c2fc1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54b5ed88-1e49-43a8-bbd8-1337d94e30e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6435236a-0664-4871-b8a9-62e2236e53af"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35c35d03-1c3d-42bd-b052-567463517f0b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "387598c4-5b9c-4371-891e-357fa9b80b02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33d13277-c94e-479e-9d8a-0a58c2b3f7c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68fa3682-9516-4142-93c3-98a781d375c1"
            }
          }
        ]
      },
      {
        "id": "3d291aef-2e13-4384-8293-ee33d8a8f683",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "499909cf-9a58-476c-80d3-0a127c5d2d7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29324f7c-1eea-4e74-b170-d50b89b01db2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "24c1164d-c4ff-4ffa-b63e-129eff4c0edb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266e90bd-b0f7-4fca-a586-617860de797e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82a7daf-728f-43fa-ade6-7d381e2b78cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767b83b6-c727-45e7-98f8-54e59df658cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e48b1d58-d10d-4ad6-b825-53f45ff64c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a2b77f-3e94-4b44-9423-7fff97c5427f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1d6f52-629f-4da0-86a5-d766dca07b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028d4bba-5a34-4fa6-b936-73826a3c3151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d5efda-2eb4-4677-bb26-fee3a81e5b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7dbfce-08fa-42c0-975e-f278e1c62a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f7d4fc-6c2f-4bc3-a5f2-89e7c035934e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1bb2d5-4e84-4dc8-be73-1d2b14f412db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de7a263-ef22-434f-a36e-3feee260bba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c741e7-0867-405b-a53f-f0e2759149b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48c368d4-4655-4ecb-a7f9-3e2babbbe82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3ab50c-b771-4a69-a0ac-0d4a3dfc2e03",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d39b64-fc12-4402-9856-c00ef868b97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c244de-a525-494e-9920-7d1a3882f2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca48a18-caa1-4d70-b93f-bfc870b45da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44a22d07-671d-4e77-8f6f-6e1034a8b8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89be681e-f2c5-43a7-9cba-05db197cad4e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1089d47d-fc2b-4024-8635-972ede585523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68723823-9274-4394-a25b-2db2dc11341d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1440f5d6-18cb-4736-87fa-f895ca125022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94cd707b-f454-451a-8ef4-de1206297675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771cd695-fcd6-4616-827b-8fdc5133abd6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86215355-b1d1-4358-8241-dfa18eb69500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a81724-a765-485b-9e3e-25ad954a8436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe2a5e6-da0c-4bdb-8020-33acf1a6bcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09d3a192-1808-4e78-b06c-3b374dcca922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ef0ed9-4802-4f69-944c-72be7f6bd910",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507f8327-cf24-41f7-90b1-2499e29a1884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a609b76-2863-457c-a9d2-06fae337df5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf5f6d1-3d5f-44fa-b554-89ffe49cbfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea47af6f-83d3-4278-a504-1ddb33957a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662f84ab-3eea-47f9-8635-164a474a45a2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6fe29b-c7b5-478b-8872-1d53ebcee4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ce76c33-4881-4a49-8e1f-1fb60427d5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3133f7fc-30b9-4fae-b630-fb371a38fb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a8dc8a-fb3a-4437-a187-e42cc54c93aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91eb86d5-1613-4690-8160-fcd785b746d1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a7ff34-f1a7-4c88-8f43-54f2d73b63ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7c52e0-ac71-4a19-bdc1-8e7ebcb786be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6b2440-7deb-4770-a2d0-a33ab4592d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea0c9cf-abdf-4d2b-a7bb-7c039fe79949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6137f4-7b53-4f6d-8918-887d01cdce7d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ab515d-b17e-42f9-b85c-983a411af121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5003fb6d-b080-4642-9daa-b3ccb070336c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce362a5-fc08-4f66-b906-a74fdd9aa36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29c178fb-14b4-491c-87e6-c09ff8075497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7facea-7545-4e4b-b89a-1cad52b1c0d7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb975474-66ef-4f8d-b25e-ec1ce8d18aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8360bbf3-f009-402a-a347-aa35ea415053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44772401-e50a-4882-8229-e664beac9091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "14b3d9fb-4853-48c8-967c-dff997a6684c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534ea8d9-fb06-460c-a3b9-273765ac1f62",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae47ba7c-f6d3-4d9b-bd2f-21caae299eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2167ca3-dd49-4130-a1f8-7dc630d65e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6263d1-66fc-45a0-9d0c-92d91abd5a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42c560c8-25b7-40fd-98f4-802e3ae678f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d32528-7cc9-4d57-bf63-87559f75cd40",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60af8a0-a936-49b7-8a73-9ee9c521ee7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861d57e2-ca88-4d0c-8728-0ac27d9d6b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3441d56-2d3e-4392-acb9-d888588c9a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5205b7-6c63-40ae-b0e7-f000a708a951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9aad47-3776-40b3-a08f-fa95c5109d4f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012485c2-e20f-46ac-9cf7-e95374667016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1077d02-b5b6-4c36-8494-2a59f175bc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d23ca8f-e1c7-4fc9-883d-9f695bc22bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1052a3ce-9e43-415a-8d55-c49473ce6ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db0f39b-a193-4234-ad9e-577f029d34fa",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5756ee9d-17b3-493f-8388-5b458bba00d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff88ca5a-413a-4e73-97d4-fc879f41b88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d67996a-0bbf-4715-9a8b-cb41efa9fc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "136de54f-f3dd-44db-8619-6cb2e284baab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ab8477-7cf7-440f-bd6a-5d08749eda7e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54899c86-3043-4c87-969c-cca41752eb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b41e16-a777-48e1-9829-3dc90a4a90fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589c67a6-7178-48c6-8d72-6c74ad74b59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebce4b31-c96c-47f8-b8e4-a24cbe7f76bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329caa8e-2971-4c9d-8f22-55347a5ca9e3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eec3bcf-1177-4c21-a160-f5265a883200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccab072a-5773-48e3-a8ba-e1c1fb5bac07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea9d912-b716-4362-9cd3-0f6e0d57de85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0df7bb1e-fffc-40c1-9f3a-503423fe32c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9647b26-dcd4-431e-89fe-5bdc4470018d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b4c895-c1e5-450f-872c-a43ef3934a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f959528-6fd5-460e-b607-209bd7fb7c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fcd126-3340-4065-8731-ca6fca849738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1b3787-0974-4d46-b101-68b6f1a8f08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a205b24c-6514-44e0-b407-105e1d71e041",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccace26-3dd0-4914-be49-e8e8c2e3d755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a86524-3bc3-4cbd-aae9-cfc05e7ff724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfa4b50-d11a-4de7-8a38-2d09ac37474b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d87c167d-467a-4059-bc91-8ffc4c2b8742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5930c3-9398-44e3-836e-7f15abe427e9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c0e7a2-22c5-480b-95a6-d71356c14e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3beb315e-ddc8-44dc-ba3a-a23b19e549fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d0d74e-b666-48c1-8a4f-ce4f6a349d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f67a2f7-ac0e-4922-ac7a-a8a808b380d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0607aedc-f6d4-403f-9502-af9b75236b2c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe1bfcb-929c-4006-af0f-4c089604fbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26619503-d234-4a33-af76-ec9900749d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aad881d-4192-476d-b454-b4be0907a76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0ae0ec-e183-48cd-b7d6-8929db6c1235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c229d8-b6ba-49ff-a5e0-a0c4ff3e9b0e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fd026d-176f-41d5-92e9-20a9f464d02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42802a8e-fd89-49f9-b05f-ef83bf5715d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe41c24a-f4fe-4762-8a17-8d16235cc1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ded16b81-89e7-43ec-855d-d04afbcd1fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff37053a-24d4-4e72-a942-719f3b23e13b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5190c4a7-577e-43f3-9dcb-a46ae829fed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb625d5-652f-485c-bbe8-a80844d2de13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbaccd51-fb89-487c-bbd7-0dc7ea792b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "602ed47f-a75c-4f90-8daf-4af2113a7cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0401ab-d8e3-4d1d-95ea-ad1998b4de46",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f322eebe-ac17-4872-8521-496ba1d64ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3328f898-6f3a-4a9e-a7db-1c3395bffd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8636048f-c4f4-4905-8e04-6e4b43260f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c26276-efc2-4921-891d-f67de552a3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7614075-99ff-4555-b5a3-b69afcb64a9d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d3ebed-5e4b-41e3-8505-355fba6dbaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242b31d2-3859-4ba4-962b-e41190515d8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a28494c-8343-4d0a-b74a-76c67b694543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4518f039-01e7-4140-a7de-fc4c2255b0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d779ca26-a965-4a0d-8c2d-9019e39e65a2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e44ccd-ccb7-4e34-a982-3f78aae4025a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa214ee-20e9-465c-bc4d-c276d3d35472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1875458e-9812-46f3-9d45-f4071069cad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7840ef12-a3fb-4fe5-9d57-ab419b1b304b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c1dfef-eea7-4aed-80e9-61d405803efc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edb86ef-7fec-47e6-b7ba-8d87ff65bafa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331aa0f6-dc48-45a1-a148-ae3eda774e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dc8f1f-7fdd-48bf-a482-f96779058e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e99a1c-3b76-456b-8873-c5a39ad29895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dc8661-76b1-4034-8add-07319d080dec",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecf3b96-8879-47f1-81c0-df8f3ae29f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b28d9a-f8a4-46db-992e-e6112ae3c84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c808b3-8899-43ff-b2de-1906344b0a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c1e61c-ecd4-4d39-9abc-0de435c95b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c0b51c-0432-4a5e-8e2e-42f2bb12f3b8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb133ffe-38a2-4c8f-88c2-88d31573a813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c498cc4a-08d2-4a9e-9393-8742e5b43966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49cd2c3-5656-4bdc-a728-2b7dc8f3cc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9f5265-0e10-44db-85a0-d9330ec600e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73615f84-50b8-409f-bbcc-864dfccf60ac",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b19539-4120-4702-9c78-227411f19a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c964f097-23a5-4aa7-8397-0055c618daf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ada7cf9-f6b0-45cf-9942-fa8824d6d7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f01b68af-db1f-42d7-a504-a887e9b7afea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76318ddc-ff85-4165-bf3d-988ea224bce0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73c25db-cde1-4af7-9ebf-4049045ecaaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771a2741-66dd-46b9-82b7-c89770a8658e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45900487-6a9f-4711-aeec-2f5c08781c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6eda84-5d93-49bd-85e7-16ed1e9ffe5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b37b83-50d2-4b4d-bbd8-a2a466ffcc21",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114953f6-48cd-4315-b6e2-cacb747956f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dc80df-e339-42ac-b4e6-36a4918433f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec15b677-b19f-4787-a039-e70e3738211b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26065ab6-96e3-4b88-bcce-1b15c28a8bbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fec386b2-c2cd-496b-b177-df0a65453ee7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "23e3cb8d-226a-4f35-a9fa-ad2ac6506f8f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bceb8d3-26f4-4b5b-a288-17e8f63dd062",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f2de3d-3c06-493e-a039-e2eab75b0a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf79c6d-2c64-4fae-87b3-0fb733459945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3879bc65-628e-491f-9a13-e1577aedf164"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c88f942-262b-4da0-9419-87f42a6eed42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5f8a6d8-0231-4b25-a107-da4267a57a07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f5ec58a-a5b5-4e02-a354-719979a80e37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66031732-2b41-4ddc-91a7-21ef29ace034"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5a4eceb-47ad-4da0-9586-2e6fd21ce772",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cfc7b187-cd61-477e-aad1-c80a185a2c21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c474cc14-cb1d-41fe-b435-21701114a7f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1fa3b38e-d5a0-4882-95f4-fb6af04d0f5c"
            }
          }
        ]
      },
      {
        "id": "0f939435-0cd0-4eaa-936e-ec79812907fd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a74f90a9-ed82-499f-8c11-05fa2978545e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff25f616-e176-4b4a-82b4-91751a028d64",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1263af1e-fcc5-4134-ac92-6ca22a1e8e3b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e089c662-9381-4191-b836-2009923aac63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594438ed-8ca1-45c7-ba0c-2ce1a1cb3a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181c8354-459e-440f-a322-167f31b9f3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf980211-af8b-4e9d-a242-e3db032755d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f44a0b-d9fd-47f5-80f0-474978a8e80a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a57dc0-4595-48eb-ad2b-75c3179ceab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099d9e6d-e6e6-4b06-acc3-66333e2c4286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4ff2b8-b38c-46f3-86c5-e438f79eda7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27d5a740-aa66-44ea-8fef-f5be576b37bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76edc68-a511-46da-85aa-4828ffab8f5e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d2dc19-3711-4ff5-8da7-de573b151e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b369a0-c34a-4e24-8f2a-92a9702f7447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507ae36e-26e2-41b2-8a77-a846cc2d5e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a3d3dc-4c1d-4933-bf7d-f6e2e04875a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2aea3e-95ad-4006-aa2d-33f9104a347c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa7b123-71eb-4f7b-87d9-ab89a2606d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffbadcb-5a0e-4c93-b329-0c0bbdad1e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deebc48c-a520-4b47-8634-632285d0eb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "602cd6db-a587-4e71-94f3-53a78fe92190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67f825b-c96d-4ae3-be8a-3828bdc04a2c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33be227-3c88-4469-9e90-277f72ecfb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471afdb3-3b9b-4fa4-9040-4ed3f642b9eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcc76aa-40f7-4933-abbf-84dcc8569919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19916666-5dcb-4b2e-8e32-1e5c8e605930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee060c0e-b2a9-4708-9750-d7fb19889ba0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18eaf0b-d973-45ba-9cc8-66a1245547c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e5be94-404e-4b41-9512-269d37e70aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c92fa6-da18-4292-bee4-80aa2451f1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3174a88-20b7-4aed-b7e3-f6db2631bd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2d12e8-9838-4f0b-88ad-1c86516b69d7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70435a94-7014-4eb4-a27f-c7510210aca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5d0a24-3b8e-402e-9587-23233dd9a684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a958ae-05db-4a9c-9176-793f974b7f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bedd3c0-08dc-4999-a339-204bedbdf0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c12865-daa3-48e5-9fef-0fca1a971637",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83700e19-ffbd-4241-bea2-f7516ed08268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a279d61-e5d3-4d44-be6a-b59cbeecbdf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f79d41-b405-4c2e-aefe-f3c03eebc4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38ce4511-1c2c-4585-a684-172e6d5d050c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e9d379-c0dd-4e98-9f35-3b089f4aa1d6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d5cba1-5700-4b99-af03-f2238bbdf17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db0f530-1f6a-480c-b9ee-737b579ee39e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14af35fd-f477-4fb2-8e7d-c72bf5147789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65293172-599b-4f56-b552-def1de5f1265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7b18ce-f57c-49da-a346-62317b3f100d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2990a35f-4f47-44ed-8bf9-76011f01aab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c2129e-e0be-4475-8d6f-e60b711e59f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf760d0f-dd0b-4433-b2dd-137437db8078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba342d5-dfe9-4040-b002-f84985e7bc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed9ef3a-68d4-40b2-8fb9-722a28880efa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3621e9-0b89-47c8-84d2-2b30e11599a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67685f9-e778-4d6d-bcd8-5135164e762b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01a6853-fa5a-4c54-85a3-a3b6db7824ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e940e1-ea36-4077-bdf6-bc3f722a561b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123bdd3a-5bc9-4a2c-b9b4-1fa0aa3c1183",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f659a0bd-f02e-4a7e-bbc2-89e92eed0e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5615147-bbe4-49f6-92c5-4166e70d903a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d15ecc-f200-4bd1-b2af-6bb5772444b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6bb0b4-5674-4ce6-a903-7ad6cb5fca51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a8ef05-94c2-4057-8d04-135f6e35faa6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ae6316-81bb-4c2b-bef3-07072345a063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896f21df-54c6-476a-8759-a19ca90a0973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cda7a9-afcb-40ca-912d-d00af10b0673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b29aea9-a961-4f85-8597-de56a10da5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cb4de6-9e18-4d6b-8782-e62bda456c6f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fae6f73-574a-48bd-afe0-c46be998df14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd10da0-dcaa-4414-bee9-2f2a0d6a7656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032be6ac-02a2-4c95-ab4c-27ecd2447536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dac7fd65-3f68-46c1-8da1-57d61822dbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b244b1fe-8a8f-4ebe-a340-f84ba35bcea7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c34dfa0-0a3c-4c55-afe3-6bd86c630e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be125f03-627f-45cc-9cde-82b746432c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e802e7d3-397c-4857-b201-84c3a8cb5f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "55359975-afb7-4cac-b8cf-89ae79ebfdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d785afd8-e67e-4eb3-bab8-dbfd8fd24803",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9208fcc8-ac0b-4a95-b93d-93613128cf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fadd5f-77bb-43b6-a7e5-c173856fefe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31f8b11-f087-4910-ab78-62f6b0d9b122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "46706467-95d6-4e78-9049-a9f06f1dde9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51879c68-d5e3-479a-8e8c-efa717228370",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee61bb0a-e160-4314-92fe-19d4d0d40518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c96bd60-7103-4246-bd5e-c3278793b470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a2732c-2d5e-4107-8e4a-2f05badcf0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "499c504a-04c5-49bc-bb2d-07b3e891ee61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7a87a1-57f0-412c-8b39-eab6d196c6c1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa467ce-16a4-45cb-af64-c3a1bde55c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0576441d-af83-4da2-a2fc-b0ffd5c56693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608b8d36-1bfa-4915-9230-71dbf9120a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b719a92b-504a-47e7-8193-ae360dca23a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103465cf-8df9-4a40-a31b-85b5fee2bce8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a72d5a-595b-4dc2-9ed3-c4c414262658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27947888-505e-4c3e-9d74-5feaece8a680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc68b322-83ff-4a7d-942f-b75431f4989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7beb65db-1434-42c7-b250-bdcdfc8ff6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80f34e5-9434-4f49-be65-ef664a1cfee8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b6fe40-5651-47a2-b7dc-e18ed71179f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e140fa11-eb9d-4171-b6d8-074a68195ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a97888-992e-4baf-9309-cb9c9a0cba5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb92aefe-44b2-4dab-9008-2ad17de60232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bec9b0-7d12-4836-8278-cd366ac21f60",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c8661c-0c48-485c-bb0a-9fa174eadafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c768d7-2a06-4e7e-ac3a-ce92d72524a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2538b30c-40ee-46e4-8e2f-d58630b600a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "415ece3c-1977-43b2-a238-ee233415315d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ea7f84-ddea-4e1b-bdd0-95b114ed552e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8d5166-5781-4d82-99c4-fa120d901a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623e69cf-4868-4da4-9098-9f4f107d000f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d334ce3-0a9f-4cbd-aa47-b71163a616a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba216dd4-a0cc-4a8c-95f8-327de2a06021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7314ee46-b1ac-4275-873b-9305085dc96d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd755c7c-4e96-4e60-960b-66f72e36a3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67f7f0a-4551-4e0f-bd91-08eefbc8aa3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648a6661-b6b2-47ff-8192-e3b5968f0609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b0c82fb-c2fa-4a89-a007-8023f8463bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caebea3-9b67-403a-b180-4f1e21f6a936",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ad1d49-bed1-411a-91e9-a991ed99374d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65242a22-5dc8-4499-9ef7-65cfd6e538ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d30fa0-30b7-4929-9941-31096a0063a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5e3007-05fe-4afd-8134-76ae6ef58295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08f1758-7fd7-47b8-a339-ac33c27bda82",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ed6100-d7f3-476e-bc7a-4df25243c5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5919c8-a1ca-4960-bcde-091b5de2b602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc492d91-f5f5-4409-8d8c-de07377a1289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0cf788-75a9-42db-a837-486f3c86dffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c862d78b-63f8-4d83-805d-13ddd5de6025",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9cc3b8-4000-4313-9577-0ef13a5c6d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e882d49f-2116-4508-a78d-90b05c74d608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cc319a-cb0f-4cd4-ba28-ae3c8f3bf096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc925f5-5959-4261-9ec2-277664d0f32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e01325c-b069-4a90-a809-0542d4b7721e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efde036-26d1-4eea-b0e4-81ec682f26fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eb581df-e86f-4ee4-b789-c065d25c39c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204a2f3c-96d2-4e40-9c21-321821a53f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fee98c-ad18-4855-a59f-d1e4f576d580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9305822-d433-4702-892a-a8296040259c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baac3d45-d8aa-4bbf-959d-8d1591c96816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb7dc90-a182-4b1d-b3cd-dd36c738c901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea4d1a0-e145-4922-ae61-d567d4f3e8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c85580dc-4919-40ec-b9b1-e245985673c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbb9e05-c0a8-4dfe-b501-b34d26878956",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd2c48f-d7bc-4e8c-bfd2-2d523e4d796c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a03b010-32ff-42ae-af69-552347c65954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99eb464d-c519-4235-af43-1fc8e89db3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c975e815-aad4-444b-b9ed-13d94556fc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bb742a-cc97-4b9b-a34e-90ea41fa5674",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b553d583-24a3-4aa3-a629-3d93e3a80e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a860f1b-821c-4964-8e7a-212c8988b65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9136ff3e-4977-4bec-91d1-9f9da8c59c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fffea12-9413-4ba5-942f-c44cff63d3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92fed25-0d34-4234-a3b0-81c871bd14a7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5046ee7-43e9-4c81-8c48-9b5b3b8f683e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3505bc35-f47a-48f0-a303-c0d4bd0ccbba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cef52b-f3be-49cb-b002-b98c19922093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "723dc97d-1aa5-45d4-bdb1-861c7922e82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2967a009-6cec-4518-907a-0da72b86f0d7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538cce2e-fe0f-48e4-a59f-98fe5518ac21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776e56e3-486d-426b-bf54-07bd6bc14a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bf26c0-651f-4ecc-93e9-10e7f397b239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab87d8d9-2001-49e6-a03c-87eaba5d157b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60bdcc3a-eefc-4c45-ad61-e51ab7f4a963",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a9468c-02e3-4045-8cb9-782bd61dd3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37d24ab8-cbe1-4773-9c6e-1175dca1c42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430e737d-06ed-4ed3-a12a-e8f40d91d7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb3ba32-3955-4ad2-8ce9-c3bdf13c71d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4d61b7-6206-48f1-b73c-c7b018bcd76e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb47df6-880a-404e-b614-248f5cbdb180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7d1263-0db5-460c-935a-ae7e01444cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11a4d00-aa1b-4ade-a7ce-55fa5beafc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56efb5b7-6f7d-4614-a0a9-599872ebe47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2b330e-31a4-4f81-b3f1-1bbdcc75f0e0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd01a4b9-e4c9-4c42-9cb9-673701e08c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "812ad35e-1cad-4775-b372-8f116c6c4c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe37251-5e9b-4aaa-b862-06a7966e23c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb000c2-5fb8-402a-b14c-83328f9db8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1f4cfc-e2e2-4e84-8ce0-4b3c63071df3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c70a00-d590-440e-8215-4c0b2dcf2a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a06acd-4f51-4fc0-bccd-7c3b3ec84842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802eff91-5127-4a97-a559-b3d605660f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51c16555-44d7-42a3-b936-d1c1640d91d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e828eee-b6c6-4655-a257-1ac267e03a83",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd627ac-daef-42dd-84d1-509b001e7be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddfd4f46-e788-4adc-ab90-613076f05498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b7912e-2ba9-4270-b52c-598da6f7c6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edf52844-edcc-4c83-952e-123fdb391c78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ac87561-d731-48b5-b457-1c8289191ec0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e44a63de-51be-4203-a0f1-9542515ab02b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8044f79e-1205-4bd8-8c32-6de95b581463",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "bbffd958-0689-4c3e-8b72-a9295aae8936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee161ab-f3df-4ad8-922f-3fa21f7235c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81ead063-b70d-40b4-8444-9b09ffcdfce6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09ff6abb-7cc5-4a59-9627-03af587167a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6a56376-4c13-41e3-b83d-7efe95273f16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa9517c5-d7f7-489c-ab04-0eacdc382532",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee4f0b51-46ed-407f-9db3-6182bc5c83f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a1a5b39-2053-4196-9196-2f06ec597335",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "df51c029-7794-4dad-ad90-9d4c0c6734a2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40c53289-4bc5-4f5d-b081-280e947a695b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79769c96-764d-4c8c-b9ae-e622083c57ac"
            }
          }
        ]
      },
      {
        "id": "e95ed586-da42-4917-a442-ab370a9b54ad",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "29b24185-128e-4eed-a6df-31fee58923f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "415335e0-49ec-490d-af93-3414908b84a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9453be37-c29e-4f26-9334-9f4e5128df4d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4f499a-d325-4362-8986-4c7846980319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74020fe-1e4c-4cee-b09d-0b403b8f77b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0028631c-3552-4cb7-8e23-4b37506d3138",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbb565c-7f18-428a-b1f5-e1759e4ae6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a918868e-5dd2-4afe-bb41-7620ebdad2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6135fd0-57c8-4486-8626-3860a54683e5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035332bd-48a6-430a-90ab-6b55f3501deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e0fe82-d4c5-4108-9a4f-f9bee630188c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83bcbbf9-0294-4850-8601-3e6567509d8d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572b5d81-6c2a-4794-9b89-250f72f7c4cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3215c1-3d18-429f-9e15-bd986a7bad36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3772e8-d315-4da5-b5ea-e25165cdac66",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fd593a-b01e-4230-ab17-72b734799d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995b34b6-b4b2-4a59-8c4b-a30cab51f542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4050ea75-359f-43b5-acc6-36d43900793d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1431e0db-6216-433e-a4dc-88b7f542926b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36941b6d-980f-41ce-898b-4fb9fde850f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66389b6-43b5-4ed1-9fae-9e1caf57a4fa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e824e1-526b-4744-8a8e-a3801b45ae26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e7caef-2f6d-4c08-9588-d49e2f6d39a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f47acea-bdff-4d95-8270-da0bfd66e193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a50865-00a4-4bb8-9bad-4ec1541a6442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111b0dac-de4f-44eb-922b-55613c627154",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b580369f-1bcd-4a50-87a7-a57d721b253a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdee7f6f-3d87-4d58-a161-3ca8a43dc197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b5a063-9008-401a-937b-bb92ff3904bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011ebcb1-3cec-4f91-a983-b4ba92b099db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ae3bb8-b00e-418d-bba1-05b443970348",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaeed7f-92b0-4432-8bc2-729a6b0160f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39157bd7-00a4-48fd-9f6d-857a8c8ccbc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7630e75c-062b-4c57-8552-2ee76ae591bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4cd8a6-5568-4206-ba3e-5d9df4fde34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fad89e7-c91f-4784-9886-e528de00023a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86849506-ab4c-49ab-86e1-59d6b6348cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5ac691-7bd6-4bde-ac23-58ec206640a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bd66eb-84e4-48d6-8232-4f0b48f621c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ec444f-96ba-47c3-95f0-665229772640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7be237-69b2-49d8-84df-cd54daa96e29",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be099662-2c9a-41b5-bb42-0b892d2d3871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e20276-51e1-453a-99f0-f00f438d1cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a466ec-9a27-4eef-b878-a257deb4d004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb84c722-75f6-44e7-82ff-8e231cffeaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f008ee6d-5c64-4fbc-b6d4-db4ab312ea97",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba0e4d5-40f6-4707-81a3-f2589f7b5167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216a9eef-a97a-4d0b-916d-1373969c3ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda23611-5824-437a-8f92-c512d71c5204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69cf3edd-432e-4ea9-8fb5-d743cd3a238a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f40ffc-1288-43b4-86cf-f788fdf352ed",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bf97f4-bc31-4775-8ab4-08e8f7b881c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5617ec78-f516-4861-80ce-88b3fe438f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4601eb6-83f0-4a06-8478-3f80a9ec7bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a33b95-2738-470b-b599-c6eb5dc86b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bf612b-25a4-48f8-8214-1999d4e1bf1d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4396bb2-5d13-41ea-92d0-bd79593f29db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef674e7e-e5c8-4071-949d-1614b22c0124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6d5f70-6a29-4c5c-983c-2df236aee12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550babfb-87ce-47c1-8203-8c9b81f47199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f14b7f-f03c-4df9-a673-2243cdf65e63",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305966dc-7e87-47b5-8b93-af7fec9e66e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a680f3e7-44ad-4651-a5cd-6063092c3fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a08cfb3-69d0-4807-b3a3-9f2e6d29cccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20992369-8830-48ba-8143-5d3e0f3f0ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96e7db1-af46-428b-a5d6-98a8cb159339",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403b7491-dc02-4a6e-bc5b-626a71682139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "053f6ac6-da22-4574-b6c1-0aed9511d017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194c8d17-3269-4ce9-992c-ea986dcf516d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b687f856-9b85-4694-aed5-2fd5364dfa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f25956e-f94c-4ee6-b56c-0f3b817c57c2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6655d6c1-0f99-4f8b-931a-3d2d0825f26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08718be0-d9e7-43a6-85a7-de256a0e0ac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4065bcf3-aec1-4d5e-97e5-acc6b02e9bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e84519-b519-4ff9-9efa-42d64bb0107d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e252d7-2d6d-4730-8acd-055e0b3e4604",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53fe4e3c-68d5-4f5a-8e8f-26dcf748b9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec7155f-0c37-44eb-9ece-7241f6e9ef08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7231c66-603b-4697-8a1b-6171d05f6102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d973c45-e250-4ed9-81e9-3309eca6db8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b803c846-eded-4394-bdee-c812d3c4f310",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7266fe-14b5-42d4-ab2a-197bc61a724d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12c8496-d903-4b6b-9607-8fb75b5064f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0234cc15-5d2f-49bb-a930-f9d169f68866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68085c8-a06a-459e-a757-300b23ec0b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cbd398-4f20-494b-9f17-a2ad89411a5c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32524aa-300b-4715-8b48-159f3b5b74b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6bf5a4-1624-42fe-824f-f0fb9ecf8418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953ede0e-089f-4366-a727-f0a8cf184739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d8dba8-b38b-4854-9d00-505d92edcf0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9838e8a9-05fa-443f-9999-5aa490509976",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179c854d-4680-4470-9988-4f7afca4ee5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7381c4e1-99e0-4412-89e4-45b19868ae1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4669c603-1605-430f-8829-1b52d9c0969b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba6a1ae5-8528-40b1-aaf4-4474eee4b17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da94ec2-ccf0-4615-b6bb-ee53dd21b05b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b693799-1159-40b0-9a76-b5658078a3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60380db6-9e3e-4a33-ba4b-07a19a23baa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1d5ed5-9bc3-480f-afe8-8893c5a4471f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01051321-1e76-4953-b1f7-8ad3c6989c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bd85f9-69fd-420a-9708-60e006209407",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7da2fec-92aa-4fd2-843e-71298d292f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3922065-d4aa-4394-ae5c-ff33c71f611e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c83eb94-8839-47c5-9bd3-c304c93f037c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42ee8e8-55cf-4d04-a6f3-7f0497622ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355542bf-d872-491a-9a82-9575349a0f95",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76b3809-5255-4877-b9cf-989343acaf10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db5b314e-a413-4b7b-aae7-cdfe7a564452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db11d475-ba23-4cc2-a9cb-36dadfe5521d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c17a461-84e7-45b7-8771-f408c552dbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6a48fc-7671-4f47-86c3-251c0cebdedd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31819f8-3af0-447f-8264-bb27d4776886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acdf0f9e-d659-4975-a94a-13cd7f877065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09126d84-9072-4413-a326-93bea40932dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedf09ca-ee8d-4158-8e57-cda38c22002a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94443ce1-f03d-4a0b-9321-ac1079c2801c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ce4c0c-cd50-4753-b1e4-62ab7a92c85f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ea7e2d9-6cfb-434e-8658-cb729b35b20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf36a9d7-6f35-438b-88ce-ad517259d605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d839195-84e7-46cf-ad3a-9a5fc4dc56c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114e77e3-c58d-40c6-9c97-769f6d708a2a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfbfe22-adf5-41db-a835-e731d1450739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc10dce6-f8e9-45dd-9169-9b286c04b3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79951454-c514-42a5-8b38-a99981f67335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaf1fde-f954-4cf2-b8ee-1b00745b43d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f62d29-2451-4f55-87f3-11e5ab5e7f43",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dd1be5-241f-4ce3-92bc-585a23a837ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe3e434-8879-4958-b7ca-5b686f0c6748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd60aaf-31db-4ae7-980e-0a86aeaa8e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2a8545-6b79-42dc-807c-6982ea0b1d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37364d3-1cd5-4518-9eae-dd7aa24246e9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e42793-6b22-4ed0-8211-456e3334b4a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c493d06d-7c33-4680-bcc6-ba9a9ae673aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85ec44f-ebca-418d-baef-1bedca4e188f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee05eff-d47d-42f4-90bc-07ea11d4e3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba44ee18-d220-40bb-a057-4391da12d7a6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fea0b5a-59a4-4b7d-8e39-05c37735eeda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "960258b6-326d-4110-beed-180a3722fc96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dde8ca8-3e95-4e14-9450-8b7bf6b40ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc394d60-3bb7-4c7e-af5c-cf7494a7dd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd88f6c-9d08-4ed4-a4e4-44fbc7b491b2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3ccb09-c56a-44e8-bbfd-db16e9f38476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6691115-401c-4299-9805-6201e2170fca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3375602a-faa2-48ea-8f81-eb34e6b5f6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadc62b2-1dd2-4d6a-afff-cb227ddec3e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb98dce2-46d5-46b7-8234-54c8016a40b4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6f7631-0db3-45ee-9746-9e636953043e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa2af0d-3fc8-44d5-8c60-87fd6cf6fe0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3c6a14-bddd-42be-be08-bac52f89d465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ab9070-87a3-4c58-8fda-14c8557a098e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c0cb15-ec22-4e25-ae6e-a8db7f418a85",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28f70f5-4b3e-4c72-b665-8f01e06eec9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c8f2cf-1979-40cb-800d-badf0b21c7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57ee92a-b20a-4849-812f-e39948654661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558246c0-38e4-4b31-adc6-58adf2769446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c94232-2182-4bb5-ab68-8a863b1c928c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b75529e-63a6-45af-92bf-4f3329cc28bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c9ffe4-676a-4c39-b75f-8b680657e781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56b0c94-cc6f-4ca4-971c-50fac6b3069a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7889813f-9ef5-4dd3-8fa0-eb3d3bd7b880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6687ab6-ed02-457f-aaba-c637a4c44031",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2fd8eb-d9e1-4ed5-95bd-ab9fce113f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0afd01-d7a6-4575-9e1c-3eaf6042cec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a5a7e2-0e94-4f98-bbdd-75322ac59d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a557dde-6472-49e0-8f84-41a5f2e84a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bc184e-2910-470b-8c45-6fef6dc9328e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8c8691-34d4-48e4-8d6b-7258ed43ac61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0cc9c4-65d3-4c44-bc89-8f8a99fb4533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b340b4-8455-40ac-87c8-e48a52b2b522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906faf67-61e6-42f4-a283-778fb43cdd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834fd1f7-1b9f-47ab-b399-1a0797869d78",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e54b3d8-c385-460b-858c-0da9af3eb108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a835646-50c1-4f9b-ab18-d65badd62969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "837a1c02-31e3-4a08-a17f-6b0a7f7190b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8779e2c6-bbd6-48f0-a83d-0373df5b1608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "346f8e5f-c563-4d6c-b1a8-cdc687986c28",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de06dbe8-ae4c-437b-9ba4-4caf0b347e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412bd1cd-47d4-4628-8cc5-685480bdb635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0561c82f-2e1e-4f69-870c-a3402604555a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122419f9-6644-44de-9718-939b2dfca50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cc76bb-048d-46df-9e60-6e8242289ce3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee57af8-7c9b-4120-97d7-0ff9e4a76796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0476cb54-bbdc-4f69-98e0-62fc07c596a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1630be38-ee00-463f-b513-7f4641f72c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc05e1b-00ad-4e49-afcb-7a925aaa4c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea061398-289a-4bee-950e-cc8dd9925cda",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5221ef3f-e639-45ba-83c0-d62b2abe48f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03c1108-9d7f-482c-bfc4-a35e81c13af1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3a4b52-9406-46d9-b1bd-121419ff09df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc48f154-36a5-4501-b822-58a218fb452b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98addc1f-0a4a-4321-bdd0-1179b202c4cf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b75e97-d1de-4f3e-ae7c-e0cb51fec53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b125a0b8-3d96-416c-94b2-8fb03a1ac401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da80d9a-21a9-40c2-b9fb-adcfd0afae47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4416fd-33c3-4e8e-9e60-4e287d5f4528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9725c02-355f-4741-bff7-e615410f2095",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba080ee-2762-45f6-8f42-5c64d96a846c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935bb0ce-2c43-4e20-a90a-0444dc0a9bec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321271cb-2b8a-4fea-ad96-10b3a6825557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdf7589-c435-48c3-920d-da69d838b84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a4389e-2a7b-4119-8f3c-5ae29cf6ffd5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c33c4d5-a334-477a-adc8-6e7571d24717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308c44e2-b08d-4602-a53a-e1bddd0afbd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4de4008-0650-4c89-abf5-16595dc90928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279dcd0a-1231-4020-a958-fd69f700dbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921869c0-d156-403f-9f58-71cae6a2f284",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5528212-1b0f-48ad-b90c-0c187ff97de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88271b4a-6b43-484e-895b-bc473594961f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fbf020-0f2a-41df-849a-a0253c306b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1d2471-4128-466f-a1ab-e0c18fb089ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f56ba8-1c29-4181-a536-4d4014594a43",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c716e1-cb1f-4251-8149-c27b0cf45373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174127a9-c320-4467-8ff6-0b71a609c580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5dfb86-994d-4724-bac9-5765afbd9d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca0a8a4-d735-43e6-bccd-adfba5766a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2781fa00-9e37-4804-96be-690f55bfa1fd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe07fed-b623-4539-9e01-596779e4bcaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ec4d87-8f6e-4d5f-b629-46e9c6af42eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173b1d88-5beb-4e0a-8797-95a0794601db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633188dc-c30f-47f3-a8e5-e4d6764d9588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6553b8-b0f9-4f90-8eb4-6ed6114ec0d5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91675be2-f83d-498d-bd46-f224779c5757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e60af6a-948a-4758-a30b-e15617f98d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9255d715-cdae-468d-89a0-efe8222ed79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e7a10a-d1f3-4aee-ab55-5507b16f9acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662e8191-157f-4d27-bedf-3b4dbaa2a521",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d66803c-a795-453d-b44d-7ae5bb0121a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac3fd38-c2f5-4a45-8b9d-0de51a6c01b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6953d90-2f7e-45f4-8779-789e9f626211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e802009-b3a8-4af7-a479-851e6178541a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19daa37-4b0a-4542-a034-e741272faefc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63586d7b-680e-4b6e-a7cb-8a3a4f86a68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ea4591-a9d4-4ad3-8a44-758f3cf9ecb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fa9dda-9a81-4b3d-9301-ecd627f0c9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f87098-b0a7-47cf-b4f1-ba2088d87bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be933b62-9128-4f55-a187-d7908970e6fc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91073d1b-1b8e-4709-8c43-28cb4ea3e25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22cb4fd-b898-400c-bdb3-c3b162991c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f888b4a-d5e9-44b6-90e6-71d18ed6cff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a69cfd-f54c-4b83-afc8-5d808c3cd2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20068c41-e888-4e31-9e2b-beacb645c47f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66ad8d7-c214-4937-8e7a-406aa5df66fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d7e6fd-b591-4aa0-8088-172017d180f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "091a0f6d-1521-4dbd-8785-6b1011ccb67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74cb1d6b-0325-41df-9574-37c536aa659a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b6e2c6-812a-4797-97fe-990da048e4b6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571b61bc-04f9-4a75-a531-f794a5657443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9626b7-b1e4-4039-b077-0a87791090dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d82d5c-2484-4853-93ed-4a2ec0597579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704f1727-3704-40c8-8d75-2b94024d3c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5529e6b6-29c2-486e-9751-7ffd2f7aad5f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf3ae90-4f9e-44e0-8207-c5ee0fc44056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c2b3ef-e5a8-4071-885b-f49c54396ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546973d3-628d-4880-96f8-e0d409e39127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a5e770-60d9-4e1d-8dd3-fc501eea162e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e79293-90cd-4852-9a62-19cfaea5d67e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf521f99-2957-4215-838d-c643d1b3affb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623c3974-f3c6-4b7b-8223-8a4a8b79b9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691968c7-bf1d-448b-bf6d-991cb4d4f564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc866ba5-c997-44db-8f00-2f572fd96e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef75eb65-de06-4de0-8658-bd211907465a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1df299e-d60f-408e-9521-6a603859dc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f4e4cd-5a88-4655-9d9b-5e7d83f65e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6257ba6-638f-4c75-b243-e7cabf78e2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a42522-6d3d-4030-a937-c75fbcaa7847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae844bdf-1b82-4d58-8f20-d8e0d594df72",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8801a60-d29e-474e-9166-e1e1524791da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada240e4-45b9-449b-8cee-9b535207f8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622ea9c0-b36f-4668-b564-bae05257b2f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2d3ccf-0e2f-4220-9324-97ab399a3741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec410ab-320a-4c31-997f-9062c52b0c6a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1522dca7-98ca-4287-88eb-739f80f63091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cbc645c-1ef0-4527-b21e-9fe08c8ec77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ea0b4b-bb39-4f26-b0d9-b338e510fe91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0553f6-461b-46df-9c10-f72e54396d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87af2e7-2acd-41d6-bda2-a721b836dff0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86b9806-e9ca-4cd5-a85f-3242f314a808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7db99e-3aa4-4ec8-9c26-f7f1c6a0f57a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87751b3-9754-4957-a867-a1bee80c26a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb06789-29d8-43f0-85d4-d06477ff2fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13f3dd5-4d75-4a9f-9918-c89f36b8700f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1492b5-74c9-45b5-a443-866b7ae233d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f9ec6d-2606-4ff5-b148-c61ae6f34740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072bc678-cdbe-427b-aafe-3e9aa1a6bffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0c9170-8d98-4f0f-8338-ff30c1395e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d62aea-04ad-4470-857d-e936f875c11e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0742a9-ba08-435e-a948-716861c32407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83b08e7-7a56-46e9-af0f-8d5a5f7fc91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b518c5f-ecb3-4706-a0e1-88d9b0d3313f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f58d81c-a2e6-4415-9f14-9cf5b0fc73d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfdd0a8-c9df-48cb-b04a-c36be8b4aed6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218da6d3-b542-4014-a022-4fc14722902b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9734399d-3b32-43a9-98e9-34967103cafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ae1a61-463d-4911-9c53-8a57df685bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca7492d-50a5-4c64-8e9e-9745d81c7af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5754f2e-5e85-4ae8-be60-6082f261ce9c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708552a6-8fd5-4d1b-a9d0-2b9442334985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a40af11-d73a-4969-9f57-a5def4c312a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465d6601-4796-416e-af73-a523d3e56974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378f2f3f-1017-4601-95b8-8b59cea3bdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b52899-f291-4ea4-ab8e-5c2f22a750fa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012cdeec-6705-4a37-8ea5-9f932c8bf7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ec026d-956f-4c2a-ac41-1b155aac39d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb8034b-7c7a-47d6-8da0-e41623cd3693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3d017a-318a-411e-b163-16838741794e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2c0ff8-be26-4e33-8d94-ca2836e1da4b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b02db34-5113-47f6-91ff-63f7262f2b60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67e4b408-667f-441c-a306-9c0302825dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3674a20-21bc-4d64-86bf-2b475ecc0122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3812e3-45a2-44be-8e09-89bf677100d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ce175b-bf92-4517-a36b-d61348565614",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d220f908-f05d-4356-9ca4-b891587d5183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b0398bf-f4e6-4ba8-a26d-a04ff0fbc9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f3d4bf-58b6-460f-911b-0efa78e42bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c4fc23-ad09-487f-98ed-2dc38dca5a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72bf37e-3a5e-4f97-8873-fc3f0b81856d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1b07a9-7ca7-4275-8f16-5e2799899bbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc43060b-4c81-454c-af15-c0b22bbd4690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387d3aeb-9b7d-4fb9-9a4f-d28b2374a4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f420250a-443a-464a-90d6-df06127b845e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654975b8-ccc7-4a2d-ac70-570cf7d1302a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccb0301-3e0b-47aa-8d92-84c12ffff0ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33e1ad59-8cce-4655-8f68-cfa0e63e1f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdd5e56-4e25-4ca4-8248-3fd5a146cfc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a781a12-213f-4380-ac0d-aa35fff36d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a2f2ac-18dc-444c-8c84-f2d2637fe89f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea4897c-2432-4e7c-89dc-210c6a381b7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85c9ff85-efaa-41b2-be35-df1b15a06461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63ccad9-a4c9-4ed2-ab3e-d917a81242d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a07853-c915-46ef-80f2-73366b82284d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424457f9-f6cb-4940-88fa-64ec737fa828",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c41144b-71f0-4724-9add-680131be2c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75e50134-cc8f-4a42-a822-005a2def9d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a516b0d-45de-40d1-af04-12b7199e814e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d3acfe-a7ad-4ae6-b0f4-f1ced00fc54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775bc934-77fc-4d14-835b-ec1916541950",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de65457-b6db-4bea-9a36-a99f042ea381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d95335e-2b9f-40e5-ae48-484e94dca71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3389330-5100-4211-b3dc-10c950298103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562a8f8c-e8cd-4b75-be57-79aa25e5d5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f8b529-b594-4614-81d0-0d20d42e269c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff02a847-1fdb-4681-bcbf-c50cb165e3d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bc881cc-5687-49a5-a501-bbc477ea0645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54dc221-02fc-413f-bb28-2fdd9420272d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e955be54-0f26-44e4-8957-584db30ea598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dde2eb-3023-4662-ad57-82736fa54f9c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2e6593-32e1-4e33-9d4f-07c79634531e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad30f98-eef7-435b-bdf7-52514130cd9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1444f5f-12cb-43b6-802e-4ce40cba94a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e46f8d3-ace0-41e0-b90d-e0a22ac37bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4c1d52-2330-42e3-8b90-12fe699211aa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b509a7bd-d699-4f9b-af5e-49f6e0fadfae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6aabceb-e480-49bd-9cb6-e0e7dc686283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866d82cf-79bc-4d5d-a6c3-478fde2286cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92276dee-d4f6-40ac-840f-4fff8bb470b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d208d26f-2a2b-4568-b80e-ec9316c15a46",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595e0d7d-1b58-4096-bb0a-f4ebda76d21e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "154602c7-2662-4e0a-8d36-97be50b675c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a427ef-a925-4fca-93a3-3a510c348b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa99b29-e354-490b-80cb-dbd0df66d8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f8c9f8-06b4-4ec9-93f2-ea070d107eea",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477ed8d6-329d-4325-a937-e4d6600f4f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e890f4-d7f1-4c1e-837c-82c90a77dbbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdcb960-0b35-47d2-b4b0-affc991fac7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d46e11-d032-4053-a2dc-e233f99cb0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81b4ba5-79eb-45f4-92a3-1e5c14872b80",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93153a0a-177b-475c-9f8c-3fa958be2739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fada9720-e9e8-4ce0-a3f0-69078dd25a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b2ec75-fe3d-45c2-b9b4-f6c29820a2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4263e0-f15d-47e3-939e-fc89169104d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107d460a-8b7e-41ea-927e-1b6a0ea9d5bd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbfcec9-40b6-404e-9736-6f22d2d1054b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "262bf856-cf0c-41e4-93a9-8f6ea848d938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949465d1-cc89-4c35-ac45-45f40b48b256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7363c97a-c716-4505-8a29-99cd26b641c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2f5c31-7214-496d-8e4c-ad1b0108632b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1df725-26c0-472c-a516-ab84d1ca540a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5741cc3-b484-4352-baf3-1c9b31a44485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b973c182-e816-489f-afc7-c5d21e0cf2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcedd03c-2c42-4158-9cff-09f4a888c1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eeb3882-6ebd-44a8-9d7e-65902e0f6887",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74abb49-6716-438f-ab3f-9f7a40df2549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88819cc1-fd07-48b6-ae46-3f92aba16706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b6f661-dcb1-467a-9571-9e6451c96ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a09593d-5023-42f0-bcc2-69141e8316d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c249061-6170-4bea-a288-a08498bb0aba",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5306cfef-9dc6-4a2b-ae3b-3de6af88202e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ac23923-b780-45d0-a057-4d76983c4725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cc7b7c-c8e3-46c6-8fcc-9ec7c0561749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbf5e06-5807-4d8b-aad4-49c87b3d7907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989cf686-e513-4962-a2a5-8a7b1f9b0c7e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1526e7fd-a0be-4a90-9513-cc44ede44d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9cb25d-9f59-484e-9052-84eaf1fa94ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213b25ad-5692-49b7-a25c-f63ac3147ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebf24df-4b8d-4722-8688-af2420ba97bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34b58ff-5bee-4c94-9bab-b2a7888d0a93",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f985a2-7d23-45a4-b95a-5d27548270cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44e4b538-9005-4f74-bd89-4ca5dec57cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad7b292-70f3-4fe1-ba84-36ebf2ee02a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20c7280-e499-470c-8721-72fc02d3b5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af40cdc-5f02-43e7-9719-be17e3db1fd8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66b10e7-1a40-4e5f-b237-387ba6345172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a90abf8-ebd4-4298-981e-263d90b29736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b2be29-4f70-4b22-ad99-a034cdedcaee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d942a4b6-fff7-4a9c-952c-4eddb3a83325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803baed2-5486-422b-8076-2d603e2f8462",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b491a0-c8f0-4ecd-b7aa-f04f165bd888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c247dc8d-0ee6-479f-a1a3-52af8edb57dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9130b3-ae5b-48e0-b67c-6e2aad52a22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38ec5bd-011f-44e6-b974-37abe99bc2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53df2c3-68f2-460b-b906-1607e47d9239",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b606a43-4ce1-435e-aa95-0b97966d8142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7843bbdf-bb71-4c14-9fb8-6273f9186058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3833e7f4-2eed-446c-8bdd-638439b76c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef3900c-0421-4085-95f7-d0d4c5cdf853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fefabb-d51b-4300-9ba0-dde7917a5872",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e214b3-b174-4055-867a-f43529e56a6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04cc3240-e0a0-4221-ac45-d4463fc6a2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d23b39-fce0-4ef6-b584-8d59df34a235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5fc32e-d7ff-4ad8-aba4-b095e42758fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e415071-103c-4a95-844c-55415b36d7e3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d8cea7-e3dd-448b-ab3d-70562e692961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b347360-68d3-4cee-b3fc-3bf45a423508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d113420b-14bf-4435-8b13-8ada2ec25586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f44cef2-4bfc-490d-b79a-f8ff5390ec1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedf9d5f-9a9f-4f56-a7e5-c533e4434b43",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25ffe5b-420c-4ca7-8b8a-ed2c8958a5db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f8b7db-38b9-4f77-b39f-4276d46fb618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873fe27a-4f42-47a8-bee5-4b8859b8b828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317ffa66-3a50-4e9d-9e82-85f8fe181705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503cc1ab-21e1-401f-bd1c-6b208be06cc2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff98dd2-a9be-4b6d-8c55-f654a66d2e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6a49aac-14c0-4611-b041-3db9e64bb3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58a114f-db1b-4a60-8edd-7c820f6d1c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd89e478-ef2f-4ce9-a1f3-2077de63469f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40726aac-a9e6-4b89-994f-9a56212e4431",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b674055c-bcdf-45e2-bc7a-cd9b8ec293a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57d79b79-1713-4e0d-b7be-9e7646a0b1b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c135e40-d33f-49a0-bba1-f00c23f9a931",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc13aa95-079a-4a81-9f68-ed3b5342de03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d57272b-8edc-4b09-8e27-0510d4bb7ce2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a181cd4-c662-4145-bd85-8023e145f034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "500d9b99-da73-4add-b4ad-353a87c11a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "641405ba-f8d4-41df-ae78-339ab531b4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948aad6c-a239-4d38-964b-a98354371168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763812dd-ccac-4228-b421-9107a3cbcb36",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f324251-79af-4001-b7cc-4baa6c3cb600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c341efd-5240-4a78-94cf-52bfd019745a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b631563f-3de7-412c-a29b-1fea1a36d679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19910bd0-2270-4c66-9723-611c508ce55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2ca051-d986-49b8-9ebb-ab6537145e86",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7e42a5-b99c-43a0-8ba2-3145ecc552da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0503d0bd-df83-4efc-b412-3c481fa428d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2912020-6464-405c-b39e-3c1a021afa9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29146fc2-95f9-49c7-999b-3d49954a60c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5823c6d4-e4b5-47c4-bb18-416b256535f5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5575b048-95f9-41a8-98e6-a5a370c9f918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36931303-84a5-4d10-9faf-838b6383b1bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5423953-b6ed-439b-b7de-04ca165ce0ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7615b120-329e-4d78-8a07-8f27fe4f7126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95b5c6d-b55c-4c00-932c-3d22a6ddf784",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4ab0bd-916c-4783-9bdc-3ad4ea7b932e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a730af-1687-414f-9264-a5b8789080b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58de5441-289d-463c-b32d-9f81903da5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df163992-7578-4513-8773-e5c1009cfac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524f187a-8145-430f-95a4-1b586e84678b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e79cae-03af-4c0d-bd1c-c7e274fb20cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc30d51-fd48-4158-9614-404d7ced5aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5703fe41-5b8b-4b73-89f4-cfb9a60a058b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9359d268-6a59-41e2-bbab-9db5dfbc00de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678d978d-072d-49f3-9198-98be509692e7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5432b1-aaf4-4f69-872f-89cbc21f735d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86d746bb-cd11-46ac-b30e-629f949f06ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d529dbfc-5a3d-44c6-b716-255235953faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c30944c-5b83-4264-be95-1c59ab757777"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2141a79a-cfcc-46da-833a-5059207c6e2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "990eca48-4920-4f32-a1e7-fb4659eb0e29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "350d866b-3090-475e-86f6-c9bc8aa87e84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a9f96a7-3934-47cb-a4a0-1cb98bd4d405"
                    }
                  }
                ]
              },
              {
                "id": "82071b43-4523-4595-8aea-eefcf356e569",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e205acbf-f397-4fe0-bc7e-5aa4067a69b9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f505e94f-4df4-4270-9fa6-85bee0a3d090",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b0fd3d2d-1e57-4693-acaa-173a2cdbdb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46651eac-05e8-4f89-b34d-0f51e2664d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "952b7da8-9a42-4714-8b60-2abc8324402f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bc54891-2e2c-490d-86b5-8f6821e5696a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d762aaa-3a75-4fac-abb3-af397d3f8f82"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6d91d61-39a7-4fb5-955f-0679a845131e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbc21b10-10e8-48e4-a43b-bdea3e974e70"
                    }
                  }
                ]
              },
              {
                "id": "a7141a63-88bc-4552-8735-5acba901feda",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a525458e-39c0-45da-9066-27c624174a87",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d098eec9-e0e0-4659-ae2a-a3944ef0ce5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a98396b6-61a7-4240-b871-a5bdeb3a84db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b63304f-3de2-40c2-b641-90f491b76e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ff2954-24da-44b1-88e8-cfd12ccc76c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "17277784-ccb2-47e6-a64d-aaf07c734526",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9ddc7195-4917-4cd3-975e-c06860ce8f3f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4aae568-8ad2-43b8-a3f2-6646e8bb321a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e091aa58-6404-4645-bf55-cd9fd91c7dd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "077730c6-0290-41a9-aff1-cb4e2eb673d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b151d29-26bf-4cae-84aa-eada0df96599"
                    }
                  }
                ]
              },
              {
                "id": "4c76e5b2-a01d-4ce3-bb57-eb0f8ccdfb90",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "940febbf-019b-44ab-97f3-b115d78562ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fae79595-d8f4-46ec-bc3a-cc4468361988"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64b02177-bdfb-4c57-9fa0-3f6eb01fd4a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4bb4415-6d5e-4488-b2fd-6460da4bd0ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6ad8120-9fb8-47c0-b416-99ce1afacba9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bf4e2b77-4362-417d-9a5a-c379de6a7267"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d51d79d9-ccc1-4a6b-ab00-28f543fc5d8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3427b94b-1e1c-4d74-9b96-9bba796720f4"
            }
          }
        ]
      },
      {
        "id": "e167777b-65f0-482d-b1d7-5f6a64686896",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "27225b55-73c2-485f-b89d-6e38c9866286",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa62cf91-ce9c-49f4-8fcf-a35e751ff978",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3dff5851-2876-469b-8bea-fa302d3b7c31",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767538d4-cdf7-4483-97c8-6b16dae50376",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8dc1a961-2201-4d63-be2c-672d0b41b83f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea81a6b7-cad2-43dc-b657-148c72ede55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd4100d5-ccc3-475c-865b-27fa5e079c07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19325b3e-e1df-47fe-b7aa-126c173b8486",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af75b709-db65-4c56-a813-ef61f65ebda5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73b4ff82-afbc-48f2-8efc-1f310c44e5bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35243ef6-9b5e-4002-8b71-2bfe9130d118"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2065690-d32e-4372-a0d6-f27db603cfa9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "621d2605-c2a2-4daa-90c8-6198074bd77d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d6c150a-c33b-4385-989f-7c127d3ff115",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "945e0616-ce17-4c9f-96c1-fd2465471623"
            }
          }
        ]
      },
      {
        "id": "9355166c-cceb-478d-909a-a69c85033944",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0b0237ab-cef9-47bf-806f-f1b479533f0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e3afcf5-6da1-407e-ab47-e4c7eb7b4ebe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62799c41-dbe8-4126-b344-345b30e0e818",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85808c74-cd78-491b-9a08-8de0109855c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb69d336-cd1f-4434-8d7f-d43de57ef4b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f5d526-875f-4106-aa9f-79c2f9ca1038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bc419d6-a488-41d3-9a97-0c4e3975020a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d86df3c3-0565-4163-acbd-13149fa0be92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a317fb8e-06e4-4797-8c43-ed22c1da2adb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7ae00d4-9b7c-4b93-8e3c-aed1db76b813",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41f72b51-34f4-4123-b43b-07f78b737793"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c5d42c3-7fd5-4417-9ac8-2f08bd6a1ed0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "75fdea91-138c-4829-8c7e-c7ee39727fc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc3386bf-e9b9-4958-9e0e-11130dd8214f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5347b708-6c98-4540-95ec-7b25036e34ab"
            }
          }
        ]
      },
      {
        "id": "146fe42b-264d-4b2a-aa48-5decb1ed6c41",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b106554a-2529-4608-a29e-eade496b7211",
            "name": "Negative Testing",
            "item": [
              {
                "id": "542c6246-a450-42be-8aae-4e90587010d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c7acc7a-3fb5-4e65-a0bf-444538564e2b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe8aa93-b4d1-4f30-8b50-492c6bff1276",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5f07110-b3a6-48f7-9141-8fe911cbd7fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3445f3a6-f5c0-4543-8378-4e7518555370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3def82b0-135f-4791-8cf6-539fc4000841"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9acd8c38-a290-4fcc-a152-1d012ce8ca4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99e54919-4fe7-48be-a825-4184474105db"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c766ffc6-3edb-4b99-8c6a-2eabae232010",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14b28e2e-212d-4086-b764-da4a279b68cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5051075-66c4-4cd7-aa44-aabcd726797b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b092efbe-a8e1-41ee-b623-1925a5424c87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ad04483-c014-4666-bf5a-63d385551fc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d253c8f-0cbd-47a6-9fdc-baaa0777b16e"
            }
          }
        ]
      },
      {
        "id": "06590012-b79e-4c21-a242-d0f41e70cc05",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b41686c6-1bfc-40e3-86c9-c5a1431507a1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9940b398-f4b8-42f1-9381-3753be43eee9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b822661d-1161-46e5-9af6-40d817793237",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a734f6bc-aaf1-4ea1-a438-18640f2a627a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c83cbf22-38b7-4ba0-ad71-133d9b4c4555",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 325.55281690140856,
      "responseMin": 10,
      "responseMax": 7968,
      "responseSd": 936.3410098073213,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694392392895,
      "completed": 1694392497532
    },
    "executions": [
      {
        "id": "1dfef00d-5ddf-491c-b681-4198ca8dd81d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "234edf54-f94f-49be-90c8-a655d5dda0a3",
          "httpRequestId": "b0774970-e078-462f-989c-94b2ebf37e4a"
        },
        "item": {
          "id": "1dfef00d-5ddf-491c-b681-4198ca8dd81d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5362494c-e462-41cf-a2e8-4a7326c48333",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "57b812e0-2e24-4961-aac6-14d3031b019c",
        "cursor": {
          "ref": "bad2a1d3-2abf-4f29-8784-3bbfdea3f0c0",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "77ad8df2-56a4-4779-837d-6e08095ba81c"
        },
        "item": {
          "id": "57b812e0-2e24-4961-aac6-14d3031b019c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "eb48a4bf-d062-4b5e-aaf1-ce3815e8d5d7",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "ad8389af-cff2-445f-abfe-9b32b08e27e5",
        "cursor": {
          "ref": "97f48150-3186-4f5b-a8f3-48ec7ec9f2a8",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dea80bdb-df5b-4f43-ad5e-325ce900f8e2"
        },
        "item": {
          "id": "ad8389af-cff2-445f-abfe-9b32b08e27e5",
          "name": "did_json"
        },
        "response": {
          "id": "e7ae630b-da96-4ed9-b87f-dcbf45ae5da9",
          "status": "OK",
          "code": 200,
          "responseTime": 1499,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ad6d4c-eb92-4d7f-85c9-2807a6819a33",
        "cursor": {
          "ref": "16f1541d-9029-4100-a45c-3cb8e843c464",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c8ac7f8b-2721-42fb-8186-5e93cf84df32"
        },
        "item": {
          "id": "77ad6d4c-eb92-4d7f-85c9-2807a6819a33",
          "name": "did:invalid"
        },
        "response": {
          "id": "174341c6-a343-41ac-9d47-9d18c7bf750c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ad6d4c-eb92-4d7f-85c9-2807a6819a33",
        "cursor": {
          "ref": "16f1541d-9029-4100-a45c-3cb8e843c464",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c8ac7f8b-2721-42fb-8186-5e93cf84df32"
        },
        "item": {
          "id": "77ad6d4c-eb92-4d7f-85c9-2807a6819a33",
          "name": "did:invalid"
        },
        "response": {
          "id": "174341c6-a343-41ac-9d47-9d18c7bf750c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a227e4-2b0f-4a06-a2e4-d7a3a0c665e4",
        "cursor": {
          "ref": "1109d4e4-cfa1-44c8-8f24-f7b11395b0cb",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9ae75c77-badb-45f4-9541-40f09fa12151"
        },
        "item": {
          "id": "19a227e4-2b0f-4a06-a2e4-d7a3a0c665e4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fa415a73-7a84-42e4-9fb1-31470502eb55",
          "status": "Not Found",
          "code": 404,
          "responseTime": 417,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab79d09-ba21-4436-a690-c930ed48a91b",
        "cursor": {
          "ref": "e55f6b92-08ea-4882-aba7-20ae02642ab3",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eda89789-afd5-44c0-8655-d0379588e481"
        },
        "item": {
          "id": "bab79d09-ba21-4436-a690-c930ed48a91b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f924d493-2c8f-4321-a0b2-8b9edb336d68",
          "status": "Not Found",
          "code": 404,
          "responseTime": 273,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e646c9be-fbb4-4a40-92c9-047a8c36c673",
        "cursor": {
          "ref": "1dbdf1d4-5cca-4f31-80ce-022ac3d078fc",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8e1e7091-2103-467c-8d99-6d6bf7c15c83"
        },
        "item": {
          "id": "e646c9be-fbb4-4a40-92c9-047a8c36c673",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b73d312d-c7cc-450e-96be-6257527537a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6ea453-c146-4135-accf-082a1699eab5",
        "cursor": {
          "ref": "7d789b36-9615-4960-bd3c-23ebd35f0473",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3de4235d-840d-49ec-b7e3-e8db4c1f9489"
        },
        "item": {
          "id": "da6ea453-c146-4135-accf-082a1699eab5",
          "name": "identifiers"
        },
        "response": {
          "id": "fb19cb5e-063d-4893-8a61-72cbee7ce725",
          "status": "OK",
          "code": 200,
          "responseTime": 1173,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e4da6a-29de-4563-abb5-cf04cea4da47",
        "cursor": {
          "ref": "b9b5166f-5d5d-4c70-9d0b-767b0b34ff15",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cedc2659-903e-4d91-80b7-e899372a7bbb"
        },
        "item": {
          "id": "f9e4da6a-29de-4563-abb5-cf04cea4da47",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5658d5c9-f529-4e41-a2e3-b472aff386bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992e3186-138b-438a-837b-beca3e4ac763",
        "cursor": {
          "ref": "4a1ec1f0-6bfe-4303-8d27-53b424c4f280",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3853c877-0766-496d-bb39-0663800cf4f9"
        },
        "item": {
          "id": "992e3186-138b-438a-837b-beca3e4ac763",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cdd06445-68eb-49af-ae53-54c4babc637f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851cae0b-8ace-41fc-8c47-4177641feaf6",
        "cursor": {
          "ref": "b6b55d36-169b-4eb2-88c2-4f578f94945e",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "39e1c70b-38cc-42ce-83d9-a8266eca6ab7"
        },
        "item": {
          "id": "851cae0b-8ace-41fc-8c47-4177641feaf6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "939be726-12ed-4c8b-9984-2e7bc2b30f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782ad043-6ced-4bc3-aaf8-8c2276c6a99c",
        "cursor": {
          "ref": "ab216991-1612-4f95-a646-b746918ec219",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8ada4037-077d-469c-99f5-30d7f5d25a5b"
        },
        "item": {
          "id": "782ad043-6ced-4bc3-aaf8-8c2276c6a99c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d816e360-2624-46b7-b731-4d5447176d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7947ef57-3850-4a3c-a966-6aeafd544366",
        "cursor": {
          "ref": "0b376e4f-681a-4243-ad93-95cb33df6054",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "45cedbe6-3082-481e-a758-92ed59de11e2"
        },
        "item": {
          "id": "7947ef57-3850-4a3c-a966-6aeafd544366",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "94841603-2075-4f18-b56c-2b7037b237aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45892b3d-df30-45ae-b6ed-b4ca94d80201",
        "cursor": {
          "ref": "f3ff49c0-06f5-46ab-819a-c99eedc0fb9f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "27659201-fc44-4023-8cf7-9b4016301c64"
        },
        "item": {
          "id": "45892b3d-df30-45ae-b6ed-b4ca94d80201",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f3fb8e30-9113-40bb-b7ee-8450d5a9ed4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dca81ee-dc12-46f2-818f-1a787547a35d",
        "cursor": {
          "ref": "6f0c24ef-dce9-438e-9a0f-7b8e00e7a1bd",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f6dec6b0-ad8f-42ea-82a6-79e46fd85a95"
        },
        "item": {
          "id": "0dca81ee-dc12-46f2-818f-1a787547a35d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "20ef2c1a-9094-4367-bed7-45af49bee315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717e91d8-5a37-4a0d-8e33-1063da8ca09b",
        "cursor": {
          "ref": "f8979bbb-245d-4c54-93ca-7349549a5fa5",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bd978d20-86a9-482f-a0af-6289f06a0fb3"
        },
        "item": {
          "id": "717e91d8-5a37-4a0d-8e33-1063da8ca09b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c47f75f5-3679-49f7-8d1d-583f7bf32c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb7c2f4-848d-45c0-b127-ffed13fb0fb4",
        "cursor": {
          "ref": "5e96258e-a1da-436d-a0c9-a72e216d3f7d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e2966133-3298-409b-ad7d-267ef08288cd"
        },
        "item": {
          "id": "fdb7c2f4-848d-45c0-b127-ffed13fb0fb4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3b17de7c-3861-4748-bfbe-1603a716a1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395e1d03-d713-4b95-8b16-c0b5a9cd7d94",
        "cursor": {
          "ref": "17667bf7-ed42-4b42-8180-10481c40b4c3",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8c0a286d-58e5-4f4e-aff3-4b92fa0ed511"
        },
        "item": {
          "id": "395e1d03-d713-4b95-8b16-c0b5a9cd7d94",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "03861854-cae4-4c08-bd9b-b06a31a45d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c1d441-f7c8-4921-adf7-2926ddaf6b62",
        "cursor": {
          "ref": "21920a24-e6ab-4dcc-bb90-b770c3ff326a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a84f82e8-d420-430a-ac87-d74a2006604b"
        },
        "item": {
          "id": "31c1d441-f7c8-4921-adf7-2926ddaf6b62",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5d2d3d30-dc69-4a55-bdf0-e1c42cd1500e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9685ceee-1715-4190-901f-f0848c3b0b80",
        "cursor": {
          "ref": "00c98f11-7136-48d4-9f74-f9c95060de9f",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2a679ac4-080a-49e1-ab90-3496ea71f09e"
        },
        "item": {
          "id": "9685ceee-1715-4190-901f-f0848c3b0b80",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c8f2c4ec-f1eb-432b-90e9-27e7cc3f5034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b12a140-e4b1-4ae5-b114-368fab164afc",
        "cursor": {
          "ref": "4c33a192-1493-438e-b901-ba52e4c065e7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9928e409-8901-4e30-b7b9-da9c961e38e1"
        },
        "item": {
          "id": "0b12a140-e4b1-4ae5-b114-368fab164afc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ebb2ae18-d45c-4c36-9db8-0c77df213412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04edc226-4598-4497-88ff-df53a2858f65",
        "cursor": {
          "ref": "93f49f75-1909-4a59-9361-21d1600293d5",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0d52e90c-d790-4c73-bfd3-9ae86c3928a6"
        },
        "item": {
          "id": "04edc226-4598-4497-88ff-df53a2858f65",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1d87b363-fe1d-49e6-8653-7fc2c6846a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0af9356-2ec2-4492-8116-4bbbaae5dc4f",
        "cursor": {
          "ref": "10b695c7-4d0e-4488-a8d6-cb7eaea8a17e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "abc4ca1a-1357-4971-b054-37ad3ec2cfe7"
        },
        "item": {
          "id": "d0af9356-2ec2-4492-8116-4bbbaae5dc4f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "75670ecf-7ca8-47c5-9229-eb1886305156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b67229-685a-449c-a555-417ce3d6b020",
        "cursor": {
          "ref": "b2b52511-e53a-404f-91fd-39d7064c4913",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "88eaa3d7-a0f3-4442-bb0a-1142dff1452a"
        },
        "item": {
          "id": "22b67229-685a-449c-a555-417ce3d6b020",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f833469d-4e6a-46d2-a54b-06ebafb4cd2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb0baed-36e3-45f5-a6f1-e8ca9871cdfb",
        "cursor": {
          "ref": "b38121f3-975e-44ba-b40f-56af389874eb",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "952ffedb-4426-46b7-aada-26097ff308ad"
        },
        "item": {
          "id": "fbb0baed-36e3-45f5-a6f1-e8ca9871cdfb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "43a85e08-3a60-4246-800b-3c20a91ce7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ad02a7-b072-4455-9fe9-eb177a80e862",
        "cursor": {
          "ref": "c28a00ff-9009-4e91-a2c4-77cfa19a8bfe",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bd8b9c2b-f68c-42f3-9583-4e910bcc216f"
        },
        "item": {
          "id": "13ad02a7-b072-4455-9fe9-eb177a80e862",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "81d426e4-8e7c-4528-88f1-b3b0402d0469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe89197-76c8-4539-bb44-d322577d06ff",
        "cursor": {
          "ref": "5ae8f4d5-4218-4b64-9868-fa5e56990239",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5464600f-f882-4fb1-ab51-8c6f6f5e602e"
        },
        "item": {
          "id": "0fe89197-76c8-4539-bb44-d322577d06ff",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b099be01-5257-4b64-9e85-8cf15af1b4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc6d5f9-cc30-4b7d-8eab-2afd9a4ea232",
        "cursor": {
          "ref": "54b4ca63-7590-4398-8f14-d35bb322f65b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e3abf589-68d1-42c5-92cb-826abd754075"
        },
        "item": {
          "id": "3bc6d5f9-cc30-4b7d-8eab-2afd9a4ea232",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1422c64d-441a-4aed-b1ef-bd7139f2f619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450143b1-418d-4581-9418-66382d3b3925",
        "cursor": {
          "ref": "d1f8e939-8766-4752-9986-d46b335f18b7",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "272c513b-d0ea-4c44-84fa-69e37d0b73a3"
        },
        "item": {
          "id": "450143b1-418d-4581-9418-66382d3b3925",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "022a74d7-ef4f-4ff5-bd67-f79e52177807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9dc465-39ee-4160-9acd-0742dff3313c",
        "cursor": {
          "ref": "5db7fee3-31a7-460a-bca3-390a194a1230",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dcbbaa0d-c7b0-4475-be8f-d789d9e4b9cc"
        },
        "item": {
          "id": "4b9dc465-39ee-4160-9acd-0742dff3313c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "77ccbed2-6de4-47a8-832c-5f10f361629e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676d7ef5-62d4-4626-aad0-dbf3d206585b",
        "cursor": {
          "ref": "4d91420b-ab58-4f2f-aa93-c9a61efba04c",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "df96d870-dc23-4dcb-a75e-83c1403a5155"
        },
        "item": {
          "id": "676d7ef5-62d4-4626-aad0-dbf3d206585b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "56db5420-e7f0-4f53-86ff-a2f0d4636625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cdfc1aa-59fa-4438-a95a-960c0a2f65b3",
        "cursor": {
          "ref": "e19e8285-2b0f-404b-a555-a20fd2507c7d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ea94efd6-2110-4394-9611-cd6438090f4e"
        },
        "item": {
          "id": "7cdfc1aa-59fa-4438-a95a-960c0a2f65b3",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ef7881d3-5b44-473b-9c3d-843cc5469308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd765d4-b06f-4ace-a15d-5f31c0381e0d",
        "cursor": {
          "ref": "c857531b-4ac7-47d6-aac8-d1e0cba17db8",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "85f72ce4-a20a-49ed-93bb-adc40fa97efa"
        },
        "item": {
          "id": "1fd765d4-b06f-4ace-a15d-5f31c0381e0d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "63caebed-1b5f-40b8-bc4b-9370d30899e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9292fa-09db-4fa0-9011-a9f65c9d5ac9",
        "cursor": {
          "ref": "59072c4c-f967-4d9b-8cd6-e04763323ee9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4f0dc2bf-5cd8-4ea6-b4ce-1bb2e6c9e708"
        },
        "item": {
          "id": "0c9292fa-09db-4fa0-9011-a9f65c9d5ac9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b2a8d639-f680-49c4-b7bd-81e353a47d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fb084f-07ac-45d7-9701-88cdc6c511df",
        "cursor": {
          "ref": "1806ae74-9821-4d89-bab1-d5be791ad840",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e3f1eb55-7cd4-44f5-a16b-5af208eaf008"
        },
        "item": {
          "id": "84fb084f-07ac-45d7-9701-88cdc6c511df",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e0378c8f-2f5e-4e48-a6cc-74c8d36e4305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6ac652-bb0a-4db7-a004-79484fff74ba",
        "cursor": {
          "ref": "d524794c-f294-48ec-9ae5-fea5fbe755ed",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d304fe5c-00a6-4fe2-89c9-431790466fda"
        },
        "item": {
          "id": "5d6ac652-bb0a-4db7-a004-79484fff74ba",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b53426d6-cf5c-4718-ba6d-99c5201d9701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928f1477-21f2-4d10-96c8-ee405b1c286c",
        "cursor": {
          "ref": "04dc2694-bcb9-4c14-9d48-4321e3a00c39",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9f35eda7-0ff5-48f4-b5fe-508bdea54c4a"
        },
        "item": {
          "id": "928f1477-21f2-4d10-96c8-ee405b1c286c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "64b131da-4788-4cda-a45f-2ba44f470457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5558e1a0-99aa-4d55-9e28-4c8ea27dcb62",
        "cursor": {
          "ref": "0866152a-2ab5-4ab1-be08-ea15c5fcfb05",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0a59ef77-f713-417f-9be7-a9c683a7abf7"
        },
        "item": {
          "id": "5558e1a0-99aa-4d55-9e28-4c8ea27dcb62",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "21cbb199-1ff7-4681-8619-5481d5f4e6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1111eb40-1cc2-47ee-844e-963968ad2623",
        "cursor": {
          "ref": "ee001cec-8332-4a01-bdae-59e12f4e7bba",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5ad217a4-71ad-4e9b-987e-a1c5c204542e"
        },
        "item": {
          "id": "1111eb40-1cc2-47ee-844e-963968ad2623",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8ebaf6b5-45fc-410d-9fff-71a05a1ea0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c38df4-2041-4c44-8800-3e4fb9bf6fd1",
        "cursor": {
          "ref": "97897bb6-0a43-4a5c-b6d1-984cfd5e5b59",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6f98cfdd-bd53-430d-8e75-d5c8245e70d3"
        },
        "item": {
          "id": "69c38df4-2041-4c44-8800-3e4fb9bf6fd1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "de068b9c-6d14-4164-9e76-4854c2dd420c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cf0fd4-37c4-4fdb-912e-b8356334b1da",
        "cursor": {
          "ref": "d4d906de-3128-4f6b-b844-b0f696007b34",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "abd50d3b-35cd-4f64-84de-2a2fbe6b2cdb"
        },
        "item": {
          "id": "d4cf0fd4-37c4-4fdb-912e-b8356334b1da",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "60927cc5-89a8-4dad-b4c9-d182525dcd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9197f6-a791-4fa0-b743-b40b41e1689d",
        "cursor": {
          "ref": "243e8902-da73-4ae5-98a2-a8e743e3d87d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6404f1ca-b5e9-4174-b838-7ced709a3255"
        },
        "item": {
          "id": "0f9197f6-a791-4fa0-b743-b40b41e1689d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9f3dbbc6-7892-40ab-9d00-6a7fdc3683e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587878b9-7316-4dfa-90e3-5509fce75b0d",
        "cursor": {
          "ref": "e2cccb1d-7293-4007-b0d2-af841a9612e2",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1543e743-3d3a-4500-a2e7-9e03b52aff3e"
        },
        "item": {
          "id": "587878b9-7316-4dfa-90e3-5509fce75b0d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6b785bb4-d19a-43bc-b3a2-70052eb82131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e0ecd0-bae0-4cbf-bfae-398cbbc8fe2c",
        "cursor": {
          "ref": "aa28b0cd-e5eb-4a6f-a5e7-5307d3ec7e63",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "19118110-f9a1-48fd-99bc-c992faf89515"
        },
        "item": {
          "id": "47e0ecd0-bae0-4cbf-bfae-398cbbc8fe2c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5af1f026-e61b-4771-a832-3a6e716a958c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 590,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf92870-f190-4508-b64e-b1f4d1584721",
        "cursor": {
          "ref": "da6f4dee-41d1-49db-9b08-5aed8d4d7b6b",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a235dfee-38c9-492c-a781-c9186db8595e"
        },
        "item": {
          "id": "acf92870-f190-4508-b64e-b1f4d1584721",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5ee6189b-9a4f-416c-b0ae-e3291d276492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b725acb-38df-4ceb-b04a-9edab488a7d9",
        "cursor": {
          "ref": "fdd667b7-3313-438d-94bb-d31fb20ec2e4",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2941b49d-f55e-4a54-bfbf-26c5fe577a8b"
        },
        "item": {
          "id": "6b725acb-38df-4ceb-b04a-9edab488a7d9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f3eb47e7-fadb-4359-9cef-c42e0cf9fdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e441df1c-2b3d-4de2-a848-db2a82be922a",
        "cursor": {
          "ref": "82a9dfaf-13c6-4728-a4ca-94af066bc024",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8d03e926-b25a-43e1-91f0-a21a7b7ff001"
        },
        "item": {
          "id": "e441df1c-2b3d-4de2-a848-db2a82be922a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "48d6d49f-3532-47cb-9af1-774aa86e900b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6d652b-b6a7-4222-940e-96492992e643",
        "cursor": {
          "ref": "a690d4b3-1d81-4825-bbb1-3a6bf5e390ae",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "adb9e128-f898-498d-99b4-583672879c43"
        },
        "item": {
          "id": "4c6d652b-b6a7-4222-940e-96492992e643",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d55dd7a7-284b-4ae9-9458-d58b7887b6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5e89e6-5a6d-4d9f-92fe-008c80f6010a",
        "cursor": {
          "ref": "49ed86bf-b72e-4459-9250-305f9453cdb5",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d66ac9d7-4965-411f-a5ad-58253e9517cd"
        },
        "item": {
          "id": "ed5e89e6-5a6d-4d9f-92fe-008c80f6010a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2cfab662-33d1-41ad-9129-e10077d52ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb1dfe8-703f-49a2-a64b-34465e7c7ef2",
        "cursor": {
          "ref": "6d00de1b-10d8-4a36-8e21-176bb0d97399",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "132c11df-7f62-415c-b479-3012c80e1e24"
        },
        "item": {
          "id": "4eb1dfe8-703f-49a2-a64b-34465e7c7ef2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "27b2de74-d58d-4586-9f6a-7ba8a22b9baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab00962-df3c-4e22-a4e8-20683f6c3aea",
        "cursor": {
          "ref": "c8dee285-b4c2-404d-8231-07d57e1ca916",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "57c58ce1-7bf1-4b22-9492-c38d9bb6fa38"
        },
        "item": {
          "id": "fab00962-df3c-4e22-a4e8-20683f6c3aea",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2159f550-2181-42ce-9101-0f35ab3c511c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 603,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8effb6a-5dc8-4338-8fa3-b6601f2c63d0",
        "cursor": {
          "ref": "d8047786-e50f-406d-8b7d-dc44cef469c0",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bc3bba25-e70a-489f-b2d5-5e0ebab9d0cb"
        },
        "item": {
          "id": "e8effb6a-5dc8-4338-8fa3-b6601f2c63d0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c986c6e8-4ace-4c1c-8d49-18a8af61ca72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0062e7fa-8e48-4c4e-be06-0899adcc3b9c",
        "cursor": {
          "ref": "e917da8e-3f9f-486d-b0fb-9b607f21b4bd",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "55954196-b6d4-409c-b3d7-ef9dd019592e"
        },
        "item": {
          "id": "0062e7fa-8e48-4c4e-be06-0899adcc3b9c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bade4192-3bc3-4dee-b9d7-98db2b68b391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164b6600-594f-4f65-af50-009771fcb0b3",
        "cursor": {
          "ref": "16899911-db22-4732-b45b-85173a98c646",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "879363b9-be10-4fc9-84a7-6747aabba99b"
        },
        "item": {
          "id": "164b6600-594f-4f65-af50-009771fcb0b3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f2d11f10-1489-40d2-af79-ad4043f605e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e10083-a977-4fba-9c4d-bdcc52cbf338",
        "cursor": {
          "ref": "b59777f9-d41e-4fe8-aa33-781ac9c7cf63",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "12123b97-0829-4ee0-afec-b7fe7f1d4a90"
        },
        "item": {
          "id": "75e10083-a977-4fba-9c4d-bdcc52cbf338",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ffcbeaab-bd27-40c2-87f8-67b5ae68cb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3264d7-6a1f-433e-b60f-f416c93c4254",
        "cursor": {
          "ref": "4540cdc5-e8b8-4265-ae49-f4f1487e69d2",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2222fb3c-935e-41a2-a9f9-3eb390328b40"
        },
        "item": {
          "id": "6c3264d7-6a1f-433e-b60f-f416c93c4254",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "59816616-9b85-4c3c-943e-2148507420e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45895663-8c5e-4524-b062-a8f37415936a",
        "cursor": {
          "ref": "7c0a196c-88e8-4767-89d4-5cd2eb68d686",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aa02f283-bdbd-4d43-bd14-298598ef3a8e"
        },
        "item": {
          "id": "45895663-8c5e-4524-b062-a8f37415936a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b4139aed-420b-4f30-8c31-91fde5cdbd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377855d8-1dec-489a-b0aa-e0c7c0703810",
        "cursor": {
          "ref": "f63afc0d-b42b-41eb-83ce-516e92d8c881",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9e08c503-544f-4a4f-8ff0-99bce3b015a5"
        },
        "item": {
          "id": "377855d8-1dec-489a-b0aa-e0c7c0703810",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "af119d4b-b69c-4ca0-aebd-a7c5caec41f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612bd73b-01e6-47dd-89ea-e56be0bbd8e3",
        "cursor": {
          "ref": "1d550207-ae29-4550-abb1-0e5c814f5a0b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7f6f4639-4ddb-484f-8548-aeba54731c49"
        },
        "item": {
          "id": "612bd73b-01e6-47dd-89ea-e56be0bbd8e3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "66231f4d-0047-4514-ad17-521383195a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c7d42f-0a72-4b88-9630-9f33c47a6480",
        "cursor": {
          "ref": "81b4f61c-f415-44c7-a0e8-13118ea7e09b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c952e31c-32a2-46e9-9559-b3062edc1b55"
        },
        "item": {
          "id": "e9c7d42f-0a72-4b88-9630-9f33c47a6480",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a7999753-d30a-448f-914f-ae4451daa334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b908843-bf26-4241-a415-79680b694f9a",
        "cursor": {
          "ref": "d3de6dbd-2f61-43f9-9bdd-878686b1075a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7cfaa4d0-d90d-42b2-9bed-c8db06bf7c69"
        },
        "item": {
          "id": "8b908843-bf26-4241-a415-79680b694f9a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fbe4c6dc-2ba8-4e76-b637-e5c9ea5eab57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9343a4-b8e0-41b4-af73-ca7c9dd89ea2",
        "cursor": {
          "ref": "e53ef266-06f7-4392-8d60-88b0dba695e1",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5f9e51f8-d1c9-4a73-9fad-438133266abf"
        },
        "item": {
          "id": "6c9343a4-b8e0-41b4-af73-ca7c9dd89ea2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "61eb6512-4bbd-46a5-83df-e57ecdd57ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717ee05f-b5f7-48a8-84db-48cfc981b85c",
        "cursor": {
          "ref": "6d0fb584-2f7b-4894-b63f-be7a17476c85",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c4678d82-bf99-4f5b-817d-6f5b63c3b8d5"
        },
        "item": {
          "id": "717ee05f-b5f7-48a8-84db-48cfc981b85c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f8b710fa-c8f4-4d59-8ad1-996a7127f703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ae69f3-984d-4021-b889-4934299725d6",
        "cursor": {
          "ref": "1a56e1eb-c33d-4dec-8800-3a7bcd2e82eb",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2e1837aa-d11a-4b73-8a29-e71334ee385b"
        },
        "item": {
          "id": "a4ae69f3-984d-4021-b889-4934299725d6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "067f3322-2d84-4479-81a4-5d8c0df985c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0760cb-3d48-42c8-bea4-8c88430a2334",
        "cursor": {
          "ref": "d986161d-936a-4d46-9134-3a9cb91f1b49",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "692df247-8f5e-41db-8e8d-e4c40b84faeb"
        },
        "item": {
          "id": "1f0760cb-3d48-42c8-bea4-8c88430a2334",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a36cfc3b-7887-4393-8a61-c2b2b6bf67ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5d2b86-8586-4ae1-b4e7-95936b0ad380",
        "cursor": {
          "ref": "bfc3149d-8b4d-4353-a821-63f94a0cd5e2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "809e2f0c-2801-41ec-b709-8c3b547f0d26"
        },
        "item": {
          "id": "8e5d2b86-8586-4ae1-b4e7-95936b0ad380",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cefc706f-63f4-4e6c-8dda-6431d18886e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1809e425-5b93-4500-9548-b2c6ddc199fd",
        "cursor": {
          "ref": "9674b607-2cd0-455f-87f5-6adf634b3538",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2c637aa0-eca4-4cf1-ac92-5e57b5111cf2"
        },
        "item": {
          "id": "1809e425-5b93-4500-9548-b2c6ddc199fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "822acc15-cf59-44d0-8370-3a18d578bd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3850357d-9105-4004-9ffb-a41366f0ec36",
        "cursor": {
          "ref": "9f2e6e8b-84f2-410d-a9c4-c01c4a325096",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "625e5a76-5d20-466a-a370-22990d005dcc"
        },
        "item": {
          "id": "3850357d-9105-4004-9ffb-a41366f0ec36",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a9abf88e-3aca-4b6c-8f9a-9e7b468f2fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d22767-88d5-45c3-a909-d7ffd7124650",
        "cursor": {
          "ref": "8b876d64-49ee-44b4-992d-0e5b2586809d",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "241dc987-b3b1-4a81-8e82-a366be06aa16"
        },
        "item": {
          "id": "36d22767-88d5-45c3-a909-d7ffd7124650",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bec4b003-4bb1-4a2a-b0a0-8d4badbc0098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abe3355-e004-401a-9bb8-968053b58718",
        "cursor": {
          "ref": "4a54a344-d7fb-4701-82b1-fce40759674f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d5c3cf9c-6d85-4831-903b-a66a4411f067"
        },
        "item": {
          "id": "6abe3355-e004-401a-9bb8-968053b58718",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0a671c25-a689-4ff4-943b-219dc8af7c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e215a6-5bd1-43ec-a37b-a838e290549a",
        "cursor": {
          "ref": "e6ade25e-29e1-48ae-ae7f-a4d3c49708ef",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f6621e5a-d643-4482-ac44-4cbd86c6f729"
        },
        "item": {
          "id": "84e215a6-5bd1-43ec-a37b-a838e290549a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "95ed8ce2-8ee2-4d26-87ee-d9fde2b89bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a20a926-c2be-4b6f-88b5-645046e778ee",
        "cursor": {
          "ref": "6afd0892-fd76-4f4d-8ddf-33e970b7a998",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ad1f7550-5bf5-4064-9ffc-ecb02d212e31"
        },
        "item": {
          "id": "4a20a926-c2be-4b6f-88b5-645046e778ee",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b53b7f9c-71b6-4cda-ae3e-e2691e278fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d146ea-2324-4acc-8a63-18b1ab19e7be",
        "cursor": {
          "ref": "428acb18-8b6f-4bf2-865a-81c025f76a1e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "95e190e1-96eb-44ed-bd16-d4dc2df44550"
        },
        "item": {
          "id": "47d146ea-2324-4acc-8a63-18b1ab19e7be",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d9b5f4de-b94a-4a8a-ad66-f9803baa5c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d089713e-ca79-43c8-b5d0-22eaee8fc9a8",
        "cursor": {
          "ref": "bf7da519-af95-4286-8545-49de42233811",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "24504c25-d63c-4bff-8e49-722e8418a385"
        },
        "item": {
          "id": "d089713e-ca79-43c8-b5d0-22eaee8fc9a8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "447e3de7-6e84-4451-ac05-fb44dfe96a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5464bb3b-7a67-4f99-9a87-a831abe24e77",
        "cursor": {
          "ref": "f9368396-4d6c-4975-ad74-5a5a87c15d99",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b4739875-35f3-458c-a56a-9b2d75b1988e"
        },
        "item": {
          "id": "5464bb3b-7a67-4f99-9a87-a831abe24e77",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8b90cd48-5e80-4fd3-a92a-ca7473420278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3948cd3f-abcf-4511-992b-343dae085d31",
        "cursor": {
          "ref": "71ca8a68-be3c-42f8-9f12-9951fa8709d0",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c9da996d-c766-4235-9017-2b146e909b8e"
        },
        "item": {
          "id": "3948cd3f-abcf-4511-992b-343dae085d31",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b2bb0b58-85b9-493c-8b1f-0547e8a0734b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42002e46-a37d-45e5-8f3e-8286ffae8091",
        "cursor": {
          "ref": "2a4f883c-34ac-437e-bf61-2096769f9ca7",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0736b9c1-506c-4d79-a96e-7c9229565d5b"
        },
        "item": {
          "id": "42002e46-a37d-45e5-8f3e-8286ffae8091",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aad96ce1-5ff6-40da-a41d-5ebaa4ec92f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fbecef-6986-4617-beb3-65c94c6d019f",
        "cursor": {
          "ref": "a9caf5a1-51bf-4bd8-93a3-2321932df7f0",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8cae13e7-548b-42b4-b34a-8bad8018bf5f"
        },
        "item": {
          "id": "b8fbecef-6986-4617-beb3-65c94c6d019f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d5f53abb-065d-4b95-ad84-d17a58608b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e60f20-c531-4baf-bdc1-046e7a1b08ae",
        "cursor": {
          "ref": "39af9890-b8c7-42f0-b035-fddfb9888861",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4000a959-6ae2-449b-8b6a-901410932534"
        },
        "item": {
          "id": "82e60f20-c531-4baf-bdc1-046e7a1b08ae",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "99e3a615-7ea1-4b18-9623-319c9eede9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038d5bb4-bd91-4bdc-a4da-c6ca06c8245e",
        "cursor": {
          "ref": "4ba7a7e5-3297-40f3-ab96-b1c8e8524d39",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d79a3480-ad67-4bb6-9fd5-5f15351ecdec"
        },
        "item": {
          "id": "038d5bb4-bd91-4bdc-a4da-c6ca06c8245e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b3626b6c-c668-42e8-bb1a-e6eb90339299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cee132-c0da-4fa5-aa74-eb2e1ddc3353",
        "cursor": {
          "ref": "b7f5f8ed-1f4f-4c07-bb55-708b68958b05",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7bcf22df-f7dc-49e3-9702-9c2a9bed7bc3"
        },
        "item": {
          "id": "c3cee132-c0da-4fa5-aa74-eb2e1ddc3353",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "604cbc70-4209-45fd-8a87-80e532f4c1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbddf21-782e-4943-9d02-b94b1e41ca99",
        "cursor": {
          "ref": "ad996a30-62e5-4846-bc6b-eedcb5a8f4f9",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d51e6608-cf67-4411-a9d4-25890dbabfb7"
        },
        "item": {
          "id": "2bbddf21-782e-4943-9d02-b94b1e41ca99",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a65cd4ed-bff2-44a8-a23c-e276501f3b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e277c91-e85e-4d3f-9137-05bc4fc9eeec",
        "cursor": {
          "ref": "270f5209-fb4e-41f3-b751-e7c0d1cd7a8b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8762f925-b3cf-417d-8006-49edac5db3f0"
        },
        "item": {
          "id": "2e277c91-e85e-4d3f-9137-05bc4fc9eeec",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "98cf6cef-0512-4160-85d4-99ba54a5a02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd047e59-c3ce-4f73-9336-d4deff286b35",
        "cursor": {
          "ref": "c189af67-9ade-4479-a3d3-a136af614032",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "da1962ad-1a91-4013-879f-9cbc3a4ade36"
        },
        "item": {
          "id": "dd047e59-c3ce-4f73-9336-d4deff286b35",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dfbf8583-b47d-4510-b874-959999a28630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e015ae91-cb2e-4791-8bd1-131ec11542f1",
        "cursor": {
          "ref": "74f13831-e5bd-4d3f-96bf-2aae788dc3b0",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "aeef01a9-c797-493e-aa40-f799fa7477b2"
        },
        "item": {
          "id": "e015ae91-cb2e-4791-8bd1-131ec11542f1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6e4b5fff-dcc4-4a76-9c54-5739a49775aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be3f5f2-3d96-4747-90a6-de899e01cf4d",
        "cursor": {
          "ref": "1d1bf4c3-8de6-444f-8cff-d356b52274c2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "71374173-8528-4556-b568-cd6e7547365f"
        },
        "item": {
          "id": "3be3f5f2-3d96-4747-90a6-de899e01cf4d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b17c2125-5c2f-47fd-83d1-4373a35e0255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505b6df0-651d-4a03-9d13-4110dcf7cad9",
        "cursor": {
          "ref": "1064ba49-fc14-43d6-afb5-5e7af85f84c5",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "abb7c954-534f-4786-93b4-d4093f5f7464"
        },
        "item": {
          "id": "505b6df0-651d-4a03-9d13-4110dcf7cad9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c342d035-445a-4dc7-bc41-e8bc3d347114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a32a1c-fb5e-43f0-81a9-e13f3d3c7f7a",
        "cursor": {
          "ref": "69f5db1e-d7d9-46c1-8e98-a695d1489b85",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1c215f12-e4db-4da2-8ca9-2359f80c1007"
        },
        "item": {
          "id": "04a32a1c-fb5e-43f0-81a9-e13f3d3c7f7a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d8750362-52a7-4f82-8249-ce38ce7191ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7f2089-545f-4238-b5cc-226922386774",
        "cursor": {
          "ref": "49f2d490-8afe-4cbb-8578-f087858d2b62",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "504c57d7-fdd9-4233-8418-4edb277317cb"
        },
        "item": {
          "id": "8a7f2089-545f-4238-b5cc-226922386774",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f6dc7a52-eaaf-48cd-be40-491bb62d747a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d01cd2-6d98-42dd-8576-a583abcd6a3f",
        "cursor": {
          "ref": "cf036d53-a7e7-4600-ab98-b0e6ffa6981e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d8e2473b-08dc-4268-abe4-ce76df476536"
        },
        "item": {
          "id": "a0d01cd2-6d98-42dd-8576-a583abcd6a3f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "66bbc1b4-f8ed-42d0-9a7c-027a2f0a0773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbac069d-b19b-4ef5-bd07-a3f7fdff3b25",
        "cursor": {
          "ref": "9fe3d3bf-50b4-4f3f-93ca-e078f9c83403",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4561445c-e47e-4791-b0cc-3246b15d19c7"
        },
        "item": {
          "id": "bbac069d-b19b-4ef5-bd07-a3f7fdff3b25",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6dfb85fa-47d8-443b-bb4c-1dea0647fa5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c712454-ec84-46c4-b114-f2073ce04b98",
        "cursor": {
          "ref": "e6149c07-b91f-4841-b247-a575d5e52d79",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3c9b9c04-2ddb-41fe-b538-51a61d0c5704"
        },
        "item": {
          "id": "5c712454-ec84-46c4-b114-f2073ce04b98",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "48ed16ab-0900-4471-8c05-353cd492ed8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de39048-df79-49b0-93ad-a77ed769a70d",
        "cursor": {
          "ref": "f7230f16-be38-450c-a3a6-5e5ade158870",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a6f5fbbf-0c6a-4c38-aea5-77df05852172"
        },
        "item": {
          "id": "7de39048-df79-49b0-93ad-a77ed769a70d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "860acbf6-7185-45e5-b3e2-cc8a689bc73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6c415b-d5df-4917-89ee-09a159abb840",
        "cursor": {
          "ref": "864519e8-fe73-4c16-ab2f-6b4e0c6d0b09",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "503eaefe-3f86-46d2-8c50-5ee0a67a84a6"
        },
        "item": {
          "id": "2c6c415b-d5df-4917-89ee-09a159abb840",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1a71fdc8-1e13-4810-a490-a703d67e608e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7693603a-364b-466e-a964-925972fe434e",
        "cursor": {
          "ref": "7b4dae03-4446-44e7-a5d3-c98b17235eb4",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "aa671038-b347-402a-b182-3b43e8c46c84"
        },
        "item": {
          "id": "7693603a-364b-466e-a964-925972fe434e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d65d9959-e588-4a35-b2c2-c8abceaa8ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40021109-3f92-45fa-9480-854671031827",
        "cursor": {
          "ref": "5aa1ff5a-61af-4aa2-988e-e93253813415",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c6162ec0-b9e7-4687-a7ae-a1f71b0fb896"
        },
        "item": {
          "id": "40021109-3f92-45fa-9480-854671031827",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "341a1bce-4c70-4bdc-8ba4-db7cdf8d1af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ab36a6-1f52-4c18-81d9-96b72e01d870",
        "cursor": {
          "ref": "4f81fbda-c44b-4c4c-9e4a-06afc1e17b87",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fd8bee8a-2d49-4e1f-8c07-00b0d96bc805"
        },
        "item": {
          "id": "d8ab36a6-1f52-4c18-81d9-96b72e01d870",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "13318a6a-2fad-43f9-b576-9c2ce078b9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d46675-bde0-4d60-a835-0b4c9b86444b",
        "cursor": {
          "ref": "99b7f1ff-df7a-4aa4-85dd-ed84f015df08",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "255d78e1-aae2-40a1-b691-5a0a8da58224"
        },
        "item": {
          "id": "65d46675-bde0-4d60-a835-0b4c9b86444b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fc47e43c-4556-4cef-a6f0-f980f58682aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075cb60b-9d40-49d7-9ce4-5e689f35e89f",
        "cursor": {
          "ref": "2080c53f-dbdd-43e6-bf42-9ed100a7f11a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ca9837ba-1a05-4bc7-b206-7776f6d19664"
        },
        "item": {
          "id": "075cb60b-9d40-49d7-9ce4-5e689f35e89f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3b513710-7084-4dfa-8f63-ba0057283a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9840eb06-514d-4cdf-8717-9aee3760ae6b",
        "cursor": {
          "ref": "f2cbdb00-da6d-49b0-9ab6-b985b88d41c9",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9b7554e2-285e-4dc8-8c6e-5d770f9f0845"
        },
        "item": {
          "id": "9840eb06-514d-4cdf-8717-9aee3760ae6b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "51dd535a-acde-4273-a7fb-2cafa507f560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad815fe3-42bc-41e8-9ef2-dd4f982b2eb6",
        "cursor": {
          "ref": "17598e7e-cbb8-47c8-80dc-452731fee69d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e058507d-35ce-4b64-9a90-381445c7fdfa"
        },
        "item": {
          "id": "ad815fe3-42bc-41e8-9ef2-dd4f982b2eb6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0c47828d-5829-4493-99d3-70bf849c620f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafe4cfe-3c03-4e45-8664-2b1422219bf4",
        "cursor": {
          "ref": "8ff60630-ecac-4481-a12e-29b2c05936a6",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cd1e8f8e-d0a3-465b-a208-8fb37d52a50f"
        },
        "item": {
          "id": "dafe4cfe-3c03-4e45-8664-2b1422219bf4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "34198f7e-8ecf-4c67-b792-ff82da026b93",
          "status": "Created",
          "code": 201,
          "responseTime": 7968,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e61c7c1-9441-4e53-8f66-b465473dced0",
        "cursor": {
          "ref": "af49fd5b-e6f7-4899-9343-3aedad2c1b7c",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3b8c7509-7dff-44d2-9e96-da30620e0a0a"
        },
        "item": {
          "id": "6e61c7c1-9441-4e53-8f66-b465473dced0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "526c2dfc-effb-40d2-be38-ed8be1c25ad1",
          "status": "Created",
          "code": 201,
          "responseTime": 7514,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8b4087-b688-4330-8c8d-c29e38c72880",
        "cursor": {
          "ref": "80a03e1a-5d3c-44cc-8d54-c0cb16554da7",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "872d2511-bcdd-4df5-99cf-2ba92feeb296"
        },
        "item": {
          "id": "9b8b4087-b688-4330-8c8d-c29e38c72880",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d50750c1-6c1d-48de-bdac-cf100cd59331",
          "status": "Created",
          "code": 201,
          "responseTime": 6432,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1e79f9-6296-4cd8-8b82-9969d8ac413c",
        "cursor": {
          "ref": "07028cc1-7c05-4cca-9862-ef6546fbc2d1",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "be164a4f-6423-4800-afaf-312c98923281"
        },
        "item": {
          "id": "9f1e79f9-6296-4cd8-8b82-9969d8ac413c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9a0c55a7-d4aa-4851-b31f-4aee59f2a1af",
          "status": "Created",
          "code": 201,
          "responseTime": 6917,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "805efb31-8ca1-457b-bbac-39585c05dcb1",
        "cursor": {
          "ref": "dfc3e7c2-ba19-4108-887b-656d36008dd9",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d0cc62a8-723d-4962-97af-adad6e142751"
        },
        "item": {
          "id": "805efb31-8ca1-457b-bbac-39585c05dcb1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "77996765-4b7a-4c05-8b78-85b544ea4ba3",
          "status": "Created",
          "code": 201,
          "responseTime": 6876,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f909180d-d00e-429e-b6f4-f1c50910a833",
        "cursor": {
          "ref": "cb334c8b-62c3-480f-88ba-3ace699f630f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "51c3c679-57e0-4ba7-b378-df54fe44d0a0"
        },
        "item": {
          "id": "f909180d-d00e-429e-b6f4-f1c50910a833",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c1f4d4f2-5634-4724-8106-7e8987edb65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "24c1164d-c4ff-4ffa-b63e-129eff4c0edb",
        "cursor": {
          "ref": "3068d66d-f907-4cf8-ba4b-6f0b59acf0d9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3b20879f-b540-4a10-910a-f4fe2c5961af"
        },
        "item": {
          "id": "24c1164d-c4ff-4ffa-b63e-129eff4c0edb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "59c2f9b1-d97d-419f-ad2a-bc74794a198f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a2b77f-3e94-4b44-9423-7fff97c5427f",
        "cursor": {
          "ref": "826cb799-fc69-4949-841f-0b8ff3a5ffce",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "33fbe005-8be1-47ae-8988-5577cae4f113"
        },
        "item": {
          "id": "47a2b77f-3e94-4b44-9423-7fff97c5427f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a56ecefc-8ede-4649-ada7-74fc607f85a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f7d4fc-6c2f-4bc3-a5f2-89e7c035934e",
        "cursor": {
          "ref": "73eaeed2-805b-4d90-9d46-44e7c0c09358",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6b12a4aa-7696-4c3e-9bba-4c2bf0a6443e"
        },
        "item": {
          "id": "43f7d4fc-6c2f-4bc3-a5f2-89e7c035934e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "eae4b634-47dc-4f3d-88e1-b139f336ddb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3ab50c-b771-4a69-a0ac-0d4a3dfc2e03",
        "cursor": {
          "ref": "85f5e556-2e56-46e5-8d7a-75a44cd6e2e3",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "18c44d3b-1344-4507-9f54-e8afb8d6f610"
        },
        "item": {
          "id": "2d3ab50c-b771-4a69-a0ac-0d4a3dfc2e03",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2f962b42-ff0a-4e96-a640-44d7820ca6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89be681e-f2c5-43a7-9cba-05db197cad4e",
        "cursor": {
          "ref": "69c9b7ce-f41c-46f6-b61b-7cd7416730e9",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7d52b78c-8ac8-44c3-aad5-667a518f9aac"
        },
        "item": {
          "id": "89be681e-f2c5-43a7-9cba-05db197cad4e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e148d3dc-4995-4736-a2a7-129296b29cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771cd695-fcd6-4616-827b-8fdc5133abd6",
        "cursor": {
          "ref": "9ad1e68e-42a6-44ae-b3e6-57944fb6d740",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "701a36cf-a8f0-4e5b-ae0f-dd624daaa2b0"
        },
        "item": {
          "id": "771cd695-fcd6-4616-827b-8fdc5133abd6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6a055736-a51c-4310-beb3-da79fde28e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ef0ed9-4802-4f69-944c-72be7f6bd910",
        "cursor": {
          "ref": "e4ce185e-1b96-4eaf-94bf-8c2049d49e2a",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4f7eb5c6-8458-444d-816b-7b9b11fed88f"
        },
        "item": {
          "id": "58ef0ed9-4802-4f69-944c-72be7f6bd910",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9d4e4e8a-57e0-45b2-92ff-0376faec02cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662f84ab-3eea-47f9-8635-164a474a45a2",
        "cursor": {
          "ref": "272e7202-a099-4fd7-9bc1-576784ce6ffe",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "580c75e2-0a35-4754-8b2a-7fdbd2a1a1a8"
        },
        "item": {
          "id": "662f84ab-3eea-47f9-8635-164a474a45a2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e633a177-caea-442a-98a9-eb3cc54bb22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91eb86d5-1613-4690-8160-fcd785b746d1",
        "cursor": {
          "ref": "a63c908f-df5b-4558-988d-46e9e6e7a5d5",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4aff50ed-0c89-474a-815d-d94a95c38646"
        },
        "item": {
          "id": "91eb86d5-1613-4690-8160-fcd785b746d1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0a7b9678-72c0-4555-a25c-12aa33cfe142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6137f4-7b53-4f6d-8918-887d01cdce7d",
        "cursor": {
          "ref": "4023d816-050f-47be-9cda-0f84f2867615",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8bf3b746-1f98-4c0c-9f42-918f07469afa"
        },
        "item": {
          "id": "ad6137f4-7b53-4f6d-8918-887d01cdce7d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "28329949-4e74-46b3-814a-a2094775ecb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7facea-7545-4e4b-b89a-1cad52b1c0d7",
        "cursor": {
          "ref": "06c0d458-fb5c-4660-aeb8-e42e1376a5d7",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a93dbaad-b0cb-48a6-8637-d2503790b629"
        },
        "item": {
          "id": "1f7facea-7545-4e4b-b89a-1cad52b1c0d7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "35f92c02-925a-4be7-83ff-2d6df4f57802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534ea8d9-fb06-460c-a3b9-273765ac1f62",
        "cursor": {
          "ref": "2da195b8-9802-4008-ba02-368edcb4c5b8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1f247a7e-9762-44c0-8a59-328bac1cc15f"
        },
        "item": {
          "id": "534ea8d9-fb06-460c-a3b9-273765ac1f62",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "15aa02b4-0f94-4657-a747-5fe26a7c1963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d32528-7cc9-4d57-bf63-87559f75cd40",
        "cursor": {
          "ref": "352dd573-1497-4aa5-8184-e18aeb69b4ad",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "97c22016-da6e-495a-aac4-577f2ec8ec9a"
        },
        "item": {
          "id": "f3d32528-7cc9-4d57-bf63-87559f75cd40",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "48648d80-98ff-435c-a7b8-838adbd60690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9aad47-3776-40b3-a08f-fa95c5109d4f",
        "cursor": {
          "ref": "7d16e74b-6a39-47af-a0a5-8b59b20b5058",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "581c3766-5e16-4735-aa52-edaa366b128d"
        },
        "item": {
          "id": "2b9aad47-3776-40b3-a08f-fa95c5109d4f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cba42c4f-9871-420a-b18d-3238a1bc4473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db0f39b-a193-4234-ad9e-577f029d34fa",
        "cursor": {
          "ref": "501de086-ebe6-46fa-bbdc-b8067ddff4e6",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0c1ba891-5d01-4d40-b958-d6ef9375558e"
        },
        "item": {
          "id": "9db0f39b-a193-4234-ad9e-577f029d34fa",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e1ec05a8-efcf-4239-bb19-124c8ee565d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ab8477-7cf7-440f-bd6a-5d08749eda7e",
        "cursor": {
          "ref": "6427a205-ba77-4cac-b9c9-56200292ce2d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "36ebb67d-b836-43ea-b719-ba7fb1d5e183"
        },
        "item": {
          "id": "75ab8477-7cf7-440f-bd6a-5d08749eda7e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "572caf36-3e52-4379-9445-d95a48b48c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329caa8e-2971-4c9d-8f22-55347a5ca9e3",
        "cursor": {
          "ref": "2043391a-9893-4412-b66e-14ae8dbad9fa",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4db4ee4c-9511-4eec-b769-9ee9d7337516"
        },
        "item": {
          "id": "329caa8e-2971-4c9d-8f22-55347a5ca9e3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "01e30f4a-a8e9-4fa6-90a6-2ec9b8a1acc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9647b26-dcd4-431e-89fe-5bdc4470018d",
        "cursor": {
          "ref": "17b27093-bab0-4aa4-b935-ffe72e2fd576",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "84e53e9f-f2e7-4dea-bc01-1139063cdfee"
        },
        "item": {
          "id": "c9647b26-dcd4-431e-89fe-5bdc4470018d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fb130c9b-4284-4695-9bba-a3834bf69f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a205b24c-6514-44e0-b407-105e1d71e041",
        "cursor": {
          "ref": "c46d199b-0860-40fa-884f-7a8e48350d2b",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0e8ce711-7d3c-4d2e-8979-48fc6c1e8416"
        },
        "item": {
          "id": "a205b24c-6514-44e0-b407-105e1d71e041",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ca76a039-8a1c-4d1b-9f76-48007a4839c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5930c3-9398-44e3-836e-7f15abe427e9",
        "cursor": {
          "ref": "74cc1e82-3d08-45a6-9121-b5bb45277d08",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "54944c72-a4e6-4042-a54f-08c95564b887"
        },
        "item": {
          "id": "3d5930c3-9398-44e3-836e-7f15abe427e9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "10ee132a-d001-4a25-8d68-a5882c120311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0607aedc-f6d4-403f-9502-af9b75236b2c",
        "cursor": {
          "ref": "72f6dcf6-4eb5-4c72-905a-91dbd43a9d5e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d94c9c0a-5169-4eab-b102-2f0fd32b3ba4"
        },
        "item": {
          "id": "0607aedc-f6d4-403f-9502-af9b75236b2c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e28e7e91-dbb4-4e07-960e-a04b039b4182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c229d8-b6ba-49ff-a5e0-a0c4ff3e9b0e",
        "cursor": {
          "ref": "3fccf66b-bd49-47bd-b5ec-a510cafea0fd",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e5cb2953-0462-4995-8a7e-207f117eeba9"
        },
        "item": {
          "id": "72c229d8-b6ba-49ff-a5e0-a0c4ff3e9b0e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dc3da4a2-870e-4d26-8c70-66cc6f51d840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff37053a-24d4-4e72-a942-719f3b23e13b",
        "cursor": {
          "ref": "e03d386b-7b62-4c74-89a7-0e4ab2db34ad",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f7f89605-9aba-482b-9a47-1cc9119bbf04"
        },
        "item": {
          "id": "ff37053a-24d4-4e72-a942-719f3b23e13b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "db7a27b2-8252-4f62-a1b7-f15b04f9b199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0401ab-d8e3-4d1d-95ea-ad1998b4de46",
        "cursor": {
          "ref": "76cce1fc-a079-4ddc-84b6-9c2a6d464aed",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e1d59645-f45d-4cf5-aba0-2f27b4b8303b"
        },
        "item": {
          "id": "fc0401ab-d8e3-4d1d-95ea-ad1998b4de46",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cec07917-7627-4b36-9da8-035b152c7142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7614075-99ff-4555-b5a3-b69afcb64a9d",
        "cursor": {
          "ref": "b05d9e8d-eefd-4554-9a9c-aaca8e52ba25",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "381de8d0-5afd-4819-9e4e-0ff98013ff62"
        },
        "item": {
          "id": "b7614075-99ff-4555-b5a3-b69afcb64a9d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "88cba9c6-839a-4373-8dbb-3f2c26beed8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d779ca26-a965-4a0d-8c2d-9019e39e65a2",
        "cursor": {
          "ref": "71b52aa7-0d6b-4c79-bf14-3d61a34e58fe",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f724c485-6965-4271-ae9b-aecfd2cca4d5"
        },
        "item": {
          "id": "d779ca26-a965-4a0d-8c2d-9019e39e65a2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "08afbf0f-7058-49ea-b621-5cbfefda1d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c1dfef-eea7-4aed-80e9-61d405803efc",
        "cursor": {
          "ref": "06e7f32d-93bf-4366-979f-2b79ffb6677d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bca08cec-3de1-4f6d-8572-1354bf046d0d"
        },
        "item": {
          "id": "74c1dfef-eea7-4aed-80e9-61d405803efc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6f10ccb4-f6b8-4cb2-8dae-806494e1a1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dc8661-76b1-4034-8add-07319d080dec",
        "cursor": {
          "ref": "4e5a14f1-8420-472e-9808-a32b41dd7d3e",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0441983f-67eb-44f0-aef1-5e4e2d085bc4"
        },
        "item": {
          "id": "36dc8661-76b1-4034-8add-07319d080dec",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e617f6b3-a58c-4793-8952-6968e145c13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c0b51c-0432-4a5e-8e2e-42f2bb12f3b8",
        "cursor": {
          "ref": "18896aaa-2e5d-4294-b0d5-5646186b19d6",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "381dfef6-dbbd-47b6-a9d1-581a0040a3f5"
        },
        "item": {
          "id": "a6c0b51c-0432-4a5e-8e2e-42f2bb12f3b8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1ffb1893-6eff-4e17-a55e-bdeefcdbb599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73615f84-50b8-409f-bbcc-864dfccf60ac",
        "cursor": {
          "ref": "128bdd8d-d2a8-4b1e-a78c-ae7c68e3f844",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "887944d2-64ae-4ebb-b7e4-8bd9e8c61640"
        },
        "item": {
          "id": "73615f84-50b8-409f-bbcc-864dfccf60ac",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6b393b41-b9ad-468c-956c-40226aa61968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76318ddc-ff85-4165-bf3d-988ea224bce0",
        "cursor": {
          "ref": "c411c588-f978-464f-aecf-73d197fb5cf7",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4bac3e83-13cf-4b41-83fc-f57d1eae5ce5"
        },
        "item": {
          "id": "76318ddc-ff85-4165-bf3d-988ea224bce0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "19a228d7-f64f-470a-ab7a-2b2d2bd3c9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b37b83-50d2-4b4d-bbd8-a2a466ffcc21",
        "cursor": {
          "ref": "a16fdbd4-fd76-4271-ba98-c276b02dcf5d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "eb02ffdf-b1e3-4703-8a78-eb8ec23d8fd8"
        },
        "item": {
          "id": "91b37b83-50d2-4b4d-bbd8-a2a466ffcc21",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "49882993-8840-446d-972e-d5c743e74dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e3cb8d-226a-4f35-a9fa-ad2ac6506f8f",
        "cursor": {
          "ref": "7a5bc498-8324-4921-bdea-7c7e83281822",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2db1bb31-6d10-4aa7-b40c-27f48937ee9c"
        },
        "item": {
          "id": "23e3cb8d-226a-4f35-a9fa-ad2ac6506f8f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c76e6d97-a760-432a-90f4-19e69485e446",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1263af1e-fcc5-4134-ac92-6ca22a1e8e3b",
        "cursor": {
          "ref": "2bf67ed2-6c91-4354-945d-1f978be54af0",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "396a622a-10d1-4884-a616-5a6be80915ab"
        },
        "item": {
          "id": "1263af1e-fcc5-4134-ac92-6ca22a1e8e3b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1667a1a8-a0bc-4554-aa49-a4b69bcda274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f44a0b-d9fd-47f5-80f0-474978a8e80a",
        "cursor": {
          "ref": "97ce3905-89c1-4380-95f1-515fd67969a6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "302adb65-5f62-4586-af9b-29767543b282"
        },
        "item": {
          "id": "62f44a0b-d9fd-47f5-80f0-474978a8e80a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3d85fd6f-d7e2-4bd9-9e46-3dcc7a5abaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76edc68-a511-46da-85aa-4828ffab8f5e",
        "cursor": {
          "ref": "f98b6d46-c881-45cd-a1db-d0e59cc2958d",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f1a4d7d3-ed3d-4da0-8622-3a01126850cf"
        },
        "item": {
          "id": "c76edc68-a511-46da-85aa-4828ffab8f5e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a4d89f46-b1d6-414c-b519-ff062d61b589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2aea3e-95ad-4006-aa2d-33f9104a347c",
        "cursor": {
          "ref": "39dfca39-ff5b-4e04-ab2e-74e0413e811c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "433d0fe1-4dc9-4f8a-8c01-6d63f1e96fdb"
        },
        "item": {
          "id": "cc2aea3e-95ad-4006-aa2d-33f9104a347c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c55b346f-81d6-45e0-91d9-08c25d339924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67f825b-c96d-4ae3-be8a-3828bdc04a2c",
        "cursor": {
          "ref": "7df06331-912d-46e7-b4a3-282d5fafaf30",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d1ff3f79-8e01-42a5-8f47-2c064633b412"
        },
        "item": {
          "id": "e67f825b-c96d-4ae3-be8a-3828bdc04a2c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c29a742f-0bd9-4105-b1e2-3cfce0d09aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee060c0e-b2a9-4708-9750-d7fb19889ba0",
        "cursor": {
          "ref": "f3d14ddb-b41f-4640-aabb-8c37d0859950",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cb4500f6-4d5d-4f82-ab81-d424b428c01e"
        },
        "item": {
          "id": "ee060c0e-b2a9-4708-9750-d7fb19889ba0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4c833031-537a-4273-9522-4a335a48210c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2d12e8-9838-4f0b-88ad-1c86516b69d7",
        "cursor": {
          "ref": "d8009e59-e367-4b23-98a4-f952bf00b1b8",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a7150972-344f-473d-b161-4a9f8aa85808"
        },
        "item": {
          "id": "6f2d12e8-9838-4f0b-88ad-1c86516b69d7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f86d9fbc-4b30-43c9-86a2-b77847aee8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c12865-daa3-48e5-9fef-0fca1a971637",
        "cursor": {
          "ref": "2282168f-be38-4de7-b9af-a53a4a7026bd",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b130e4b6-5f33-4c99-bc23-be4212ce2c4b"
        },
        "item": {
          "id": "70c12865-daa3-48e5-9fef-0fca1a971637",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ae94a546-9987-436a-8056-41b83ce2dccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e9d379-c0dd-4e98-9f35-3b089f4aa1d6",
        "cursor": {
          "ref": "78d3779f-53bc-4e61-8928-8d03f25dcce3",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "60c6f863-3e3f-4565-81e7-8793be814a2f"
        },
        "item": {
          "id": "a1e9d379-c0dd-4e98-9f35-3b089f4aa1d6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7b7a0ce2-ebe1-4134-92cb-c01917ab0691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7b18ce-f57c-49da-a346-62317b3f100d",
        "cursor": {
          "ref": "0f71c96f-43c4-48ab-9b7e-87eaeb0bf47d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2eb6fa87-0f9c-46c4-9e18-fa2fd97ea3d0"
        },
        "item": {
          "id": "0c7b18ce-f57c-49da-a346-62317b3f100d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ae79a4d3-5c35-439c-9c47-4a7c9d7bcd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed9ef3a-68d4-40b2-8fb9-722a28880efa",
        "cursor": {
          "ref": "a27e21a9-9dc5-4b89-ab81-f46aebb8c475",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5ffff3f4-14c4-4e5f-ada7-279ef52f911c"
        },
        "item": {
          "id": "eed9ef3a-68d4-40b2-8fb9-722a28880efa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ede778a7-4319-4f85-a3fd-aae35d222ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123bdd3a-5bc9-4a2c-b9b4-1fa0aa3c1183",
        "cursor": {
          "ref": "ff087e25-2687-4629-9838-72baa5547888",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6f957a90-8e45-4ed6-a4dd-12ab66fb20c2"
        },
        "item": {
          "id": "123bdd3a-5bc9-4a2c-b9b4-1fa0aa3c1183",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "84b40a4c-4ba1-4d80-9f1d-7586a78b136a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a8ef05-94c2-4057-8d04-135f6e35faa6",
        "cursor": {
          "ref": "aba961eb-20c2-4d09-b519-fde730197ec9",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f70df23d-11d0-48b3-a0d3-ca3b6c061494"
        },
        "item": {
          "id": "d6a8ef05-94c2-4057-8d04-135f6e35faa6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "86740669-0786-4234-9ca0-695a166179aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cb4de6-9e18-4d6b-8782-e62bda456c6f",
        "cursor": {
          "ref": "33c4f5ea-768d-4687-90b6-a83488a85b53",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a1014090-784b-41f3-acb2-f8bb4018106d"
        },
        "item": {
          "id": "c0cb4de6-9e18-4d6b-8782-e62bda456c6f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "279f8530-7753-426f-862a-5841b04e47d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b244b1fe-8a8f-4ebe-a340-f84ba35bcea7",
        "cursor": {
          "ref": "a7886ef3-59c9-4a55-9fde-c3add40a5012",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0c72b54d-0e5d-4618-be74-33f8a0cc84e8"
        },
        "item": {
          "id": "b244b1fe-8a8f-4ebe-a340-f84ba35bcea7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3bc9d8cf-11fe-426d-975b-82e9edb65d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d785afd8-e67e-4eb3-bab8-dbfd8fd24803",
        "cursor": {
          "ref": "4a0addd6-37af-4274-b442-86a10c686c6f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "653e6032-32d8-4650-b7e8-adcbd918d02f"
        },
        "item": {
          "id": "d785afd8-e67e-4eb3-bab8-dbfd8fd24803",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0ee6b30f-f395-427f-8dce-fa3bff139ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51879c68-d5e3-479a-8e8c-efa717228370",
        "cursor": {
          "ref": "f919ed2f-2e8d-42a1-865b-19832e78cb1e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ae4e986a-5529-4adb-8f22-86865145344d"
        },
        "item": {
          "id": "51879c68-d5e3-479a-8e8c-efa717228370",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4b6f0659-ac19-4d81-b123-e8554ce2581d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7a87a1-57f0-412c-8b39-eab6d196c6c1",
        "cursor": {
          "ref": "f610d81e-84eb-43b0-96ff-41cc4b63e63c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "56f67ca1-dac4-4ff5-a8f6-34a7d2432a41"
        },
        "item": {
          "id": "8b7a87a1-57f0-412c-8b39-eab6d196c6c1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f857169d-5406-4383-810f-37004402d48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103465cf-8df9-4a40-a31b-85b5fee2bce8",
        "cursor": {
          "ref": "06a93204-72c9-418d-990f-f943e56d9df8",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cddfdf74-8627-4344-8738-8b95a795b366"
        },
        "item": {
          "id": "103465cf-8df9-4a40-a31b-85b5fee2bce8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b7022447-6286-4290-ad15-ebd45447573e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80f34e5-9434-4f49-be65-ef664a1cfee8",
        "cursor": {
          "ref": "a260b920-bd14-4045-abee-b2e2f25c9040",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d9cd49cd-4e5b-41f7-9554-1b16d885acce"
        },
        "item": {
          "id": "f80f34e5-9434-4f49-be65-ef664a1cfee8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e46726f5-ab21-44f5-9600-8431029b2503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bec9b0-7d12-4836-8278-cd366ac21f60",
        "cursor": {
          "ref": "95311948-20aa-420e-9bfb-265c0128b354",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d0b24a8d-dbc2-4da5-a129-4f0038e68e61"
        },
        "item": {
          "id": "43bec9b0-7d12-4836-8278-cd366ac21f60",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a92599da-f585-4964-8baf-132a0ebdd0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ea7f84-ddea-4e1b-bdd0-95b114ed552e",
        "cursor": {
          "ref": "e97d5dcc-b3f8-445c-aadc-8f99ab9dfd59",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "404b65bd-5fa0-4d01-a910-e7b46d4fd654"
        },
        "item": {
          "id": "07ea7f84-ddea-4e1b-bdd0-95b114ed552e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "18774eee-e589-4227-a6f5-f056c996fe36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7314ee46-b1ac-4275-873b-9305085dc96d",
        "cursor": {
          "ref": "abd0e8c1-9079-4cc4-9f48-29fecbcd5f13",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "475a2828-e08f-451d-b13b-833318fcd54c"
        },
        "item": {
          "id": "7314ee46-b1ac-4275-873b-9305085dc96d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5e5fc7b1-ee2c-440f-bde7-193beeacf31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caebea3-9b67-403a-b180-4f1e21f6a936",
        "cursor": {
          "ref": "502bff39-0b45-4e0f-9ce2-36e971a4e55a",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ad83ac99-8627-43e9-8139-4e0ee24d2805"
        },
        "item": {
          "id": "3caebea3-9b67-403a-b180-4f1e21f6a936",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "14cac2b6-561e-4d88-80dc-a3ffa45c01a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08f1758-7fd7-47b8-a339-ac33c27bda82",
        "cursor": {
          "ref": "7bdaadf7-c6e9-4131-b9fd-c76cdd01863c",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b10bc19e-1887-4c6f-a178-7916db7eb280"
        },
        "item": {
          "id": "a08f1758-7fd7-47b8-a339-ac33c27bda82",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1821a71d-ef45-41f1-8f80-f3a6c3bcc9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c862d78b-63f8-4d83-805d-13ddd5de6025",
        "cursor": {
          "ref": "f31715d3-c309-4e26-94f8-9b72d6731ee2",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4ce1c986-bf23-43f7-8088-5c603716c670"
        },
        "item": {
          "id": "c862d78b-63f8-4d83-805d-13ddd5de6025",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "03c7288c-d718-44df-bae3-688c6ad66d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e01325c-b069-4a90-a809-0542d4b7721e",
        "cursor": {
          "ref": "dc2d8dae-6462-491a-baa2-e92cc739672d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d2ff165c-dd76-43e0-b4c5-4178290659fc"
        },
        "item": {
          "id": "3e01325c-b069-4a90-a809-0542d4b7721e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a524761f-eae9-4b5e-ac07-07a78bcc1208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9305822-d433-4702-892a-a8296040259c",
        "cursor": {
          "ref": "24507461-9000-424a-94ad-a7c68af150d3",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fb6b58f7-ba83-449f-9ab3-db586a3edb1f"
        },
        "item": {
          "id": "e9305822-d433-4702-892a-a8296040259c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a893a1bb-7878-4bba-9a1f-8fb32c510feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbb9e05-c0a8-4dfe-b501-b34d26878956",
        "cursor": {
          "ref": "e0cd02e0-06c9-4bd9-8a3e-61337d427e48",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c2870b5b-1cde-47e3-a399-83c9c04a760e"
        },
        "item": {
          "id": "fdbb9e05-c0a8-4dfe-b501-b34d26878956",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "daf040a5-6085-47cc-8085-753e40312d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bb742a-cc97-4b9b-a34e-90ea41fa5674",
        "cursor": {
          "ref": "37647eff-b887-49eb-9c44-498466f2bffe",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "30d97b53-46f6-47bf-975b-f2c2c320da41"
        },
        "item": {
          "id": "18bb742a-cc97-4b9b-a34e-90ea41fa5674",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "20702131-bc4c-4fcc-aec4-acbd92a460fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92fed25-0d34-4234-a3b0-81c871bd14a7",
        "cursor": {
          "ref": "d145b32b-fce4-484f-94a0-c3215b50f3a8",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c396f1a6-95f6-4f54-ac5f-be58dca3333d"
        },
        "item": {
          "id": "f92fed25-0d34-4234-a3b0-81c871bd14a7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0f611ef1-7e1d-4bb1-b208-5631b645193f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2967a009-6cec-4518-907a-0da72b86f0d7",
        "cursor": {
          "ref": "e8831c8a-5339-406c-b512-72a6a245c633",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "99fd0008-e42f-4106-be70-ee7979292c3f"
        },
        "item": {
          "id": "2967a009-6cec-4518-907a-0da72b86f0d7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dfd2cf7f-7a14-4abd-99c2-22a11f4dfff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60bdcc3a-eefc-4c45-ad61-e51ab7f4a963",
        "cursor": {
          "ref": "df86b6ca-a64a-4dbd-8b98-d7bb9b36ee67",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8e201174-cb69-4d4b-b125-2e6af4308304"
        },
        "item": {
          "id": "60bdcc3a-eefc-4c45-ad61-e51ab7f4a963",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f33cbd39-3547-47ff-8dfb-bf96312461e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4d61b7-6206-48f1-b73c-c7b018bcd76e",
        "cursor": {
          "ref": "e8fc00de-e1e3-45e6-9213-98e55cc911d3",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2b7ff958-829a-4d8c-be83-afae407e4e42"
        },
        "item": {
          "id": "ea4d61b7-6206-48f1-b73c-c7b018bcd76e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cd5e04f8-c07f-4c2b-b051-b7caa8f50aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2b330e-31a4-4f81-b3f1-1bbdcc75f0e0",
        "cursor": {
          "ref": "aae64a95-3742-4492-9b96-65ad9bdcf2bd",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b3ce7924-dc19-49c4-9cd2-38c3b0e4ac2d"
        },
        "item": {
          "id": "fd2b330e-31a4-4f81-b3f1-1bbdcc75f0e0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "918bcc8d-2887-492f-8312-f9b79cc226d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1f4cfc-e2e2-4e84-8ce0-4b3c63071df3",
        "cursor": {
          "ref": "88989954-b1c7-4fd4-b5de-ff1730b4a2e9",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "39c900bc-a1e4-4c28-b411-18b679c780e7"
        },
        "item": {
          "id": "9d1f4cfc-e2e2-4e84-8ce0-4b3c63071df3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "57e30b6d-9059-40ee-ae7f-7d79f0ef053d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e828eee-b6c6-4655-a257-1ac267e03a83",
        "cursor": {
          "ref": "585650a0-0b0e-46b0-97b5-317b61bfdf9a",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "282aba99-990d-45e9-80bc-e7a1bf0414c3"
        },
        "item": {
          "id": "0e828eee-b6c6-4655-a257-1ac267e03a83",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fe4c3e0e-6a55-43d9-bedf-3b2da913167d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44a63de-51be-4203-a0f1-9542515ab02b",
        "cursor": {
          "ref": "e617bda2-f659-41d8-b6e5-c5a5e9d8f6b4",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "15e3ae26-9023-452a-bf57-bc1b0427727a"
        },
        "item": {
          "id": "e44a63de-51be-4203-a0f1-9542515ab02b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1238c59f-8c07-450a-ba80-80f013f718ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9453be37-c29e-4f26-9334-9f4e5128df4d",
        "cursor": {
          "ref": "d53c019a-c6fe-442e-8ede-27758c40b594",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dce67aa0-837a-4758-ad09-147dec60185e"
        },
        "item": {
          "id": "9453be37-c29e-4f26-9334-9f4e5128df4d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d4045302-d240-4d73-8667-360fbfff390a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0028631c-3552-4cb7-8e23-4b37506d3138",
        "cursor": {
          "ref": "1b3c25b7-6cf5-49f7-a559-ffc9a711bc6c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "43d09854-f87e-47f7-b807-9f7242380495"
        },
        "item": {
          "id": "0028631c-3552-4cb7-8e23-4b37506d3138",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8688201d-970f-4c2c-ac9c-9e7e5642981f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6135fd0-57c8-4486-8626-3860a54683e5",
        "cursor": {
          "ref": "9f7dfeb5-b639-45e4-be99-6420441be5ec",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "58422204-fae2-42b7-b1ba-70e74a1c36de"
        },
        "item": {
          "id": "c6135fd0-57c8-4486-8626-3860a54683e5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e1cab9d0-777c-4276-bd20-7cf2f57d93b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83bcbbf9-0294-4850-8601-3e6567509d8d",
        "cursor": {
          "ref": "d3c36ce0-5609-489e-93bb-7d46a396d013",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3c8269b9-5a35-4c8e-9047-e9b9560ecf6e"
        },
        "item": {
          "id": "83bcbbf9-0294-4850-8601-3e6567509d8d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3191a739-5513-4199-b72c-d6d7453b7ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3772e8-d315-4da5-b5ea-e25165cdac66",
        "cursor": {
          "ref": "f3bd0dce-2439-4919-859b-2fd05f763ae8",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f1cb085d-aeab-465f-be00-7b1e68d5a4da"
        },
        "item": {
          "id": "3d3772e8-d315-4da5-b5ea-e25165cdac66",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fb157282-e11e-41a4-96b8-8c47f749a8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4050ea75-359f-43b5-acc6-36d43900793d",
        "cursor": {
          "ref": "faf6f2f5-8543-408b-b3cc-3b5c01de70a7",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "864e03bd-dd18-48fc-ab5e-6c8f31f4dd38"
        },
        "item": {
          "id": "4050ea75-359f-43b5-acc6-36d43900793d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c46de2ea-1cd5-4733-96f6-4cb46acabd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66389b6-43b5-4ed1-9fae-9e1caf57a4fa",
        "cursor": {
          "ref": "b45c7e53-5eee-4c1b-a958-0571953153e6",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ad436eca-9e37-49f3-8f8f-989181796872"
        },
        "item": {
          "id": "a66389b6-43b5-4ed1-9fae-9e1caf57a4fa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "18ac5b2d-f329-453d-9b40-5e1f762e6e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111b0dac-de4f-44eb-922b-55613c627154",
        "cursor": {
          "ref": "d8816958-1b47-49ac-b69a-fd20f0ccdff8",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "10a315c1-20d2-4d7e-836d-22d409a91a5d"
        },
        "item": {
          "id": "111b0dac-de4f-44eb-922b-55613c627154",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c3b3796c-991d-4a6f-abef-3e6e1ba1dc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ae3bb8-b00e-418d-bba1-05b443970348",
        "cursor": {
          "ref": "1f26afc8-b1de-4544-b57a-ce4c2024ae26",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f0a3943a-2656-4844-bdb6-e26cfc1b71fb"
        },
        "item": {
          "id": "07ae3bb8-b00e-418d-bba1-05b443970348",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0e53c082-0dea-4f9b-b2e6-abb4c5d1a73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fad89e7-c91f-4784-9886-e528de00023a",
        "cursor": {
          "ref": "74701a47-6301-4d5e-a1ba-bc55aca1a010",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b6755f80-418f-4989-a45e-5e8101734c86"
        },
        "item": {
          "id": "4fad89e7-c91f-4784-9886-e528de00023a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "08720fea-9afa-4132-bc59-57d7c94d84de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7be237-69b2-49d8-84df-cd54daa96e29",
        "cursor": {
          "ref": "e1e06bef-c6d3-46f4-9cf4-611b1e09bdf1",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c500a72d-fba4-4346-b724-f8eb984bd095"
        },
        "item": {
          "id": "aa7be237-69b2-49d8-84df-cd54daa96e29",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ee5b5324-71af-410b-bfee-e8cc3d2faa90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f008ee6d-5c64-4fbc-b6d4-db4ab312ea97",
        "cursor": {
          "ref": "6c4e2a63-d32c-46b5-8a3a-73e18b0a3ff4",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e4b0ef67-de64-4dc9-bb69-1cde19f259c6"
        },
        "item": {
          "id": "f008ee6d-5c64-4fbc-b6d4-db4ab312ea97",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "541f8c12-8c45-4d37-a77b-c965a5676418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f40ffc-1288-43b4-86cf-f788fdf352ed",
        "cursor": {
          "ref": "625f0b3d-2898-48ba-a205-95926478f873",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5b5d7441-24f9-4fd6-8933-5a78d3f04cbc"
        },
        "item": {
          "id": "99f40ffc-1288-43b4-86cf-f788fdf352ed",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cd9ed9c8-d246-48fd-9092-5b29608d4d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bf612b-25a4-48f8-8214-1999d4e1bf1d",
        "cursor": {
          "ref": "cd5a4ebd-63b7-4d2c-aea6-103b86a1450b",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "21b14c8d-afb4-4f9d-8b0c-f2b0faf94e68"
        },
        "item": {
          "id": "62bf612b-25a4-48f8-8214-1999d4e1bf1d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d550c3b4-407a-4faf-b3d1-190a5c9ba88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f14b7f-f03c-4df9-a673-2243cdf65e63",
        "cursor": {
          "ref": "575bb161-6ecf-46da-976e-5947ccedc8f7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a45be2fb-2dd8-4add-b0ce-dfcc81a81e30"
        },
        "item": {
          "id": "e0f14b7f-f03c-4df9-a673-2243cdf65e63",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "949baa55-5017-4c29-973c-ad1bec8ca01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96e7db1-af46-428b-a5d6-98a8cb159339",
        "cursor": {
          "ref": "c08a3d3b-5103-44fd-89d9-45420b309c11",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "414ad927-ebbc-4da8-9255-9e8cb91f21ad"
        },
        "item": {
          "id": "a96e7db1-af46-428b-a5d6-98a8cb159339",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8b222f6e-c7a2-4c56-89b5-3188b73d83be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f25956e-f94c-4ee6-b56c-0f3b817c57c2",
        "cursor": {
          "ref": "19f8f326-c79b-4341-ad22-562f0da5d1de",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a833ca09-06bb-419c-a864-bd540b06bf35"
        },
        "item": {
          "id": "7f25956e-f94c-4ee6-b56c-0f3b817c57c2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e89543cd-8fec-4613-8904-10da6a0cc280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e252d7-2d6d-4730-8acd-055e0b3e4604",
        "cursor": {
          "ref": "fbab6045-f86e-4923-93eb-b10ebba8f115",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f68a822f-d1a6-44ef-bcb5-328f13bee740"
        },
        "item": {
          "id": "91e252d7-2d6d-4730-8acd-055e0b3e4604",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6297896a-0c32-4261-896c-5e0f80479f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b803c846-eded-4394-bdee-c812d3c4f310",
        "cursor": {
          "ref": "cac9d402-357d-4a04-b00e-d3f2be44f507",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a73c1f09-8fb9-477d-96ae-c2c7aa275570"
        },
        "item": {
          "id": "b803c846-eded-4394-bdee-c812d3c4f310",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a2999b77-0e37-4a22-92f2-503267ce1f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cbd398-4f20-494b-9f17-a2ad89411a5c",
        "cursor": {
          "ref": "70b82c34-dbfd-4c42-a424-06d7861409f0",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b07b6812-ff87-40ce-b122-ac9df9c9cefd"
        },
        "item": {
          "id": "41cbd398-4f20-494b-9f17-a2ad89411a5c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c52e8dea-0d04-433c-95e5-7db307153aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9838e8a9-05fa-443f-9999-5aa490509976",
        "cursor": {
          "ref": "3fb8126e-4825-4d5c-9c02-5a76992c3933",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7c2315af-939c-4532-a5fe-da47e88e86bf"
        },
        "item": {
          "id": "9838e8a9-05fa-443f-9999-5aa490509976",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "07c6d5a8-1884-4946-9537-52d27579053d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da94ec2-ccf0-4615-b6bb-ee53dd21b05b",
        "cursor": {
          "ref": "e7b96800-3999-4237-9558-6178d8504186",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0cb6d2f0-1466-434d-9dea-2ad31a65a618"
        },
        "item": {
          "id": "5da94ec2-ccf0-4615-b6bb-ee53dd21b05b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "158c9606-1bbf-41e3-b1f9-512c9d031410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bd85f9-69fd-420a-9708-60e006209407",
        "cursor": {
          "ref": "3e70c2dd-9d92-4d32-bcd9-90d3bfed41b9",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "94e9f92e-4af8-4688-bb62-bd56219ba32e"
        },
        "item": {
          "id": "91bd85f9-69fd-420a-9708-60e006209407",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3a6313a3-80cc-4f6e-9b92-d72a7f1ce2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355542bf-d872-491a-9a82-9575349a0f95",
        "cursor": {
          "ref": "f3d3164b-6cb1-4f2b-a2ce-baa06dbcec5e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "49da6b06-bc71-41dc-a41c-bcf0139dd67e"
        },
        "item": {
          "id": "355542bf-d872-491a-9a82-9575349a0f95",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7a2f4f54-deec-4143-a78f-6fc69eb23663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6a48fc-7671-4f47-86c3-251c0cebdedd",
        "cursor": {
          "ref": "fe6a0815-1e0c-4aad-a3ae-b6c4ef2dfd2b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fa3e7d48-cbbd-4f18-aa01-c7dae900b57d"
        },
        "item": {
          "id": "5a6a48fc-7671-4f47-86c3-251c0cebdedd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "408769ac-4572-47cc-9d51-ac8b92a6ee62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94443ce1-f03d-4a0b-9321-ac1079c2801c",
        "cursor": {
          "ref": "2bcde532-56d8-405c-9373-2df1721589df",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "695261ae-129b-4f03-a034-93d267dc0ffc"
        },
        "item": {
          "id": "94443ce1-f03d-4a0b-9321-ac1079c2801c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d62eec84-1ea9-449b-bac6-420a38e209ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114e77e3-c58d-40c6-9c97-769f6d708a2a",
        "cursor": {
          "ref": "4cb71671-0ec3-4430-b7ea-8fe61a57b081",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "89fc9775-534f-45c1-8447-1828ed660cdb"
        },
        "item": {
          "id": "114e77e3-c58d-40c6-9c97-769f6d708a2a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "327442b4-2b96-4868-93cf-abbd5c95390e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f62d29-2451-4f55-87f3-11e5ab5e7f43",
        "cursor": {
          "ref": "0e8ff6be-2caa-42c8-8243-7329254abf72",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2bc69845-acbe-4954-bbfe-4b5f92d95380"
        },
        "item": {
          "id": "f7f62d29-2451-4f55-87f3-11e5ab5e7f43",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0819e9df-4cb8-496d-97e5-f96c343d36c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37364d3-1cd5-4518-9eae-dd7aa24246e9",
        "cursor": {
          "ref": "e15e0474-4497-4a6a-8098-29cfd648e003",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "26422bd6-a566-4375-81b4-f442cd8c86c8"
        },
        "item": {
          "id": "f37364d3-1cd5-4518-9eae-dd7aa24246e9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "82c67baa-b7e7-486f-b06e-2638b433f21f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba44ee18-d220-40bb-a057-4391da12d7a6",
        "cursor": {
          "ref": "751aeaa5-6e3c-4dfc-9775-84195855f68f",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "78527d12-0830-49fb-aafe-d779340c0b93"
        },
        "item": {
          "id": "ba44ee18-d220-40bb-a057-4391da12d7a6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "def77493-b965-4074-84fc-b2dbe71b8e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd88f6c-9d08-4ed4-a4e4-44fbc7b491b2",
        "cursor": {
          "ref": "2167fe7e-ef98-4936-9b9c-ec9e6200aec9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c7149b24-7f77-49c4-9a85-f4f727d33293"
        },
        "item": {
          "id": "0dd88f6c-9d08-4ed4-a4e4-44fbc7b491b2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cb0911c1-e951-4a63-b203-e2b149cf664a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb98dce2-46d5-46b7-8234-54c8016a40b4",
        "cursor": {
          "ref": "bc6d0942-04eb-43f0-b307-bc6bc7673709",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a73910a3-7757-46e4-8aa2-a8cc628a0670"
        },
        "item": {
          "id": "eb98dce2-46d5-46b7-8234-54c8016a40b4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bbdee3da-dd8e-40b2-a428-420017999fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c0cb15-ec22-4e25-ae6e-a8db7f418a85",
        "cursor": {
          "ref": "e2ee39f4-4fb3-4f6b-b970-c88934340b1a",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a2d4dd1a-706e-40dc-8e26-dd648f5fce7b"
        },
        "item": {
          "id": "23c0cb15-ec22-4e25-ae6e-a8db7f418a85",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b798ab4a-df4d-429a-b5d2-c7afbe4be785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c94232-2182-4bb5-ab68-8a863b1c928c",
        "cursor": {
          "ref": "c82c934e-f0f9-4f73-8c3d-c8e37db859a3",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d76410ee-c137-46ed-a3ac-3c112e1e4574"
        },
        "item": {
          "id": "f7c94232-2182-4bb5-ab68-8a863b1c928c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5ed891db-65c6-4cce-8337-99d2f8c3dbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6687ab6-ed02-457f-aaba-c637a4c44031",
        "cursor": {
          "ref": "07a3075d-84f2-4903-b3b6-3602371be160",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "20c61c57-f9da-46a5-867b-f1d77f4a8602"
        },
        "item": {
          "id": "a6687ab6-ed02-457f-aaba-c637a4c44031",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "99c0acd9-7765-4e53-a248-85b61b27ee79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bc184e-2910-470b-8c45-6fef6dc9328e",
        "cursor": {
          "ref": "4e855608-560b-439a-a57c-5c0d2ff42db2",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ec7c5095-98e8-4369-9890-352f233c2914"
        },
        "item": {
          "id": "93bc184e-2910-470b-8c45-6fef6dc9328e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "29f9fd16-2b38-4e65-8e35-53a6e76fc16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834fd1f7-1b9f-47ab-b399-1a0797869d78",
        "cursor": {
          "ref": "30f03a10-7669-45ac-be84-2675265a789d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "983454e8-0d50-4054-a0c4-a38fe1d7b54e"
        },
        "item": {
          "id": "834fd1f7-1b9f-47ab-b399-1a0797869d78",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0f161e5e-3019-4e86-9044-3c53ccb81b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "346f8e5f-c563-4d6c-b1a8-cdc687986c28",
        "cursor": {
          "ref": "373e016a-7757-4cb7-a2f1-7bd9e875352d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "49f3fbbf-b010-485e-8894-435a1b8714ba"
        },
        "item": {
          "id": "346f8e5f-c563-4d6c-b1a8-cdc687986c28",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4a5f7cd8-a97e-42b0-822a-590cc2498114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cc76bb-048d-46df-9e60-6e8242289ce3",
        "cursor": {
          "ref": "c0a7b661-ea02-4ebe-a9a4-276c56a36def",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "55f11854-2113-45ab-8140-b9103e3d08a3"
        },
        "item": {
          "id": "90cc76bb-048d-46df-9e60-6e8242289ce3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f79c69a2-5182-471a-947a-ee290713f3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea061398-289a-4bee-950e-cc8dd9925cda",
        "cursor": {
          "ref": "d3256a6d-2c86-4745-8985-184c2238287c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "17ed567a-5b33-472a-99b1-200a57b18bfe"
        },
        "item": {
          "id": "ea061398-289a-4bee-950e-cc8dd9925cda",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1ca23c15-f9b8-4a94-9eab-1f3b81c1a513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98addc1f-0a4a-4321-bdd0-1179b202c4cf",
        "cursor": {
          "ref": "2f197dfb-a579-4fc8-95d3-09eae2199389",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "adfa7a88-4d24-4e83-a08c-240f1dacfc02"
        },
        "item": {
          "id": "98addc1f-0a4a-4321-bdd0-1179b202c4cf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a018987f-2634-4ddc-b9ee-b42a42025376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9725c02-355f-4741-bff7-e615410f2095",
        "cursor": {
          "ref": "3d1c018a-d25d-4d36-81bb-2e57bd432b47",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d19afcf5-c6f9-4323-b2c1-929abd9715e7"
        },
        "item": {
          "id": "a9725c02-355f-4741-bff7-e615410f2095",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1b4f33c2-4bd1-4e43-845f-7a5b6c9d9e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a4389e-2a7b-4119-8f3c-5ae29cf6ffd5",
        "cursor": {
          "ref": "2a02818f-d8e6-4fba-828b-c82f49391ff7",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e055ef2d-cf66-4505-81f7-732a8ba3da99"
        },
        "item": {
          "id": "a1a4389e-2a7b-4119-8f3c-5ae29cf6ffd5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cc39bad6-f9e8-4853-8caf-82d36ac91e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921869c0-d156-403f-9f58-71cae6a2f284",
        "cursor": {
          "ref": "900bf580-e386-4133-8c62-c1778192aa1b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6e117cf7-7bdd-4136-89ff-c79b179335b3"
        },
        "item": {
          "id": "921869c0-d156-403f-9f58-71cae6a2f284",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dcf4fb8a-5087-4662-9566-6d67441fb6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f56ba8-1c29-4181-a536-4d4014594a43",
        "cursor": {
          "ref": "febb04f1-b04e-4e6f-8bf1-7688a5f88665",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2e0d801e-f9b7-41d7-bae2-4e0b5cf4ea07"
        },
        "item": {
          "id": "09f56ba8-1c29-4181-a536-4d4014594a43",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4abf0fc3-8af7-4827-b464-94a321d5a172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2781fa00-9e37-4804-96be-690f55bfa1fd",
        "cursor": {
          "ref": "6a78afcc-237a-4062-8ac1-7cf0986812d1",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8fe82982-d7eb-44e5-b8ec-8321d1c1a2bf"
        },
        "item": {
          "id": "2781fa00-9e37-4804-96be-690f55bfa1fd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b526713c-01e6-4fb2-b83f-8bfcc6fb7b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6553b8-b0f9-4f90-8eb4-6ed6114ec0d5",
        "cursor": {
          "ref": "c1c849ea-49d2-47fe-92c0-057291a9413c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c97d30bf-0344-46f2-8a50-ca30703bfc9b"
        },
        "item": {
          "id": "db6553b8-b0f9-4f90-8eb4-6ed6114ec0d5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7b8d224f-9733-45e4-9bd9-afbfd56881ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662e8191-157f-4d27-bedf-3b4dbaa2a521",
        "cursor": {
          "ref": "735f5627-4df2-43f4-98f4-fdbfb96bcc83",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "40686ea3-2ac0-4904-90b2-ec1f8b83c8ce"
        },
        "item": {
          "id": "662e8191-157f-4d27-bedf-3b4dbaa2a521",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "39859d84-b0d8-4325-9533-869a24cc1469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19daa37-4b0a-4542-a034-e741272faefc",
        "cursor": {
          "ref": "cd89e3a5-1a9e-4a10-97b6-1ed516ca398c",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5a6ee8e3-351d-4d38-a5d2-a1d4b8c294b6"
        },
        "item": {
          "id": "f19daa37-4b0a-4542-a034-e741272faefc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a72c773e-4eeb-431a-ba22-b4cf7fb081c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be933b62-9128-4f55-a187-d7908970e6fc",
        "cursor": {
          "ref": "29bb9540-ecb6-429f-bf4d-a8a6dd639e6a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8975e744-8632-46f4-bb8f-5b678310cb7d"
        },
        "item": {
          "id": "be933b62-9128-4f55-a187-d7908970e6fc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2be78a93-7b58-4b45-b2e0-484fd6e8fa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20068c41-e888-4e31-9e2b-beacb645c47f",
        "cursor": {
          "ref": "1b975012-b6c2-43e9-919d-a6e4c5d51fae",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9d5a2ce2-fc65-4682-9800-48b090daad8d"
        },
        "item": {
          "id": "20068c41-e888-4e31-9e2b-beacb645c47f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4fc5a1fb-5ab0-4459-a60c-5470288f5aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b6e2c6-812a-4797-97fe-990da048e4b6",
        "cursor": {
          "ref": "4a919720-c66a-48b8-90c0-98966c3fdabb",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ca77216b-0b32-450b-a7fa-99b25eb3d67f"
        },
        "item": {
          "id": "a6b6e2c6-812a-4797-97fe-990da048e4b6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "582a2269-640e-4dda-b5d4-a95a17a3e5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5529e6b6-29c2-486e-9751-7ffd2f7aad5f",
        "cursor": {
          "ref": "c3145cfd-53d5-4c85-920e-7ba4f6c6b58e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "979cb1a9-0d19-41a4-a74e-45e063a5e913"
        },
        "item": {
          "id": "5529e6b6-29c2-486e-9751-7ffd2f7aad5f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2c23f06b-63ac-45ac-a296-f5e56259f6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e79293-90cd-4852-9a62-19cfaea5d67e",
        "cursor": {
          "ref": "5a08f4f2-284c-4f6d-b3d4-1d95737a8ec5",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0e97647b-9bdd-4c2f-8b07-996506bc49db"
        },
        "item": {
          "id": "c8e79293-90cd-4852-9a62-19cfaea5d67e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "368e537a-e6e5-4ee5-b284-29d31531dd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef75eb65-de06-4de0-8658-bd211907465a",
        "cursor": {
          "ref": "b9963b6c-e91a-493c-a7da-5bdc26e75d69",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f61c1714-11bb-4450-a115-3c13bcbc2941"
        },
        "item": {
          "id": "ef75eb65-de06-4de0-8658-bd211907465a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c8501ff2-ecd8-4fe6-9fae-10d65e800703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae844bdf-1b82-4d58-8f20-d8e0d594df72",
        "cursor": {
          "ref": "72a66847-aadf-4c19-87a1-4c7aef14b30a",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c676c97f-4071-4c55-acda-e5ce4359a840"
        },
        "item": {
          "id": "ae844bdf-1b82-4d58-8f20-d8e0d594df72",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6789a90f-82b6-4b9d-8559-e932c49b4a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec410ab-320a-4c31-997f-9062c52b0c6a",
        "cursor": {
          "ref": "e99e9f46-f72b-4b9f-ae70-f658caf19cc3",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d0788b5e-75ad-413c-8115-381b1937d976"
        },
        "item": {
          "id": "3ec410ab-320a-4c31-997f-9062c52b0c6a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "95490206-0390-4d00-bb8e-aed522e00a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87af2e7-2acd-41d6-bda2-a721b836dff0",
        "cursor": {
          "ref": "adea99cd-85df-4602-bd24-a555e69aa696",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ad9a543b-76f5-4ac9-8791-e6789691b9e8"
        },
        "item": {
          "id": "c87af2e7-2acd-41d6-bda2-a721b836dff0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "058a8d71-bc98-4e41-8a7b-91bf2142285e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13f3dd5-4d75-4a9f-9918-c89f36b8700f",
        "cursor": {
          "ref": "9c4531f9-20be-4046-9d5b-d3d55c94d946",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "082ab8b8-aa0b-4618-a9c4-e1d6c76a3a67"
        },
        "item": {
          "id": "b13f3dd5-4d75-4a9f-9918-c89f36b8700f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3adfa45a-5dcd-43e3-ad69-64ab1471bb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d62aea-04ad-4470-857d-e936f875c11e",
        "cursor": {
          "ref": "df0f4806-a395-4436-9963-71bdc628f499",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "72a498e8-c70c-4d89-a95e-b568c242ecc3"
        },
        "item": {
          "id": "17d62aea-04ad-4470-857d-e936f875c11e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "96788618-ec01-41e5-a3a8-9188e26ab4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfdd0a8-c9df-48cb-b04a-c36be8b4aed6",
        "cursor": {
          "ref": "734001f0-4168-4f6a-bf38-8a49030c42ea",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "72d07eb1-2594-4efa-ab5d-024d4e9367a2"
        },
        "item": {
          "id": "4bfdd0a8-c9df-48cb-b04a-c36be8b4aed6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e1c0e459-62f9-4577-936c-5c97739d4c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5754f2e-5e85-4ae8-be60-6082f261ce9c",
        "cursor": {
          "ref": "126098a5-71c6-4f56-bf95-15025fcfd212",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b5f649ee-036c-4a82-bb88-1e80c633ea8a"
        },
        "item": {
          "id": "b5754f2e-5e85-4ae8-be60-6082f261ce9c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4174d501-1504-4c67-adee-1e54a2cc93c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b52899-f291-4ea4-ab8e-5c2f22a750fa",
        "cursor": {
          "ref": "9787b27e-8d19-4c16-b3c9-f8472cd6b792",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3850c198-970e-4ddc-af20-ed41a887b271"
        },
        "item": {
          "id": "64b52899-f291-4ea4-ab8e-5c2f22a750fa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9c5c89ea-f8bf-4a70-8f79-935f4111fb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2c0ff8-be26-4e33-8d94-ca2836e1da4b",
        "cursor": {
          "ref": "660241a7-7aa0-4a85-a437-9c71c89bc326",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a3ff6c5c-64d5-4ee2-9537-cc493691c698"
        },
        "item": {
          "id": "5c2c0ff8-be26-4e33-8d94-ca2836e1da4b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3cdc607c-49b2-488d-baa9-f00ecd62a281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ce175b-bf92-4517-a36b-d61348565614",
        "cursor": {
          "ref": "1e728778-4ba9-4e0c-9296-d26255c13538",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e096aff8-023b-44d7-9b66-071684059348"
        },
        "item": {
          "id": "81ce175b-bf92-4517-a36b-d61348565614",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6277ab26-9fcf-4b35-91df-7034726be77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72bf37e-3a5e-4f97-8873-fc3f0b81856d",
        "cursor": {
          "ref": "32caa299-387c-46f4-91ad-e1d4be59bc4a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "826b2c97-334f-4a63-89f3-680d7e6cd2be"
        },
        "item": {
          "id": "f72bf37e-3a5e-4f97-8873-fc3f0b81856d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "558c079b-b39a-480d-8f61-60192df2035c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654975b8-ccc7-4a2d-ac70-570cf7d1302a",
        "cursor": {
          "ref": "e36313c4-a0f9-4de7-ae35-e9aa6a62b8d5",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1372606f-62e6-4d05-a51f-5868921a9328"
        },
        "item": {
          "id": "654975b8-ccc7-4a2d-ac70-570cf7d1302a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7e23f195-8e1b-46c7-82d9-545f3b45beb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a2f2ac-18dc-444c-8c84-f2d2637fe89f",
        "cursor": {
          "ref": "49134ae4-d904-43ce-8a8d-89fdea4296d5",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "71c9129b-6fab-4db2-afd4-4561d6ca2311"
        },
        "item": {
          "id": "a2a2f2ac-18dc-444c-8c84-f2d2637fe89f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "17ca5ed6-8300-464e-ae02-cefcb47ccd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424457f9-f6cb-4940-88fa-64ec737fa828",
        "cursor": {
          "ref": "9f35c91f-4c4b-4bab-93f2-85a7e1bd04b1",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0d9792e3-f394-449f-9bfa-b0611584e5b5"
        },
        "item": {
          "id": "424457f9-f6cb-4940-88fa-64ec737fa828",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "afe3a558-132a-4591-9b46-780077a1cd4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775bc934-77fc-4d14-835b-ec1916541950",
        "cursor": {
          "ref": "a1d84058-e763-4588-953c-7325ff92b9df",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f0cd2b88-dc2b-487e-b58e-b222139dfca3"
        },
        "item": {
          "id": "775bc934-77fc-4d14-835b-ec1916541950",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5ed626c8-681d-43e8-a40e-7a09b2863084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f8b529-b594-4614-81d0-0d20d42e269c",
        "cursor": {
          "ref": "989eeacb-3bc5-4a2d-a1f5-3908b6d0ebe9",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a4d74382-b0b5-4b0c-9e23-ff04fa23e053"
        },
        "item": {
          "id": "f8f8b529-b594-4614-81d0-0d20d42e269c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7ca45e8a-56f1-4fd9-83d7-aebafaabce13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dde2eb-3023-4662-ad57-82736fa54f9c",
        "cursor": {
          "ref": "accb8647-effd-4347-ad8d-f89f52eae832",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "fd5950d5-6a66-48f9-8414-0c74212fd591"
        },
        "item": {
          "id": "b6dde2eb-3023-4662-ad57-82736fa54f9c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "88192c19-321a-4678-a301-a7c5d5b9e19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4c1d52-2330-42e3-8b90-12fe699211aa",
        "cursor": {
          "ref": "f64c6867-3ab0-4a8f-86fd-e1807e07c3df",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5bffbcdd-d3ed-4e29-8c84-815ff1930756"
        },
        "item": {
          "id": "5b4c1d52-2330-42e3-8b90-12fe699211aa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "38feda77-9ffe-42cb-8e4c-4cfd89d497bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d208d26f-2a2b-4568-b80e-ec9316c15a46",
        "cursor": {
          "ref": "62024049-84e0-4eae-9b4e-785be30f80d7",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8a4315d6-977c-4dc0-bf0e-f9af90bd64b2"
        },
        "item": {
          "id": "d208d26f-2a2b-4568-b80e-ec9316c15a46",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a9815fbd-31b6-4261-8405-388655dd156f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f8c9f8-06b4-4ec9-93f2-ea070d107eea",
        "cursor": {
          "ref": "18f286e9-1862-4ffb-80d4-ac53a131f5a0",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6becefdb-2e2c-44ae-b594-66c41f1e01d2"
        },
        "item": {
          "id": "a9f8c9f8-06b4-4ec9-93f2-ea070d107eea",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "85b96b2f-03ab-4a4e-b3a4-04da3ae75705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81b4ba5-79eb-45f4-92a3-1e5c14872b80",
        "cursor": {
          "ref": "f2b99514-6043-4661-909d-b05fe19f70c7",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f2c5e803-1851-4b13-9b72-4f1c6f30a86d"
        },
        "item": {
          "id": "c81b4ba5-79eb-45f4-92a3-1e5c14872b80",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4bb739f8-e5ed-483d-8450-a6cd65df2c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107d460a-8b7e-41ea-927e-1b6a0ea9d5bd",
        "cursor": {
          "ref": "20b2bb11-46ea-4c44-aec9-32829bd37eb5",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b5c49907-33f0-41dc-8ad6-c84042ecd31f"
        },
        "item": {
          "id": "107d460a-8b7e-41ea-927e-1b6a0ea9d5bd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "56793180-05df-4699-bc54-25ec3e1329b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2f5c31-7214-496d-8e4c-ad1b0108632b",
        "cursor": {
          "ref": "c49d46db-05b9-4f55-9fe1-29c9174fb9d2",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "fb8389c4-4aa1-42df-83ba-0be70bfe2567"
        },
        "item": {
          "id": "ff2f5c31-7214-496d-8e4c-ad1b0108632b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4a9d4785-4851-418a-9a31-b336fbce2c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eeb3882-6ebd-44a8-9d7e-65902e0f6887",
        "cursor": {
          "ref": "182d8b8d-d477-49f3-b7d4-5f30660098e2",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b9c15c6f-ece6-4244-bc27-8a4b6bba1b18"
        },
        "item": {
          "id": "4eeb3882-6ebd-44a8-9d7e-65902e0f6887",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bae20f7e-e192-4d4c-9de2-1912adeaeff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c249061-6170-4bea-a288-a08498bb0aba",
        "cursor": {
          "ref": "bb64c765-d41c-47c2-94c8-07a9bb88a26b",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "95c82a28-d6d3-469b-bfc9-0933cdfa8ded"
        },
        "item": {
          "id": "1c249061-6170-4bea-a288-a08498bb0aba",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a7390e9e-d634-4db2-bb1f-14884939705f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989cf686-e513-4962-a2a5-8a7b1f9b0c7e",
        "cursor": {
          "ref": "a65501c2-a8aa-4010-b8ca-fe4315733345",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "757df554-9907-410c-b51c-b84f14008087"
        },
        "item": {
          "id": "989cf686-e513-4962-a2a5-8a7b1f9b0c7e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "af2ec3f8-9d1b-4a4e-8c28-fed129419984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34b58ff-5bee-4c94-9bab-b2a7888d0a93",
        "cursor": {
          "ref": "81318207-255f-4397-8d7f-c0ce405ef1bf",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f33e3c92-c814-454a-94e1-f02b82405509"
        },
        "item": {
          "id": "d34b58ff-5bee-4c94-9bab-b2a7888d0a93",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e00c74af-16ea-40db-a1f7-3f1588bbedcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af40cdc-5f02-43e7-9719-be17e3db1fd8",
        "cursor": {
          "ref": "742fd43e-831a-44f0-9326-c3b6e9b6189f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "07b20e09-b7dd-483c-a766-97026c9b5274"
        },
        "item": {
          "id": "6af40cdc-5f02-43e7-9719-be17e3db1fd8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "37969681-924a-4b4a-822c-4aec2515de14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803baed2-5486-422b-8076-2d603e2f8462",
        "cursor": {
          "ref": "b3f14216-5bef-4f6a-ab07-8b120b22d0ed",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "34775746-d5a9-401f-b790-3d9cfcbf1d16"
        },
        "item": {
          "id": "803baed2-5486-422b-8076-2d603e2f8462",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3c151d81-811e-4356-933e-8e2e5f4822e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53df2c3-68f2-460b-b906-1607e47d9239",
        "cursor": {
          "ref": "699df322-4cba-48b5-ae4b-ff40f3085bfd",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d656b27b-2c23-49dc-a602-127b0d4ec7bc"
        },
        "item": {
          "id": "e53df2c3-68f2-460b-b906-1607e47d9239",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "25f8e2e4-d16e-4386-b724-c733ba504ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fefabb-d51b-4300-9ba0-dde7917a5872",
        "cursor": {
          "ref": "5c32edb6-2bba-4366-8fa3-e77fdc299878",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a01b4ff7-0491-46ca-b821-397854c72c9e"
        },
        "item": {
          "id": "64fefabb-d51b-4300-9ba0-dde7917a5872",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a5317d53-bd14-45ad-aa63-54af8fbc653f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e415071-103c-4a95-844c-55415b36d7e3",
        "cursor": {
          "ref": "b4e8d70b-eb0f-479b-a50b-5bd59bbee74c",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "e46c1daf-d9f2-4100-b2a8-e8f0ec1b6d8c"
        },
        "item": {
          "id": "2e415071-103c-4a95-844c-55415b36d7e3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f1f019cd-0624-4b1b-9c10-83be6d4347c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedf9d5f-9a9f-4f56-a7e5-c533e4434b43",
        "cursor": {
          "ref": "636e03fc-9848-47f8-a832-e95725dc97fe",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c6a35e70-14c5-4d8d-b202-b7b4156eeb92"
        },
        "item": {
          "id": "eedf9d5f-9a9f-4f56-a7e5-c533e4434b43",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "92871e2a-76d0-4343-9212-d254871cde41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503cc1ab-21e1-401f-bd1c-6b208be06cc2",
        "cursor": {
          "ref": "e129e319-b2f1-48ad-a9fe-0b6fc49d781b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "23724d71-d66d-4b8e-b9bc-9e8aefbf538c"
        },
        "item": {
          "id": "503cc1ab-21e1-401f-bd1c-6b208be06cc2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2e5326b5-2d36-407a-995d-58f9b6d8f888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40726aac-a9e6-4b89-994f-9a56212e4431",
        "cursor": {
          "ref": "dbee8d79-253d-4343-ac05-9fe7f5410cc5",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b8fd3353-5dce-428b-bf81-952575d7a891"
        },
        "item": {
          "id": "40726aac-a9e6-4b89-994f-9a56212e4431",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6643cf17-c6f6-4496-b2fc-d39a3dba062a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d57272b-8edc-4b09-8e27-0510d4bb7ce2",
        "cursor": {
          "ref": "8f3cecd1-486d-4533-ac51-bd838977f99d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "72ef96aa-d76f-4e8f-8a48-4f03fb0293ee"
        },
        "item": {
          "id": "8d57272b-8edc-4b09-8e27-0510d4bb7ce2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cf510328-52d6-410e-b92d-f2435c04ad50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763812dd-ccac-4228-b421-9107a3cbcb36",
        "cursor": {
          "ref": "cb1203cd-60af-422a-aaa5-19c41f739461",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6e8dc6c4-2d34-4e9e-8436-478c3ab7baae"
        },
        "item": {
          "id": "763812dd-ccac-4228-b421-9107a3cbcb36",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4a8cf31c-d073-45c9-b39d-8965e82f0a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2ca051-d986-49b8-9ebb-ab6537145e86",
        "cursor": {
          "ref": "e026c8ef-3634-4aaa-a31c-af5de0a69199",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3a384a40-b702-44fa-baea-457f3efa5ce9"
        },
        "item": {
          "id": "0f2ca051-d986-49b8-9ebb-ab6537145e86",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6737f36e-3693-4b1f-8a02-210b8cf471d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5823c6d4-e4b5-47c4-bb18-416b256535f5",
        "cursor": {
          "ref": "ee78eeca-2efc-465b-b95b-cfd174ebc380",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "776683d0-e414-4a20-949c-ab34a7cad10c"
        },
        "item": {
          "id": "5823c6d4-e4b5-47c4-bb18-416b256535f5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "877a9b01-e002-45f1-9e50-304fa1e4c425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95b5c6d-b55c-4c00-932c-3d22a6ddf784",
        "cursor": {
          "ref": "1238e029-9bdb-4c54-acd0-39bf91a0d0b3",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "74ac9cc7-0ae8-4de9-98e2-e1476fb8ee7b"
        },
        "item": {
          "id": "a95b5c6d-b55c-4c00-932c-3d22a6ddf784",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "98e2ad33-0fa5-472a-b103-b8e9860b633d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524f187a-8145-430f-95a4-1b586e84678b",
        "cursor": {
          "ref": "598e150f-de65-4445-a2b5-e4b59eae7af1",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b4914fec-fbfa-4118-91e2-cf3957857c72"
        },
        "item": {
          "id": "524f187a-8145-430f-95a4-1b586e84678b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "190e74bf-3be9-42d2-bfb8-6dc8545799a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678d978d-072d-49f3-9198-98be509692e7",
        "cursor": {
          "ref": "e05bad3c-15dc-4396-a6d1-e3275e3fb8fe",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ba479e09-5b25-490f-9a5c-a8bdc79aa582"
        },
        "item": {
          "id": "678d978d-072d-49f3-9198-98be509692e7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6671ee0a-ce6a-4376-8a3c-1f754cd39af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e205acbf-f397-4fe0-bc7e-5aa4067a69b9",
        "cursor": {
          "ref": "7c7664a4-c3ed-4ffd-a84a-e1c264bb40c0",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "97123106-12ac-44c3-93bd-82ff53e9e7ed"
        },
        "item": {
          "id": "e205acbf-f397-4fe0-bc7e-5aa4067a69b9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c8c9ac11-6568-4dd4-a066-f0724e919010",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a525458e-39c0-45da-9066-27c624174a87",
        "cursor": {
          "ref": "aa463027-84f6-4c48-a5ca-62a12dbf33ce",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1054572d-5827-4bdd-8515-bd8bbacef513"
        },
        "item": {
          "id": "a525458e-39c0-45da-9066-27c624174a87",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e263bf77-7f6b-4462-8e59-96af0f870cde",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddc7195-4917-4cd3-975e-c06860ce8f3f",
        "cursor": {
          "ref": "3b835dd9-1823-4570-bdf8-d6ef530a0681",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "beeb735d-edfd-4d8d-bfb1-5f4b07c73c98"
        },
        "item": {
          "id": "9ddc7195-4917-4cd3-975e-c06860ce8f3f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1ffdb7f0-a0a2-4fab-a0ea-d0b018f0d10b",
          "status": "OK",
          "code": 200,
          "responseTime": 1651,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c76e5b2-a01d-4ce3-bb57-eb0f8ccdfb90",
        "cursor": {
          "ref": "4a8d088d-9a0a-4b91-8a04-e27f6119d2f4",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "576ed1d7-e571-401b-845b-2590e47f6d11"
        },
        "item": {
          "id": "4c76e5b2-a01d-4ce3-bb57-eb0f8ccdfb90",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6bf68e53-9009-4386-bb3d-2d3cf99ba0cd",
          "status": "OK",
          "code": 200,
          "responseTime": 1669,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dff5851-2876-469b-8bea-fa302d3b7c31",
        "cursor": {
          "ref": "5400dedb-b1dd-4af5-8bec-1137ad8b8857",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1585d228-70b2-47ee-88ca-719e246f4401"
        },
        "item": {
          "id": "3dff5851-2876-469b-8bea-fa302d3b7c31",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4c065bbe-b87d-4cf9-a139-54b635c22a4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dff5851-2876-469b-8bea-fa302d3b7c31",
        "cursor": {
          "ref": "5400dedb-b1dd-4af5-8bec-1137ad8b8857",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1585d228-70b2-47ee-88ca-719e246f4401"
        },
        "item": {
          "id": "3dff5851-2876-469b-8bea-fa302d3b7c31",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4c065bbe-b87d-4cf9-a139-54b635c22a4f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62799c41-dbe8-4126-b344-345b30e0e818",
        "cursor": {
          "ref": "74ddb296-fc03-4529-b37d-6c9b2151add3",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3c718d5e-2128-4c36-8acc-b2b5202e0094"
        },
        "item": {
          "id": "62799c41-dbe8-4126-b344-345b30e0e818",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c369ac24-aaff-4708-acbd-f53b8df7e98f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7acc7a-3fb5-4e65-a0bf-444538564e2b",
        "cursor": {
          "ref": "f4634596-601d-464d-93fd-9f68c11a6f1b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9cb36627-ecbd-4db0-92c7-46cc91c83b09"
        },
        "item": {
          "id": "0c7acc7a-3fb5-4e65-a0bf-444538564e2b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c4083510-75e8-409c-8a65-a6bcb2ea1c9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}