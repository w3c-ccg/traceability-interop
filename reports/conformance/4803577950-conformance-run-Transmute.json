{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "13c0a4ad-d61f-4440-9d63-959d5d4dd76a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c6c63f2f-336c-45d2-85ed-7190a11a6b36",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48b8f23d-43e4-413e-bed1-738899bdbb45",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ae3b027a-da6f-4f8b-998b-80022143701a"
                }
              }
            ]
          },
          {
            "id": "414717a2-38e6-4cac-8ca9-7374cf9d8f6e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "32ef1479-5564-4ba6-a675-8afc80967bab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "72c9cbcd-593a-446b-be64-92a18b7a95f3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c446052f-4514-450c-a00f-0d0357f26064",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8773967d-958f-4d42-a5cb-34690da28ae5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1984e706-14f7-427a-8583-4ec1694d3c94",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "267f2659-12cb-4dbd-b9f7-1b943b840a99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7d22d0c-ca70-44bf-a988-de0679604bd3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f437ec0-1c66-4d94-8717-b8afa9a869e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c596afe5-243e-4d87-af25-ea1020c9e675"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4d6c40b1-67e1-4900-90fb-a65b3b1e3103",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3575b01-9024-4d9e-b9ef-5c55f16bb6d9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "46cff2c9-8b4e-464b-b40e-16ce1514b0a5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b8819c16-ba16-402e-8567-e2464a47950d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "647c6ec3-2800-4ae1-933f-d247aa66da5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d60cbd52-b6a9-4d05-a233-6eee74219311"
            }
          }
        ]
      },
      {
        "id": "4a42ce2e-e52c-4317-8be0-b63783a4b69f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0fd9cd55-3507-492a-a205-e440cf04f1e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7aa361a4-115a-4b5e-a9be-6cd8e245607c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "12d3c159-fa1e-4fb1-bf4a-0b81002778c4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa33397-2204-404d-bd10-879ca1d5a087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea69a02b-b477-43fa-b8e4-a0d21fccd7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab273f1-c32a-46b2-98b1-8b056026832c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b46645-1a2a-4cd6-ab99-3a8bf019e052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c073cdd5-3600-47fd-b69c-3bb3c495fbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a6c75c-5fed-4dbc-ae4a-e86d9088a47a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d47841-b8d3-4fdd-a952-4cec6c310970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7592d08a-2584-4fcd-ad52-21125e75215a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8994a40e-4c93-442a-a365-9967b9781dbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36b9cf86-e302-4610-99b2-882c74224aad",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8c61ad-7ba4-44a3-8e02-61f1e8003cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86e4cb79-97d0-42ce-b13a-2f844bad8b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38f69b5-07d1-450c-b4bd-ba15b56e011f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a42726-d9d1-4b9e-ad7a-fe35243bf002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f58ccaf-5af9-472c-b0d1-1bdb2d5e6329",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec436aa-7ee1-4b38-a97a-37614b27fb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d03e113-c348-48fa-82df-5fcab64f3a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9f67a4-639e-4acb-be94-c6c25bc385fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "8c3a1d0f-c0e4-4611-8363-e219f03c0e8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c424f728-a16b-455a-bf09-545d74ecb5bc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "221d5d8d-1cc4-45d8-a00e-34ee7180532e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42c5c8ce-e089-4239-9a95-f8a29eaa77ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4d0e4ca7-8c4e-4e2f-b02c-50016d1f8a45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19f6143c-4408-4e8f-a558-7abf5e460bae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a3faf3a6-8869-4143-8c3e-de70a9f24da3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0eeb9fff-1f6f-48a6-a2b1-a0f4b8287c75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b075aa3f-3bb2-422c-bc9c-702c40340d1c"
            }
          }
        ]
      },
      {
        "id": "62284142-da14-4ca1-a58a-9a98bf54d9d5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7f09bb62-dce1-448e-9330-9a436f73daee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16f5d745-b869-4b8f-990e-288d5d212dc0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a905c2c9-be56-49ab-b8f6-970202ab2c13",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063089a5-ad33-4c87-b537-092355d8a88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db106f7-dc47-4484-90e2-6807b5df041c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a86b40-5db7-4326-982b-6063571f0e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "621e98d0-87f8-4847-b580-2da28969f788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e698e6f-1d07-4738-87cb-2dd9d352e14f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e857e267-e13b-411a-8702-5dd78d87c820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2db9c26-e870-48cb-9a9e-699db1cecfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ba84b4-d5fa-4006-8686-94b519fe3fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81d57c9c-8cbc-4efa-a5ad-904df392e7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec578466-2681-4ca9-85be-c5d04d722766",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d1aef2-fc2d-4904-8aa1-1bdaa21b8e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d58e5e-91db-4893-9b9b-5ec77fc72f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d347424b-0e9f-46a7-b7c7-94863148ddfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5cdbf5f-ad0b-41c0-8f68-9dcadbd2487c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f4e29e-0a1a-407c-bea6-93c4ced11353",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e6ef50-d7fb-4926-b11e-d182e921c224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07992bf4-f326-4b3a-bf7d-482950138f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fff7134-6261-4576-88bb-11253b9fda42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8bf2dc4-05f9-432f-8439-d59c5a56e220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cef3664-99a7-49e7-9ec6-4a7be78e269f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549d57f0-f5f2-42fb-8a83-626fa7606fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d7c9db-7803-417e-9473-672f2b34b407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365d680d-de38-41e9-9050-1787b9009089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5295bc56-e5e5-49bb-a887-5c4d4b86df53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecd62c2-c80a-40b6-a027-f1f88b2f30e7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75d3c37-4de4-462b-a01c-9314f3dc1eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a0dbc5-6acb-4b88-9d03-ed9aca645ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8165d749-a879-466b-b648-c93495e3d13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d23b2c19-558f-47e0-82bc-e2939f5bcc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72aa2f5f-5932-47eb-b21e-f2a642ae5f14",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65879a28-7693-43b2-b87e-13f74567ed2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d4078e-3470-45ae-9f37-348eeb993546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb3b1b6-014e-4a1f-9dff-c50695d809ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c5d7a83-d847-4b1f-ae75-2d27ca3ede23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece8a793-efb5-4441-a579-896ec010da1a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec09a475-9fc3-4f08-87d2-ae6df62d08ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610b9bb6-322b-4243-93ad-f1e427d7d535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18158e22-87a2-4558-b413-43c551c1406d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae05a376-5f32-4178-8488-c5c2134f0f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7f6df2-9c3d-44b9-9c36-c675afcb8e2e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6cb473-ccbc-40b5-8863-51a62422681c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d8a714-743c-4fab-a25f-955dc1e7717e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6e8b14-dc34-4f87-8044-3e23fcfdae6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c660552b-16f7-4979-86c0-726ecf04b87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbf73dd-cf7b-4629-8afe-fd422542e284",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a54ce0-2bdb-4265-b41f-b27e53797044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0e478f-3dee-46d1-8c9f-274b8f4b34a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e1ce82-d905-45bf-a6be-3c4840e340ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93b583ef-d60c-4bcc-8b5d-2c9822795230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ddb78d-372c-46cd-8c8a-863c32b3ca6b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5694b08a-f1f3-449a-9394-95472a61a494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d894068a-9d26-48f9-a73b-62eb43c5143f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352ce578-7ad9-441b-813c-51a8c8bb750d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c262db09-725e-4bc3-a587-8223bd3375ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5eba6a-1b80-4345-9559-84a910c51184",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8531adc4-c5b4-431a-b07d-d52ab316f51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682c5623-cee8-409c-982e-6785a841636b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19af6abf-f47f-4a27-9268-1edd35f9a4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ec35e79-acdc-49fa-b2e4-d744699b099a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dc5e54-d3cf-41fd-b84c-7d401da14e5e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d541b1a-529b-4b9b-a8c8-e9fb129968de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca5e9cf-5c02-41fc-96bb-638e55336c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d45376e-ecf5-4431-88f6-c6997896a2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34af7dda-9986-4df9-aec8-0b25f107c232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4831a269-81a0-4872-80ae-a56ae873938c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8afa5c-7bcb-418b-833c-e89e421f01d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d260f8a-a000-4cb0-b860-7b8514895218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ed4c5e-2f26-405b-b0f9-4a165a3eb2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "affab6ac-1a2a-4529-8645-f7a585944175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8ee11e-6511-42c6-ba95-2475cc816759",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6f64d8-0ca9-4331-a25f-069ee6b8ef94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b98488-3d8b-46ef-b773-d3f4a5933069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c5afbd-e671-49a4-b1e9-68df51a9a11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59a9704a-8b8d-4563-835c-3299a8f62684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee6226c-2ac7-4b0d-8766-9cd63ab3f3d5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f675879-de89-470b-ae13-fa5d9268acf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5368ecc-93f2-4b09-bf9e-0f0bd57e94f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e385248b-156c-48d5-968f-e7ff6ed2def4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a22a3c2b-fa55-42ae-875d-0a73c2f95ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbcc526-14d8-4315-906d-7522bb5a076c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5c0391-876c-4800-b528-96055ba423f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9726c62b-6207-4a04-a644-64bdfbb8fe79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587c1f6d-cbf0-41b3-8222-1dad434f4d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c419e1e-d556-4182-ba7b-f6cc7a59e863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716946e8-8902-4bb0-866f-c07a75835fca",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4d6ccb-6e6a-4d6c-ac9c-db8a527d0fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c65b541-40b1-4433-a859-5fca7c721d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344b6b03-8c2e-42d8-b74d-743906c1790e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8acc58ec-1e34-4307-a2c1-c1e0ecf7e43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291b638d-d83a-4c89-8753-a20af9612399",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504e7bda-70eb-42ea-80b5-fb22c87f34ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff68095f-ec68-4280-b857-24351ac54aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24ef3cc-f22f-4d60-b868-71a109fa61e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c57574fa-e2cb-4e62-a53e-8d0ad02617ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5e0331-24fd-453b-90ee-dde8c23621fa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95639ae-9414-4168-92c3-74f9d58f9c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788fbe13-136c-46d9-a429-3578600b0da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26325e0b-8a0b-45e2-a913-f9b873eba08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b1354e-d9e3-4e4a-a372-9171540b8851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bfb1c6-2b39-4e48-ba15-051c2d101260",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17217706-f59b-4ec3-9e5d-dd0e6bebb9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cef1f23-9d66-4e8e-a39d-b8883f00b931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbf93dd-c1d2-4aeb-8d58-67f5aee7016e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a721849-bfdc-4386-9a48-c69b3e359e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813b9c4a-9774-40f4-8f0e-c917acd6a782",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca37ff5-fb96-4b0f-a4be-713a4d940411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6523b1bb-4b05-42a0-b263-b6b66c3c6436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb510fc-e80d-4df8-b101-e818306845b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3ca51e-f732-4b5f-a5cd-a8af174e0f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604c2762-da7d-4e14-846d-cd360a1f0378",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89297cf2-0972-4258-8928-d711f839dd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f205c0-d839-4166-bd6f-8ac058200da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ed188b-4054-4892-96ab-e65d01c91789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10fe641b-a2b5-4118-93d6-7ecb76a31449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2010991-2027-4eb0-84d4-cba70e0c27d7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a687118e-69a0-4369-80ff-7cf44241f9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1c64d00-6f54-467f-b65d-c5744b977e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efad97c-f3c5-43f9-b270-5b732126b7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7291e85-e49e-433e-8e33-869b84b955dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30064c57-0ea8-468a-bf0c-b503c37919ad",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6ba872-db37-4533-926e-c6f76e1eec60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cf9a3d-de1a-40dc-8206-7932eff551c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fde5b59-e238-460a-86cf-2ee4080b33a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b5c555-ffa1-4b24-8141-b5c86af51b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3089b8da-22d5-4cb6-bbfe-b2e88858f581",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8bda50-c590-41bc-a805-fb0fba5fe928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3debbb7-aaf0-4f85-91e3-fdf28de46f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45295388-0786-4e04-a8f4-b9280dba3ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8ad71f-f733-40fa-ae7d-2059dcfeed67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023df317-ae46-4736-ae4b-1be1bd9cb6ac",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814927a0-3872-4a4f-909c-d51dafdbe06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dbe704-9e01-4644-8be5-1766c2197301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5423ca65-0baa-4aa6-8637-2d4379cd0a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3526e1b0-d520-4a3a-9fa2-d2ad1778de57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f073e48-2b10-4217-a138-49cc1ff04ce2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8461c59-c3da-4db6-bf8f-e5404be79143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf061c26-3a6d-4e94-9c3c-cd6362c90369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4f3671-be42-4df1-a64b-3d24eaa6b78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6353f186-99c0-4c1c-b311-003b7d0951c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf2620d-4c31-431c-9648-b78ac1ddbc50",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21ef097-78d8-4ad2-8780-944af66af079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bace6c-d920-42bb-b7fb-8a16c9d9d356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d086b2b0-bb3c-47d5-9586-3d7a9c6555b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eab5c97d-428c-4db1-b12a-8241519f9e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4834da14-075e-459c-ba35-b00231402666",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845fcf30-fbfd-4ada-b5e4-c2b594d3c7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f1f23f-be0b-40ac-b1c2-908c9ecceaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7fad61-736f-4bf6-b976-331308cd9433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "790e6871-fd09-4baa-af85-af22c15713b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a89de2-da82-4b8f-ad0c-bc997a53d207",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaaaa87-f202-4d3a-8422-e2f02e54d962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ec79e2-f53d-466e-90c5-be79945ed27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1134c95-0358-4bc4-a7a9-db684d14649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5487804f-2f0e-49e0-9d4d-bc5674b1960a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301ee991-74fe-4505-8971-3f6bdc197ffa",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c15cee-187e-4df7-9381-23e6881db2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabf045f-9608-4839-82f8-ecdf0a8ab2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8fec61-1908-4868-94cf-bcc0862b7f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfcdf8b-9f57-4dc4-b16d-975d921c6255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bd929b-9302-49ca-a596-9ccf141efdd7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89a5347-af33-4c34-bb86-861ba21a4abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c0d339-dae1-4854-beba-fda0a0f78ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba774604-ee1e-4009-be1f-73282bf3d779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3540d17-8af9-472d-8d7e-fb1fddc2d3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05fadcd-f8c3-46b7-8959-357609729dc0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc63358-e44d-4fe0-bcea-7b06023a8d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5938b6d3-dafa-43d0-a22e-12ef8a052ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3869f46-9ecb-45e3-ad7c-0dd0a87e6b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27bf4908-3f53-4560-b4ae-7b2c8dae8c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c7560a-54f4-49eb-b1af-f8b745b28e48",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005e4bd4-e16d-467a-9ce5-03c33fb95461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0342d1c4-0ac8-44b3-b075-8cff5806a273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb8d079-3e29-40e3-9204-3fcec939c09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ad116c1e-a9b9-4f9c-bab2-74a517d7e882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac81565b-1640-4d00-ae5f-0c0011a454b1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0182e86-4a1d-4897-ac15-975a6c4f3c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee0bebac-6bc1-43a6-bf6a-748b044b6d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4705cd-95e5-4754-b5c0-c248ff0f354a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbd2f93-e160-4ce5-b172-051e8728763f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0aa165-7bda-47b7-b7ea-31d37cb79121",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b54d80-cc7f-4614-afb5-12434f5511fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5799291-14a8-4157-bb0c-22c29afc4032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6da0f5-a62a-4fe1-91e6-91d01152fb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7d79fc-dc9b-4577-8857-c771bfd973e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa1d50f-5ffe-4679-ac28-1a8ca7e5621d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26d21d5-bd6d-4a35-804c-db4e3d74780a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4151671-636e-4cc5-b66b-ceb9813a7de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce61832e-6b15-4af0-bb72-ed4d407c5b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "49297400-81f0-4a04-943c-344e6ad1c040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354fb396-c5de-4389-b4d4-8186328fb1d5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d617f8d9-6793-46b5-afd3-e3aa45efe66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379e0081-4569-4abb-a532-a3fb6fcc6140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fba297-df2e-4b9d-99d0-a8e403c59e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f97a348c-1dbf-40bb-84fe-a4ac0b2fd1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d1defd-675d-46f6-aedf-2c2d20b182cd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2ab65f-f893-49d0-835f-0c46e3e7d265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57a84a3-d1d1-4230-b1a5-916bf22d7028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5735ab8-c07d-4c82-948d-9ae4b700cf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa473691-529a-47d1-9639-4732a2b0a0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff5d736-cd24-484f-aab4-706a5511f69b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568dda8b-3a19-4414-881f-38bd61ab27ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e95ce7-ceb8-4926-b20e-e0ee15376966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ac63a4-85cf-4e13-a943-5548b210f7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf0cbe1-012a-4aae-a8d0-ec5709189084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f906f60-1f10-499a-8118-420ecfbcefbf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bb7337-28b4-4472-8e84-6f7f3d1210d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338e9556-15c1-43ad-821c-d83009f2a4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa78babe-793d-4324-9419-ca710fcf4d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3b91013b-4c72-4a8d-8abd-ad13d778dc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8e1d0f-37e7-496f-b3c1-3bd18040a966",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9be7df5-4a3f-4d8f-bfba-4950c1a9ac22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5184f16-f4ec-41d3-8523-ffcb003b2009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60767a51-84f0-43d5-8d9f-10fbee664ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "467ff4d9-c249-49ad-a230-5872fd31c8aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eac8011-4fcc-4654-b472-0cb3590bf4bf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee6ef80-b8ae-468e-9a7b-3bad434bd536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a30ba1-519c-428a-88e6-e82c27eb7f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255d32b2-5edd-4781-b2b0-1c38a192e29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe72fc8-bc17-4e12-b6ea-dc96641cfb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30544b39-0bba-454c-80e1-f52310439ad9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af0af18-c98d-49bc-8bd4-394d303a1df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988f85bb-2cf3-4a48-8b35-a59abc092095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ec6559-114e-4bbe-82bc-3d244872bf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26f49213-c6c6-4473-b9f8-628c61c31a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5803c689-7ae5-4ba9-8fa6-079f26c8a327",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd3fec5-745b-4616-8539-6e292350e39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26c2e66-002e-49b0-bd0b-0366010dbb7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c012821-d293-48fd-b257-9a744559254d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d45b5cbe-b532-4d29-bacd-965e796c8d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7602bba4-b1de-4b00-9208-abae9099817b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f81b7dc-a559-4922-9d53-a72e6ae12f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81732744-ced4-4ab7-bf80-8033e7806ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725dbdc7-e582-42fe-8032-f9ea58647920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c32fe2e1-f5b7-4bb9-9a9a-ca70d9de5991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5023d4cf-0168-44d8-bad0-5075fe380c7d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa14e339-0a20-4e04-907b-398b8a7c6734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef94e682-4f21-410f-96ab-4dd8d2f0ccb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1b2486-89a7-40db-8f7a-68601b3215a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f924137-4756-4acc-986f-498bde07216e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e420a2-86e3-45b0-a194-33ccc96c6531",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cb00ed-5ebd-40e5-a600-c5e107b0e6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c352614-6af6-4c41-879a-72a8adfc5a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b9bf0c-b8ff-437f-8f49-dd716233aa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4583688-727c-4aff-9c08-9f68a493fac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a3911f-e1c2-4813-82a3-b59d0c0440f3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7411e1d-3047-4bf4-a75b-571c01181c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b88f56b-84d7-4056-a440-2adf18e315ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fdd2aa-6241-45a2-a3d2-eb49c2874447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76bf99ea-ab4d-4c24-896f-fcd15f17807a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e364e79d-6ca8-410a-8c88-669cd23a2087",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3526c0-5275-4735-8f56-52987e08aa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7a75bf-9bab-4cb6-8e78-2839a064383c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50f0782-54e7-4acf-b6f5-8e7fdcb8ae7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb75694-08a8-4ca2-86e5-ba08719545e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b030966f-6624-437c-8204-f775d812d3c8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386f8980-a030-4ef7-9729-98c62b2c9bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ebf72e-d254-4ec0-ba5e-4838d310b7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d70dab-c582-448b-891e-ba4ffa6b1238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7184f4d4-cbf5-44f2-bcc8-b893ef0362bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add651ca-4695-4b7b-97ca-3fef22b10443",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d22bc8f-2b6b-4738-b259-faaef919405d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff717904-652a-4964-b396-17a2a1c6de93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e25cea-47ae-4bca-b4f5-a20a56ea0933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2836dca8-76ab-44f1-82f9-23f90575a900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04242e9-ae2d-45bc-abdd-20987124f5ab",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8fb209-bf70-4675-88c8-a6a16b279c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991404c1-f4dd-4bfb-96a0-24d651e52b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dba47db-39c0-4158-baaa-3fc5a6944ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4bc4d1-5603-470a-b064-efe7005bc88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2583603-79ae-4a6e-8fb2-f362addd8b04",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa32863-707f-4f68-b7d6-5cbdb50715d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd27dc32-f9bb-44fb-9c37-95d835ebf137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f465e605-549c-49f7-8b95-4040b55ce287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fcf606-1c5a-4245-aa2c-31b1a1dcfc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9513ed67-ab05-4137-80f1-b1923bfddf1f",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e63821-0d25-4438-adfe-04edadbc4e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63dcdec-75ee-4e44-82e9-4e5e52ce4cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c957042e-52bb-4ac7-bddc-3098850bf66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b4471e09-07c1-4991-ad9b-60c8affc8b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3730f645-bdd5-4fac-9e9a-2b1b308a7608",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71c366b-3412-4fc4-a077-d88e2493a4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae23113-419f-4597-8618-ac6964b79b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f27461d-cb07-455e-ad2f-5cab540058d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca89673a-02ab-4965-a6fd-c8ac597626a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3e231d-f513-48e7-a277-05ec0fda7d5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55ecd7e-800f-405f-85a0-bd37aef14dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522e476a-2a1c-4e18-ad25-05e5d84a8cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e73ec8-4f67-49c4-bdbf-5d0f8fd7bb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae5aaae-1bf4-4e33-be04-930802144163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab315e4-fca7-454c-9279-995504341218",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a40ff5-8e87-4fff-b2e6-197b97c9de2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126a63da-1633-4eca-9855-059216cd4bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5849ac4-a5a4-4b06-aa92-ce3a43a624fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb935e60-842d-4884-a97d-1dc7bab94d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14423bce-8e6c-437d-beb9-5d97bd8ffcf9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e52a509-4351-4e5a-9750-b7468c37e3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22d7381-773b-4e88-9b70-8c07a6637ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15af867-af7f-48a8-a855-0dc07a0183c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d9e6cb-a0e6-4837-a6c3-81485d1532eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576952cf-43eb-4d5b-b16c-32a59539dc88",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0509679a-fa48-4f59-acee-cd17385c2494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba9e862-e562-463c-b2c4-246cc07b193f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8907ad-d265-4b94-ba9f-23187981e9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5f66f7-0a13-40b3-a242-54a66ebf1c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9c8a79-4fb6-4222-b905-f8f22ef6fbda",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f9755b-cb0a-469d-907e-57218a8160a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a898fe61-af42-4ed5-b2bb-f336f387c945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f9d2723-4a03-43d1-a728-048f24ba1174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac8218c-2105-4bb2-b322-1142df30dcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e051b79-5279-4e89-bba4-3e414e08e30f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15321f3-4424-4d52-90a2-9181050b8a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a77ba6-f5dd-44c7-96f0-4ecc699bffbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f50979-d555-47c8-9214-65def410fdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e099d39f-4138-455e-92ce-4375a869d45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8150f109-9d19-480d-aab5-a001ec666f09",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0bbc7a-40bc-41fa-b234-602cebda4ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9112397e-13e4-432c-b27e-b7f03995e16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b67c87-f485-4e77-b6ef-7b27dd879ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf0ac2a-071e-425f-a03f-35adbb138f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128725e1-cf2c-479b-b605-658ffd819977",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a53f188-a8e4-499e-b0b0-41ad18b4e3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5b4361-4d18-47a5-a890-dfdf72484cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae840d2-2119-4aaa-b3d5-634f9c11b643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e6e9a2-a852-443f-b178-ae46a407824c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5751a59-bbb8-43bb-90cd-5cad82776e66",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa51ab8e-96d7-4843-8c0e-b842beea15b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611a130b-595d-49a7-a57e-dac655ce18af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f3dc52-ca27-40d2-9ae2-934adf88b32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "535b1b5f-bb57-41e9-a4ec-81811ca2f044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922317f5-ee1f-4ec5-bd8b-18127d7d36b6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc42674a-2f12-4bf2-893a-22656a94c4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84ae621-8d48-4428-a865-788804c0627b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7dbefe-ac77-4f32-b048-65d78184f621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04016995-b19e-41d5-bfdc-d8d7487c74c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d094fa9b-85ae-449f-918e-04a32f8c1db4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e7bc32-5b82-4ac5-a781-59c179ee9e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6995238-9944-40e0-a0d3-9b8c01b4963a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22b468f-d116-4d2f-9f0c-a5632321ab64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf298c7f-67e7-4139-a716-e70a47200b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b921d3a-518b-41e5-8706-4cbf28d8f579",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf82a344-d8f7-4d79-9362-007b45038881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26343551-0222-4d6b-8d06-4e37b6f2694f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e79efdc-da34-4e7e-beaf-3f0b3493e081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d36c453-014b-4c62-980e-ddc37b4a94d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77650ed-e689-40cf-a835-70c583940833",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ec579b-b107-43de-adf8-332c97340622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bb6a61-c0f5-42a4-80b0-c11d9907824c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a433b1-7d51-42f7-b026-0b175095dbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6103e2ef-3248-4a6f-8e5f-9cc78c885891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc434af-e8ae-4d0e-a1d5-802849271fcb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b53038-0b7a-402b-aaad-72daf8e72bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db8c334-15c3-4ff7-9557-16ad5060ca75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f4138a-4ffd-4b4f-b14e-29410b2936aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3af3865-1a86-410d-9180-6bb4095c94ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0930a1dd-57c0-486e-9059-1a5413672379",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d641c04-5719-4157-b3dd-c8514a030a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee75cff-7cb0-4067-bb2a-c5427a52f936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe8de12-a51b-4c89-b72e-f4674ca99f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b889e16c-a00e-412b-b7c4-20c64eccc8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a41a19d-3266-4a2a-8d05-dbc3ecb02634",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a590730a-3886-45a8-91f4-7a32d35eb8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0caf61-062a-405b-b5fd-0ab831a66f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b807005-8498-4b02-83b9-2a2650fb0ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31ae83f3-7b95-4d4a-8b54-704990ddfdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd2fa78-c994-4f34-922e-96d19ac839dc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5021b45-5fca-47fb-b30e-e1e39fc17716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3202f8a-f9c1-4c35-9617-c4f6161cde43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b7e5e2-89ad-4820-a7f6-8442e193f130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "618a4e26-2561-434e-a110-370e73ce8c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47973987-1c1a-4ad4-a548-493503ffeaa8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d44da54-df1d-4ab4-81b5-a15e7e2c6e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bab3c87-e197-4955-922a-eca1393b537f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a048062a-a704-429d-849d-f5183112198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca35d738-b086-465c-a321-a2b17e2e9e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9b0446-ba44-4aa8-a3e5-d94c9500a36c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26b5a24-95d7-4fe1-98d5-1d347c350678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c2f462-f684-4111-ba9f-22f1b5ec0ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b4b089-3ce9-4681-8003-6d00903fd06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f98f53f7-9273-47b4-acc3-9cf9444590fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8defb809-b7b5-4a8f-add0-995902c52d4d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bb2eda-c793-4cde-869d-ab92f8bc978d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb87656-deb3-490f-bafc-372680417e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40145bc5-d2fe-43b1-a8be-d160296d1cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddf4d16-1056-4629-a22d-1ca44ee3f9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14333d34-8068-4455-acff-461e5d582303",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6fd299-85ad-4733-aba4-de0984cef05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5975ee96-3fb6-49d3-a1a8-2e08556c4742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0831e654-82e8-4842-950e-7cb1e8b08aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0cf7b1-3dba-4a88-a91b-05517555a8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc97830-b3e7-41a2-bdbb-0c71e0e28b0e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4248a19e-64a4-4aa3-a980-2aea8a649488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4180c11-b782-4ce3-9d7c-e829425185ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21ef787-06d1-4a24-b53d-3f079c864451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c80ae05b-1b07-4066-be8a-f16b874b6c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0a7004-148c-47ac-82f2-7b1a0306bb4e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213a8381-d506-4023-89c8-a9894c786c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f226996-0789-4e8d-a643-3cd23104e5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d4fcbe-90ff-41d1-9fe0-ec9eca58294f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b356833-0ff2-499a-874d-40c70c9b1444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae3c3b6-4ec3-4d1f-af7f-c413029a5646",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e758013-0783-4dd7-9357-f79954f8dac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfb4df7-bac6-418c-a809-17fb08c793c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dba768-c8ce-4b42-b6ae-a41c677feed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8d5009-d90b-40cc-8289-4819299ca3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2828be06-2dab-4c3f-a833-cebd23d65bb1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1154e760-d3b5-4534-b5b9-9036d5b72538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc3c2ad-9b4c-4297-a634-7c74602af903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d5f3d3-61b3-4fd2-b44b-05d6ce1bf8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4597d830-609f-45e6-be5f-7103dba56bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24969914-9861-4920-a295-5e0964a37e18",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fb251a-df19-4dfe-89fb-2ab23c69d2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d1e103-ac9e-422f-893f-6f12c5f0f852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3691f0ad-7590-478e-9692-db5ce2e0b9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8166f3-cb5f-42b9-a1f9-73177a65f591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa55aae-d3be-4b84-9b93-e408eef7d4c0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f2ed44-8bfa-4343-940a-a4757db4e732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41dbb377-b7de-4521-a8f8-2878e642b5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ace96d-5baf-4754-ad1f-c26956ffce64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab0d7b5-8a99-4330-ac03-1b4bb9f7c5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df12d58c-daac-48ef-ab1e-fa22994b02f3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852901ca-3dd1-496e-8a9c-ce7c7f998b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5ec757-6c63-4b06-aada-b8405827d7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938fd5e7-4479-4b05-81b7-91c7d9a3965f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f227fd-1969-4572-80c1-681f1443394b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d647a189-b2fa-410f-877b-112aa139718d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803be76f-b8b7-476b-b9b1-d87557ae7118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1058510e-ac15-4607-a4f7-8ea102ef2fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36714336-4ba1-4584-85ef-39532c22d817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dffa8b25-ce4b-4cec-a484-9a4e0eb9ca29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e51ce4f-5730-445b-b3eb-74d0f51bd8cf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7625ca0-1744-45f3-962e-f2fe9be6fa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bab274-f00d-43a4-a661-2e7686b8bc6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42fbe46-f9b6-4c8e-9b24-ab79520c3345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a388b7dd-7a45-4552-9d64-aef79fc7dc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67002171-9020-4c34-b4d6-3b9a4709f9b2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b09a725-5fcc-4509-8060-93a8aa0ed2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8b60e6-9e47-4553-b96e-0787702e82bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1897bc1-770b-4b6a-8628-ec4db40a6d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bac2b8a-20de-4a75-a997-b51de75dbae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f979fe-7ca2-4285-b431-251eb854d157",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281698d6-f91a-4f54-bbb2-703f8f00d3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccff1b8d-e5be-4b0a-bda1-1578106262e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068a243f-1892-40f6-b784-238138613099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb40d67e-2b21-45e4-86a0-52b872399246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9478a0b-e066-4b95-b10d-54f1c93660f6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f264901b-b835-4a42-b820-ede59a6f80df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b371288b-39f5-40bf-941c-9980db36009e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0486278f-809f-423f-8114-7d4e58e56c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b33162d4-420f-4a42-87a8-d78a584f19eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b171bf7-0ab2-4dbf-9ed2-8d2eeebe89c2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788fcca7-c1ca-4ed1-9711-7f790c96ef27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0afb2dd-056f-4cb8-99da-301525fa4025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81384ff-3278-4c22-aea6-e433b8a0205d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "76c65381-351f-4175-afba-99014a291713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36db2c4c-fe8a-411b-a95e-e38a7fb0a44f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c01a00-5d3e-4c0b-9653-9a1785ef1a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1797666d-ba28-4f5c-bd4a-c987147d3ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0867e3c7-7403-4293-9ec2-a8ac731e032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a11d959a-288c-40de-a5c7-75c0ce387252"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19bd0781-e6f4-4a98-b92d-e56bc6c16cb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51fb856e-6310-469b-9712-7f46c6eabbbc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae366aa7-ea31-4d7f-a9a2-01ef81fdac8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86c474ce-5c30-4faa-b2a1-e45add7e14ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2893bb9c-9070-4bf0-b1db-2e4a908264e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "248ba748-8acf-419b-ab0a-490ae821d1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3188508-e48d-4399-992e-c665deb68651",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20df2b8-31ad-4c02-95cf-fda7d35700bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58b02737-a747-411b-bd65-8d60a42a7c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f22c03-53a9-4df8-ae92-5ccb07be0d91",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "237424c9-3f4c-47ac-8461-3850cf240a2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f281ce22-67e5-40a4-a1fc-0ad1cbb6856d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ddff69d-44a7-46df-8cdf-317fb1c05fdc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e291bbd5-1a3a-4c43-8f09-623c68b91a4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdc6e4da-f880-4594-b3eb-e5684e4b2e8f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "87f91922-a771-4ef1-b1e3-bf5c48734019",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76bfacaf-bc11-48d2-a0b6-4421dcc19cde"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f39e135-6c34-4823-96c4-d4201ef41027",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac68bec1-f6b4-4e14-977d-75d969478d2e"
                }
              }
            ]
          },
          {
            "id": "6959a2fe-f286-4709-aca1-5e4c2b03417e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "50917ba5-99de-4589-8505-fda565869405",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce57eb67-3498-44f3-a031-86fd0dbd9c04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61a27263-dd03-40f2-b27f-35ae8b8d4385"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "575a54e4-c91e-4f04-9fd7-5e7c3b8c89f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cec74194-8bcb-484f-be7c-1655241134bb"
                    }
                  }
                ]
              },
              {
                "id": "855a04ae-247c-4634-a701-ee82fd33b64d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64fe9200-6482-4e67-ac6c-9669614750e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "727025c4-7904-4935-bf3b-27d86f3b15fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38b5546a-9cf3-40ac-9e9d-ed9af756a2ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b65b782-4815-489e-823e-e66b7fdd3405"
                    }
                  }
                ]
              },
              {
                "id": "8a605063-321e-4b46-b20b-5da236910033",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "406265bd-579e-4376-8cfa-78cd2a61e9f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "570facc1-79ad-4238-86a1-9ff59e0d5486"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "633c8d9c-9fc1-47d5-8147-7d58a1a8cb1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8863f5e0-dfb6-4099-96af-9fff021af886"
                    }
                  }
                ]
              },
              {
                "id": "2d2cf602-5684-4bba-b3e1-daed9472e2f2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5f9e5cf-a232-4451-94a0-eb49bf610be3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9688f54-8956-4fba-b5ad-fd436df951a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a714cbe-f9a3-4d36-9de1-1a2c58a72556",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "37cc900e-ee54-45ee-b068-d523cf9d34fa"
                    }
                  }
                ]
              },
              {
                "id": "40102fd0-8519-49e4-b638-3c767316f563",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "921b357d-60f2-4fba-8e14-5857e827d99f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f48fc76-86eb-4860-887c-30a4468fb530"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b4d3ef6-8bfc-4c5d-bf05-234210bf8a0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "88413a57-24c8-43d0-92ff-8fcff39715d9"
                    }
                  }
                ]
              },
              {
                "id": "e501825c-c7cb-4fb3-be9e-c90d4839e6c2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "372f3e2f-1674-4fe4-aea4-a847a39eb19a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be315d61-cbb1-4a75-b233-8a7df1253420"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "286d0d04-b8e2-45b4-ae2a-411cbdea639c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20fb9ffc-e33c-4735-b314-b96426650dad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a39f064-7fec-48b0-b731-116ddcc12d82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7eabc5ad-7caa-466c-93bd-952b33b0306d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d3c4721b-8dd1-4418-8a36-2c04b3326aee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0a39a46-4f18-45ce-b8f7-f3ff041a095f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5516f79-3c78-424d-9c85-3ff806695070",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c764154a-8d15-4a59-8b00-dec86f1caa6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50bbd419-2c73-4008-955e-6c45935fc6e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee6242ca-e040-4b38-89fc-22c390b2ac8c"
            }
          }
        ]
      },
      {
        "id": "a3de4108-b814-4ff2-9f6e-5e641283e894",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2d7c2c5d-e949-418d-bdcb-4f59dab909bf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2f8bd6e-f3c3-4d53-9619-6e96be0da063",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10e876c9-93d7-4cd4-891b-e844f404361d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c7d592-93e4-481f-980f-c467ec9a2c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a965cd7-77fc-40a4-8a23-f03cfbad145e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab950436-b095-477c-bf7c-67e1faffdf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e35c62c-eef7-44cc-9e99-536376129942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379e91d7-2eaf-45c7-bef8-3410e44921b7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e39c48-c06a-46cf-ad4e-4d9dffbea7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec9c28d-ca32-443e-8b9e-bd579b7d69ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489a7ec8-14a2-4d0f-8485-ad8440b935a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b66a9916-d28c-4c7d-b387-d58365651388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6664d3-cbb7-44a6-b3d0-f0148933b8c8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc03422a-2af6-42be-b486-92bdb6e4df02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d337d7a-74ba-4e19-a061-1ff8dd7b808d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a0f6e6-efc7-4813-905d-cb2e4c63ccbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6f65f6-50c5-4fbb-9ba5-27dfce5f74fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4340ed-fc13-4095-aff3-1227109b6623",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f46b0f1-f3a3-4feb-bf1a-50c46726ee5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bb8f3c-3be9-4be4-bfd7-041842c99c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523f0479-95a7-49b0-b63a-a731b41cdd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5116237-87a4-4bd2-9aca-61a3c298ab2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6b31dc-0384-4d69-a023-b48ea5917ae3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090f4652-cd77-4941-957a-9b6e3f732d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab43099d-109d-4ee9-94b8-2d0fb698b37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5da08f-4ef3-424f-9e5e-62de92889dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a99ad012-9678-496b-9253-6bb9d8c59579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30e29a3-7992-492e-9510-51705ad0ba9c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15e9fe1-1011-4d86-9938-fbdfa84fb9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3426936d-10fa-4eae-beca-917666eb978b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96601264-942d-4196-96c2-a3b94cd57db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80681998-859b-45a4-bcf8-ad2ba31a08cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba236ee-9f28-47ef-884a-a36fd64e4c41",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae96867-5b5a-44ab-ba02-112df75e160e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9599d55-446b-4642-b91f-db739149dbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2044ff-ecdc-4477-986f-7e0dd41c86b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "667b6b84-cb6f-49e2-8d88-10cc148f8de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9f9fce-3aea-46fd-8bf6-5f6d7485afc0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638dbd2a-bfdc-4547-94c1-3c717857e02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4520a74-464a-4393-b929-3e89d5f58de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75a1c84-16f9-41be-bd6b-7e12bfc365f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40677fec-19be-4a0b-b8cb-aad7c0607f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d555fc1a-f058-48cd-8ff0-e10ec81c7f13",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49d2b70-51d7-49b9-a189-9fc7437c8ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5e8b22-f754-4237-b6dd-49294fe3d480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a83e95-dfb1-4a03-b43c-50e19b832636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc9536d-d4be-4f01-84cf-6e073bad3d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cabd94c-1162-463c-83db-ca4841b2abb0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def2ed35-1355-43d1-b61c-dd906fb64789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a85cc3e-e80d-4a97-b44b-6df4fe70e6af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b6d021-c641-42df-84f7-fea560a6e071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cebd73b4-19e1-4c6f-998e-b87045af14be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da92f1ce-8d37-4843-802f-51c97b4f05a8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d2e114-50d7-4377-89cd-0c80b21dfe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f793c7-e4a8-4b34-8025-a0c5f0fea72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2f07c8-22d2-4ec0-b753-2df1d654d8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f21c82f-c94b-40a8-ad8c-83a7c651cf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbe9e4a-b9da-445a-afe4-f59b3c373b39",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a85597-c2d6-41ec-81ae-f6cf338b3e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba1d98b-45d2-40a8-80bb-950839a8250c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be63728-8da5-40a1-81d1-2573b3b7025f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9f7ccd-acb3-4e6a-a4fb-8703d9ab659d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa7728e-614e-4544-83d8-070a28f8b6e9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89836597-151b-4d73-81b6-92dc030ca991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d938b93-b31b-4919-9812-c54d254b62ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3bfa95-24c1-4a50-94f9-8128fdbaade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d1e2df-9dc0-4911-a1dc-3a147e9b6f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168241ec-f014-4a94-ba9c-740661af6404",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c292108-ec52-4dfd-be28-71f9965aeb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5385ba2-219e-4cfa-a564-10fe34758345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67b1830-60ba-415c-937d-7b74d2697c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "802fa533-3819-4e50-9dda-08bd666cea6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31b17c0-491b-4229-bd51-aa9e0f075373",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abef9da8-f70a-4231-8c28-8d13fceea8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89da4b5a-da24-4a76-b810-3fc073834f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6786995e-073e-4db9-b0d7-01ab7a150ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "636b8121-68ce-408c-a322-2c5581fc4169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86205cb-2182-402c-b4fb-135252520090",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662d01c3-a84c-4ce9-b5e8-27194c64e087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3266057-e4e7-4aea-b969-66b80e15b478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfd3807-0e99-4b2e-b2d9-16485f32a5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddbed3e-a909-4a38-b705-db0beed775d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da73043a-b75b-4c2d-92f5-009577700d3e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec42d1e-ad28-46de-aa42-cb17be0e5c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711a0d55-ae48-40bb-bdc8-981f7e3fcce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd98ddb-c06b-4a19-81e6-37114fb67576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7c31bf-bd12-4183-a37f-df4a1f474ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276e9c72-73b2-4f58-9908-832daaab1c5c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ca4c1f-3c5e-471b-9506-26c91f106e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9843f3b4-9d80-469f-9863-6057fafff444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b491bafc-a066-4485-a53c-d7acbc480db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da2d071-a420-4298-a2d6-a22832878396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fbbb6b-90f7-4c86-a999-6638b5699a53",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6ffd26-8973-4acc-9a1b-1d68a06e2f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea099400-bebc-429d-abf4-419cb61e8a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d86311-ac4c-4b7a-ad03-20b8e821f1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38727300-c85c-404a-aedd-0b882cf71185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d694e8-b791-4964-a38a-3c30246439d8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca442f9-173a-4bf7-aa03-98f7445c45c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd70bb7-e484-4cba-b56c-2cd2e6aa3ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2f69b7-9beb-4b29-b6fa-3e6c7e704f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1ca7e7-74f2-462c-ac44-80a80649760a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa2bb73-f02f-4a18-9a84-f718eea8383a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f386b6-1312-48fa-b180-213b3d6b7e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b2c2eb-887c-4ea3-8223-8bbeefe6480e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25d75af-21c2-4c62-a23d-56dae5540337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60332e66-b585-4d33-ab8f-882bf55327b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1df1a4-6472-4888-9920-5efad57baf2b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f55d0e-c09e-4de5-8e1b-83204e6d31a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3273ace-5255-497f-9f75-e991bca041ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46504f2d-2b8c-4bbd-a4ce-4670d4eb8600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e586f007-fa34-4f55-b176-89980f4a866d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cec4773-40d0-463d-90a9-d521e43f4991",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e4a69a-0962-44b4-83f4-08798c354784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7fd890-bf77-4233-802d-3162ec329d0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eba7162-9826-48ba-97e6-5184ccdafee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c28dd74-8b05-4789-a559-22ce635ff988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4201f209-d358-4eb9-b03c-0e56a32663de",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1675e2b-7e20-45f7-9447-cf33579864c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c59d13-78a9-4372-a979-156d47ebe39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d02ba43-e179-4f0f-a590-d25bd898a175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a582465a-0e79-408c-b5c4-52c16be5cf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7246ece5-db63-49e9-af5e-e62e8565e777",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba28fcb-9e56-4482-8c49-8604e54d7fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1526ac1-20ee-4ebe-b85e-b7adb8033741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdf1e36-2417-4f68-a83d-5bdc1cf6331d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6db82208-81d5-4ef0-8b7c-89a74712be41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d019ffaa-6056-4a30-9515-fca43485c37f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26da2ce-1eec-47ef-80bf-5b72032654c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e901c1-6923-4be7-a8a8-e430dbb5c9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defb331b-fdfc-49c8-b099-a172c48cdad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d54d46a1-ae32-46f9-9708-ccef947a5bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f34de72-f129-4236-a674-9f73b90a2321",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ade0654-20ab-4f06-825b-dd105b30eea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d54b05-5619-48f3-9c22-13b124d4ea5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfc50b7-914b-4d19-af1e-4ad9424eecde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43b71db-0dd8-4e5d-89c6-1cbf273316c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572dd4aa-deb9-43f7-8c3c-8a49f38a1035",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260e3adf-fc64-4fdc-af33-6979cc252192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "654cbeb5-799f-417a-8b15-ee38027b5b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9d5d7d-b390-4636-895b-00cca10764b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4911bddd-6267-4a50-a7e7-ed4c40cac76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3a1456-ca66-4389-a435-e5e3e35d88ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afedfa2a-f426-497a-ab3d-df073d976744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b778a46-5597-4481-9cb4-440e8710c33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb5a71b-5847-450d-b23b-31f972678bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7db7f89-818d-4275-b542-79a55531200e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a1cb95-3849-485f-8149-26d1bde5accb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b446e0-ec42-4337-9f43-cb26fd492f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78421db6-c810-431c-a317-8f8e95a4b3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bef88d3-8ae9-49e0-ac1c-76f900d3231e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccba329-369f-42e5-8649-ea8f3c4e991a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401d140d-7cab-48d1-9c1c-4f12d1b6bee4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e5c712-6d6a-4a1c-a1ea-2ed4b5f88067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba40f00-64dc-4f47-8a0b-69fdf232c4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30d2f04-7b34-49c1-b57b-61fbf45cc60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d639813-b105-4ef9-b56f-5c8d7d465e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8184fee1-cdf8-4327-9242-61ed1155f0f5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcff1a4b-9d45-4c48-9217-94f7d09de9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cf7ddd-dac9-4538-adb4-f0c48bf1a010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a860746-6456-490d-bd89-fb98baa655c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66d41975-1626-47c3-af5b-13ac6675f5e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bb3d6e90-ff20-49cc-bef5-5098da6df3b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcec62fa-88af-47cd-9bf1-9c29faa9664d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77d294f-5241-41b4-9f49-e7bfc8b004b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "55771541-9566-402f-8a35-377cfb2cef50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf16a47-582a-415b-814b-4d6229b2d7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d74cdc8d-de8e-494e-b5cd-c61ffd014037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68acb204-1955-416c-8bad-786aff473d06",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ba69c7-a79f-4d99-9f81-de7657693daf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "458d8685-0ed8-45c7-a957-a85b9865940d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83ec5aa-ca9f-4b55-a767-8890d23df244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be82a6f1-ed78-4e5c-ba82-949f1de6cc7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33fd0d40-94a8-45a8-9b6f-8956f3e797cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "530ffb24-9597-4773-99c2-66bc4d517ce5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ff6ad99-ad7b-4053-825f-7ca0c5e2bb00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db692781-2469-44b2-b421-54bfe0354c85"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b23619c-fc30-4940-a7a8-0edf8a778788",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c6e48e1e-8f1c-4fad-83da-b508d41e0727"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e69da0bf-8f9a-4e9b-8779-bbc614419e93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89dda4a9-c8b2-4c95-a28e-514a23c4880e"
            }
          }
        ]
      },
      {
        "id": "c1935c4d-5e9b-4c3d-b24b-17f96aefa2a2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "71ba07f7-b23e-47c1-9d76-235547412411",
            "name": "Negative Testing",
            "item": [
              {
                "id": "574f4f50-6022-4145-8b0e-12d0e5ac4e91",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a5ed1b61-91c0-462f-aa4c-d6c6a6c8ae9c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd2f36d-e219-4772-8caa-fd7d9ae01969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bccd088-a727-49dd-b272-d9e41a1f9dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37dc07ed-3c4d-46d8-bfe0-27fa13c2aff7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c27018-922f-45e6-ae33-b1d6fd35b307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f35341d-f621-41d4-b23b-4330d3311155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46493cd3-8b83-477a-9a53-49bf18692637",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8cddad-6039-4b05-80e9-25128bc0faf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d2e261-5d0e-4165-949d-80ac874e81ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100ee0f5-cce8-4b05-80aa-8cce15902305",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad37508-2d6f-4108-9db0-bbcdae7df269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e7886a-ce14-4fb3-b725-14fda57f28cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c3dbb0-3222-43c2-ba98-26d3bb5f5f82",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46884c61-bc7f-427a-bc57-95c41e7f6cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6903565-59ea-453c-8732-efc61e89c40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936474e6-e65d-4325-b064-13c3b431e515",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3600334a-d1ba-4bfb-9de4-370dcc00c8aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ccf43d-4f68-4cc1-bd5e-80e5717164a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f00db0a-d58a-4af6-a409-2bfc81a2dddb",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29b7d20-7d59-48e0-88ab-d5ca73f853e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c93568e0-260c-48e9-9b54-ce18ae478e0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86620f0d-96d2-48f7-a968-0ee5b6df595d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f79f50-1ce6-4671-b849-ab14f6cdd25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5f376d-a795-4d6b-83e5-612181c035e6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fbfaff-9010-422a-866e-537ee457b565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afdd83cd-3176-4226-9940-eabd5a7bc514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab1448e-950b-4b50-b55e-1d2e2ad7a364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9df5578-60db-4351-b154-739cf2d57dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf2f6aa-61e0-40b2-94c3-5a98dc1879ef",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9080ab21-dc09-4513-bfd9-f1dfcaf0220f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c94c10-1bb3-48ed-afc2-b86ddea44ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57f474c-0975-46ee-82a1-77607a124c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a26bb23-9fdc-4eda-b658-fc67364b2524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7064ad52-e044-4821-b1fb-f8fd073458a6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464b05a8-77e0-4838-9699-77f77e3a68bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81935e36-cee5-48b6-b70d-e668c0cf4838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5224a7-241a-46e6-8549-b4f70c7a9cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e619654e-d626-4327-9042-73c835e6335b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5d12e9-d0f5-4a45-9727-21fda1056252",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f382db33-b6ea-4217-bde8-1fd96f056457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3607f816-51ad-4a96-b929-3eb42f719f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d9f45e-218d-4ea5-b2f7-443f2ae434a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5add92c-6b69-44c4-9224-6972904cc48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590f1c03-0b2c-44bc-9892-45bc942bd346",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460667f6-239e-41f9-9bc1-5922d9652326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c8ee3b-9824-4950-abcf-f6fb847f4f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f0551d-8268-4f39-b643-13afe0f2d656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753adadb-9679-4a93-afbc-cbd72d1879db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599af82c-2c3a-4baa-946e-4677bd973598",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a201958-52fe-4f3d-8ea5-f27c4f31c9ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568b4130-2de3-490f-8fdc-2306f3ed0a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a58a87-1f57-49ba-9203-45f7e67c0350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4807b5-1874-4b85-9273-bcc9ee267283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18af8a4-9931-478c-8025-1e13a24d02e4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb7e47c-f2df-4ae9-8296-c8c83ec5ac6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8801dff-a93c-4fd3-a04c-d73e86a2e02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2415cb6b-98cb-436b-9238-6084fad1b52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad21db14-167c-4a99-b622-daacbeb45dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483e8d13-fda3-4009-9cb6-e78e8458ee64",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4248608e-f9bb-4da6-b157-e2de220c98c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd279be8-a928-4622-b0fc-8f585ee431b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a7fdab-eaca-47c5-a83c-004c7ca1367a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c176ebd0-dd3f-4090-98c7-a85ca94dd60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713875d2-f42d-4dd3-bf5d-b5f5d17b6815",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7075d3d2-01ca-40dc-8d84-45dbc1a8eea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4abde3ac-9f2f-48dc-9035-b65315290588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10765b6-43d5-41ff-b1ca-5816ccb56fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dd52bc-e8f6-4f99-8c11-d168f1719ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30472b1f-9336-4971-85fd-f47500522c91",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2082fd4d-5c2e-4395-aff7-4f3597ebf4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2667401-88fb-4ab9-83a4-aeb6c9ca77b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc570bd-8983-4e4d-b12b-0869398fb42b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642c3dbe-e875-4c73-95df-7641e90d7299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b74ec5-2822-42c5-ad79-5cada07980ea",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6f3ec1-ef94-4d49-9e7d-31a8edac3156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1605c2-c1c1-4750-88e3-784b19ee8c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a11c5b-bfa7-43ed-b792-5f96faf105aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba30b54a-357d-4e53-9fcb-5c7282bd5ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38805fd-7061-4bd1-9245-01d8bef56598",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ab2758-31e9-4ed8-ae57-a601cd60c7ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bbdee5-ec7b-4a18-adad-7e245663a4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e43e78-09b2-4222-b427-a43821409c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f228dd8-542b-4efe-85b9-4ce23e996a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4228f0d5-07db-41f2-a9ba-ab681496a034",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae1ef62-526e-474b-9825-a49d4ae6dd6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5209dd42-6446-45f3-bc6b-db50995eaeca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b78232b-48ac-4b8b-8fab-73ae2611fe04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b00a743-8618-4401-81c3-85485ef8bb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd898a0f-0e0b-4711-850a-3434319b6e3f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77082b77-4902-4847-b3eb-e4964d038fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c726667-6747-45c6-a024-a533e396f1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94d2ffd-9113-4515-a6cd-f2b90a1e53d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aff943d-74c2-4442-ae78-a01db2dcc5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f532a7a-b34e-4ee7-a1d7-5447551184a9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a23086a-762f-48b0-8843-3d610b2f7d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926ae676-7790-4d74-832c-4a2534399548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57c56e0-eb06-4c62-869c-50eb7974f265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbecfa9d-bab9-4251-855c-f6d631d3a1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f420d335-18a1-4810-9d39-8d3060690e5a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56367dc-8cf8-4d03-9b68-ed797ab795b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba6305e-bb43-4ccb-b4e1-14bd25afaf39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2b5680-17de-46e1-bcdc-b890699d5565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e4be44-92dc-4393-b55e-1cff1aea9e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cb3306-f1fd-42a3-ac64-d6358cdcbe51",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb98998b-4c86-40e8-928a-33df7edb7b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16ac7b1b-3b2e-46d2-9216-31b2ad7f6b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7628a18-d576-4fd2-a93d-d80047a22784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61be2b5a-ae95-439e-8cee-3f96583ec2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2176345b-26e6-44bb-8d92-71afee359ab4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba1e395-a44b-47ad-9891-6ee02e80c8d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b224cee-da50-4c0f-a3fc-75549688e1f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9445da0f-2823-410e-86eb-73e16b5d4d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73697d2-ed00-4d81-aa56-a9d761c8f509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043ea317-8976-4347-982c-2591a9eee457",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d4210d-5a20-439f-b2dc-49b5671c2de8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7345997c-ae5b-41e9-9798-9353befe6f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a52858-7dd5-4a4a-90ef-9a470831df1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad3c80b-d64f-4566-bb10-c12bc78ea940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7263a2cd-45ad-4897-8e1b-8980c028b3f2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f24993c-b4d5-4be7-9067-a4fd9e84bb0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f89649b-e476-49ad-a520-5475c1103c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbd7d91-34c0-454b-a9ce-a28c28ae02a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3f1cbf-617c-45ee-b2b5-66d738dc1f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3313f334-91bb-47bb-a114-ff7bda94d178",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84b7efc-444e-4ece-85ae-67f5c7365662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63eab471-0b05-4a11-87dc-07f9b8b8ba20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7ab1a3-5dfd-493f-aefc-068089a6df92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84c39f4-c923-4d15-bec2-f85c711333b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfcea7b-da0d-40d4-8621-c3221cace33f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9940fbbb-10cf-4942-834a-b4806745054d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb627941-a0be-4970-aad6-4e0b6d18e96a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f472706-98b4-4349-bfd2-6a4766bd387c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04052aac-31f8-431f-92e4-c5138075b4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea043bcd-9694-4abf-b5f2-d2dc06a0c743",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfce5cda-a1f4-46a0-98a4-123850d68cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64d73115-89de-40ce-a960-0f0905f6ee06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d12919-2700-48a9-8dd7-1dbfac24a172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a646c3-492f-4e3d-ae12-ee07fc97ab7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94636a22-e97d-451a-9166-239e71a1cf38",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803f3616-6931-42e4-af8e-8c76e41738e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f55cc2-e28e-4b82-9052-af86436cd161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d43b8c-ffe9-49c6-af26-16b48e8af281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e3a364-cce7-4812-a4c8-c6947b9b15f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6eaaba0-47fe-419c-b11b-533feb239378",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99a58df-fe5b-4802-8959-71108ef91996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "625bcbdf-dce4-42d2-9270-faed0100c501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bc05a7-be1a-416c-b6f9-024901f50416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf1fa99-0862-4893-ab80-171dd969012c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee592f5-69bf-4e20-8770-3adea599684e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaae43c1-036e-4d80-829e-e39aea36fb69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2084933d-9a22-45f4-81cb-7f4ffc97ac5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abda6c4-4900-4bb3-9d71-07ed591e821c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673eed41-58cc-4fcb-907f-869b4e659fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d206d49-802c-4635-8553-37ed5d68aad3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de52e81-8bc0-41f5-a442-cedf9444d14c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "041435f1-0f9a-4504-9737-9e4f73e3529c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf8f287-d5fe-4865-9b38-b4055df887a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c4975e-def1-4e6b-88a1-25d308e74f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d45adb3-b425-40cb-86be-283f40a7d6c6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc458ed-d3ef-4ac1-98c5-61796236367a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83dc65e-8bd2-4233-883b-f4261c804d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd8486c-3360-4925-a315-029d64c849da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8794a107-d297-4886-8da7-27e3d0d76dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2741841-a6f3-4490-9fae-a33cc5ce4cbc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce73bd92-374b-422d-9e9f-71382f2d1f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336fbb7e-7bb3-4d6f-9297-f966d03145cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a39fbe-d1eb-4a1b-a96a-c7348099e20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dde4dd-306c-49ca-9b5a-f8a906e4a6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94445ac-1527-413d-bc0f-b0aa372bc199",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e11025-514c-4158-adc3-c50df99e8dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30fa08c9-564c-4eee-8790-cec24d6c2e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cd095a-83c5-4c71-905d-26ad6fa5002f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4774f31-c030-4b41-a6f4-f5d33f877599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3916ea4-513c-4eaa-a1df-33f7edc9ea03",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff5316b-aa25-4a51-a517-34f4bd0e2b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38a8b01-a80b-4795-b98b-b4df1a8cd27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb957e77-e254-48c7-80dd-566f115fbff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37d13e5-bde1-449b-a5d6-b216ae5c8c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f16444f-643e-4021-8f8b-cb045f13a450",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8506a29-48d1-47a1-b30e-ab65c5c2ae7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46257c3b-d5ff-400c-8c39-a9408eb832b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4d3fe3-6b24-46b3-af4c-ee1d3638af4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865cf697-79a3-45e0-9f3f-d66b9d9959d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737a37fd-1f14-4b80-814e-ac12256b4b2b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51bf7aa-41bc-4839-8d2e-94ad7d5e3c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52b20a2-1f0b-42fc-bc33-3c0e3d648b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea4b7a0-6b72-42f0-a905-f115f9d8eabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1165176-ecb9-4f00-bf2e-c8892c52fecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0e7dcc-c149-4c30-a185-8fbb4a296d6d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b49805-b882-4e63-aafd-3c51782a18da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448ed148-4de8-495b-9a9e-ee008f64a3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5d705c-9602-410a-ae34-cbee52a9982c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115c1877-8cb6-4356-abd2-276e1f224bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472fb067-b1f9-4516-bfd3-def4a9ae0b06",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8aee0e1-cca3-4636-944e-4a4b8742bb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f16b6c-4aec-40e2-b440-18ed0020015f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15f4e4b-9983-4775-ade8-60161eab419f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011eb703-9b07-4d05-a2aa-4a7c531ff456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998bb1d1-621f-4029-9135-704847ed48ea",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dcb51b-ff8f-4f89-bb29-cc4f1887bcff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf87453-c6b6-44e8-bebd-4c449720cfff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf2e68b-c9ef-4109-ba4c-fdbd3bb4505d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6641d36-c140-4f5e-bf7b-3f1ab5a74acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d4db6f-deae-41cc-bb47-518d9110aa36",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91df8ca4-6fe7-4729-816d-dd842b8e1ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915f6131-5fdc-4854-8514-bfafd2872470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7e8198-e694-4ea3-b009-96b0355d7631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d3270d-6f5d-40ff-afbd-272d6617775a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9098cc3-05f5-4093-9e53-902bcef91fbb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2952d63-6bc1-4e35-ae1f-dcdeb44a62af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48bfb22e-482c-4144-8256-edc17a733026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d233a6a6-a2ed-4361-be12-7080a684085f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4204ab-86e4-408f-b085-71ddbb631840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e69346-85e0-48cc-b17b-166ae044400a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e89f0ba-0b7f-46c5-8158-e498ad0e1d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18bffa0c-0de6-4693-aadb-1ba2a5157fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7030420-700c-43f8-a9f5-86a5361d9a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d821c239-d283-4e2a-9306-92fd8ffe6e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb989a6a-375d-4c85-a687-97ee38ef11fd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f68473c-8300-43f4-99a9-dee969e8dacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d84ace2-e520-43ca-a502-f962047822d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6c9cdc-10dc-4cbb-b31e-7f7577feb733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2115957c-b90e-4739-b715-38afa6b7783f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d20d4c3-6677-449e-9c1a-25e93a5ceb60",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28f4f9c-6357-4321-aa9c-2732d198a618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb5a58d-2edf-4c0e-851b-563fdf83b147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d55a67-ac2d-4fa2-9cdd-6eb69879750d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2415de01-c842-4be9-b65d-44f73e9cc87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e8a3eb-96fc-436f-867f-df3ed4c1110a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7000a5-3489-4b8a-bda7-dcd30b8f92b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9d057d-b1f2-4adc-9e9a-6cfb5e5c855c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80772018-2f59-4bd6-b044-f4e5beee1875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf474f0-0e8c-4a95-b855-4ef874bc8654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe55dc7-876a-4e72-ab88-162a888c3384",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a2f4eb-8fa9-45a8-be15-22d46e1256af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f840c1-e0a0-48e8-84e6-fccd62228325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fca6c3-c8b9-47d7-b775-9744137aa07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f4e766-3fc9-4bb5-b687-5672d10d5961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749c0720-aae7-4f93-9f2c-202b68251ff9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f63ba5e-da11-4765-acba-73388a0d961b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18f5483-1df8-43e2-b796-a38b69261b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbec863-d4af-49bd-86bd-3c3ffb686cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b482cda2-696c-4277-989b-79bed0e96199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ed17a9-66a5-4667-a730-8b5e9ae1d736",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0d525d-f2cc-40d5-89d3-6f15b2e1a79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0123b55b-42cf-458b-8698-f9a62bde542b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de7add2-b9d1-4dbf-bb23-4e1599feb5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf39b44-5e90-4255-9571-694d4cbe7442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c999d1-b275-4c76-8aea-0a3cf9f51693",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a0f8a3-5ba6-4e20-b2aa-60bdf3622aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6507c31a-7cf9-4f9f-bf6d-c477b9094643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e25ec98-98dc-47eb-9139-842921cccc61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c467ecb-93ec-46b8-b85f-1a2decb1683b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc3d513-32c6-4352-859c-f75a4b22cc69",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ec2f5e-320a-445b-ae7a-0dfb8999b10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b17830-d557-4fbd-a4da-277df347948e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcb4e32-04f8-4b55-b631-ebc968c6af83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cbce2b-1256-45e5-9138-ff67b469d1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596fdf5e-e193-4bc1-9b11-d550cb02a647",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bb0a99-1623-4336-b2f2-6a495d801d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc2d59a-fa10-4afd-8f11-ae5b9f7800ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65897e44-5761-4d1f-800f-f8dbc5bb4bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7723e68e-a09d-46cb-8d0c-4fb7f809bcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c00efc-da1c-44cc-b18f-bb90e2d8bd75",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86692bc9-4723-417b-9d9a-df12b6b59a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37fb989-a748-4652-8ae2-13b84c2f2c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae55477-44cb-4e9d-a9d2-08f681d930fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c34ad7-9fa2-417c-9285-4b7e496fdcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c48bae8-4bad-4673-a9e8-c5d8da0c0fd7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9535873c-beb3-471e-9ec4-f016a019315b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9964e16-d9af-45a1-b980-3f465cf8aa11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f6d537-f1cd-4963-9b59-8a30d2336146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b0b3bc-8fb9-4c14-8a40-9722dfa7e6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298d855c-16f7-4a3c-a91d-0f3c2ce31886",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e4505b-b686-433d-aeaa-f693909739e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678700a8-2756-4d3b-8310-605ede9aac25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1e7f63-3a82-4f7d-a618-f469461d714d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6aba864-dfac-47bd-9ff5-a27de23baa9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045000f5-5f2e-441f-b48b-16adf838db59",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e2d59d-2de6-464d-8cfc-c7d4faca0ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04685b26-b0ad-462a-bda8-66371b47d208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06f491f-45fd-4c67-95ae-4389d58d5c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c790ea-0763-421a-9ade-14fbdbe9b310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27aa2e8f-88f1-4efd-b61e-48d801e6a476",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff85a9e0-d68d-4622-a639-10575d4a8197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c3ce75-dd0a-450d-a731-cee1f356cadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649e5ee8-45aa-4e9c-9422-954e16e48fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6664708-ec47-431c-8cca-77191a287c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d5d9bd-d893-4e04-abce-a38c08a0e92b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d964b67-fb0d-489e-8ae3-9c85428a06d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da77c79-bee4-4ed9-80f8-04164519252f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8016eb-ff6b-4477-b078-eb639c36c26b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84afe93-b4d2-4d7f-9c0b-8289b5f3db01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ccafdb-8d0f-4458-9f58-925bdcbe1b84",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3495b6-e707-4607-be2a-a1244a426240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50420aed-02b1-455c-8477-2d5a010d3b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41235653-d000-4f97-b507-57e1bd38a841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130a21fc-e12d-455c-9b76-7e38aa7178a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5875870-22bd-4080-92b8-cad52170d1b2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d25a47e-c560-4df1-8f73-c29039db7ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74261cfe-03eb-43bd-bc0f-6bfd459431df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99167dc1-5fe8-4268-98c9-14a762f2e397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32384dd-5ec7-43de-aaec-d43d47d7606d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d9783c-81c5-4bb8-b09b-f72c6b058b7e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219f4dce-fda2-489c-a329-fed02234a13d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ec9cfb2-b08e-47a3-83a6-8d041575734c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c118e7-3b6e-4eab-addb-0af2790808a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26803020-f02b-443a-8c50-1ff16b8e792a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914adbc6-8d8f-493f-82ae-a6954050673d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fbb97c-0d19-45c3-9e56-4e12db5f7bc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4360b3-95da-4757-99dd-dbbb234f892f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cf9de8-4d78-47f8-8f0a-83042f22eacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca276984-7df7-4d67-aba9-a64195f818ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba6dc32-6cbc-4b36-8e44-503045e5d8c1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c876b3-ee36-4807-8861-e80f450f05a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82397bfe-0bc4-41d1-a7f5-de809c50df87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83d7930-00cf-43e3-9599-fdc000f26c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293680cc-696e-424b-98bd-04ac73b184f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a19657-7e69-4c91-8329-04185628c931",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80ed0cd-c19b-4bfa-b2ca-e19581f69817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf22a2f-5963-4922-aaf8-3fcdd98af9af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc053b29-4d92-4f17-b4d2-f9486715b43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e81161f-5077-4388-a415-63cd756e2a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652c4c51-6b27-45aa-bf37-e4963054999d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88dc6cc-60a7-4370-b09d-b12f703e93d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd759b0-f60d-4dc0-806d-c1356ef4b8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07636e3a-f816-442e-abba-16ead5d0449a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51118c95-2af0-43ba-a7ff-37ad87ba43a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee539a25-c851-4119-a780-5e684dad55bb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108e0e90-ecf3-48d3-80b4-2fae3901493f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e5a9251-fadf-47d8-bad9-d7c619120139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bbcf97-9f32-43c1-89b8-b177ca0be1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9b01cf-a0a9-4f1e-a0e6-7d674ae7c7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e08ed9f-6551-4862-b111-a2de417e1e04",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73be85a2-6d8d-422f-940a-162d6edc4219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f57a6b-379d-4287-8be2-9a874f580849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3104342-5cff-45c1-9eec-7acc183730c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e8efd4-03ef-4116-84a0-f35387174f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257325ba-12ed-4804-8a62-273d141e8cde",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558784fb-63b3-4314-9f52-fdd96b3f9241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "256d0b93-b1f3-4f96-b786-a484fb728269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2950f1-31df-48e4-83c4-b70d987ce7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95eadd41-4839-4c14-807f-1f37d3e3c4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c5319e-12bd-4136-ad19-66e90646d10d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5baf305-5dbb-4587-b188-947d4237edf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cb3e977-be93-4f8b-9505-9dc5957f10ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecbbd7d-264e-467f-acf3-96eaf3f98557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e03241-337a-4417-a7e1-133bb33a8ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a496d8-c31f-40d4-bfec-48a85f93e753",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4145d049-1405-4e69-a6bb-0d6d74f5c2da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbbe0974-0c4a-442a-ab98-544bbdb1124d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ccdd14-4575-4941-bc1f-3b1ee91c607c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a95b6b-7ea3-4d2e-af78-44146272c096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b4cfdc-3a26-48c0-b637-d7fdd82a54b8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f8edc8-6e81-420a-86f4-9e50be0e3523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be93a121-9c33-413d-b7a5-586187307c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929d9ce4-8261-4bb8-bf21-de915084ee2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3206af2e-3ce9-4f80-939e-08278159456a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09daf97e-c44f-4208-ab8e-dad83f35e349",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c771b0cb-3558-45ae-b60b-83aa4c9b3326",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61503eed-c9b1-43a8-97e4-b64433eace31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ea858c-dac4-4c2c-b07a-948a11a579fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538cfb90-d3fb-4d3a-8468-a323d37e876a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa39b350-699d-4e3f-a6b6-4aef4cbb0c5b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db810f8-eca4-4b25-88b9-0232c658ecd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cda7b56-5861-4e6f-a811-ec7f17ae1666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6a8c88-305e-4dd2-be73-cb73606310ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b3d57f6-8bca-400c-b2db-66fea0b4bb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f70226-6ed4-4980-be77-e23570d3a226",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8747dd83-02e6-4952-b4b7-86de7c80b0cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a44870a9-944c-479e-b89e-22406ca67073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f5d088-ff10-4f7a-a95a-0639ff293cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f1de07-9cab-4590-8358-2b6a65b91aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ff54fa-88f8-48fd-a2d7-0aaba361226a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9148aceb-56c0-4a90-9560-f37b6d9c6035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fffc9d8-1206-435c-84cc-49b188cbc3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "596e170a-cf75-41b1-9ddb-5b6c0b3aa93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2cd21e1-30ac-41b0-924b-00ca92aaa514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b97c22-3b38-4579-89c4-3e351c171ee6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37acb43f-db9b-44b3-be9d-bdf4c7788dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2b01a6-4f85-412f-bb66-48e94c1e4c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "332ef072-65e9-40f2-bf59-0e6e4276a630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d9ea70-ce41-43f2-9b07-a0728fcb863b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4437cc-8b19-45f5-a61f-cd4e5c573d10",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a78cd0-e743-4efe-b47b-09a66675161b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f093ea1c-6475-4bba-b45b-4ec376778724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664b023a-1ee1-418f-93ad-5aa4082b4b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29478c8-6a3c-4ef0-b72c-4dcc270c5502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a496e04f-487a-4a99-a3b6-911dcf5bef33",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2f5dfc-1ed6-422d-95c4-c9ad671a9682",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b7a3a58-047e-48a6-bc4a-f4c271f589b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0998181f-47f8-40ec-990c-9382dcb3d6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fec885-0e01-42a9-8d9f-589348d00133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f54c5ee-ba06-4c04-80b8-3691954e3df6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edab7405-5626-4316-aaf0-248af199d4a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9bf0a97-fae0-4907-ba49-41a0652dbf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80364526-9ae5-4d67-aa81-5aeabc642f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010fdc53-e247-43de-81f4-de1cd2cc4eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295857f5-8e41-4f76-9f11-d3c38ccb7e0d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3cff84-5b53-4808-8d30-b7d9aaf30891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "179a3ef9-194b-4776-a96b-63c307227ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f74fbb5-7001-4d38-9026-c00a61bc28bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16170452-5ac2-4e14-8e43-bd0706be9317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34688e39-0782-480c-a49c-d3dd27ca1975",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dc1460-f6b5-42d4-af28-cb63895d0c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c808405-fb6d-4895-9e6a-ebc3dd76073e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957baf72-5467-4b0d-aaca-3950ec7f74cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afc51d8-9a21-478b-896f-db6aa2a2ef42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f24403-ff5e-49b6-b22c-362752576cbb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525af345-2714-4a8b-86fd-45866ef98319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d439439c-7b1b-4804-b5f1-d18944a32aeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f8267e-a09b-48fb-9d38-e5cb69c4d527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3041eb35-79f8-4476-9610-c3cea78c0900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041d1cc8-ad63-455c-ac2a-85c618bcc369",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e84381d-891d-4e2d-9c80-0257c742fc75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65880c47-99eb-47eb-86a9-824d7befd097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82c322e-4e4c-4cdc-9b1b-a0bec21285e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0f9c51-83ea-4234-928f-5cb9dc7ca384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5650d80-dbe0-4638-922f-23cb8e14a5e0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e46541-7c3d-4479-8e41-4d32161adb31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19b50c8b-dfc8-4084-8b84-1a12653b4c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c8702d-3295-4841-8ca1-6d343711dca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d27dd4-4b7e-4aff-ba9d-3621ddc86d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a003a49-544c-426b-bafb-a55b2d9d7819",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4a5c24-8b4d-492e-9f2b-77f7a8001e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f755e2df-2d7f-4441-9a0e-94d078233e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529b6138-e44f-43af-b60d-903c1b2256f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afae506a-969c-4b56-9c3b-2185eda6c578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "862acc66-2b30-47ee-b0dd-8a62dc1600aa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374fa7dd-5c30-43af-83dc-cb838cc4600c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b31477b-dd44-4a58-a2d2-9996d370fc6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ee7c09-c6ef-444c-a28e-aa04b46dc844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867523d5-83f9-4ba1-bce5-63ca50f47d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd93172-13f5-4b51-b0eb-1087628331bf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b94e28-2f8f-41f2-88cc-1c0406e4481a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5817d5b9-3938-490a-bd0a-8c50b2971d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018d7c26-4e36-4784-93b9-a71ba104f7fe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5102ddde-b39e-42d2-bcbc-7eaca571f8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02002320-eaf3-47ac-8484-583b57bbd86b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b6df27-f6f6-42ae-936c-8eef1aa0aa5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cbeff58-9163-4e47-864a-975de2218b2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19382d19-236b-42f8-9dec-a5e30077a070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d558423-7ec4-49ca-8100-ac235e5a3439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56efb65b-264d-4dcb-aafd-23bac35de7b8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8f7925-ef93-4b5e-98f3-874c0f18ad03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d26d85d-36a1-4003-8bc7-6431e084f650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30795447-9884-4294-a402-76c130af9f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b687ee-70ff-4288-856b-05319afd8314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2502087-811e-4cad-80a3-26ab72226418",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fa2b7f-e39d-404b-99bd-1f3594c1d4e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6048994e-cab7-40de-8ac4-4b612e08d095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05541aa-831a-4bcb-a8ff-b89854705b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c051a1f-5df8-4832-bd70-8ddf466073ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcfdcf9-9842-49ff-a319-1c656a38d9a2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e190f17b-d8e0-473d-9a9d-19787672c076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2bc6f48-3aa8-4fbb-992c-1c286895dedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f71b127-0203-4d72-bbec-693b0643389f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0067d7aa-7390-4c46-b8dd-debfd4b3d2d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a7d634-c24b-4eb7-aa3c-d43ce407aa8a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55d62b6-be8a-4d16-8327-c35be5a94130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52abbe62-0942-4e91-8886-90c1406bd3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f24c4b2-00d9-42e7-ac00-5d262b819453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925711f6-7653-4282-8d8b-b42bbe0505d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a347152-be9a-4f99-a3b7-22c9db563c4a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977fd4ea-aa33-43ef-83dd-290a22f9292b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa4fc06b-5a4d-4b56-9885-7f0ff4b1c361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf93032-a05d-424e-a65d-a8e62bce9558",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c081b31-2bb7-411a-9e43-3da76c71afde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90537ea8-4bc9-48a0-b62d-808b7801e6e6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515633d8-c306-4db3-ad66-503e2787a2b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaa44904-eca2-4f56-b35b-685fa6fed56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21f0274-2ac2-4133-a2f8-40c39c1a553a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c9b3eb-7b3d-41a6-8744-237124cf0a02"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd1166e2-f14a-4db6-a82c-a0db164a65ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b6a2a05-dbad-457a-9965-3f1ff07bbc92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7f8538e-0e96-44d2-9824-29f08aaad956",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b3e0119-e15f-4361-b845-2b38004c7a58"
                    }
                  }
                ]
              },
              {
                "id": "d7059caf-0523-4206-9671-14f18b878583",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "322179ba-2fdc-4c55-a537-5c4888466939",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db851ac0-5a00-4e1e-953b-f87685518f34",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c182f3d0-530c-42b4-be20-3cd2bf21f8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e4ef02-ef71-4585-a00c-24855795bc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "787b5413-990f-4f38-a530-9a6530660c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37da8109-4e9b-4e71-8050-def3cb267893",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47db4cf6-b9dd-4604-aaa7-4b90d79e6e4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8b9ae337-b89b-46ea-be81-9a0795e904a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d196ef91-1b4c-4482-a3c9-1c71ab3ae423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2bf64a60-c012-495b-87ba-9958667ade72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "193beaec-f3a7-4e73-99a3-10af24f6de15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9088d676-b8e3-409b-87cd-fd3f2b88144d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b534ec3-df06-4f2a-bd3c-08f6b58bef17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e424d7a4-e7f6-49cd-87c6-94a741068b85"
                    }
                  }
                ]
              },
              {
                "id": "fdd6e54a-db5b-4ca6-917f-69792a8cdd4c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5f7748f7-3c52-4704-9cb9-8257aa823b1c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de2f87e-887a-49b8-99e5-85d8f6e6578e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a98209e1-08c8-427c-9e2b-2ac6bb0ef1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91da2e58-4082-4146-938b-d7c1e4e49937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1570f5f5-60d1-4d77-9668-1fac2b81399d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fca781c6-4e94-4ede-80b4-7e1aaaeee505",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2bbeca1a-e3b2-4d78-af7d-ae0757bc9f23",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afa76f0b-fbf0-4a02-89ec-41484241d1a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0e4f5d7a-1539-4e8a-bd48-7683d1b5b35c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16acf84f-35ce-4a1b-819f-8f5b74fbc56e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e85764ae-751a-468e-b48d-984abd580db5"
                    }
                  }
                ]
              },
              {
                "id": "afe46606-04cd-49ed-b4d0-2756612aeba6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b56554fb-e155-40ef-b4f4-0d1859378566",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5b805f3c-8aed-40b2-8282-b8011b222371"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38a8c18f-3918-4017-9ff4-eab2ff007eb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e54412c-21ba-4d4d-8052-1d18c8d7d97b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8eb4941a-e534-4916-a00d-ffaf2523fae8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5d273692-d353-4f6d-9104-20a8a13c57b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fe37cd3-19b5-43ac-af17-7a20db15c7b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3e693fc-b3f6-4101-9bc6-901373838758"
            }
          }
        ]
      },
      {
        "id": "9924bbd9-69d5-4cb0-af66-8ae6860158bf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7e83411c-0b23-401d-ba6b-904230f66aa8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1d51cbd-8431-4616-9392-162d13822e41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44a98e32-95c6-48d3-8740-991af86224ac",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65e6420-17a8-4b27-b857-e0a020dd0e6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7abc803b-6302-408f-b370-8ea12bb945f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca7d2ba-0fb9-44d5-b96e-dd7ba05d6994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98c9de51-8e7c-4c5d-a82f-48911a08e431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4ff458-13a0-4667-8d7d-1f3d1c833663",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157b8a52-9ff7-4485-8b13-77a02c101b24",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6c145b2a-348c-4df4-88b8-7e515a14bac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2dc7ff-99ff-4bb5-82ad-bc9149563bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcb06f48-5624-4b3d-8c87-8c6551b77e91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e01e5739-bb5a-4f79-b0ff-8794b741c666",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7000f444-7ac3-44b7-87ad-894343c2cd25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d2bae35-c955-4e8c-9b39-445fa78195d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2633f8d-f471-43e5-9b60-e436052381ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7944c921-16c2-4eeb-8e2e-33b701693f21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "73431573-801d-4928-9b88-f3de0ef3edb9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d64913c5-6948-46dc-850a-6413f87a3e1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fbe5a47d-5c69-4602-be3f-d8c6af47f201"
            }
          }
        ]
      },
      {
        "id": "c32c992a-c7c7-41a8-926f-458239603327",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4a55c661-e99b-4c8c-8ae9-028ee1e525a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1fe5baa2-11d7-41e9-be4f-aabba08ef69f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df2579da-d550-4ad9-bab7-2bb7bc968f2a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04facc0d-2fb8-42a5-8a7f-5ac0eec4b196",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e89ad61-b475-4988-8174-57668a2c315d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bd2821-cbe3-4960-a627-dcbe8c9dfd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67eac238-b815-4c39-8792-9999939609ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357bb21e-34f3-44d2-b11e-efae4fd5734b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8300de4b-0b73-453a-92a5-f3fc1b594bcd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5772da-4c3a-448f-bf51-9ac55c773a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b614acca-b3b6-4197-b6cc-ce2a615ab665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a20d2a43-b896-4119-a353-0976634405ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9aaf887-4a26-4754-b542-9e565a5d6193",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f31fa628-6502-4d94-abba-9f852d1b6c8b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b45496c9-6ca6-4f31-b660-0065892634bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52e000e8-5d1b-4cf4-8d23-312c1e39d3cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26306714-3abd-4d0c-b48e-c50018b10031",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9a6eacd-18a0-4c9e-beb3-ced64e94b820"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a410315-5e95-45a5-8e33-532c0b046988",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4263ff16-9545-4d2a-801e-faab535d17a1"
            }
          }
        ]
      },
      {
        "id": "4cbbc4b4-c68d-4035-9869-90992a7c699c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5b59ff3b-3b75-403e-8020-30ee9dfb321c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49ee996e-a7c3-46d7-b1e4-3bbe30babdff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d46826fb-d40c-4778-9c15-4fc1875bae8b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b52ab5-14e0-4788-aa7f-b52c7d96e6bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e9f2d5b-3937-43c7-b81a-a9cb6834d10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0117191d-c090-4e74-b006-417922c77876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d20d0a0-4c55-4017-8941-9b9b48402dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a175374-aa97-4287-9b8d-a21c547a606e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5d2621-3d6d-4031-ac00-d71916f8269d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "50e8511d-49c1-4c6a-8e46-57493f8f78fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2438e872-96fd-4ce1-8c73-ba93380fab61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0aaed627-3a91-431c-8793-9ccf2d9734ca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e818bbe-a99a-4c1c-9828-11647248c8fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7599a53b-42db-46de-b4c0-2cb48f9af23d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0ea714f-b034-4322-9269-b55ef76f58a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd6d9ea5-93a4-4734-a612-3e6aed805949"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af7dbea4-2d84-481a-8392-d0795701652b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bf35dc04-66a7-4d6c-ba34-f0abdeecc7fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef1599ac-b9f7-4c50-a3e0-66b27b290791",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0511b0c-ff1a-4bca-bc6c-a8147f082215"
            }
          }
        ]
      },
      {
        "id": "e23cca0a-4a05-4912-b1c8-9ef1077444ca",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3432e37a-0189-4239-938f-0a6d5d5b597c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "380b1127-0f91-4062-a7d0-c8249fbf4c06",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7c412681-d4a8-4192-a57d-9e6ab7fd7119",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c341f42a-f77b-4746-93a5-0d3399aecd0c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc5e5121-d633-4d15-b652-0537e74b20a7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 757.3153846153846,
      "responseMin": 11,
      "responseMax": 10160,
      "responseSd": 1081.760012021829,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1682469420017,
      "completed": 1682469627726
    },
    "executions": [
      {
        "id": "c6c63f2f-336c-45d2-85ed-7190a11a6b36",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "20154621-d08a-45fb-a79d-f348b58a2fa4",
          "httpRequestId": "60ba3d22-6e23-400c-bc52-97a495d4b17e"
        },
        "item": {
          "id": "c6c63f2f-336c-45d2-85ed-7190a11a6b36",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c08e6647-250c-4970-a555-5af1eaa115d8",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "414717a2-38e6-4cac-8ca9-7374cf9d8f6e",
        "cursor": {
          "ref": "80a213ca-c6d2-4297-a3fa-012733f2bc33",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bff81119-5acc-4c05-b458-b4bf86030b13"
        },
        "item": {
          "id": "414717a2-38e6-4cac-8ca9-7374cf9d8f6e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6e264628-151e-40d5-99c7-b748b2c07fd0",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "1984e706-14f7-427a-8583-4ec1694d3c94",
        "cursor": {
          "ref": "ca30a3d3-d7bc-4021-a8db-a76f4bfd8860",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "09c90cf3-31b2-47f5-9111-67a029d97145"
        },
        "item": {
          "id": "1984e706-14f7-427a-8583-4ec1694d3c94",
          "name": "did_json"
        },
        "response": {
          "id": "b165418c-55b1-4a9f-b1fd-d266b31781bc",
          "status": "OK",
          "code": 200,
          "responseTime": 970,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d3c159-fa1e-4fb1-bf4a-0b81002778c4",
        "cursor": {
          "ref": "c44ecb5e-1b25-420e-9279-90ac38b0608e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10e83606-6688-4bb0-acc3-c21304dddeb9"
        },
        "item": {
          "id": "12d3c159-fa1e-4fb1-bf4a-0b81002778c4",
          "name": "did:invalid"
        },
        "response": {
          "id": "e376e74b-d755-4394-a69e-d71e4bdfd09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1520,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d3c159-fa1e-4fb1-bf4a-0b81002778c4",
        "cursor": {
          "ref": "c44ecb5e-1b25-420e-9279-90ac38b0608e",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "10e83606-6688-4bb0-acc3-c21304dddeb9"
        },
        "item": {
          "id": "12d3c159-fa1e-4fb1-bf4a-0b81002778c4",
          "name": "did:invalid"
        },
        "response": {
          "id": "e376e74b-d755-4394-a69e-d71e4bdfd09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1520,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab273f1-c32a-46b2-98b1-8b056026832c",
        "cursor": {
          "ref": "fddd738c-87a7-4884-ac04-e1890066432b",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ed8fd6b2-a121-4d12-bfc6-2de4e9a4df91"
        },
        "item": {
          "id": "5ab273f1-c32a-46b2-98b1-8b056026832c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "659ede19-0340-49db-bb62-855ad86cd683",
          "status": "Not Found",
          "code": 404,
          "responseTime": 637,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a6c75c-5fed-4dbc-ae4a-e86d9088a47a",
        "cursor": {
          "ref": "03d7872f-ab70-4812-803e-270923d35251",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "64dedb15-dbe0-4522-9fb0-0d0a2f486679"
        },
        "item": {
          "id": "a4a6c75c-5fed-4dbc-ae4a-e86d9088a47a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ceaaf55e-ee4a-48e9-9148-b8e2f0ce1f9a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 676,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b9cf86-e302-4610-99b2-882c74224aad",
        "cursor": {
          "ref": "5fb3e4e3-4696-46d4-a368-6bef4f42a39d",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "59cf7d79-ca28-478b-ab8a-9f2ba1eaeed9"
        },
        "item": {
          "id": "36b9cf86-e302-4610-99b2-882c74224aad",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1b795fc8-971b-448a-a207-4976c3205cf7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f58ccaf-5af9-472c-b0d1-1bdb2d5e6329",
        "cursor": {
          "ref": "51fd38af-b1aa-47fd-9cac-8d3ad2c96e83",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "94d28d29-0d02-4e4a-aae2-7e84b256766d"
        },
        "item": {
          "id": "2f58ccaf-5af9-472c-b0d1-1bdb2d5e6329",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b9205b0e-393c-49a4-a123-0fd248fffffc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1603,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f58ccaf-5af9-472c-b0d1-1bdb2d5e6329",
        "cursor": {
          "ref": "51fd38af-b1aa-47fd-9cac-8d3ad2c96e83",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "94d28d29-0d02-4e4a-aae2-7e84b256766d"
        },
        "item": {
          "id": "2f58ccaf-5af9-472c-b0d1-1bdb2d5e6329",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b9205b0e-393c-49a4-a123-0fd248fffffc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1603,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221d5d8d-1cc4-45d8-a00e-34ee7180532e",
        "cursor": {
          "ref": "ceb7b120-9ed5-461a-8b83-b5956e1aabac",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ec120eb5-faeb-4a08-aab7-a7655be38a65"
        },
        "item": {
          "id": "221d5d8d-1cc4-45d8-a00e-34ee7180532e",
          "name": "identifiers"
        },
        "response": {
          "id": "b11acb1a-8d4f-4078-95b7-79b83ccf8331",
          "status": "OK",
          "code": 200,
          "responseTime": 3578,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a905c2c9-be56-49ab-b8f6-970202ab2c13",
        "cursor": {
          "ref": "b01b85c8-caa0-460c-9359-bfafd9b1b848",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4475b715-1c8f-42e6-97ef-29c338d07264"
        },
        "item": {
          "id": "a905c2c9-be56-49ab-b8f6-970202ab2c13",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b0900490-250e-440b-9085-d9f62aa7f5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a905c2c9-be56-49ab-b8f6-970202ab2c13",
        "cursor": {
          "ref": "b01b85c8-caa0-460c-9359-bfafd9b1b848",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4475b715-1c8f-42e6-97ef-29c338d07264"
        },
        "item": {
          "id": "a905c2c9-be56-49ab-b8f6-970202ab2c13",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b0900490-250e-440b-9085-d9f62aa7f5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e698e6f-1d07-4738-87cb-2dd9d352e14f",
        "cursor": {
          "ref": "bf20048a-c56d-4a65-a9a0-817429e41c2a",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7310453d-f0ef-43c0-8759-a96252b86f99"
        },
        "item": {
          "id": "1e698e6f-1d07-4738-87cb-2dd9d352e14f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2c2be39b-c12a-4e50-9e5a-7e90e980abbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec578466-2681-4ca9-85be-c5d04d722766",
        "cursor": {
          "ref": "39107503-48dd-4c7d-bfb1-a4aa06245f29",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4dad44a4-0efe-41cc-88bf-7e9a4d2761d2"
        },
        "item": {
          "id": "ec578466-2681-4ca9-85be-c5d04d722766",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6da1320e-37de-4e3f-8f0c-8edacca8dc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f4e29e-0a1a-407c-bea6-93c4ced11353",
        "cursor": {
          "ref": "9fd12a51-346a-4406-91b6-e1b87cb8a4d9",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1845b33e-21df-4e93-a3cc-bb7359248233"
        },
        "item": {
          "id": "b0f4e29e-0a1a-407c-bea6-93c4ced11353",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8b04d3fd-0e58-451e-a32d-81c72323a9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cef3664-99a7-49e7-9ec6-4a7be78e269f",
        "cursor": {
          "ref": "2a36b9a6-3b93-4b42-9af6-30f8734b2b02",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c23fc384-dba4-47cf-ad69-3245c4870ace"
        },
        "item": {
          "id": "8cef3664-99a7-49e7-9ec6-4a7be78e269f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "584b4469-f248-41eb-9732-227494b4af9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecd62c2-c80a-40b6-a027-f1f88b2f30e7",
        "cursor": {
          "ref": "4df8cb52-9bb5-4830-a56d-547a5c3db34a",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fc096391-cd9c-4f19-bf54-2dfe6ab56bbe"
        },
        "item": {
          "id": "eecd62c2-c80a-40b6-a027-f1f88b2f30e7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ee4b3888-880b-4c34-9802-b7be48603ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72aa2f5f-5932-47eb-b21e-f2a642ae5f14",
        "cursor": {
          "ref": "a6ec7745-4476-4b5e-8ca7-80bd49cf7f5f",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e8d78c49-2805-45fe-992c-b803265ebeba"
        },
        "item": {
          "id": "72aa2f5f-5932-47eb-b21e-f2a642ae5f14",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "badaf238-90f9-4609-be13-39889bfa61c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece8a793-efb5-4441-a579-896ec010da1a",
        "cursor": {
          "ref": "52726ddb-8ade-42b6-b999-316e0f0a32d5",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f87e7f09-fc35-4445-beab-57208b61e35c"
        },
        "item": {
          "id": "ece8a793-efb5-4441-a579-896ec010da1a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "619a1d3f-8ca1-4185-800c-e6e3d85b6504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7f6df2-9c3d-44b9-9c36-c675afcb8e2e",
        "cursor": {
          "ref": "21dfd209-ae6e-42ba-a311-0b3ef8db59c6",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "17d78177-9ffe-4ad4-81f5-149c5e20ac09"
        },
        "item": {
          "id": "ae7f6df2-9c3d-44b9-9c36-c675afcb8e2e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bc9c7c4c-9555-4c1d-bf95-a2cb558aeae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbf73dd-cf7b-4629-8afe-fd422542e284",
        "cursor": {
          "ref": "4ca6e050-0519-4566-9e88-aa88f331e4cf",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d27afb9a-827d-42c2-96ee-41d57aedfd75"
        },
        "item": {
          "id": "8fbf73dd-cf7b-4629-8afe-fd422542e284",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "64f10362-f352-4dfb-9967-a5fe0382e41a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ddb78d-372c-46cd-8c8a-863c32b3ca6b",
        "cursor": {
          "ref": "325081c6-4e70-425a-bdfd-fc36aae72037",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2b49539d-18c8-46a4-a305-3e39b26d979b"
        },
        "item": {
          "id": "f1ddb78d-372c-46cd-8c8a-863c32b3ca6b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fcf68692-deda-4db9-82d2-0b67f5f25048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5eba6a-1b80-4345-9559-84a910c51184",
        "cursor": {
          "ref": "46fb2b95-d238-4a51-8ec3-2247ba319f45",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "380c23a6-4337-45a9-b285-77f0e72cfd51"
        },
        "item": {
          "id": "ac5eba6a-1b80-4345-9559-84a910c51184",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "afec2051-e4a7-485d-aefd-627addaced19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dc5e54-d3cf-41fd-b84c-7d401da14e5e",
        "cursor": {
          "ref": "7434616f-bd8c-4e4d-aaa8-1e232f2f0685",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "11811824-6302-4f55-a7bc-4a53f691a042"
        },
        "item": {
          "id": "f8dc5e54-d3cf-41fd-b84c-7d401da14e5e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a2d55142-344c-43e6-8556-7c9a1107b895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4831a269-81a0-4872-80ae-a56ae873938c",
        "cursor": {
          "ref": "06866a16-49bb-41e0-8660-1bcf52e50fcc",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f64c36a1-ba68-450f-8326-4e52409012bb"
        },
        "item": {
          "id": "4831a269-81a0-4872-80ae-a56ae873938c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b29bdec1-eaad-4839-b96d-08a5b4c0e460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8ee11e-6511-42c6-ba95-2475cc816759",
        "cursor": {
          "ref": "3a3ea818-0b67-4e62-b31e-5dde9766463c",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "103bc106-02ca-45e7-b47c-67bcff761986"
        },
        "item": {
          "id": "4c8ee11e-6511-42c6-ba95-2475cc816759",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8298cb14-3710-4231-838b-841fa3053e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee6226c-2ac7-4b0d-8766-9cd63ab3f3d5",
        "cursor": {
          "ref": "265eb22c-750c-4353-b2af-aeb69eb543da",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e78c225d-6923-4183-8891-ae587b09dca1"
        },
        "item": {
          "id": "9ee6226c-2ac7-4b0d-8766-9cd63ab3f3d5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a305d477-a37b-4437-99b2-7dd3bcde04a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbcc526-14d8-4315-906d-7522bb5a076c",
        "cursor": {
          "ref": "e545d30c-0888-4f39-98ee-987759afc4b7",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9abf0aea-c55c-412b-bbe9-4a5992c14563"
        },
        "item": {
          "id": "edbcc526-14d8-4315-906d-7522bb5a076c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8246d5f8-fd51-431e-ade4-37115af49392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716946e8-8902-4bb0-866f-c07a75835fca",
        "cursor": {
          "ref": "ce1d7acd-9b85-4b35-b986-f204ea94300b",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "cc9e3e80-1501-473e-ade1-39866de8b16f"
        },
        "item": {
          "id": "716946e8-8902-4bb0-866f-c07a75835fca",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fec57e27-f32e-4a4a-8933-f5265c25a6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291b638d-d83a-4c89-8753-a20af9612399",
        "cursor": {
          "ref": "b2accb85-25e4-48c1-8855-b19be52435c9",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d582d3af-0ca8-4e40-8160-d6a7d7eaa118"
        },
        "item": {
          "id": "291b638d-d83a-4c89-8753-a20af9612399",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9cb6471a-384d-4499-8ab3-04a18ff27335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5e0331-24fd-453b-90ee-dde8c23621fa",
        "cursor": {
          "ref": "1658de12-f329-43c8-8b08-68f3b32246dc",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8eecdd12-2d57-408c-aa8e-6d54c00406d3"
        },
        "item": {
          "id": "6a5e0331-24fd-453b-90ee-dde8c23621fa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5b2e1134-69c7-4c39-8ba6-0d4cdcdd5613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bfb1c6-2b39-4e48-ba15-051c2d101260",
        "cursor": {
          "ref": "fdf05a09-3edd-4185-bcda-fe00d2cb4977",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ab8aa72e-4966-416a-be17-00884cdb71bb"
        },
        "item": {
          "id": "d9bfb1c6-2b39-4e48-ba15-051c2d101260",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ce1c370d-e805-4858-990e-60b237823c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813b9c4a-9774-40f4-8f0e-c917acd6a782",
        "cursor": {
          "ref": "74a4e89b-d7f7-4189-b157-d3f03a6360c0",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d2ac3a09-9369-4b63-b6cc-60e5f2355ee8"
        },
        "item": {
          "id": "813b9c4a-9774-40f4-8f0e-c917acd6a782",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "edb21b72-c322-4bdf-95c3-d0d242a9bc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604c2762-da7d-4e14-846d-cd360a1f0378",
        "cursor": {
          "ref": "cdc99c44-83ab-4402-90d0-11db20a26fc1",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "77c87386-f177-4009-bd0f-c21ebfab3126"
        },
        "item": {
          "id": "604c2762-da7d-4e14-846d-cd360a1f0378",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0731edba-8b8b-40de-be4e-85f54c5821c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 865,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2010991-2027-4eb0-84d4-cba70e0c27d7",
        "cursor": {
          "ref": "62170b2a-b505-406b-b27a-2f7991efd5f5",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c5076dd9-99a8-4e83-958d-c0f08d26b313"
        },
        "item": {
          "id": "d2010991-2027-4eb0-84d4-cba70e0c27d7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "79c72a2f-7062-4519-a8d9-f322c58f10c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30064c57-0ea8-468a-bf0c-b503c37919ad",
        "cursor": {
          "ref": "46b26df5-eca3-4f3a-b9dd-5ebd479f2250",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "13e033d6-ca4a-4b85-9c08-5baf3ce3a7a1"
        },
        "item": {
          "id": "30064c57-0ea8-468a-bf0c-b503c37919ad",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b11130a6-c595-4861-9ce1-79c4fe8581a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3089b8da-22d5-4cb6-bbfe-b2e88858f581",
        "cursor": {
          "ref": "40817ff4-714f-43ac-ab99-1100fb6c682b",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "76398ec6-004e-4721-8d05-7cc3f8733e93"
        },
        "item": {
          "id": "3089b8da-22d5-4cb6-bbfe-b2e88858f581",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8af19dca-e554-47aa-98e6-f955d3d0da15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023df317-ae46-4736-ae4b-1be1bd9cb6ac",
        "cursor": {
          "ref": "3ed1b9e3-7715-49a6-9bcb-18ce368c4b53",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b9170c2e-a9ed-4c22-adbf-a04aef140a99"
        },
        "item": {
          "id": "023df317-ae46-4736-ae4b-1be1bd9cb6ac",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "af4659ce-ac7f-47fc-8834-00b8b0285416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f073e48-2b10-4217-a138-49cc1ff04ce2",
        "cursor": {
          "ref": "2d4c99e8-fdc4-4bf4-9eb1-3813a29d513a",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6ca03de0-0e06-4623-9b6f-1bb22f836f08"
        },
        "item": {
          "id": "0f073e48-2b10-4217-a138-49cc1ff04ce2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c0c3d6e3-b6c5-499e-9c9c-843ba9e9e148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf2620d-4c31-431c-9648-b78ac1ddbc50",
        "cursor": {
          "ref": "13c026c3-8276-4d43-9924-42b42f4bcb99",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2a67f615-9c0b-4464-8267-73811853442a"
        },
        "item": {
          "id": "fbf2620d-4c31-431c-9648-b78ac1ddbc50",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2896c78a-ce0c-4a34-8b45-9e1c5605e3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4834da14-075e-459c-ba35-b00231402666",
        "cursor": {
          "ref": "142b47d9-4dcb-4b48-bc58-1f287ec8edaa",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2527750a-5e6b-4e8e-9277-ad78bbea4644"
        },
        "item": {
          "id": "4834da14-075e-459c-ba35-b00231402666",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "eb64c8d6-409b-4b15-a629-44852b056332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a89de2-da82-4b8f-ad0c-bc997a53d207",
        "cursor": {
          "ref": "f60f28ff-6835-4669-bdca-88ae3f40def6",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b4ebf11e-ae04-49e3-b28c-c617946436e5"
        },
        "item": {
          "id": "24a89de2-da82-4b8f-ad0c-bc997a53d207",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "23873a3e-836e-481b-b46e-2b82dd19b9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301ee991-74fe-4505-8971-3f6bdc197ffa",
        "cursor": {
          "ref": "6970dff3-032a-425e-8caa-bd944f5e640a",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9d3a5ebf-9b35-4438-887b-c4a6ed489311"
        },
        "item": {
          "id": "301ee991-74fe-4505-8971-3f6bdc197ffa",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0b4e7109-4ed1-4556-917d-463fcb27baae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bd929b-9302-49ca-a596-9ccf141efdd7",
        "cursor": {
          "ref": "c7719775-8010-4a41-8c0b-a3aca7ff8dbb",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "543b732e-e0cf-40a0-9e08-91f552725ff9"
        },
        "item": {
          "id": "f4bd929b-9302-49ca-a596-9ccf141efdd7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1616b629-5266-42a0-bb96-a57e61a1fa38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05fadcd-f8c3-46b7-8959-357609729dc0",
        "cursor": {
          "ref": "7e94c4a1-70f5-4339-8d45-3693a954c318",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "15aee507-f5f0-435f-94f6-d9c0c5aa8973"
        },
        "item": {
          "id": "c05fadcd-f8c3-46b7-8959-357609729dc0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b70a22a9-d7b8-4184-b5ee-a387f46204f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c7560a-54f4-49eb-b1af-f8b745b28e48",
        "cursor": {
          "ref": "c5defc61-86fc-4639-a33a-9c5517c3e13d",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2263b442-0493-47f8-bdee-00e576ed272e"
        },
        "item": {
          "id": "00c7560a-54f4-49eb-b1af-f8b745b28e48",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4757f889-e511-43ea-a495-63ae59bd1411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac81565b-1640-4d00-ae5f-0c0011a454b1",
        "cursor": {
          "ref": "8b194aa3-68e7-45b5-a76e-f58ad01fdb5e",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "064e2188-06b1-452a-8033-76b46012826a"
        },
        "item": {
          "id": "ac81565b-1640-4d00-ae5f-0c0011a454b1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "512ee7a8-c577-46c0-bfc8-d2c1aac033cb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 699,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0aa165-7bda-47b7-b7ea-31d37cb79121",
        "cursor": {
          "ref": "0e014a6b-c52d-45c1-b8a5-310799944c22",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "52185540-bd62-4128-bb12-a375b48a6d2e"
        },
        "item": {
          "id": "6d0aa165-7bda-47b7-b7ea-31d37cb79121",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "12fee187-3090-489d-b8a1-ca715f9735e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa1d50f-5ffe-4679-ac28-1a8ca7e5621d",
        "cursor": {
          "ref": "4419fc78-a3f0-49f2-a8c7-16b6244a2b99",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f0889262-70f1-47e6-81a5-2053a629cbf5"
        },
        "item": {
          "id": "5aa1d50f-5ffe-4679-ac28-1a8ca7e5621d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "08cafe43-8814-43aa-8323-da2fe6daa0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354fb396-c5de-4389-b4d4-8186328fb1d5",
        "cursor": {
          "ref": "4c5f6249-a8c7-471c-89d1-3a4039853b76",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c0b75f3c-5c06-414d-8b4f-f46f4430d02b"
        },
        "item": {
          "id": "354fb396-c5de-4389-b4d4-8186328fb1d5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "037f2664-3281-496c-b3c5-82e095eadbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d1defd-675d-46f6-aedf-2c2d20b182cd",
        "cursor": {
          "ref": "91437846-3e01-4e1d-9b7a-c1c9c91312eb",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d56855f3-e45b-4042-8a26-cada12b52e53"
        },
        "item": {
          "id": "42d1defd-675d-46f6-aedf-2c2d20b182cd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bd3a4658-527f-4f9f-9999-9aebdd6dccdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff5d736-cd24-484f-aab4-706a5511f69b",
        "cursor": {
          "ref": "aa34ccd1-48a0-4e67-83e4-fa9c9836fd97",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a791eed8-5321-4ba9-b472-d40d1050927e"
        },
        "item": {
          "id": "5ff5d736-cd24-484f-aab4-706a5511f69b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "24aee03f-9e1a-4317-9289-8b58b35cede7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f906f60-1f10-499a-8118-420ecfbcefbf",
        "cursor": {
          "ref": "19c13c76-0171-4aaa-b4f0-1a50c26e6b0f",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "67b4ca14-97f0-49e5-8416-cca15a6fafec"
        },
        "item": {
          "id": "1f906f60-1f10-499a-8118-420ecfbcefbf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f1aa8296-5b3b-4885-923a-04d8c030e1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8e1d0f-37e7-496f-b3c1-3bd18040a966",
        "cursor": {
          "ref": "88eb946e-a17e-4a1e-a868-650f029f28a9",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0284db42-e06b-468e-b16a-6e659228ad1f"
        },
        "item": {
          "id": "cf8e1d0f-37e7-496f-b3c1-3bd18040a966",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6c967db8-a80a-4299-b185-67af8d47bdb9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 656,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eac8011-4fcc-4654-b472-0cb3590bf4bf",
        "cursor": {
          "ref": "766c0e2b-997f-49e1-a162-e323530373eb",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b1d8ebc9-7b21-452f-8c5d-ebf2ec7bfc79"
        },
        "item": {
          "id": "0eac8011-4fcc-4654-b472-0cb3590bf4bf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "587b8aba-9dcf-4b21-b0eb-201138c58157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30544b39-0bba-454c-80e1-f52310439ad9",
        "cursor": {
          "ref": "e382886d-bd4e-4f16-ba49-d09c79eb60eb",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "50a2c6af-5ac2-4ca2-b1f0-0e9fe1d7f890"
        },
        "item": {
          "id": "30544b39-0bba-454c-80e1-f52310439ad9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b1f60e14-52ce-4925-863d-4f84b99ab344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5803c689-7ae5-4ba9-8fa6-079f26c8a327",
        "cursor": {
          "ref": "1dbcdf62-846a-4e55-a240-2893363156ff",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5a1662bf-5d6d-4e2f-9307-e017be544184"
        },
        "item": {
          "id": "5803c689-7ae5-4ba9-8fa6-079f26c8a327",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "97f3e482-49a8-498c-8ac9-4c16afcb094e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7602bba4-b1de-4b00-9208-abae9099817b",
        "cursor": {
          "ref": "ee28c7b4-759a-4a5f-9bd8-3b3a07cbdf0b",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6c928b27-9eca-40a5-8e60-c15a1ba38e02"
        },
        "item": {
          "id": "7602bba4-b1de-4b00-9208-abae9099817b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "398a7904-9ebd-4029-b2b3-c2f75c4902d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5023d4cf-0168-44d8-bad0-5075fe380c7d",
        "cursor": {
          "ref": "f01181d5-3a69-415b-a1c3-9e27b7b61b7b",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "188f630a-fbfa-4b9e-8ff9-7c22297377af"
        },
        "item": {
          "id": "5023d4cf-0168-44d8-bad0-5075fe380c7d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "184fcdf5-5bb5-452b-9387-cb0dfd63f130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e420a2-86e3-45b0-a194-33ccc96c6531",
        "cursor": {
          "ref": "ba164e5b-164f-4b97-9d5b-4553ffad32f5",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c3638bce-27fb-409c-9602-d06ec8ade2be"
        },
        "item": {
          "id": "35e420a2-86e3-45b0-a194-33ccc96c6531",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d167006f-0d2d-4886-8c5f-03cabad1f280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a3911f-e1c2-4813-82a3-b59d0c0440f3",
        "cursor": {
          "ref": "de2ce98c-379c-4edb-912e-8b5bf180de07",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "de9426d1-f4d1-4a5d-9170-109e80af97d5"
        },
        "item": {
          "id": "65a3911f-e1c2-4813-82a3-b59d0c0440f3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "33842f01-1282-42f3-bb8d-9a213e4bac89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e364e79d-6ca8-410a-8c88-669cd23a2087",
        "cursor": {
          "ref": "cb4e4858-1dc2-415a-8b74-c15c41de4016",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "77cb5eef-7511-4db4-965a-0bffb8aaf6a3"
        },
        "item": {
          "id": "e364e79d-6ca8-410a-8c88-669cd23a2087",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "57e4c786-e9b1-4550-a982-c8de821a66c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b030966f-6624-437c-8204-f775d812d3c8",
        "cursor": {
          "ref": "8f7885d5-a11a-4770-baf7-51bd66e06d29",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2da4c97d-c283-429c-83d3-dfdd5ad05612"
        },
        "item": {
          "id": "b030966f-6624-437c-8204-f775d812d3c8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "17d241b4-d718-4339-9326-59f01cf7cf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add651ca-4695-4b7b-97ca-3fef22b10443",
        "cursor": {
          "ref": "3bb3283c-4458-4844-8103-e429ed108801",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f8504941-3de4-41e9-b8f9-cbca1ddeaf97"
        },
        "item": {
          "id": "add651ca-4695-4b7b-97ca-3fef22b10443",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e6b638e5-2931-4894-925b-b2dd34fd4260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04242e9-ae2d-45bc-abdd-20987124f5ab",
        "cursor": {
          "ref": "cd97a919-881b-4883-8d83-93d10fcc1590",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a965b3ba-0a06-438d-96f5-5a089fa46e5e"
        },
        "item": {
          "id": "e04242e9-ae2d-45bc-abdd-20987124f5ab",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6389d3f3-ee53-49fc-a45e-5a1392e34653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2583603-79ae-4a6e-8fb2-f362addd8b04",
        "cursor": {
          "ref": "685607c3-3ff8-45d4-bad0-1af51e6a6859",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bb42c4c1-2581-4751-84fd-a9822908b836"
        },
        "item": {
          "id": "a2583603-79ae-4a6e-8fb2-f362addd8b04",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e112f881-42dc-41cd-b846-6fb5a0406c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9513ed67-ab05-4137-80f1-b1923bfddf1f",
        "cursor": {
          "ref": "e1d04212-16d9-4cfc-ba1e-19e1f87619f6",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4b5f40fb-28b3-471e-8cad-be339362311b"
        },
        "item": {
          "id": "9513ed67-ab05-4137-80f1-b1923bfddf1f",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d98e3d24-49dc-468b-b9ea-800f5016a364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3730f645-bdd5-4fac-9e9a-2b1b308a7608",
        "cursor": {
          "ref": "cc378963-d991-4aad-93f8-4334f3180b08",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e108b4af-2236-4195-8cd8-1c1ab513eebe"
        },
        "item": {
          "id": "3730f645-bdd5-4fac-9e9a-2b1b308a7608",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "fccfa3f1-cdd3-45e2-9d39-24c7d23e232d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3e231d-f513-48e7-a277-05ec0fda7d5d",
        "cursor": {
          "ref": "c72a5982-bc9e-4e62-ae63-0ba0d16d1f3d",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7a6b9613-4011-4707-83fe-92fe97f5a77c"
        },
        "item": {
          "id": "ad3e231d-f513-48e7-a277-05ec0fda7d5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "824a3947-2756-452d-b079-0f5a8c5a78ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab315e4-fca7-454c-9279-995504341218",
        "cursor": {
          "ref": "bfcebb1d-2055-48bc-88ac-e528f783d965",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4763864d-6c57-4f49-8658-beed91e0660a"
        },
        "item": {
          "id": "5ab315e4-fca7-454c-9279-995504341218",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "26467979-477b-4d5c-9be4-7ecd25d62e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14423bce-8e6c-437d-beb9-5d97bd8ffcf9",
        "cursor": {
          "ref": "e2f67527-7432-4092-8f19-968d8cfbdbdb",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b366b119-07a9-4783-82c8-0b88e62881da"
        },
        "item": {
          "id": "14423bce-8e6c-437d-beb9-5d97bd8ffcf9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c6001555-b262-4b26-befa-94befcbce75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576952cf-43eb-4d5b-b16c-32a59539dc88",
        "cursor": {
          "ref": "d7897472-9694-46d7-920b-908765c83173",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "12911374-0c5e-47a8-abd0-12e67f07f302"
        },
        "item": {
          "id": "576952cf-43eb-4d5b-b16c-32a59539dc88",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "832d6353-24a5-4c78-bb87-f119b8ea3e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9c8a79-4fb6-4222-b905-f8f22ef6fbda",
        "cursor": {
          "ref": "4bcbdb8a-b71b-4169-a68f-3a33329b148d",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "54901d50-ec65-468e-a161-b88d4dc9c3b8"
        },
        "item": {
          "id": "3a9c8a79-4fb6-4222-b905-f8f22ef6fbda",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1429a403-21dc-41fe-afae-0476bec4e215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e051b79-5279-4e89-bba4-3e414e08e30f",
        "cursor": {
          "ref": "3198a410-aca2-4bf3-91bf-b1269a9837a9",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "82ac41fa-9fc3-4f38-8ce3-fe1d5f6bf0a7"
        },
        "item": {
          "id": "1e051b79-5279-4e89-bba4-3e414e08e30f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6b229be4-4e8b-4e2a-9032-05f811149a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8150f109-9d19-480d-aab5-a001ec666f09",
        "cursor": {
          "ref": "10b6a37e-1e3b-4ddc-93c2-4110a1d095b8",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4d62d33d-773c-411c-a377-87a3149710d6"
        },
        "item": {
          "id": "8150f109-9d19-480d-aab5-a001ec666f09",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "16142085-6c44-42cc-b675-b0d2bb5b1d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128725e1-cf2c-479b-b605-658ffd819977",
        "cursor": {
          "ref": "849a67af-e2fc-4428-9e63-b9547add822b",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dc7cc918-c5ea-4f21-8d45-78d1aebbb0da"
        },
        "item": {
          "id": "128725e1-cf2c-479b-b605-658ffd819977",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "96e746eb-52bf-406c-a975-87560be4bcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5751a59-bbb8-43bb-90cd-5cad82776e66",
        "cursor": {
          "ref": "258d9245-b2ab-4a40-a51b-992f4c7b22da",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a029a1bf-a68f-4316-a6c0-84d0f57e0439"
        },
        "item": {
          "id": "d5751a59-bbb8-43bb-90cd-5cad82776e66",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1896e364-77d5-4b9c-9626-199f3565c8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922317f5-ee1f-4ec5-bd8b-18127d7d36b6",
        "cursor": {
          "ref": "fe513085-1161-4674-8ff3-b6b2dad974d8",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "aefb3bf6-9e76-4b2e-90e6-e62a54442c0e"
        },
        "item": {
          "id": "922317f5-ee1f-4ec5-bd8b-18127d7d36b6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4a5779b4-0b55-47ee-9e5b-0f11e7632a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d094fa9b-85ae-449f-918e-04a32f8c1db4",
        "cursor": {
          "ref": "e4115c11-5517-4160-b39f-b1b2f619dae9",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e9693162-4ca0-4e9b-95ff-536e1d5875bd"
        },
        "item": {
          "id": "d094fa9b-85ae-449f-918e-04a32f8c1db4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c2446397-896d-4b82-918e-7666ad2e773e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b921d3a-518b-41e5-8706-4cbf28d8f579",
        "cursor": {
          "ref": "6b2f3a20-ba8e-4e2c-bfcc-4f266cd79318",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "646c15ae-d4cf-4e5d-895a-5d41578d60d3"
        },
        "item": {
          "id": "0b921d3a-518b-41e5-8706-4cbf28d8f579",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6fa1f5ea-747f-47bd-a21a-92456f4ac5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77650ed-e689-40cf-a835-70c583940833",
        "cursor": {
          "ref": "2dc5c02a-49d2-4663-98c7-185c02b4226b",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "626e7d0e-765d-4409-a375-e7ce78bd586f"
        },
        "item": {
          "id": "c77650ed-e689-40cf-a835-70c583940833",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3f477d83-ca5b-46bb-8274-b4bf0de0dd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc434af-e8ae-4d0e-a1d5-802849271fcb",
        "cursor": {
          "ref": "af9884f1-73ac-4fb3-ae90-7f98f3500f69",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "eeb85c25-dcf7-44a8-a9c8-0d5f49c3a80e"
        },
        "item": {
          "id": "abc434af-e8ae-4d0e-a1d5-802849271fcb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dab973fc-3b0a-4c70-900d-cc37a7310000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0930a1dd-57c0-486e-9059-1a5413672379",
        "cursor": {
          "ref": "820bf772-30ac-4606-98ba-d6a703322188",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c87e0196-0d99-4b2b-b16b-55dcbe7fdb03"
        },
        "item": {
          "id": "0930a1dd-57c0-486e-9059-1a5413672379",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "54c4df5f-f64f-48a6-b5c7-785b638fc00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a41a19d-3266-4a2a-8d05-dbc3ecb02634",
        "cursor": {
          "ref": "d4e316c9-939e-43cc-8039-0bdb8cc14b89",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "fdeeef3a-17da-410e-9f5e-d562cca868ef"
        },
        "item": {
          "id": "0a41a19d-3266-4a2a-8d05-dbc3ecb02634",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "abb9337c-9129-4a27-8f89-603f5a9f38a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd2fa78-c994-4f34-922e-96d19ac839dc",
        "cursor": {
          "ref": "53b84abe-5ef3-4985-802e-1272fff1537c",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0cd5d231-6adc-48c8-9d37-14a6fbe99b00"
        },
        "item": {
          "id": "1cd2fa78-c994-4f34-922e-96d19ac839dc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a7ea5cc4-d054-4d5a-87a2-f90444cdccb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47973987-1c1a-4ad4-a548-493503ffeaa8",
        "cursor": {
          "ref": "7e803937-9e63-4cac-87d3-a7b5d08d6ef5",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "27740023-5c68-4917-8f2e-b51dfb64d98a"
        },
        "item": {
          "id": "47973987-1c1a-4ad4-a548-493503ffeaa8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "80afb4af-b90a-48ee-9ff9-84731a0d7f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9b0446-ba44-4aa8-a3e5-d94c9500a36c",
        "cursor": {
          "ref": "f33efecc-1be7-4706-b1b2-0f3ef27688a7",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d528b4cb-0394-41be-9387-7b959ba1ffee"
        },
        "item": {
          "id": "4f9b0446-ba44-4aa8-a3e5-d94c9500a36c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "794739d2-86cb-4f97-84ef-2221b25637bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8defb809-b7b5-4a8f-add0-995902c52d4d",
        "cursor": {
          "ref": "83be775c-bb80-4dc0-9557-dfd37ef8a68e",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "46c4422d-111f-4645-a6ae-426cde58bdb1"
        },
        "item": {
          "id": "8defb809-b7b5-4a8f-add0-995902c52d4d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7f57c572-88ea-4a9a-8d21-85d585a1d1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14333d34-8068-4455-acff-461e5d582303",
        "cursor": {
          "ref": "1fd68c72-dc86-446b-93e1-e5eb035c6e8e",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1e06fe5f-8117-4598-a038-dad6c60f0a5c"
        },
        "item": {
          "id": "14333d34-8068-4455-acff-461e5d582303",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2c5dcd16-defc-48cf-8e12-931fc156342c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc97830-b3e7-41a2-bdbb-0c71e0e28b0e",
        "cursor": {
          "ref": "7453a55d-5fd9-4bf7-8f0a-644776fcd18e",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ebba5d5f-ad9f-4d53-a16b-68d6655a9604"
        },
        "item": {
          "id": "abc97830-b3e7-41a2-bdbb-0c71e0e28b0e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c577093b-2bf6-4a25-975a-44aaec6a885f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 832,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0a7004-148c-47ac-82f2-7b1a0306bb4e",
        "cursor": {
          "ref": "d377e6b7-da8a-4c14-adb4-543007a630d5",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "8fb5c565-a0cc-4b88-a382-1327cff3bfd4"
        },
        "item": {
          "id": "0c0a7004-148c-47ac-82f2-7b1a0306bb4e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fdb13bdb-18d6-44cb-8340-57a113897576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae3c3b6-4ec3-4d1f-af7f-c413029a5646",
        "cursor": {
          "ref": "ff9b7a02-ccd8-4fac-9bed-705111360656",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "11f8ced7-e382-4225-b502-8326d7019c37"
        },
        "item": {
          "id": "0ae3c3b6-4ec3-4d1f-af7f-c413029a5646",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "945454d6-be21-4029-8cb0-f0cc6c69dbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 961,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2828be06-2dab-4c3f-a833-cebd23d65bb1",
        "cursor": {
          "ref": "ddbbba68-56b7-4a71-8638-c4def21a94b0",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "21e2b32e-f1ba-49ef-9b58-017611f1ad8a"
        },
        "item": {
          "id": "2828be06-2dab-4c3f-a833-cebd23d65bb1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "90774011-9e8d-4923-97bb-59a274029a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24969914-9861-4920-a295-5e0964a37e18",
        "cursor": {
          "ref": "1163353e-2917-43d5-a751-30f5c41d5316",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "15bfd7a1-1736-484b-9dcd-626cfe3ddf62"
        },
        "item": {
          "id": "24969914-9861-4920-a295-5e0964a37e18",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "17e330a2-b1c2-4d8d-8db7-a7ca95b8f558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 929,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa55aae-d3be-4b84-9b93-e408eef7d4c0",
        "cursor": {
          "ref": "5830b9e2-376f-4ee6-acde-7e5ed9312b02",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1a1ff8b7-ea03-4880-a51b-9cc9b956bff7"
        },
        "item": {
          "id": "cfa55aae-d3be-4b84-9b93-e408eef7d4c0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ef152261-5acb-473e-ae7c-81ca781da280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df12d58c-daac-48ef-ab1e-fa22994b02f3",
        "cursor": {
          "ref": "9fe068bb-53df-4e39-b91a-28a726642a2a",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "12f24f11-15d7-43f6-abc4-f01ceb0c0840"
        },
        "item": {
          "id": "df12d58c-daac-48ef-ab1e-fa22994b02f3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "56df8184-00d7-4a1f-ad55-85127327fcad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d647a189-b2fa-410f-877b-112aa139718d",
        "cursor": {
          "ref": "ba1f455f-e629-442e-b50e-c6db80cc3cc6",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c9f335af-d3a5-4f0d-8a8b-cc062135a281"
        },
        "item": {
          "id": "d647a189-b2fa-410f-877b-112aa139718d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d78fd1b7-b3b8-4f7d-a2e0-5606f64a0f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e51ce4f-5730-445b-b3eb-74d0f51bd8cf",
        "cursor": {
          "ref": "9257ec27-83a0-4968-80ed-7d0cf2cb524e",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "40d8bd9e-15af-4c76-959a-4c8da8f7468a"
        },
        "item": {
          "id": "2e51ce4f-5730-445b-b3eb-74d0f51bd8cf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "78421e41-ec82-442b-80dc-ee4a0f42d3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1152,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67002171-9020-4c34-b4d6-3b9a4709f9b2",
        "cursor": {
          "ref": "6e2e6527-edd2-42c1-9a72-cdd645de9556",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ff73c5ba-0195-43ba-a7a0-dcd5880dc995"
        },
        "item": {
          "id": "67002171-9020-4c34-b4d6-3b9a4709f9b2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c462cbf8-d906-401d-8422-2da03e23c3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 865,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f979fe-7ca2-4285-b431-251eb854d157",
        "cursor": {
          "ref": "2dd3bba8-e729-4a1c-baca-b6aaec4d090b",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1709998b-c1da-4891-adb7-5c59c244d277"
        },
        "item": {
          "id": "a3f979fe-7ca2-4285-b431-251eb854d157",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6537806a-6c61-4942-b452-2edecb8ab6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9478a0b-e066-4b95-b10d-54f1c93660f6",
        "cursor": {
          "ref": "54b44b78-846a-4c92-97d9-a9ed8f7351a5",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "08cdd3ee-821e-4d1a-a81e-3ffeb670aea7"
        },
        "item": {
          "id": "e9478a0b-e066-4b95-b10d-54f1c93660f6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6d7e4a8d-1fda-4d4f-865b-5b153c1d9152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b171bf7-0ab2-4dbf-9ed2-8d2eeebe89c2",
        "cursor": {
          "ref": "7dac2706-4f99-46c4-99b1-7abe1bb67dec",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d811808b-f41d-4cb0-9d4b-bb93a8704124"
        },
        "item": {
          "id": "1b171bf7-0ab2-4dbf-9ed2-8d2eeebe89c2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b9cb49ad-4359-4c25-8a2e-38b3f39b30fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36db2c4c-fe8a-411b-a95e-e38a7fb0a44f",
        "cursor": {
          "ref": "c5ce7ad1-fa56-401e-8aea-0803a71f0687",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "263e5437-e843-46ed-a98b-37f4cdd4a581"
        },
        "item": {
          "id": "36db2c4c-fe8a-411b-a95e-e38a7fb0a44f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d4ae4b6a-9187-48ab-82b5-98030b9dbd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fb856e-6310-469b-9712-7f46c6eabbbc",
        "cursor": {
          "ref": "2401b9a5-67c7-494c-8288-73fc3be2a892",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "778a3e3f-879d-4bc3-8e65-e132fa27fcd6"
        },
        "item": {
          "id": "51fb856e-6310-469b-9712-7f46c6eabbbc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c90a287a-d161-4c62-ad0a-20dd43a22674",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3188508-e48d-4399-992e-c665deb68651",
        "cursor": {
          "ref": "c049210f-5def-4aa8-8739-f36ac88382f6",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6086542c-ef52-4c2d-80d1-a24cbed2a097"
        },
        "item": {
          "id": "a3188508-e48d-4399-992e-c665deb68651",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "ad5ec67f-0d9d-40ce-9e8c-7ad7056f24cd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 583,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50917ba5-99de-4589-8505-fda565869405",
        "cursor": {
          "ref": "29708f1e-eaf9-4952-94ea-a1418e657a52",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8624d24b-e9d9-4ef9-89f2-007f93eb8469"
        },
        "item": {
          "id": "50917ba5-99de-4589-8505-fda565869405",
          "name": "credentials_issue"
        },
        "response": {
          "id": "393615b6-d83e-49a0-ad83-4ed529728866",
          "status": "Created",
          "code": 201,
          "responseTime": 10160,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "855a04ae-247c-4634-a701-ee82fd33b64d",
        "cursor": {
          "ref": "5ef06d0c-48c9-4967-81ea-a050de9bf82d",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b1168b0a-3be3-45e5-a928-bdd6b42b5c67"
        },
        "item": {
          "id": "855a04ae-247c-4634-a701-ee82fd33b64d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a4084898-9e1a-4d18-9ed1-bb3b60357093",
          "status": "Created",
          "code": 201,
          "responseTime": 6573,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a605063-321e-4b46-b20b-5da236910033",
        "cursor": {
          "ref": "ddc8f148-9cba-4b12-9ca5-c8f9e6030101",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c65a155f-5703-4539-bf9d-b4267926ef39"
        },
        "item": {
          "id": "8a605063-321e-4b46-b20b-5da236910033",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2b58b001-d2c3-4e71-ae03-d3ec50f893a7",
          "status": "Created",
          "code": 201,
          "responseTime": 6519,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2cf602-5684-4bba-b3e1-daed9472e2f2",
        "cursor": {
          "ref": "88587113-e5fb-485a-a8c3-d16e7d815606",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ad336455-65ab-49d5-bf22-282b4a6e1232"
        },
        "item": {
          "id": "2d2cf602-5684-4bba-b3e1-daed9472e2f2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "01bb69c8-036b-4c55-8654-1cd0ee3d7273",
          "status": "Created",
          "code": 201,
          "responseTime": 7555,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "40102fd0-8519-49e4-b638-3c767316f563",
        "cursor": {
          "ref": "a0c9ba5b-1328-4f2c-8202-b83a2d9b32c6",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "44ee06a8-dd03-4d7d-91af-1d29be89fc96"
        },
        "item": {
          "id": "40102fd0-8519-49e4-b638-3c767316f563",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "59e18f68-8de9-416b-a128-d4272b665fd9",
          "status": "Created",
          "code": 201,
          "responseTime": 5988,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e501825c-c7cb-4fb3-be9e-c90d4839e6c2",
        "cursor": {
          "ref": "da09b2e6-9abc-4071-9067-a3eb43085bf4",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f842187a-6c59-4e6c-bcc4-0b19a017f91f"
        },
        "item": {
          "id": "e501825c-c7cb-4fb3-be9e-c90d4839e6c2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a3d10e04-655f-4643-9fb8-2074f59f578b",
          "status": "Created",
          "code": 201,
          "responseTime": 7200,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e876c9-93d7-4cd4-891b-e844f404361d",
        "cursor": {
          "ref": "b1f0b9d4-45d0-40f4-ba09-d2919865e60d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "291beaab-e15e-440d-8829-717a0532e61c"
        },
        "item": {
          "id": "10e876c9-93d7-4cd4-891b-e844f404361d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "486acf39-0a4c-497c-9b10-90922c3bf61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e876c9-93d7-4cd4-891b-e844f404361d",
        "cursor": {
          "ref": "b1f0b9d4-45d0-40f4-ba09-d2919865e60d",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "291beaab-e15e-440d-8829-717a0532e61c"
        },
        "item": {
          "id": "10e876c9-93d7-4cd4-891b-e844f404361d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "486acf39-0a4c-497c-9b10-90922c3bf61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379e91d7-2eaf-45c7-bef8-3410e44921b7",
        "cursor": {
          "ref": "af90299f-fa9f-4744-a706-30ddb1f701b3",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7a084d1f-cdb1-4785-9eba-6de5d50301bf"
        },
        "item": {
          "id": "379e91d7-2eaf-45c7-bef8-3410e44921b7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f449b50b-1c3e-43eb-a3ec-0e60228ee0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6664d3-cbb7-44a6-b3d0-f0148933b8c8",
        "cursor": {
          "ref": "7e706a54-3594-4631-9ed7-0d72c62a7734",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b83e6c88-9ae8-4c95-8e33-5616f1b6141d"
        },
        "item": {
          "id": "eb6664d3-cbb7-44a6-b3d0-f0148933b8c8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "04639740-3d96-4337-aaf8-fe3cfccfe831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4340ed-fc13-4095-aff3-1227109b6623",
        "cursor": {
          "ref": "531a688a-b0e8-4f18-8c8c-4d55180bd6d5",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "50d81260-5aed-484a-b58a-427040140ec4"
        },
        "item": {
          "id": "6d4340ed-fc13-4095-aff3-1227109b6623",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "70df28d2-7b48-4cfa-a5ea-cb30b745b400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6b31dc-0384-4d69-a023-b48ea5917ae3",
        "cursor": {
          "ref": "a7ba951d-db4e-48b0-bb04-436e8dbe0443",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6f3d5d8a-feb9-4f28-8335-19cb2138694e"
        },
        "item": {
          "id": "2d6b31dc-0384-4d69-a023-b48ea5917ae3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8a780c1d-6299-4b50-bbf4-3e9dbb590621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30e29a3-7992-492e-9510-51705ad0ba9c",
        "cursor": {
          "ref": "8495adde-c966-441a-8366-c7b53a2a515f",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b3d648d6-5955-4045-89da-7fe279b3b421"
        },
        "item": {
          "id": "f30e29a3-7992-492e-9510-51705ad0ba9c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a0f8bcbf-ba37-4922-8167-00ce57cb7f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba236ee-9f28-47ef-884a-a36fd64e4c41",
        "cursor": {
          "ref": "f3a5dbe6-d169-4afc-97bc-e12aff377929",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "29107d1f-0caa-4ec1-a840-0565077f7035"
        },
        "item": {
          "id": "bba236ee-9f28-47ef-884a-a36fd64e4c41",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "56c21cd3-76ac-46a4-9cb2-fe4d53e750c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9f9fce-3aea-46fd-8bf6-5f6d7485afc0",
        "cursor": {
          "ref": "43ed9d86-dd7e-425e-b764-bdb0861bb9b4",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "da0bd71d-eb67-4fe1-a26d-f46ad4d54adc"
        },
        "item": {
          "id": "5d9f9fce-3aea-46fd-8bf6-5f6d7485afc0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b6838f31-ac4e-4f57-8bf3-b780ce261a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d555fc1a-f058-48cd-8ff0-e10ec81c7f13",
        "cursor": {
          "ref": "129f9d0e-43c3-4bdd-9821-30f34e75bd3e",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "13fd354a-fc26-4700-b3f2-1133227e32fd"
        },
        "item": {
          "id": "d555fc1a-f058-48cd-8ff0-e10ec81c7f13",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6a5d28f1-1a1b-484b-b368-8fae28038f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cabd94c-1162-463c-83db-ca4841b2abb0",
        "cursor": {
          "ref": "0a3e824f-7c50-4e86-833e-b8e9cd16aad2",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d827be3a-dd6f-4d2a-8122-609ac7c2a11b"
        },
        "item": {
          "id": "7cabd94c-1162-463c-83db-ca4841b2abb0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b5376682-a54d-4a19-aee0-2fdf238f9d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da92f1ce-8d37-4843-802f-51c97b4f05a8",
        "cursor": {
          "ref": "e353be8a-fc54-4058-b3f4-3039bdce2143",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "931bbfe0-8ce0-4e24-8859-b92469fee5c4"
        },
        "item": {
          "id": "da92f1ce-8d37-4843-802f-51c97b4f05a8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aaee5365-899c-41aa-b67d-d3c943d89fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbe9e4a-b9da-445a-afe4-f59b3c373b39",
        "cursor": {
          "ref": "e39e20de-382d-4416-ac06-9ab437965675",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2f60938c-69bb-46b3-8679-8e9d6317496c"
        },
        "item": {
          "id": "2cbe9e4a-b9da-445a-afe4-f59b3c373b39",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "44f03367-5aca-47e8-862f-ee78d1cd1025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa7728e-614e-4544-83d8-070a28f8b6e9",
        "cursor": {
          "ref": "c67d0d96-1330-4740-9f2a-6fff0872cb51",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c7f017a2-0518-4de9-ad0d-4a8183105a83"
        },
        "item": {
          "id": "7aa7728e-614e-4544-83d8-070a28f8b6e9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "060cb7ce-3217-4296-a963-19720dda8352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168241ec-f014-4a94-ba9c-740661af6404",
        "cursor": {
          "ref": "e387a1cf-0886-44fc-9d2d-10c0df39dcbe",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ac086ef7-a857-40df-bdbc-8f4e53b39023"
        },
        "item": {
          "id": "168241ec-f014-4a94-ba9c-740661af6404",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c1958057-1d44-43b2-91da-737528a32c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1307,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31b17c0-491b-4229-bd51-aa9e0f075373",
        "cursor": {
          "ref": "7eb204d9-3eff-42e3-a1df-fd7d3861c00c",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f4f5985f-c9ac-48f8-9c5f-1388ceca36dc"
        },
        "item": {
          "id": "a31b17c0-491b-4229-bd51-aa9e0f075373",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a798990a-4452-49bf-af29-42521caea66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1180,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86205cb-2182-402c-b4fb-135252520090",
        "cursor": {
          "ref": "cc3839f8-db8b-4829-9e0c-69fee48c59a0",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bb538917-a7fe-4a62-b51f-ef4777f7c9db"
        },
        "item": {
          "id": "f86205cb-2182-402c-b4fb-135252520090",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8a6190be-4f7e-4403-a057-a280abb5eeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da73043a-b75b-4c2d-92f5-009577700d3e",
        "cursor": {
          "ref": "145d6522-924c-4340-bb45-cfdd49fb2023",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9b5831cd-3209-49d9-8e79-1a4963d9ac88"
        },
        "item": {
          "id": "da73043a-b75b-4c2d-92f5-009577700d3e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f11d077c-6273-40d2-b880-8b32af704e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276e9c72-73b2-4f58-9908-832daaab1c5c",
        "cursor": {
          "ref": "1d92b7b5-eb25-4633-9681-6838ca68af29",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fa906a0d-8376-49bb-abea-7150696c857b"
        },
        "item": {
          "id": "276e9c72-73b2-4f58-9908-832daaab1c5c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3707a9ef-8cc2-43ea-b48a-137328056c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fbbb6b-90f7-4c86-a999-6638b5699a53",
        "cursor": {
          "ref": "6df65b64-b91c-4fcd-ad21-4e0ef45f5952",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "84336a91-f57b-4839-8e74-390e70cbbbab"
        },
        "item": {
          "id": "16fbbb6b-90f7-4c86-a999-6638b5699a53",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3556b141-aa16-442e-bbc3-7523235338ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d694e8-b791-4964-a38a-3c30246439d8",
        "cursor": {
          "ref": "37e147b0-3ad0-4691-8462-138792f2c707",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3e2a6933-c974-4408-abdf-1cf97f9be2bb"
        },
        "item": {
          "id": "30d694e8-b791-4964-a38a-3c30246439d8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bb582632-1e32-4bfa-98ad-69b6e63d3bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa2bb73-f02f-4a18-9a84-f718eea8383a",
        "cursor": {
          "ref": "e3f47598-6c32-4a65-bcff-253cb5d434aa",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "80297ab6-3c8e-4680-b3f2-b7a87b923a65"
        },
        "item": {
          "id": "bfa2bb73-f02f-4a18-9a84-f718eea8383a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5065e349-5204-46b9-893e-91098314fbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1df1a4-6472-4888-9920-5efad57baf2b",
        "cursor": {
          "ref": "3c3b162a-319c-4c90-ba21-77f418d574d9",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "28c0bca0-8182-4981-bd71-61e422c13016"
        },
        "item": {
          "id": "3b1df1a4-6472-4888-9920-5efad57baf2b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "324509f5-4a8f-4d8b-aee8-38448008e53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cec4773-40d0-463d-90a9-d521e43f4991",
        "cursor": {
          "ref": "7dc71b5e-8461-4eb7-924a-7806065a23df",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f643d366-f864-46d5-bfe6-4685dd9fde15"
        },
        "item": {
          "id": "7cec4773-40d0-463d-90a9-d521e43f4991",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8eeb6044-b686-4151-aed5-428a7bbf0427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4201f209-d358-4eb9-b03c-0e56a32663de",
        "cursor": {
          "ref": "7957f7c3-1b24-4bd1-9746-e624706c2f81",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "72c01542-fa32-4dde-90d1-3e7281ca0977"
        },
        "item": {
          "id": "4201f209-d358-4eb9-b03c-0e56a32663de",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ed420fc5-a29f-4949-b040-69a2e38effb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7246ece5-db63-49e9-af5e-e62e8565e777",
        "cursor": {
          "ref": "edab8e13-de28-40ab-8182-f8134fc93e72",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dba52881-8e37-4ad3-99cc-e5105d053edf"
        },
        "item": {
          "id": "7246ece5-db63-49e9-af5e-e62e8565e777",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c76655dd-8da7-47e8-9165-ce8ee6c4943e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d019ffaa-6056-4a30-9515-fca43485c37f",
        "cursor": {
          "ref": "181c2946-a153-4a0e-9c40-59653fbf6194",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "28b3e9c1-8657-4e35-a2e8-af5d6c893805"
        },
        "item": {
          "id": "d019ffaa-6056-4a30-9515-fca43485c37f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "83ccb7a0-5aad-41cc-9898-efc8f1a442f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f34de72-f129-4236-a674-9f73b90a2321",
        "cursor": {
          "ref": "c6f68460-5c08-45da-9d85-6f780c0d13d7",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ac2ff6a7-c9b6-4965-90ae-f7813d8f08dc"
        },
        "item": {
          "id": "7f34de72-f129-4236-a674-9f73b90a2321",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ce42def3-aac9-4085-881d-73a35a3012d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572dd4aa-deb9-43f7-8c3c-8a49f38a1035",
        "cursor": {
          "ref": "3178a622-c7c0-4b54-b025-9ccacc4006b9",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bb257d54-c89e-4ef8-a8e3-4acdf102dac0"
        },
        "item": {
          "id": "572dd4aa-deb9-43f7-8c3c-8a49f38a1035",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "97342848-cb65-4f21-95bd-19e2c2943149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3a1456-ca66-4389-a435-e5e3e35d88ca",
        "cursor": {
          "ref": "318dac67-7b39-4d93-a5f5-9a73f1760ac3",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1f650ac2-5c31-4497-b9c6-a8a0c9751b0e"
        },
        "item": {
          "id": "2a3a1456-ca66-4389-a435-e5e3e35d88ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7b1bb9dc-1f91-4e64-9563-f3ecb004807c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a1cb95-3849-485f-8149-26d1bde5accb",
        "cursor": {
          "ref": "d741354f-64f9-459c-a837-72e1f5da111e",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "51e06078-f614-402e-9c97-1bf69044f4e6"
        },
        "item": {
          "id": "83a1cb95-3849-485f-8149-26d1bde5accb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9a6ff318-57cd-414b-9103-4644e5319587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401d140d-7cab-48d1-9c1c-4f12d1b6bee4",
        "cursor": {
          "ref": "44223a64-9a0b-453d-ac1e-a66c2190b176",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7caafb07-0c3a-4fec-99b6-7ae1a542c7b2"
        },
        "item": {
          "id": "401d140d-7cab-48d1-9c1c-4f12d1b6bee4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3a6eaeab-162b-4f44-9a7a-270de3bfa21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8184fee1-cdf8-4327-9242-61ed1155f0f5",
        "cursor": {
          "ref": "cc7d3e01-26f6-496a-889d-16053c55cd0e",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ddba67fa-e5bc-4a46-a3ff-ccb6a2f7ddb7"
        },
        "item": {
          "id": "8184fee1-cdf8-4327-9242-61ed1155f0f5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7b0c4fdb-6e20-43ef-bcf4-401cb7b870ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcec62fa-88af-47cd-9bf1-9c29faa9664d",
        "cursor": {
          "ref": "9855e39b-8951-4c5a-905b-809fbb67e7fc",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "803e6201-9d0c-4501-ba4a-3ac3d11bf306"
        },
        "item": {
          "id": "fcec62fa-88af-47cd-9bf1-9c29faa9664d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7f98004d-91ac-4d47-9d28-f3081343733f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68acb204-1955-416c-8bad-786aff473d06",
        "cursor": {
          "ref": "a5d44182-6bbb-4440-ad5b-23473004d7cb",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "16f15ff8-913a-4d62-be59-a585b238b9ff"
        },
        "item": {
          "id": "68acb204-1955-416c-8bad-786aff473d06",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "ae243da2-bd24-4b90-8e27-55ddc6946955",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 611,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ed1b61-91c0-462f-aa4c-d6c6a6c8ae9c",
        "cursor": {
          "ref": "cf6e31f8-357d-437e-b03b-b15c6568658b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6a799923-186f-4b34-bcc6-e682d31ca242"
        },
        "item": {
          "id": "a5ed1b61-91c0-462f-aa4c-d6c6a6c8ae9c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "91c17a4c-641d-4660-849b-fdf20211fc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ed1b61-91c0-462f-aa4c-d6c6a6c8ae9c",
        "cursor": {
          "ref": "cf6e31f8-357d-437e-b03b-b15c6568658b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6a799923-186f-4b34-bcc6-e682d31ca242"
        },
        "item": {
          "id": "a5ed1b61-91c0-462f-aa4c-d6c6a6c8ae9c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "91c17a4c-641d-4660-849b-fdf20211fc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37dc07ed-3c4d-46d8-bfe0-27fa13c2aff7",
        "cursor": {
          "ref": "738fd2c2-b666-48ae-b2b1-c67d289eab6a",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "67393daa-5fd0-4b24-90a8-c89e36c87133"
        },
        "item": {
          "id": "37dc07ed-3c4d-46d8-bfe0-27fa13c2aff7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fc32d606-9a60-47b3-b89b-33b0a6ae58a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46493cd3-8b83-477a-9a53-49bf18692637",
        "cursor": {
          "ref": "6daca47b-7a99-4bc8-8c95-35efaf71b9cd",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "39bf61ac-f838-43d5-b4a1-83c691d780dd"
        },
        "item": {
          "id": "46493cd3-8b83-477a-9a53-49bf18692637",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "52887511-971f-4656-9718-486a8e3b3b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100ee0f5-cce8-4b05-80aa-8cce15902305",
        "cursor": {
          "ref": "84591d68-265b-405f-b4cf-0acdd1bd957d",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "92b6b99c-df57-4eb4-87a5-6ce9f60f967c"
        },
        "item": {
          "id": "100ee0f5-cce8-4b05-80aa-8cce15902305",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d1cbcee9-7795-4cc3-aa07-2586344f36b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c3dbb0-3222-43c2-ba98-26d3bb5f5f82",
        "cursor": {
          "ref": "5b702dd5-176c-4e84-abde-95c68c442222",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6c4a3da4-0b2f-4241-abcc-77e28aecbf93"
        },
        "item": {
          "id": "a1c3dbb0-3222-43c2-ba98-26d3bb5f5f82",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "82e0b6ba-95c7-4cb3-981e-bc4050c9b7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936474e6-e65d-4325-b064-13c3b431e515",
        "cursor": {
          "ref": "0da450e3-a65b-441f-9f32-705bf41e1cc1",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ba4cb705-0e6c-4b1f-949c-ac7fdcb8aacc"
        },
        "item": {
          "id": "936474e6-e65d-4325-b064-13c3b431e515",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f15c4624-3a48-4266-a6ed-26eb30637451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f00db0a-d58a-4af6-a409-2bfc81a2dddb",
        "cursor": {
          "ref": "d8fb7503-01b9-47e9-9bef-8fd5e71a2dc9",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5db052d6-8e88-43b6-90a3-f8db347f3790"
        },
        "item": {
          "id": "4f00db0a-d58a-4af6-a409-2bfc81a2dddb",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d1d5622d-c639-4179-aeff-0c6450803269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5f376d-a795-4d6b-83e5-612181c035e6",
        "cursor": {
          "ref": "6176a44f-d1a9-4ce8-8ffa-b8c36140e956",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "155e4980-06c6-44cc-bb0c-56f464be44b6"
        },
        "item": {
          "id": "8b5f376d-a795-4d6b-83e5-612181c035e6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b6270fde-ebc9-4c73-a0fc-aefda553cc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf2f6aa-61e0-40b2-94c3-5a98dc1879ef",
        "cursor": {
          "ref": "4cdd4819-a535-404e-a35e-6497f70a61c4",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7daa33b3-fb66-42aa-bd1f-2cce26d94e89"
        },
        "item": {
          "id": "fbf2f6aa-61e0-40b2-94c3-5a98dc1879ef",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6463fec4-639e-4ec5-a2fd-a15507dc46fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7064ad52-e044-4821-b1fb-f8fd073458a6",
        "cursor": {
          "ref": "5bc27625-4ef7-431a-a089-aa2ea83e68b2",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3aed47d3-0fcd-43c9-a31f-2e8d45f31b00"
        },
        "item": {
          "id": "7064ad52-e044-4821-b1fb-f8fd073458a6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "adcc5c13-e265-4bdb-9986-37db97e69190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5d12e9-d0f5-4a45-9727-21fda1056252",
        "cursor": {
          "ref": "3828b2df-1a4a-4f19-9017-0775a709abc7",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "836035c7-7226-4036-98bd-18048f4fbedb"
        },
        "item": {
          "id": "ca5d12e9-d0f5-4a45-9727-21fda1056252",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3994e773-c373-4629-a6ea-9d7d84b8c76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590f1c03-0b2c-44bc-9892-45bc942bd346",
        "cursor": {
          "ref": "3052c02d-2471-4e33-878a-9c52d412dfc6",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e5e11373-7898-4dc0-98ab-909e8970f7bd"
        },
        "item": {
          "id": "590f1c03-0b2c-44bc-9892-45bc942bd346",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fdf9f30e-05ea-4ab2-b60c-c810e2fdc650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599af82c-2c3a-4baa-946e-4677bd973598",
        "cursor": {
          "ref": "9ece63f9-ecaf-47bb-b8d7-56095d89972f",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "61a03de8-96cc-420e-93ba-85451155d3fc"
        },
        "item": {
          "id": "599af82c-2c3a-4baa-946e-4677bd973598",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1050541f-c7dc-47bd-9df4-a484419c79ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18af8a4-9931-478c-8025-1e13a24d02e4",
        "cursor": {
          "ref": "6abbf3c1-6caf-4d11-a0c3-64c3b69bbcf5",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3277c0b7-e044-4881-88c4-ce6152f3a82f"
        },
        "item": {
          "id": "c18af8a4-9931-478c-8025-1e13a24d02e4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "462c8fea-ed5b-424b-bb89-3021f06076e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483e8d13-fda3-4009-9cb6-e78e8458ee64",
        "cursor": {
          "ref": "a8ced1cc-dc25-4b24-8465-4a1ec22d3e9f",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "62281d4a-ac0a-4050-95d2-7da79e6ba20f"
        },
        "item": {
          "id": "483e8d13-fda3-4009-9cb6-e78e8458ee64",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "494b7b83-f772-4119-90c7-032f7bb1e209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713875d2-f42d-4dd3-bf5d-b5f5d17b6815",
        "cursor": {
          "ref": "56c2f791-e03c-4461-be24-370d3e55b10c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e60f4e4b-eac8-43e0-9265-29b4d72e2909"
        },
        "item": {
          "id": "713875d2-f42d-4dd3-bf5d-b5f5d17b6815",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c879c97c-3033-4e76-bf1f-2a6310635c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30472b1f-9336-4971-85fd-f47500522c91",
        "cursor": {
          "ref": "69a553e0-e34f-4f56-af4f-92cb36ef841d",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4b68bc14-58f0-4083-9ed6-fe1333bd105f"
        },
        "item": {
          "id": "30472b1f-9336-4971-85fd-f47500522c91",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "45c49646-457f-4f87-ac93-1a607b529f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b74ec5-2822-42c5-ad79-5cada07980ea",
        "cursor": {
          "ref": "49f88038-ebbc-4cd6-8193-94bec3765a7e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "130e96b4-36b0-4b49-aa6c-db9d7f002d06"
        },
        "item": {
          "id": "b0b74ec5-2822-42c5-ad79-5cada07980ea",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bcefb128-af8b-48b6-93cc-8ae2cf6cb10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 924,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38805fd-7061-4bd1-9245-01d8bef56598",
        "cursor": {
          "ref": "fc8b0859-76d2-4d61-95b8-c0725754251b",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d6845c43-1404-4291-9fa3-3aacb7669353"
        },
        "item": {
          "id": "e38805fd-7061-4bd1-9245-01d8bef56598",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2714d4aa-d328-4248-b08a-4a9783869778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1187,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4228f0d5-07db-41f2-a9ba-ab681496a034",
        "cursor": {
          "ref": "2ca81f77-f046-4ac6-89f8-92ec67d270f0",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "baa073b5-9f30-41c0-a3c9-e4a4e7b2a2b1"
        },
        "item": {
          "id": "4228f0d5-07db-41f2-a9ba-ab681496a034",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "efbd0428-ad8e-4734-8747-6981120f3e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1308,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd898a0f-0e0b-4711-850a-3434319b6e3f",
        "cursor": {
          "ref": "e0d9c198-38dd-4312-a04e-2d07329c82b5",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "da7becc9-033d-4dfd-8284-8637a42eefcc"
        },
        "item": {
          "id": "fd898a0f-0e0b-4711-850a-3434319b6e3f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "073bd038-2a0d-4529-b02d-7009b950888a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1023,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f532a7a-b34e-4ee7-a1d7-5447551184a9",
        "cursor": {
          "ref": "f325f1d0-9bcb-4735-bb6a-eefd5005afd7",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8ca9cbda-fac5-4736-9faf-ce74b640a2bf"
        },
        "item": {
          "id": "3f532a7a-b34e-4ee7-a1d7-5447551184a9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8f57e4a8-31b2-4f40-aa5c-b70dc2596d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 932,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f420d335-18a1-4810-9d39-8d3060690e5a",
        "cursor": {
          "ref": "69e38cc5-83f8-4e7f-b3c0-f5f14f214d3c",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "784683ec-217d-4da8-b563-f14cd963248a"
        },
        "item": {
          "id": "f420d335-18a1-4810-9d39-8d3060690e5a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "358d735d-77d6-499a-8e35-97b0421b5852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cb3306-f1fd-42a3-ac64-d6358cdcbe51",
        "cursor": {
          "ref": "7357b876-7963-4ccc-8fc1-b5ce63a0f2eb",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "19160e1a-cdd3-4e17-b5ff-cb2fee0a7984"
        },
        "item": {
          "id": "d1cb3306-f1fd-42a3-ac64-d6358cdcbe51",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2a38f5c5-29e8-4135-8801-b544e0e24ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2176345b-26e6-44bb-8d92-71afee359ab4",
        "cursor": {
          "ref": "2d4e7972-a4bb-4e2e-b1d4-4bbf8ad64a3c",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b4af0847-2826-40ea-866e-b149e4255c97"
        },
        "item": {
          "id": "2176345b-26e6-44bb-8d92-71afee359ab4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "79f4ace0-4c51-4ee7-9686-e50e43bee268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043ea317-8976-4347-982c-2591a9eee457",
        "cursor": {
          "ref": "603b36d8-57a6-48b6-8e3f-efddaa275fb7",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c4d31254-c293-4e53-9dd2-56d933ddba96"
        },
        "item": {
          "id": "043ea317-8976-4347-982c-2591a9eee457",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "159703f2-d7be-4ac8-8664-d9a3dd78efe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7263a2cd-45ad-4897-8e1b-8980c028b3f2",
        "cursor": {
          "ref": "c18ba124-a330-4ad5-873f-fd6b3ad43b56",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "feb73e6f-0bc5-4e9d-9700-de13199cc7de"
        },
        "item": {
          "id": "7263a2cd-45ad-4897-8e1b-8980c028b3f2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "08a09a6d-adae-431f-8df1-50e22259783f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3313f334-91bb-47bb-a114-ff7bda94d178",
        "cursor": {
          "ref": "41348c57-afc2-4540-888e-c5d020c0e7a6",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "09b323d9-194b-48c1-a2fb-11c2b8649829"
        },
        "item": {
          "id": "3313f334-91bb-47bb-a114-ff7bda94d178",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e6acf109-df11-4404-9860-f2b944874246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfcea7b-da0d-40d4-8621-c3221cace33f",
        "cursor": {
          "ref": "736d9435-5e58-4175-9885-4c29f13853fa",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e93c92be-d315-4bd6-acb2-69185f3186db"
        },
        "item": {
          "id": "7dfcea7b-da0d-40d4-8621-c3221cace33f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "19c536db-c9a7-46ba-80dd-178c8c0de5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea043bcd-9694-4abf-b5f2-d2dc06a0c743",
        "cursor": {
          "ref": "7364dc03-f398-4559-820b-d853ef67db6d",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ef4d563a-ee41-4f31-b9af-47e0de1b4573"
        },
        "item": {
          "id": "ea043bcd-9694-4abf-b5f2-d2dc06a0c743",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1398e52d-2ad4-45af-8484-4bebd47ec7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94636a22-e97d-451a-9166-239e71a1cf38",
        "cursor": {
          "ref": "deaf6198-c0a5-46da-a60b-a111a1cd8751",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "01a6424e-86a8-424f-836a-caa24620714c"
        },
        "item": {
          "id": "94636a22-e97d-451a-9166-239e71a1cf38",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1980f88e-2c32-495e-9b2f-4a151cdbfef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6eaaba0-47fe-419c-b11b-533feb239378",
        "cursor": {
          "ref": "47eb7106-6abb-49f4-8955-6238eb8d0a6d",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f592d647-c3da-465e-a34e-89cc5f62b47a"
        },
        "item": {
          "id": "b6eaaba0-47fe-419c-b11b-533feb239378",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5ff5f8cf-a0c1-4e01-9c8c-8fda04875f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee592f5-69bf-4e20-8770-3adea599684e",
        "cursor": {
          "ref": "c2788c3e-20d9-464c-aeac-1d3873571a81",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "38e510e4-6f2b-4d93-b10b-c8e96f8becdf"
        },
        "item": {
          "id": "aee592f5-69bf-4e20-8770-3adea599684e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4285587b-72db-4f2b-8e8b-bc32be0e49fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d206d49-802c-4635-8553-37ed5d68aad3",
        "cursor": {
          "ref": "c9839866-93d6-40ad-a4c7-4ace01962b95",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c5f70157-db07-421d-87dd-8e5d2eb5e712"
        },
        "item": {
          "id": "5d206d49-802c-4635-8553-37ed5d68aad3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "acc33ea2-05e6-49e2-bc3b-db27ced367db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d45adb3-b425-40cb-86be-283f40a7d6c6",
        "cursor": {
          "ref": "fbb08ff6-7a60-4e56-99e8-5270f0abaff8",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9212fa6b-5595-4132-906d-14d755763931"
        },
        "item": {
          "id": "0d45adb3-b425-40cb-86be-283f40a7d6c6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7889fa20-f76e-43d0-b0b4-54916e596414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2741841-a6f3-4490-9fae-a33cc5ce4cbc",
        "cursor": {
          "ref": "1eba5c2c-252e-4412-9322-8219f992d11b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4702e059-33f2-4607-98c7-d433e85ddd89"
        },
        "item": {
          "id": "e2741841-a6f3-4490-9fae-a33cc5ce4cbc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "31dd1a7b-fa53-4b59-bacd-459eb2fdc949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94445ac-1527-413d-bc0f-b0aa372bc199",
        "cursor": {
          "ref": "ce6901b2-ab14-46a0-8a2b-14ede19676ba",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5d980022-1369-4ce9-ba5b-21efc0805580"
        },
        "item": {
          "id": "e94445ac-1527-413d-bc0f-b0aa372bc199",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7478823f-9ffb-4686-aa95-6cabed7f3682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3916ea4-513c-4eaa-a1df-33f7edc9ea03",
        "cursor": {
          "ref": "5f010a07-9864-4fce-a2b9-b3372a580f55",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "289f89ab-1fa2-4504-8409-974e74efb12b"
        },
        "item": {
          "id": "a3916ea4-513c-4eaa-a1df-33f7edc9ea03",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b1081aab-d1c3-4d59-a4cc-3b1285b9d895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f16444f-643e-4021-8f8b-cb045f13a450",
        "cursor": {
          "ref": "4a3de1d6-3b76-4e0b-b33c-faadf3d36656",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cd5d8322-c886-4e11-97c1-a86e68c80b58"
        },
        "item": {
          "id": "1f16444f-643e-4021-8f8b-cb045f13a450",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d67f642f-b22a-4d45-86c4-4eed2f3da55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737a37fd-1f14-4b80-814e-ac12256b4b2b",
        "cursor": {
          "ref": "2e2cb6a2-8b6a-4b2e-8454-ebc2aca2a8a1",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "64b5e1b6-2807-4f60-8e1b-dcc5b3168d02"
        },
        "item": {
          "id": "737a37fd-1f14-4b80-814e-ac12256b4b2b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9d648215-9aa4-48c7-87ca-94637d89184f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0e7dcc-c149-4c30-a185-8fbb4a296d6d",
        "cursor": {
          "ref": "cc99911e-00ff-47fc-9d50-f8c50990ce4b",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b877d9e5-d3ea-442d-ac59-52e58eb281e7"
        },
        "item": {
          "id": "dc0e7dcc-c149-4c30-a185-8fbb4a296d6d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c231c7ad-73a7-4ce5-b4b8-43b54018b9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472fb067-b1f9-4516-bfd3-def4a9ae0b06",
        "cursor": {
          "ref": "c42d3603-2caf-4273-a492-a7f4665e5374",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "26d3cd67-a358-4769-abbe-70ba630a9c26"
        },
        "item": {
          "id": "472fb067-b1f9-4516-bfd3-def4a9ae0b06",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "640acc47-8a5f-47f1-9d5a-14d8f83bfdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998bb1d1-621f-4029-9135-704847ed48ea",
        "cursor": {
          "ref": "2a84ea77-6c11-4c81-9758-2462b31247cc",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8213d1c8-78bb-4e33-85e1-105e2dc4aa21"
        },
        "item": {
          "id": "998bb1d1-621f-4029-9135-704847ed48ea",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "df103ef4-ceeb-4b41-814e-f314ce766f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d4db6f-deae-41cc-bb47-518d9110aa36",
        "cursor": {
          "ref": "ed1c6044-b440-470a-97a8-13339e40a86b",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "71229816-5d4b-4503-949c-2cf7eca38870"
        },
        "item": {
          "id": "85d4db6f-deae-41cc-bb47-518d9110aa36",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a00cf87d-caa1-4aba-82a1-30eb5023ea4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9098cc3-05f5-4093-9e53-902bcef91fbb",
        "cursor": {
          "ref": "8a8f67da-ef3a-4a61-8009-e2db52734762",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "202a08a8-1a6c-4e02-8c82-2ea361f53e17"
        },
        "item": {
          "id": "c9098cc3-05f5-4093-9e53-902bcef91fbb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "62f2a005-15ff-4a21-8588-9b92b8f59447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e69346-85e0-48cc-b17b-166ae044400a",
        "cursor": {
          "ref": "a9948363-95e7-46e7-ae82-1d808616b6fa",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "554bce64-6909-40a1-8d45-3af93cc94462"
        },
        "item": {
          "id": "06e69346-85e0-48cc-b17b-166ae044400a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0b4b38e9-a157-4ec4-986a-bff3a7b837df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb989a6a-375d-4c85-a687-97ee38ef11fd",
        "cursor": {
          "ref": "fca9a59b-9399-4dec-90c7-01cdb4c4e566",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "288c8f8c-b89d-48b6-b277-8bf05d38c76a"
        },
        "item": {
          "id": "bb989a6a-375d-4c85-a687-97ee38ef11fd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c32c7466-f7e4-49ec-b0f0-d0ceafc6a426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d20d4c3-6677-449e-9c1a-25e93a5ceb60",
        "cursor": {
          "ref": "5077491b-0b27-4782-92aa-a831a871df0e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6f450897-0d11-49fa-8755-c0de2eab8695"
        },
        "item": {
          "id": "7d20d4c3-6677-449e-9c1a-25e93a5ceb60",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5ebbe798-9d67-453f-883e-414a06635c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1102,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e8a3eb-96fc-436f-867f-df3ed4c1110a",
        "cursor": {
          "ref": "240f69e6-42a4-4f61-b1bf-047cfcb58843",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "abb3c4c5-5dc8-48a0-8789-6fd3ccbe5e18"
        },
        "item": {
          "id": "f8e8a3eb-96fc-436f-867f-df3ed4c1110a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0ec03b13-65d6-4694-a8f6-4b3de944169e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe55dc7-876a-4e72-ab88-162a888c3384",
        "cursor": {
          "ref": "7fbeb873-93e8-4a18-bebf-8f17b55d27e1",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2f985cba-f5c9-4578-96e5-626de346c28d"
        },
        "item": {
          "id": "7fe55dc7-876a-4e72-ab88-162a888c3384",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "290eb497-6305-48e2-8841-832f46b68cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749c0720-aae7-4f93-9f2c-202b68251ff9",
        "cursor": {
          "ref": "177c66d3-e07c-41e7-9aca-64c859d991f8",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a98b5f71-9275-48e7-8cea-231a554236c9"
        },
        "item": {
          "id": "749c0720-aae7-4f93-9f2c-202b68251ff9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "83056a46-ce3f-49bf-8626-cebcb83c6ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1169,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ed17a9-66a5-4667-a730-8b5e9ae1d736",
        "cursor": {
          "ref": "cc231bfd-6fea-4dd8-9d3c-4d768d76b319",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "36ff4b77-fdcc-4298-8dfe-d83aefb9f209"
        },
        "item": {
          "id": "21ed17a9-66a5-4667-a730-8b5e9ae1d736",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2c322fb3-4ff9-4f1c-9048-e891e49c9186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c999d1-b275-4c76-8aea-0a3cf9f51693",
        "cursor": {
          "ref": "3b1d354e-e280-4cea-98a3-bbb86f96d47a",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "68645184-db08-425b-834a-914acd1c42ec"
        },
        "item": {
          "id": "b0c999d1-b275-4c76-8aea-0a3cf9f51693",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fc80b9ab-974c-4337-8c36-abf0dc291034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1428,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc3d513-32c6-4352-859c-f75a4b22cc69",
        "cursor": {
          "ref": "18116ec6-e724-42c5-94f3-44ef0aac9b48",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "373b9b51-53c4-483b-99c0-9f7609fca56e"
        },
        "item": {
          "id": "ffc3d513-32c6-4352-859c-f75a4b22cc69",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a4457801-b66b-4d0c-9ac5-f2181db0a67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1135,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596fdf5e-e193-4bc1-9b11-d550cb02a647",
        "cursor": {
          "ref": "d772a691-9d69-4d08-8310-bdadae9c71e5",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "464e6929-f104-47d8-866e-569adca36353"
        },
        "item": {
          "id": "596fdf5e-e193-4bc1-9b11-d550cb02a647",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "02018487-a034-41a9-8f90-f0e69dc7b622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1072,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c00efc-da1c-44cc-b18f-bb90e2d8bd75",
        "cursor": {
          "ref": "99e2ae8d-154b-4a77-a9d2-d8dc49c37baa",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "75346ff4-8870-4d12-96dc-d58ba38d713f"
        },
        "item": {
          "id": "36c00efc-da1c-44cc-b18f-bb90e2d8bd75",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "eae42cfd-8508-42ae-bccf-e26a1a673874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c48bae8-4bad-4673-a9e8-c5d8da0c0fd7",
        "cursor": {
          "ref": "cdeb09d6-bf2d-478b-91c2-9867a6439736",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bf5e3369-b504-4cf3-a6c6-9274e8f15604"
        },
        "item": {
          "id": "9c48bae8-4bad-4673-a9e8-c5d8da0c0fd7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2dc813b5-17fa-41bc-8874-22d12359fb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298d855c-16f7-4a3c-a91d-0f3c2ce31886",
        "cursor": {
          "ref": "7b01c444-431b-46cc-99eb-81f237c58065",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7b3974e1-4b74-4e34-9015-04a5dfe812a5"
        },
        "item": {
          "id": "298d855c-16f7-4a3c-a91d-0f3c2ce31886",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a95db1ec-88b3-469d-a33f-d5230ca0a7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045000f5-5f2e-441f-b48b-16adf838db59",
        "cursor": {
          "ref": "6950f899-55bf-40ad-9a2b-7d8693e10a27",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "69a63ffb-1fb0-416c-85e7-6f5dd26e8330"
        },
        "item": {
          "id": "045000f5-5f2e-441f-b48b-16adf838db59",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "467439aa-d84e-465e-a9c7-0b52a7d8239a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27aa2e8f-88f1-4efd-b61e-48d801e6a476",
        "cursor": {
          "ref": "b0b1af90-1f4a-4a31-b3a8-771873ac3468",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e96e8ed4-9725-4d06-8f93-3634153e94f1"
        },
        "item": {
          "id": "27aa2e8f-88f1-4efd-b61e-48d801e6a476",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0fc7ad17-b3e3-4669-ae81-f6e8647fddf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d5d9bd-d893-4e04-abce-a38c08a0e92b",
        "cursor": {
          "ref": "1e5ff66e-689f-41f4-b18d-a1746f545e16",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a1954ca4-b881-49bd-aaec-f5683ba7625a"
        },
        "item": {
          "id": "e8d5d9bd-d893-4e04-abce-a38c08a0e92b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b9bf1099-bae2-42e0-aed2-5fbadf97437d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ccafdb-8d0f-4458-9f58-925bdcbe1b84",
        "cursor": {
          "ref": "215b6fe0-5457-4f45-a10c-3ade8ee9728d",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7d421137-5f58-41c4-a055-09416501eea3"
        },
        "item": {
          "id": "77ccafdb-8d0f-4458-9f58-925bdcbe1b84",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6488a3d6-e4d3-4bfe-a34e-03f626a44fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5875870-22bd-4080-92b8-cad52170d1b2",
        "cursor": {
          "ref": "11e31399-1148-4d68-8598-a324c1d75730",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a82c24a5-dbb0-486f-8874-e03945c96830"
        },
        "item": {
          "id": "e5875870-22bd-4080-92b8-cad52170d1b2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c1f7790a-88e2-4e37-857c-dd9e5885de41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d9783c-81c5-4bb8-b09b-f72c6b058b7e",
        "cursor": {
          "ref": "21c47959-76c9-4b09-aae0-a12749b99688",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a13f41fa-27e3-4a32-b835-ce32c62d16b4"
        },
        "item": {
          "id": "88d9783c-81c5-4bb8-b09b-f72c6b058b7e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "de10240d-5f02-4d25-911b-ff4a9d440c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914adbc6-8d8f-493f-82ae-a6954050673d",
        "cursor": {
          "ref": "9955db0a-fb6a-445a-825e-dca8772b9af0",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "08bb31bc-e9cd-4ca5-96e9-d60770e10902"
        },
        "item": {
          "id": "914adbc6-8d8f-493f-82ae-a6954050673d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "263438ab-55ef-4156-a420-299b855522cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba6dc32-6cbc-4b36-8e44-503045e5d8c1",
        "cursor": {
          "ref": "e7abfca1-abee-46fc-a208-afb755abd689",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b8c590a6-eddc-46be-b671-9db059863635"
        },
        "item": {
          "id": "bba6dc32-6cbc-4b36-8e44-503045e5d8c1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "37621dbc-e60a-45d3-8e78-11a204f8a48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a19657-7e69-4c91-8329-04185628c931",
        "cursor": {
          "ref": "5fc6b75f-4e2e-4fb9-84f5-e35069d63ef0",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7e8423ab-9dfa-4297-965a-42fbfbed38fa"
        },
        "item": {
          "id": "72a19657-7e69-4c91-8329-04185628c931",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "00dce31b-2061-4b8d-a79b-05da1bb9debe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652c4c51-6b27-45aa-bf37-e4963054999d",
        "cursor": {
          "ref": "b19f65d7-c6d7-454f-9a5d-c2e23ba1e0af",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9651b4e9-48bb-4776-9e39-3502f822eba6"
        },
        "item": {
          "id": "652c4c51-6b27-45aa-bf37-e4963054999d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "46281bff-376d-4913-a64d-c71883237025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee539a25-c851-4119-a780-5e684dad55bb",
        "cursor": {
          "ref": "1dd928b0-03ca-47c8-ab6a-49fc8e39afbf",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a4f6734c-b547-4f46-a3a5-f1dd7af7155c"
        },
        "item": {
          "id": "ee539a25-c851-4119-a780-5e684dad55bb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7c82010b-de05-48fa-8cab-e90c202a55e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e08ed9f-6551-4862-b111-a2de417e1e04",
        "cursor": {
          "ref": "c2131be8-3d0c-43b0-a33b-355bb0b978c6",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "15edb48d-7c0c-4def-990a-0b8668f0f14f"
        },
        "item": {
          "id": "4e08ed9f-6551-4862-b111-a2de417e1e04",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3332a74d-f797-4048-9185-b5a67e3d5fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257325ba-12ed-4804-8a62-273d141e8cde",
        "cursor": {
          "ref": "a4341f6b-04a6-40bd-aff8-19c05400843e",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b29e6f1c-b767-47ec-9ed0-f47960e3c1d3"
        },
        "item": {
          "id": "257325ba-12ed-4804-8a62-273d141e8cde",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d7800acf-4a5f-40fa-9a0d-456d5b2bb9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c5319e-12bd-4136-ad19-66e90646d10d",
        "cursor": {
          "ref": "8eb494d3-f94c-40ae-9834-2ad4500b29d7",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6bb7690f-f501-4885-abbb-fff13e2d699c"
        },
        "item": {
          "id": "b8c5319e-12bd-4136-ad19-66e90646d10d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b070a397-e417-4a74-84ca-8c2f2aba78c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 988,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a496d8-c31f-40d4-bfec-48a85f93e753",
        "cursor": {
          "ref": "3590f4d7-6f46-4c5c-9d35-d853f64bad65",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fb93b1ee-034c-4116-9bc5-7877ff5df8b0"
        },
        "item": {
          "id": "e9a496d8-c31f-40d4-bfec-48a85f93e753",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6c040407-ab22-4fe7-9cd7-db16f6ce1554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1209,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b4cfdc-3a26-48c0-b637-d7fdd82a54b8",
        "cursor": {
          "ref": "e795edd0-ad3b-4a3f-895f-ebd7cfdf48c2",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "dcdaf461-3927-4750-908d-65a60bfeb855"
        },
        "item": {
          "id": "d9b4cfdc-3a26-48c0-b637-d7fdd82a54b8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4e9b7127-372a-4f51-99ba-b4c32816fb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1432,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09daf97e-c44f-4208-ab8e-dad83f35e349",
        "cursor": {
          "ref": "7d685ad1-4e3e-46b0-8638-8688e549ea43",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "57bbeb21-d6e8-4271-8a22-36452969e22d"
        },
        "item": {
          "id": "09daf97e-c44f-4208-ab8e-dad83f35e349",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d23d028b-e77f-412e-9072-9627e86d0f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1079,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa39b350-699d-4e3f-a6b6-4aef4cbb0c5b",
        "cursor": {
          "ref": "825a834d-d5df-42ec-bc3d-ab3aa1c5d292",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "21184164-f147-4ae5-8e9a-fff33151ec6c"
        },
        "item": {
          "id": "aa39b350-699d-4e3f-a6b6-4aef4cbb0c5b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "93894b44-33ea-4270-97be-2b04bde8bbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1061,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f70226-6ed4-4980-be77-e23570d3a226",
        "cursor": {
          "ref": "ee956285-7759-4826-96c4-f0f0ef2d7273",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3c9b44b7-ab0b-4555-97df-b0de697892f6"
        },
        "item": {
          "id": "40f70226-6ed4-4980-be77-e23570d3a226",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "69b49713-5f5c-46c8-b3ef-04a3b42dc3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ff54fa-88f8-48fd-a2d7-0aaba361226a",
        "cursor": {
          "ref": "fd1d2ae7-ab5f-40ea-be0d-cc0673fb333d",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ac2baf9e-bbc0-45ea-89e1-9912dfac25b2"
        },
        "item": {
          "id": "53ff54fa-88f8-48fd-a2d7-0aaba361226a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9058fa59-c8d1-4fa6-a866-5a71d3b95bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b97c22-3b38-4579-89c4-3e351c171ee6",
        "cursor": {
          "ref": "7bed1628-b60e-4755-b660-ebf74cd7e843",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bc43a14b-be9b-4a22-b9b8-c8ba3d1c4625"
        },
        "item": {
          "id": "18b97c22-3b38-4579-89c4-3e351c171ee6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "684da7fe-3b0f-40ff-8733-2a5d72195cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4437cc-8b19-45f5-a61f-cd4e5c573d10",
        "cursor": {
          "ref": "38dc69f5-e06f-423c-ac8a-1d5d167d1e8d",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7ffdd9ba-0922-4228-98e8-36d581d3f6db"
        },
        "item": {
          "id": "9a4437cc-8b19-45f5-a61f-cd4e5c573d10",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "66e19a64-4ba7-458d-892e-0c2bfef6ee24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a496e04f-487a-4a99-a3b6-911dcf5bef33",
        "cursor": {
          "ref": "a01a0428-f167-4db9-be4d-9de93b1df536",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8c691227-9e1e-44d8-b1a2-8483a7a6acb4"
        },
        "item": {
          "id": "a496e04f-487a-4a99-a3b6-911dcf5bef33",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "368417db-5ada-448a-8c7c-cb6b4c8e338e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f54c5ee-ba06-4c04-80b8-3691954e3df6",
        "cursor": {
          "ref": "77e78460-610a-4ce6-a915-e5f72c4b99f8",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "524a6958-fe20-4406-b49b-d64d9302af94"
        },
        "item": {
          "id": "7f54c5ee-ba06-4c04-80b8-3691954e3df6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bf19fde1-9e12-48ea-ae89-fdb79091fff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295857f5-8e41-4f76-9f11-d3c38ccb7e0d",
        "cursor": {
          "ref": "2146ae6c-b1ae-418b-825c-f8198661ef56",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4c128861-d977-4ead-86d6-ed244c92f716"
        },
        "item": {
          "id": "295857f5-8e41-4f76-9f11-d3c38ccb7e0d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f971ef0b-f69c-4c06-9cf3-76f313933e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34688e39-0782-480c-a49c-d3dd27ca1975",
        "cursor": {
          "ref": "0cf4af87-ba8b-4bd8-9ee7-8331d12014d9",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ea5c5a07-579d-4471-8f75-9dceb0ee7db0"
        },
        "item": {
          "id": "34688e39-0782-480c-a49c-d3dd27ca1975",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2a6294e0-eaa6-4660-a33a-07c03f23629b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f24403-ff5e-49b6-b22c-362752576cbb",
        "cursor": {
          "ref": "c7fdd4a1-e660-4cab-bb6f-3828a926d337",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f7ff2cb1-1db5-4886-83a4-d06f7f892274"
        },
        "item": {
          "id": "29f24403-ff5e-49b6-b22c-362752576cbb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ffb11dec-69ff-426e-b328-422bce82b8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041d1cc8-ad63-455c-ac2a-85c618bcc369",
        "cursor": {
          "ref": "7f00295f-ddaa-4447-a012-4ec6cdbf4784",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5ec4269d-5fe9-45d5-a70c-110b32662d86"
        },
        "item": {
          "id": "041d1cc8-ad63-455c-ac2a-85c618bcc369",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4f0b5b6c-6f82-4bb0-8d57-9ccb629396be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5650d80-dbe0-4638-922f-23cb8e14a5e0",
        "cursor": {
          "ref": "4f6dc52a-f3d6-4af2-b8d0-b30472872535",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7938463e-aa29-4d24-bb57-8bdc60194c3c"
        },
        "item": {
          "id": "c5650d80-dbe0-4638-922f-23cb8e14a5e0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b663f063-f738-44de-85d7-dbe293df6d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a003a49-544c-426b-bafb-a55b2d9d7819",
        "cursor": {
          "ref": "e151d9ef-bf8c-4dce-8479-b46847e5e584",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "26d60984-922e-4508-a5b3-f73e6dbcc844"
        },
        "item": {
          "id": "8a003a49-544c-426b-bafb-a55b2d9d7819",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "972d7dfb-1550-45ce-881f-f8cd980baedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "862acc66-2b30-47ee-b0dd-8a62dc1600aa",
        "cursor": {
          "ref": "1f4942d0-4e56-4433-bcc9-29fe0abe23d1",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "755acaa2-032f-4cdf-92ae-2633ec949da4"
        },
        "item": {
          "id": "862acc66-2b30-47ee-b0dd-8a62dc1600aa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4da4abe0-45db-48c8-8b6d-2d6691b63414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd93172-13f5-4b51-b0eb-1087628331bf",
        "cursor": {
          "ref": "d550e402-c70c-49d2-a5c6-f9c78629a755",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a823d8dc-06d9-4cf6-8a9f-30caa5dfe478"
        },
        "item": {
          "id": "8dd93172-13f5-4b51-b0eb-1087628331bf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3114ea0d-eba3-4740-ba81-4e73ff454ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02002320-eaf3-47ac-8484-583b57bbd86b",
        "cursor": {
          "ref": "caf4fb30-8165-4219-86b2-d24cb865badf",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ebfe6a11-ebf5-4767-a4e5-d0d3f9b17d60"
        },
        "item": {
          "id": "02002320-eaf3-47ac-8484-583b57bbd86b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e207e6da-8383-49cb-b38f-28b40f7481a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56efb65b-264d-4dcb-aafd-23bac35de7b8",
        "cursor": {
          "ref": "d96276cd-ffc2-4742-9add-cc0968f13636",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "06539143-d81c-4aa9-be84-7e26d8eb602a"
        },
        "item": {
          "id": "56efb65b-264d-4dcb-aafd-23bac35de7b8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f6fbc3be-32a7-429a-ac55-9be1895b4262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2502087-811e-4cad-80a3-26ab72226418",
        "cursor": {
          "ref": "b049e363-d68a-4465-b4a5-15505b8044db",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1d402745-7743-45f0-aa78-5d7243daf733"
        },
        "item": {
          "id": "f2502087-811e-4cad-80a3-26ab72226418",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f4f1bf3b-c93e-4837-9a34-fca019d3a68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcfdcf9-9842-49ff-a319-1c656a38d9a2",
        "cursor": {
          "ref": "c8a5e2b1-8816-464b-a3d9-025078e517ef",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3695c4b5-67b3-4c3d-a9d9-14036e68749d"
        },
        "item": {
          "id": "9fcfdcf9-9842-49ff-a319-1c656a38d9a2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cda8d19e-5679-47ca-b57a-7d23bb01afe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a7d634-c24b-4eb7-aa3c-d43ce407aa8a",
        "cursor": {
          "ref": "f1faa344-d928-4ebf-b96c-57dc9cdcac06",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0d213bba-b913-43b1-b28e-54d448e10af1"
        },
        "item": {
          "id": "b0a7d634-c24b-4eb7-aa3c-d43ce407aa8a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e2623f10-1269-40ea-a275-07bb9e1f52d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a347152-be9a-4f99-a3b7-22c9db563c4a",
        "cursor": {
          "ref": "52c2c8c6-b205-46fa-b6e8-5870d7d25231",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c402a167-efc8-48b2-8ed5-a0dcf37e5803"
        },
        "item": {
          "id": "6a347152-be9a-4f99-a3b7-22c9db563c4a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "381fb37b-3e92-46ee-adef-04b9ce570be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90537ea8-4bc9-48a0-b62d-808b7801e6e6",
        "cursor": {
          "ref": "b51c545b-9a1e-4bef-a9e3-553f6ea6aec2",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "076f824f-5a34-47b4-8635-815893e75f02"
        },
        "item": {
          "id": "90537ea8-4bc9-48a0-b62d-808b7801e6e6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "321f9eb4-ae61-4d92-b92b-e4fbdda8e067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322179ba-2fdc-4c55-a537-5c4888466939",
        "cursor": {
          "ref": "bcba6cf6-80de-4a69-b8b2-a6516f95e3c1",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7daf5209-96ae-460b-a4ce-87fcb47ff8f6"
        },
        "item": {
          "id": "322179ba-2fdc-4c55-a537-5c4888466939",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c0efa1b8-fcd5-459e-8744-33e8ebc74ae6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37da8109-4e9b-4e71-8050-def3cb267893",
        "cursor": {
          "ref": "5e997427-9c0f-4710-a44d-8facb01dbb5a",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "40f032db-0e24-4f00-b1c6-513830c21407"
        },
        "item": {
          "id": "37da8109-4e9b-4e71-8050-def3cb267893",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "81fa7277-b076-482d-ac30-eabd98536a88",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 371,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7748f7-3c52-4704-9cb9-8257aa823b1c",
        "cursor": {
          "ref": "49c7029c-77c0-4f02-bfad-caec0cdbb892",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "073fb8af-f762-408b-9160-2266f722ddf6"
        },
        "item": {
          "id": "5f7748f7-3c52-4704-9cb9-8257aa823b1c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2472a65c-5ca5-4421-a047-5667f38d1517",
          "status": "OK",
          "code": 200,
          "responseTime": 476,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbeca1a-e3b2-4d78-af7d-ae0757bc9f23",
        "cursor": {
          "ref": "12d5c6e2-f0c6-4240-9993-eb339c3a132b",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e4dbc8db-a407-4c0f-9496-99508488a14b"
        },
        "item": {
          "id": "2bbeca1a-e3b2-4d78-af7d-ae0757bc9f23",
          "name": "credentials_verify"
        },
        "response": {
          "id": "81b4079e-43c3-40c3-bbbf-f31058d9a3cf",
          "status": "OK",
          "code": 200,
          "responseTime": 2015,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe46606-04cd-49ed-b4d0-2756612aeba6",
        "cursor": {
          "ref": "ed5834b2-29b3-4cbd-944a-7fe2fd12f5f5",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5e05ad9d-eb64-48fc-be60-bf2b0bc7c96d"
        },
        "item": {
          "id": "afe46606-04cd-49ed-b4d0-2756612aeba6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "88a0a62a-b377-4401-a921-3e980e8cc55f",
          "status": "OK",
          "code": 200,
          "responseTime": 1872,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a98e32-95c6-48d3-8740-991af86224ac",
        "cursor": {
          "ref": "fc682b6f-41aa-42d1-a0bf-9e671960ed02",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8c5d4614-02ec-48ef-986f-c2b61ee438e3"
        },
        "item": {
          "id": "44a98e32-95c6-48d3-8740-991af86224ac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac093ce0-8910-4cf5-ac5e-c3c18dd71b19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a98e32-95c6-48d3-8740-991af86224ac",
        "cursor": {
          "ref": "fc682b6f-41aa-42d1-a0bf-9e671960ed02",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8c5d4614-02ec-48ef-986f-c2b61ee438e3"
        },
        "item": {
          "id": "44a98e32-95c6-48d3-8740-991af86224ac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac093ce0-8910-4cf5-ac5e-c3c18dd71b19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a98e32-95c6-48d3-8740-991af86224ac",
        "cursor": {
          "ref": "fc682b6f-41aa-42d1-a0bf-9e671960ed02",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8c5d4614-02ec-48ef-986f-c2b61ee438e3"
        },
        "item": {
          "id": "44a98e32-95c6-48d3-8740-991af86224ac",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ac093ce0-8910-4cf5-ac5e-c3c18dd71b19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4ff458-13a0-4667-8d7d-1f3d1c833663",
        "cursor": {
          "ref": "52f3aed2-84ef-43c0-ac60-a8329c6ec3e4",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9ac7317c-2298-44ad-a0c0-d2fd965612ef"
        },
        "item": {
          "id": "0a4ff458-13a0-4667-8d7d-1f3d1c833663",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "085c968b-3b30-45ee-8ebe-8b2824b9c96b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 366,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2579da-d550-4ad9-bab7-2bb7bc968f2a",
        "cursor": {
          "ref": "e42c5739-0dec-4a30-9ea2-2dde9e572ed4",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5e5bc641-9921-45c8-89a7-f00a47291978"
        },
        "item": {
          "id": "df2579da-d550-4ad9-bab7-2bb7bc968f2a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "677dbb60-22a6-4265-9d85-e47ae437b847",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2579da-d550-4ad9-bab7-2bb7bc968f2a",
        "cursor": {
          "ref": "e42c5739-0dec-4a30-9ea2-2dde9e572ed4",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5e5bc641-9921-45c8-89a7-f00a47291978"
        },
        "item": {
          "id": "df2579da-d550-4ad9-bab7-2bb7bc968f2a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "677dbb60-22a6-4265-9d85-e47ae437b847",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357bb21e-34f3-44d2-b11e-efae4fd5734b",
        "cursor": {
          "ref": "2ae48c28-d1b7-4eb1-81db-240cf33c3ce0",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "90e375ec-b3f1-4fa0-9ff6-0a1fd486b336"
        },
        "item": {
          "id": "357bb21e-34f3-44d2-b11e-efae4fd5734b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "a3481adb-53e6-4c33-949b-51cf2a7f4380",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46826fb-d40c-4778-9c15-4fc1875bae8b",
        "cursor": {
          "ref": "ac042be4-2102-4d25-9825-258331682c07",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "18e0a515-2338-4ee9-8340-71e4610f6498"
        },
        "item": {
          "id": "d46826fb-d40c-4778-9c15-4fc1875bae8b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "83d15164-a031-4d89-9cb4-cda3daaa4e9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46826fb-d40c-4778-9c15-4fc1875bae8b",
        "cursor": {
          "ref": "ac042be4-2102-4d25-9825-258331682c07",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "18e0a515-2338-4ee9-8340-71e4610f6498"
        },
        "item": {
          "id": "d46826fb-d40c-4778-9c15-4fc1875bae8b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "83d15164-a031-4d89-9cb4-cda3daaa4e9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a175374-aa97-4287-9b8d-a21c547a606e",
        "cursor": {
          "ref": "f9ca906d-a7d8-4f2f-ad59-681ac47636b1",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "54a3f8e9-8d31-403e-bd02-88a134e982b2"
        },
        "item": {
          "id": "9a175374-aa97-4287-9b8d-a21c547a606e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e46b2a12-c410-4630-8328-8d2fe38eaa15",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 552,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}